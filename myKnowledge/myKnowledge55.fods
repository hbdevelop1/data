<?xml version="1.0" encoding="UTF-8"?>

<office:document xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:presentation="urn:oasis:names:tc:opendocument:xmlns:presentation:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:config="urn:oasis:names:tc:opendocument:xmlns:config:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:grddl="http://www.w3.org/2003/g/data-view#" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:drawooo="http://openoffice.org/2010/draw" xmlns:calcext="urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0" xmlns:loext="urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" xmlns:formx="urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0" xmlns:css3t="http://www.w3.org/TR/css3-text/" office:version="1.2" office:mimetype="application/vnd.oasis.opendocument.spreadsheet">
 <office:meta><meta:creation-date>2016-04-02T12:17:46.890862030</meta:creation-date><dc:date>2016-05-09T14:45:01.503746111</dc:date><meta:editing-duration>P5DT19H23M8S</meta:editing-duration><meta:editing-cycles>445</meta:editing-cycles><meta:generator>LibreOffice/5.0.2.2$Linux_X86_64 LibreOffice_project/00m0$Build-2</meta:generator><meta:document-statistic meta:table-count="24" meta:cell-count="1968" meta:object-count="0"/><meta:user-defined meta:name="qrichtext">1</meta:user-defined></office:meta>
 <office:settings>
  <config:config-item-set config:name="ooo:view-settings">
   <config:config-item config:name="VisibleAreaTop" config:type="int">0</config:config-item>
   <config:config-item config:name="VisibleAreaLeft" config:type="int">2257</config:config-item>
   <config:config-item config:name="VisibleAreaWidth" config:type="int">2258</config:config-item>
   <config:config-item config:name="VisibleAreaHeight" config:type="int">19416</config:config-item>
   <config:config-item-map-indexed config:name="Views">
    <config:config-item-map-entry>
     <config:config-item config:name="ViewId" config:type="string">view1</config:config-item>
     <config:config-item-map-named config:name="Tables">
      <config:config-item-map-entry config:name="3d">
       <config:config-item config:name="CursorPositionX" config:type="int">6</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">38</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">11</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Agile">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">3</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Arc">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">51</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">21</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Modern C++">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">75</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">116</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="QAC">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">6</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Sheet3">
       <config:config-item config:name="CursorPositionX" config:type="int">11</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">17</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">10</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">4</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Todo">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">2</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="algo">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">1</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="canada">
       <config:config-item config:name="CursorPositionX" config:type="int">4</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">9</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="determinism">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">26</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="en">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">47</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">39</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="family">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">7</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="games">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">3</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="git">
       <config:config-item config:name="CursorPositionX" config:type="int">2</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">14</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="good coding">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">8</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="interviewCriqHQ">
       <config:config-item config:name="CursorPositionX" config:type="int">5</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">16</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">17</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="interviewInvenco">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">1</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="invenco">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">5</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="job">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">3</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="pikpok">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">18</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="python">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">312</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="testing">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">49</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="the3stones">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">258</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">245</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="weeknesses">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">4</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
     </config:config-item-map-named>
     <config:config-item config:name="ActiveTable" config:type="string">pikpok</config:config-item>
     <config:config-item config:name="HorizontalScrollbarWidth" config:type="int">1304</config:config-item>
     <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
     <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
     <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
     <config:config-item config:name="ShowPageBreakPreview" config:type="boolean">false</config:config-item>
     <config:config-item config:name="ShowZeroValues" config:type="boolean">true</config:config-item>
     <config:config-item config:name="ShowNotes" config:type="boolean">true</config:config-item>
     <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
     <config:config-item config:name="GridColor" config:type="long">12632256</config:config-item>
     <config:config-item config:name="ShowPageBreaks" config:type="boolean">true</config:config-item>
     <config:config-item config:name="HasColumnRowHeaders" config:type="boolean">true</config:config-item>
     <config:config-item config:name="HasSheetTabs" config:type="boolean">true</config:config-item>
     <config:config-item config:name="IsOutlineSymbolsSet" config:type="boolean">true</config:config-item>
     <config:config-item config:name="IsValueHighlightingEnabled" config:type="boolean">false</config:config-item>
     <config:config-item config:name="IsSnapToRaster" config:type="boolean">false</config:config-item>
     <config:config-item config:name="RasterIsVisible" config:type="boolean">false</config:config-item>
     <config:config-item config:name="RasterResolutionX" config:type="int">1000</config:config-item>
     <config:config-item config:name="RasterResolutionY" config:type="int">1000</config:config-item>
     <config:config-item config:name="RasterSubdivisionX" config:type="int">1</config:config-item>
     <config:config-item config:name="RasterSubdivisionY" config:type="int">1</config:config-item>
     <config:config-item config:name="IsRasterAxisSynchronized" config:type="boolean">true</config:config-item>
    </config:config-item-map-entry>
   </config:config-item-map-indexed>
  </config:config-item-set>
  <config:config-item-set config:name="ooo:configuration-settings">
   <config:config-item config:name="SyntaxStringRef" config:type="short">9999</config:config-item>
   <config:config-item config:name="IsDocumentShared" config:type="boolean">false</config:config-item>
   <config:config-item config:name="LoadReadonly" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AllowPrintJobCancel" config:type="boolean">true</config:config-item>
   <config:config-item config:name="UpdateFromTemplate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsKernAsianPunctuation" config:type="boolean">false</config:config-item>
   <config:config-item config:name="EmbedFonts" config:type="boolean">false</config:config-item>
   <config:config-item config:name="IsSnapToRaster" config:type="boolean">false</config:config-item>
   <config:config-item config:name="RasterResolutionX" config:type="int">1000</config:config-item>
   <config:config-item config:name="RasterResolutionY" config:type="int">1000</config:config-item>
   <config:config-item config:name="HasSheetTabs" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsRasterAxisSynchronized" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowPageBreaks" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ShowNotes" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsOutlineSymbolsSet" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowZeroValues" config:type="boolean">true</config:config-item>
   <config:config-item config:name="SaveVersionOnClose" config:type="boolean">false</config:config-item>
   <config:config-item config:name="GridColor" config:type="long">12632256</config:config-item>
   <config:config-item config:name="RasterIsVisible" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrinterName" config:type="string">Generic Printer</config:config-item>
   <config:config-item-map-indexed config:name="ForbiddenCharacters">
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">US</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">hi</config:config-item>
     <config:config-item config:name="Country" config:type="string">IN</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">NZ</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
   </config:config-item-map-indexed>
   <config:config-item config:name="LinkUpdateMode" config:type="short">3</config:config-item>
   <config:config-item config:name="RasterSubdivisionX" config:type="int">1</config:config-item>
   <config:config-item config:name="HasColumnRowHeaders" config:type="boolean">true</config:config-item>
   <config:config-item config:name="RasterSubdivisionY" config:type="int">1</config:config-item>
   <config:config-item config:name="AutoCalculate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrinterSetup" config:type="base64Binary">jAH+/0dlbmVyaWMgUHJpbnRlcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU0dFTlBSVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAMAsgAAAAAAAAAEAAhSAAAEdAAASm9iRGF0YSAxCnByaW50ZXI9R2VuZXJpYyBQcmludGVyCm9yaWVudGF0aW9uPVBvcnRyYWl0CmNvcGllcz0xCm1hcmdpbmRhanVzdG1lbnQ9MCwwLDAsMApjb2xvcmRlcHRoPTI0CnBzbGV2ZWw9MApwZGZkZXZpY2U9MApjb2xvcmRldmljZT0wClBQRENvbnRleERhdGEKUGFnZVNpemU6QTQARHVwbGV4Ok5vbmUAABIAQ09NUEFUX0RVUExFWF9NT0RFCgBEVVBMRVhfT0ZG</config:config-item>
   <config:config-item config:name="ApplyUserData" config:type="boolean">true</config:config-item>
   <config:config-item config:name="CharacterCompressionType" config:type="short">0</config:config-item>
  </config:config-item-set>
 </office:settings>
 <office:scripts>
  <office:script script:language="ooo:Basic">
   <ooo:libraries xmlns:ooo="http://openoffice.org/2004/office" xmlns:xlink="http://www.w3.org/1999/xlink">
    <ooo:library-embedded ooo:name="Standard"/>
   </ooo:libraries>
  </office:script>
 </office:scripts>
 <office:font-face-decls>
  <style:font-face style:name="Arial" svg:font-family="Arial, sans-serif"/>
  <style:font-face style:name="Calibri" svg:font-family="Calibri, sans-serif"/>
  <style:font-face style:name="Monospace" svg:font-family="Monospace" style:font-pitch="fixed"/>
  <style:font-face style:name="Liberation Mono" svg:font-family="&apos;Liberation Mono&apos;, &apos;Courier New&apos;, &apos;Nimbus Mono L&apos;, &apos;DejaVu Sans Mono&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Droid Naskh Shift Alt" svg:font-family="&apos;Droid Naskh Shift Alt&apos;" style:font-pitch="variable"/>
  <style:font-face style:name="Bitstream Charter" svg:font-family="&apos;Bitstream Charter&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Liberation Serif" svg:font-family="&apos;Liberation Serif&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Liberation Sans" svg:font-family="&apos;Liberation Sans&apos;" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="DejaVu Sans" svg:font-family="&apos;DejaVu Sans&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="Droid Sans Fallback" svg:font-family="&apos;Droid Sans Fallback&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="FreeSans" svg:font-family="FreeSans" style:font-family-generic="system" style:font-pitch="variable"/>
 </office:font-face-decls>
 <office:styles>
  <style:default-style style:family="table-cell">
   <style:paragraph-properties style:tab-stop-distance="12.5mm"/>
   <style:text-properties style:font-name="Liberation Sans" fo:language="en" fo:country="NZ" style:font-name-asian="DejaVu Sans" style:language-asian="zh" style:country-asian="CN" style:font-name-complex="DejaVu Sans" style:language-complex="hi" style:country-complex="IN"/>
  </style:default-style>
  <number:number-style style:name="N0">
   <number:number number:min-integer-digits="1"/>
  </number:number-style>
  <number:currency-style style:name="N104P0" style:volatile="true">
   <number:currency-symbol number:language="en" number:country="NZ">$</number:currency-symbol>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
  </number:currency-style>
  <number:currency-style style:name="N104">
   <style:text-properties fo:color="#ff0000"/>
   <number:text>-</number:text>
   <number:currency-symbol number:language="en" number:country="NZ">$</number:currency-symbol>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <style:map style:condition="value()&gt;=0" style:apply-style-name="N104P0"/>
  </number:currency-style>
  <number:currency-style style:name="N111P0" style:volatile="true">
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <number:text> </number:text>
   <number:currency-symbol number:language="fr" number:country="FR">€</number:currency-symbol>
  </number:currency-style>
  <number:currency-style style:name="N111">
   <style:text-properties fo:color="#ff0000"/>
   <number:text>-</number:text>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <number:text> </number:text>
   <number:currency-symbol number:language="fr" number:country="FR">€</number:currency-symbol>
   <style:map style:condition="value()&gt;=0" style:apply-style-name="N111P0"/>
  </number:currency-style>
  <style:style style:name="Default" style:family="table-cell">
   <style:text-properties style:font-name-asian="Droid Sans Fallback" style:font-family-asian="&apos;Droid Sans Fallback&apos;" style:font-family-generic-asian="system" style:font-pitch-asian="variable" style:font-name-complex="FreeSans" style:font-family-complex="FreeSans" style:font-family-generic-complex="system" style:font-pitch-complex="variable"/>
  </style:style>
  <style:style style:name="Result" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-style="italic" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="Result2" style:family="table-cell" style:parent-style-name="Result" style:data-style-name="N104"/>
  <style:style style:name="Heading" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties fo:font-size="16pt" fo:font-style="italic" fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="Heading1" style:family="table-cell" style:parent-style-name="Heading">
   <style:table-cell-properties style:rotation-angle="90"/>
  </style:style>
 </office:styles>
 <office:automatic-styles>
  <style:style style:name="co1" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="22.58mm"/>
  </style:style>
  <style:style style:name="co2" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="79.78mm"/>
  </style:style>
  <style:style style:name="co3" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="169.39mm"/>
  </style:style>
  <style:style style:name="co4" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="47.64mm"/>
  </style:style>
  <style:style style:name="co5" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="315.35mm"/>
  </style:style>
  <style:style style:name="co6" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="123.63mm"/>
  </style:style>
  <style:style style:name="co7" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="76.25mm"/>
  </style:style>
  <style:style style:name="co8" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="75.95mm"/>
  </style:style>
  <style:style style:name="ro1" style:family="table-row">
   <style:table-row-properties style:row-height="4.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro2" style:family="table-row">
   <style:table-row-properties style:row-height="6.58mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro3" style:family="table-row">
   <style:table-row-properties style:row-height="8.41mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro4" style:family="table-row">
   <style:table-row-properties style:row-height="27.38mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro5" style:family="table-row">
   <style:table-row-properties style:row-height="54.22mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro6" style:family="table-row">
   <style:table-row-properties style:row-height="40.8mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro7" style:family="table-row">
   <style:table-row-properties style:row-height="22.37mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro8" style:family="table-row">
   <style:table-row-properties style:row-height="5.7mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro9" style:family="table-row">
   <style:table-row-properties style:row-height="30mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro10" style:family="table-row">
   <style:table-row-properties style:row-height="12.63mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro11" style:family="table-row">
   <style:table-row-properties style:row-height="12.36mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro12" style:family="table-row">
   <style:table-row-properties style:row-height="5.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro13" style:family="table-row">
   <style:table-row-properties style:row-height="16.32mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro14" style:family="table-row">
   <style:table-row-properties style:row-height="4.71mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro15" style:family="table-row">
   <style:table-row-properties style:row-height="5.26mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro16" style:family="table-row">
   <style:table-row-properties style:row-height="6.95mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro17" style:family="table-row">
   <style:table-row-properties style:row-height="5.29mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro18" style:family="table-row">
   <style:table-row-properties style:row-height="22.9mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro19" style:family="table-row">
   <style:table-row-properties style:row-height="21.57mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro20" style:family="table-row">
   <style:table-row-properties style:row-height="11.04mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro21" style:family="table-row">
   <style:table-row-properties style:row-height="4.87mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro22" style:family="table-row">
   <style:table-row-properties style:row-height="10mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro23" style:family="table-row">
   <style:table-row-properties style:row-height="8.85mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ta1" style:family="table" style:master-page-name="Default">
   <style:table-properties table:display="true" style:writing-mode="lr-tb"/>
  </style:style>
  <number:date-style style:name="N37" number:automatic-order="true">
   <number:day number:style="long"/>
   <number:text>/</number:text>
   <number:month number:style="long"/>
   <number:text>/</number:text>
   <number:year/>
  </number:date-style>
  <number:text-style style:name="N100">
   <number:text-content/>
  </number:text-style>
  <style:style style:name="ce1" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
  </style:style>
  <style:style style:name="ce2" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce3" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce4" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce5" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce6" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce7" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce8" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff66cc"/>
  </style:style>
  <style:style style:name="ce9" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="18pt" style:font-size-asian="18pt" style:font-size-complex="18pt"/>
  </style:style>
  <style:style style:name="ce10" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:font-name="Droid Naskh Shift Alt" fo:font-size="13pt" style:font-size-asian="13pt" style:font-name-complex="Droid Naskh Shift Alt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce11" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Droid Naskh Shift Alt" fo:font-size="13pt" style:font-size-asian="13pt" style:font-name-complex="Droid Naskh Shift Alt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce12" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:font-name="Droid Naskh Shift Alt" fo:font-size="13pt" style:font-size-asian="13pt" style:font-name-complex="Droid Naskh Shift Alt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce13" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="end" fo:margin-left="0mm"/>
   <style:text-properties style:font-name="Droid Naskh Shift Alt" fo:font-size="13pt" style:font-size-asian="13pt" style:font-name-complex="Droid Naskh Shift Alt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce14" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="end" fo:margin-left="0mm"/>
   <style:text-properties style:font-name="Droid Naskh Shift Alt" fo:font-size="13pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="13pt" style:font-name-complex="Droid Naskh Shift Alt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce15" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-style="normal" fo:font-weight="normal" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-style-complex="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce16" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce17" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce18" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce19" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce20" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff9999"/>
  </style:style>
  <style:style style:name="ce21" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent"/>
  </style:style>
  <style:style style:name="ce22" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-weight-asian="normal" style:font-name-complex="Monospace" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce23" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="16pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="16pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="16pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce24" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce25" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="16pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="16pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="16pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce26" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:font-name="Bitstream Charter" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce27" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce28" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#ff0066"/>
  </style:style>
  <style:style style:name="ce29" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce30" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333"/>
  </style:style>
  <style:style style:name="ce31" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce32" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N100">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce33" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce34" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Bitstream Charter" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce35" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Bitstream Charter" fo:font-size="12pt" fo:font-weight="bold" style:font-size-asian="12pt" style:font-weight-asian="bold" style:font-size-complex="12pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce36" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Bitstream Charter" fo:font-size="12pt" fo:font-weight="normal" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce37" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce38" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Bitstream Charter" fo:font-size="12pt" fo:font-weight="normal" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce39" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce40" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffff00" style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#ff3333"/>
  </style:style>
  <style:style style:name="ce41" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce42" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffff00"/>
   <style:text-properties fo:color="#ff3333" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce43" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffff00" fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce44" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce45" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce46" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N37"/>
  <style:style style:name="ce47" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce48" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#32cd32" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce49" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce50" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce51" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce52" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:page-layout style:name="pm1">
   <style:page-layout-properties style:writing-mode="lr-tb"/>
   <style:header-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-bottom="2.5mm"/>
   </style:header-style>
   <style:footer-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-top="2.5mm"/>
   </style:footer-style>
  </style:page-layout>
  <style:page-layout style:name="pm2">
   <style:page-layout-properties style:writing-mode="lr-tb"/>
   <style:header-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-bottom="2.5mm" fo:border="2.49pt solid #000000" fo:padding="0.18mm" fo:background-color="#c0c0c0">
     <style:background-image/>
    </style:header-footer-properties>
   </style:header-style>
   <style:footer-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-top="2.5mm" fo:border="2.49pt solid #000000" fo:padding="0.18mm" fo:background-color="#c0c0c0">
     <style:background-image/>
    </style:header-footer-properties>
   </style:footer-style>
  </style:page-layout>
  <style:style style:name="T1" style:family="text">
   <style:text-properties fo:font-size="14pt" style:font-size-asian="14pt" style:font-size-complex="14pt"/>
  </style:style>
  <style:style style:name="T2" style:family="text">
   <style:text-properties style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T3" style:family="text">
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="T4" style:family="text">
   <style:text-properties fo:color="#009695" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="T5" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#333333"/>
  </style:style>
  <style:style style:name="T6" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#009695"/>
  </style:style>
  <style:style style:name="T7" style:family="text">
   <style:text-properties style:font-size-complex="10pt" fo:color="#009695" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt"/>
  </style:style>
  <style:style style:name="T8" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#333333"/>
  </style:style>
  <style:style style:name="T9" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#009695"/>
  </style:style>
  <style:style style:name="T10" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#f57d00"/>
  </style:style>
  <style:style style:name="T11" style:family="text">
   <style:text-properties style:font-name="Liberation Sans" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans" style:font-size-asian="13pt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="T12" style:family="text">
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T13" style:family="text">
   <style:text-properties fo:color="#66ff66"/>
  </style:style>
  <style:style style:name="T14" style:family="text">
   <style:text-properties fo:color="#990099"/>
  </style:style>
  <style:style style:name="T15" style:family="text">
   <style:text-properties fo:color="#ff0000"/>
  </style:style>
  <style:style style:name="T16" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:font-weight="bold" style:font-style-complex="italic" style:font-style-asian="italic" style:font-weight-complex="bold" style:font-weight-asian="bold" fo:font-style="italic" fo:color="#888888"/>
  </style:style>
  <style:style style:name="T17" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#333333" fo:font-style="normal" style:font-style-asian="normal" style:font-style-complex="normal"/>
  </style:style>
  <style:style style:name="T18" style:family="text">
   <style:text-properties fo:color="#ff3333"/>
  </style:style>
 </office:automatic-styles>
 <office:master-styles>
  <style:master-page style:name="Default" style:page-layout-name="pm1">
   <style:header>
    <text:p><text:sheet-name>???</text:sheet-name></text:p>
   </style:header>
   <style:header-left style:display="false"/>
   <style:footer>
    <text:p>Page <text:page-number>1</text:page-number></text:p>
   </style:footer>
   <style:footer-left style:display="false"/>
  </style:master-page>
  <style:master-page style:name="Report" style:page-layout-name="pm2">
   <style:header>
    <style:region-left>
     <text:p><text:sheet-name>???</text:sheet-name> (<text:title>???</text:title>)</text:p>
    </style:region-left>
    <style:region-right>
     <text:p><text:date style:data-style-name="N2" text:date-value="2016-05-09">00/00/0000</text:date>, <text:time style:data-style-name="N2" text:time-value="09:15:18.615727506">00:00:00</text:time></text:p>
    </style:region-right>
   </style:header>
   <style:header-left style:display="false"/>
   <style:footer>
    <text:p>Page <text:page-number>1</text:page-number> / <text:page-count>99</text:page-count></text:p>
   </style:footer>
   <style:footer-left style:display="false"/>
  </style:master-page>
 </office:master-styles>
 <office:body>
  <office:spreadsheet>
   <table:calculation-settings table:automatic-find-labels="false"/>
   <table:table table:name="python" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Should I use %s or %r for formatting?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>You should use %s and only use %r for getting debugging information about something. The %r will give you the &quot;raw programmer&apos;s&quot; version of variable, also known as the &quot;representation.&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Why do the \n newlines not work when I use %r?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>That&apos;s how %r formatting works; it prints it the way you wrote it (or close to it). It&apos;s the &quot;raw&quot; format for debugging.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/></text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>question1</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what is the output of:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>Print &quot;.&quot; * 10</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p># output is </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>. . . . . . . . </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>question2</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what is the difference between: </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>1)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Print a+r</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Print c+d</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>2)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Print a+r <text:span text:style-name="T1">,</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Print c+d</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>the second prints will be output on the same line</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Question 3</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>print &quot;Its fleece was white as %s.&quot; % &quot;snow&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>print &quot;Its fleece was white as %s.&quot; % &apos;snow&apos;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>print &quot;Its fleece was white as %s.&quot; % var23</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro3" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p>print &quot;We&apos;d have %d beans, %d jars, and %d crates.&quot; % secret_formula(start_point)</text:p><text:p><text:span text:style-name="T2">secret_formula is a function returning 3 values</text:span></text:p>
      </table:table-cell>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Question 4</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>from sys import argv</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Remember that modules give you features.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>sys is a package, and this phrase just says to get the argv feature from that package.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Question 5</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>file object</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>close, read, readline, truncate, write</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>close -- Closes the file. Like File-&gt;Save.. in your editor.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>read -- Reads the contents of the file. You can assign the result to a variable.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>readline -- Reads just one line of a text file.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>truncate -- Empties the file. Watch out if you care about the file.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>write(&apos;stuff&apos;) -- Writes &quot;stuff&quot; to the file.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>readline(), reads the current line. Seek(0) reset the position of pointer</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Question 6</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what happens to the file name filenametowriteto ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>filetowriteto = open(filenametowriteto, &quot;w&quot;)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>filetowriteto.close()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>it is open in writing mode and its content is cleared</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Question 7</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>What does the * in *args do?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>def print_two(*args):</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>arg1, arg2 = args</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>print &quot;arg1: %r, arg2: %r&quot; % (arg1, arg2)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>That tells Python to take all the arguments to the function and then put them in args as a list.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="6">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Question 8</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>raw_input() reads str. How to read an int, float ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro3" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>int(raw_input()) </text:p><text:p>Float(raw_input())  </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a function can return more than one value or an array intercepted by variables</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>def secret_formula(started):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>jelly_beans = started * 500</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>jars = jelly_beans / 1000</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>crates = jars / 100</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return jelly_beans, jars, crates</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>beans, jars, crates = secret_formula(start_point)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>print &quot;We&apos;d have %d beans, %d jars, and %d crates.&quot; % secret_formula(start_point)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>,,,,,,,,,,,</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>def getnames():</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>names = []</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>names.append(&quot;hassan&quot;)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>names.append(&quot;rachid&quot;)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return names</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>name1,name2=getnames() <text:s/>#names returned get unpacked into name1 and name2</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a function can be defined anywhere in the code</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>print &quot;hello&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>def recursive_fn(a):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>print a</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>if a &lt; 1:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>return</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>else:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>recursive_fn(a-1)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>recursive_fn(4)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>interactive mode and List</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>$python</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; words=&quot;hello hassan, this is karim&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; splited=words.split()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; splited</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[&apos;hello&apos;, &apos;hassan,&apos;, &apos;this&apos;, &apos;is&apos;, &apos;karim&apos;]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; sorted(splited)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[&apos;hassan,&apos;, &apos;hello&apos;, &apos;is&apos;, &apos;karim&apos;, &apos;this&apos;]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; splited[0]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&apos;hello&apos;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; splited[4]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&apos;karim&apos;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; splited.pop(-1)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&apos;karim&apos;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; splited.pop(-1)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&apos;is&apos;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; splited.pop(1)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&apos;hassan,&apos;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; splited</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[&apos;hello&apos;, &apos;this&apos;]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>list</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p># we can also build lists, first start with an empty one</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T3">Elements </text:span>= []</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>for i in range(0, 6):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>print &quot;Adding %d to the list.&quot; % i</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/># append is a function that lists understand</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T3">elements.append</text:span>(i)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>numbers=range(10)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>print numbers, &quot; note that 10 is not included in the list&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>numbers=range(0,10)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>print numbers</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>numbers=range(0,10,3)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>print numbers</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>A common idiom to change every element of a list looks like this: </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>for i in range(len(L)):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>item = L[i]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/># ... compute some result based on item ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>L[i] = result</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>This can be rewritten using enumerate() as: </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>for i, item in enumerate(L):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/># ... compute some result based on item ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>L[i] = result</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>In the code below</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>for sentence in snippet, phrase:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>result = sentence[:]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>What does result = sentence[:] do?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>That&apos;s a Python way of copying a list. You&apos;re using the list slice syntax [:] to effectively make a slice from the very first element to the very last one.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>replace ss with tt</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>result = &quot;hassan hassan&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>result=result.replace(&quot;ss&quot;, “tt”)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>dictionary/map</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>What a dict does is let you use anything, not just numbers. Yes, a dict associates one thing to another, no matter what it is.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; stuff = {&apos;name&apos;: &apos;Zed&apos;, &apos;age&apos;: 39, &apos;height&apos;: 6 * 12 + 2}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; print stuff[&apos;name&apos;]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>Zed</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; stuff[&apos;city&apos;] = &quot;San Francisco&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; print stuff[&apos;city&apos;]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>San Francisco</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; del stuff[&apos;city&apos;]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>&gt;&gt;&gt; stuff</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>{&apos;name&apos;: &apos;Zed&apos;, &apos;age&apos;: 39, &apos;height&apos;: 74}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p>for field, value in stuff.<text:span text:style-name="T3">items</text:span>():</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>print &quot;%s is %s&quot; % (field, value)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p>val = stuff.<text:span text:style-name="T3">get</text:span>(&apos;lastname&apos;)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p>if <text:span text:style-name="T3">not val</text:span>:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>print &quot;Sorry, no such field&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>collections.OrderedDict data structure is an ordered dictionary/map</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="11">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce1" table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce1" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce1"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>Module/lib</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>how to add a lib of functions to python ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>1-in a lib_cal.py file add the following code</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>def add(a,b):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return a+b</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>def sub(a,b):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return a-b</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>def prod(a,b):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return a*b</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>def div(a,b):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return a/b</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>2-compile to make sure there are no errors </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s/></text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>3-enter in python interactive mode: $python</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>4- &gt;&gt;&gt;import lib_cal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>5- &gt;&gt;&gt;print lib_cal.add(5,4)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>the lib can also be imported in a python script</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>import lib_cal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>A = lib_cal.add(8+6)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>loop</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>the_count = [1, 2, 3, 4, 5]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>for number in the_count:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>print &quot;This is count %d&quot; % number</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>while i &lt; 6:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>numbers.append(i)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>i = i + 1</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p>logic</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>elif choice == &quot;taunt bear&quot; and not bear_moved:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>functions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>def new(num_buckets=256):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>&quot;&quot;&quot;Initializes a Map with the given number of buckets.&quot;&quot;&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>aMap = []</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>for i in range(0, num_buckets):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>aMap.append([])</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return aMap</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce5" office:value-type="string" calcext:value-type="string">
      <text:p>class</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce6" office:value-type="string" calcext:value-type="string"><text:p>contrary to c++, the base class constructor is not called automatically.</text:p><text:p>Also first field is modified then the base class constructor is called. But I feel the order is left to the use</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>class Child(Parent):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>def __init__(self, stuff):</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>self.stuff = stuff</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>super(Child, self).__init__()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p>inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>class Parent(object):</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>def altered(self):</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>print &quot;PARENT altered()&quot;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>class Child(Parent):</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>def altered(self):</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>print &quot;CHILD, BEFORE PARENT altered()&quot;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>super(Child, self).altered()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>print &quot;CHILD, AFTER PARENT altered()&quot;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>dad = Parent()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>son = Child()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>dad.altered()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>son.altered()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p>composition</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p>uses.py</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T4">import</text:span><text:span text:style-name="T5"> classCarcar=classCar.Car(</text:span><text:span text:style-name="T6">float</text:span><text:span text:style-name="T5">(2.5))car.printo()</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p>classCar.py</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro5">
     <table:table-cell/>
     <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T7">import</text:span><text:span text:style-name="T8"> classWheel</text:span><text:span text:style-name="T9">class</text:span><text:span text:style-name="T8"> Car(</text:span><text:span text:style-name="T9">object</text:span><text:span text:style-name="T8">):    </text:span><text:span text:style-name="T9">def</text:span><text:span text:style-name="T8"> </text:span><text:span text:style-name="T9">__init__</text:span><text:span text:style-name="T8">(self, _wradius=0.):        self.wheel= classWheel.Wheel(_wradius)            </text:span><text:span text:style-name="T9">def</text:span><text:span text:style-name="T8"> printo(self):        </text:span><text:span text:style-name="T9">print</text:span><text:span text:style-name="T8"> </text:span><text:span text:style-name="T10">&quot;this car has one wheel, which info is as follow:&quot;</text:span><text:span text:style-name="T8">        self.wheel.printo()</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p>classWheel.py</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro6">
     <table:table-cell/>
     <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T7">class</text:span><text:span text:style-name="T8"> Wheel(</text:span><text:span text:style-name="T9">object</text:span><text:span text:style-name="T8">):    </text:span><text:span text:style-name="T9">def</text:span><text:span text:style-name="T8"> </text:span><text:span text:style-name="T9">__init__</text:span><text:span text:style-name="T8">(self, _x):        self.radius=_x            </text:span><text:span text:style-name="T9">def</text:span><text:span text:style-name="T8"> printo(self):        </text:span><text:span text:style-name="T9">print</text:span><text:span text:style-name="T8"> </text:span><text:span text:style-name="T10">&quot;this wheel is %d in radius&quot;</text:span><text:span text:style-name="T8"> % self.radius</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p>class wheel(object)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>pass</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p>`</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>def __init__(self)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p>in multiple inheritance using super(Child, self).method() is what find the right method in the base classes. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
      <text:p>Question 9</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
      <text:p>class_names = [w.capitalize() for w in random.sample(WORDS, snippet.count(&quot;%%%&quot;))]</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="git" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>learn git scripting to read and write things like: <text:a xlink:href="https://gitorious.org/willgit/mainline?f=bin/git-wtf;hb=HEAD" xlink:type="simple">https://gitorious.org/willgit/mainline?f=bin/git-wtf;hb=HEAD</text:a></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>terminology</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Origin/master may not always the upstream branch. : the current branch</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="Sheet3" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co1" table:visibility="collapse" table:number-columns-repeated="3" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co2" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co1" table:visibility="collapse" table:number-columns-repeated="5" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co3" table:default-cell-style-name="ce10"/>
    <table:table-row table:style-name="ro7">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string"><text:p>د ج ح خ ه ع غ ف ق ث ص ض ذ </text:p><text:p>\ ط ك م ن ت ا ل ب ي س ش </text:p><text:p>ظ ز و ة ى ﻻ ر ؤ ء ئ | </text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce9" table:number-columns-repeated="5"/>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="11"/>
    </table:table-row>
    <table:table-row table:style-name="ro9">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string"><text:p/><text:p><text:span text:style-name="T11">&gt; &lt; ؛ ×  ` إ ﻹ ٌ ُ ً َ </text:span></text:p><text:p><text:span text:style-name="T11">| “ : / ، ـ أ ﻷ [ ] ٍ ِ </text:span></text:p><text:p><text:span text:style-name="T11">؟ . , &apos; آ ﻵ { } ْ ~ ¦ </text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell table:style-name="ce11" office:value-type="string" calcext:value-type="string">
      <text:p>اللهم أنت ربي لا إله إلا أنت، خلقتني وأنا عبدك وأنا على عهدك ووعدك ما استطعت، أعوذ بك من شر ما صنعت، أبوء لك بنعمتك علي وأبوء بذنبي فاغفر لي فإنه لا يغفر الذنوب إلا أنت</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>لا إلاه إلا أنت سبحانك إني كنت من الظالمين</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro10">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell table:style-name="ce11" office:value-type="string" calcext:value-type="string">
      <text:p>لا إلاه إلا الله وحده لا شريك له. له الملك و له الحمد. بيده الخير. يحيي و يميت و هو على كل شيء قدير</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>أضحكنا و لا تبكنا</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>أعوذهم بك من شر عملي و تدبيري</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>اللهم إنك أنت أرحم الراحمين</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>اللهم لا تخزنا لا في الدنيا و لا في اﻷخرة</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>أنظر إلى حالنا</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>أعوذ بك من سوء المنقلب</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>سيصيبنا الذل.و أنت أعلم بما سيصيبنا فيه من الذل و الآعتداآت و المشاكل</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>سيشمت بنا اﻷعداء و الجهلة</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>يا رب سيضيع أولادي الأبرياء</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>الهم أخرجنا من تلك الأرض</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>الهم لا تخرجنا من هذه الأرض التي طيبتها لنا</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>بيدك الخير إنك على كل شيء قدير</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell table:style-name="ce12"/>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>اللهم يا <text:s/>منزل القرآن</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>أيقضتني لأدعوك. وتلقيت كلمات منك فأتممتهن. و هديتني للإسلام و الدعاء. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>آستجبت في الماضي فسترت ضعفي و أكرمتني بهذه الأرض. و بالأولاد. و بالعمل في يوبي صفت. و بسداد مستحقات دراسة الأولاد ف</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
      <text:p>اللهم بقدرتك لا بعلمي أو علاقاتي</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
      <text:p>اللهم إني أعوذ بك من العجب و الغرور و الجهالة</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>اللهم إني أعوذ بك من التمني و التفكير في المستقبل</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>اللهم آرم لي يا خير رام</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>اللهم آرم لي فترزقني</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>مهما عملت فـأنا مقصر. مهما علمت فـأنا مخطئ جاهل</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
      <text:p>اللهم إني تذللت للناس و رفضوني و منعوني . و إني أتذلل إليك و أنت لا ترفض و لا تمنع</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="11"/>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>اللهم إنك رزقت الكفار بسهولة،و هم لا يسألونك شيئا</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>اللهم إني أنتظر رحمتك و متيقن منها حينما أذكرك و أدعوك و أبكي و أتضرع لك ولكنها لم تأت</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>أتخيل رحمتك واقعة فلا تقع</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="10"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>أتخيل السوء <text:s/>فلا يقع <text:s/>فتقع رحمتك</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro8" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="11"/>
    </table:table-row>
    <table:table-row table:style-name="ro8">
     <table:table-cell table:number-columns-repeated="11"/>
    </table:table-row>
   </table:table>
   <table:table table:name="en" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="3" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>This is perfectly fine since %r is used for debugging and inspection, so it&apos;s not necessary that it be pretty.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>that it will be pretty</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Couldn&apos;t you just not use the comma , and turn the last two lines into one single-line print?</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Yes, you could very easily, but then it&apos;d be longer than 80 characters, which in Python is bad style.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p>Do you like me zed?</text:p><text:p>&gt;  Yes</text:p><text:p>Alright, so you said &apos;Yes&apos; about liking me.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>The tool will fail for you when you get further in the book.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>The remainder of the file is more of the same, but we&apos;ll leave the analysis to you in the Study Drills.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Go read up on Python&apos;s import statement, and start python to try it out. Try importing some things and see if you can get it right. It&apos;s alright if you do not.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string"><text:p>Once you have your list, spend a few days rewriting the list and double-checking that it&apos;s correct. This may get boring but push through and really nail it down.</text:p><text:p>Once you have memorized the list and what they do, then step it up by writing out tables of symbols, their names, and what they do from memory. If you hit some you can&apos;t recall from memory, go back and memorize them again.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Can you make it better than what I&apos;ve written?</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>This might be a lot to take in, but we&apos;re going to spend a few exercises getting this concept firm in your brain. To kick things off, here&apos;s an exercise that mixes strings and lists for all kinds of fun.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>There we go, there are 10 elements now</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Another way to say that is &quot;Every key has a list of values.&quot; </text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>other than to say push a button</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Do this same kind of mapping with cities and states/regions in your country or some other country.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb:or another country</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string"><text:p>Did you notice that the list function listed the items I added in a different order <text:span text:style-name="T3">than they were added</text:span>? This is an example of how dictionaries don&apos;t maintain order, and if you analyze the code you&apos;ll understand why.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb:?</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string"><text:p>Did you notice that the list function listed the items I added in a different order <text:span text:style-name="T12">than they were added</text:span>? This is an example <text:span text:style-name="T3">of how dictionaries don&apos;t maintain </text:span>order, and if you analyze the code you&apos;ll understand why.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb:of how they do it</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Save your brain power for something important.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Exactly. The choice of one single word meant that I couldn&apos;t teach you about this until now.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>The rest of the code in this book may or may not follow these guidelines depending on if it makes the code more confusing.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>I suggest you also do this, as comprehension is more important than impressing everyone with you knowledge of esoteric style rules.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>DIFFER</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>To compute the camera’s transformation matrix is no different from computing the transformation matrix</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>of any object placed in the scene.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>So to help you on your way to better health, we’ve got together with Lumino to offer Southern Cross members.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb:to help you in your goal</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="Modern C++" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co1" table:number-columns-repeated="1022" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://herbsutter.com/elements-of-modern-c-style/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>uninitialized_copy creates inplace objects using constructor, where as std::copy assumes the objects are already created and uses the assignment operator</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro12">
     <table:table-cell/>
     <table:table-cell table:style-name="ce16" office:value-type="string" calcext:value-type="string">
      <text:p>std::get_temporary_buffer</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
      <text:p>noexcept</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>it makes a call to ::operator new. Needs a call to return_temporary_buffer to delete</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string"><text:p>The block of storage is aligned apropriately to contain elements of type T if T has a <text:span text:style-name="T3">fundamental alignment 90</text:span>, although it is left uninitialized (no object is constructed).</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>new placement</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>static_cast</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cast pointer to any object to void* in the stl lib</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>template&lt;typename _T1, typename _T2&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>inline void</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>_Construct(_T1* __p, const _T2&amp; __value)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// _GLIBCXX_RESOLVE_LIB_DEFECTS</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// 402. wrong new expression in [some_]allocator::construct</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>::new(static_cast&lt;void*&gt;(__p)) _T1(__value);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>/usr/include/c++/5/bits/stl_construct.h</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>initializer_list</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce15"/>
      <table:table-cell table:style-name="ce17" office:value-type="string" calcext:value-type="string">
       <text:p>it is an object with a pointer and a field containing the number of elements</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce15" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce15"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>A constructor that takes a single argument of type std::initializer_list is called an initializer-list constructor.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce15" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce15"/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce15" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce15"/>
      <table:table-cell table:style-name="ce18" office:value-type="string" calcext:value-type="string">
       <text:p>Usage 1</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce15" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce15"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>#include &lt;iostream&gt; <text:s text:c="9"/>// std::cout</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce15" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce15"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>#include &lt;initializer_list&gt; <text:s/>// std::initializer_list</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce15" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce15"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>int main ()</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce15" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::initializer_list&lt;int&gt; mylist;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>mylist = { 10, 20, 30 };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;mylist contains:&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>for (int x: mylist) std::cout &lt;&lt; &apos; &apos; &lt;&lt; x;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::cout &lt;&lt; &apos;\n&apos;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>return 0;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>can&apos;t find the assignment operator</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>https://groups.google.com/forum/#!topic/comp.lang.c++/DtIqYu94Mtg</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce18" office:value-type="string" calcext:value-type="string">
       <text:p>Usage 2</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string">
       <text:p>struct MyValue {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>int value;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>int fifth() {return <text:s/>value/5;}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>MyValue sixty {60}; // note that MyValue has no constructor, but till</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what if MyValue has more that one member ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>and how to initialize an array of MyValue ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
       <text:p>is this code using initializer_list ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Point array initialization</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Point ap[]={{1,2},{3,4}}; cout &lt;&lt; ap[1] &lt;&lt; endl; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
       <text:p>using the initializer_list in my class</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>#include &lt;iostream&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>#include &lt;vector&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>class MyNumber</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce21" office:value-type="string" calcext:value-type="string"><text:p>    MyNumber(const <text:span text:style-name="T13">std::initializer_list&lt;int&gt;</text:span><text:span text:style-name="T14"> </text:span>&amp;v) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>for (auto itm : v) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>mVec.push_back(itm);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>void print() {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>for (auto itm : mVec) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>std::cout &lt;&lt; itm &lt;&lt; &quot; &quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>private:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>std::vector&lt;int&gt; mVec;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T13">MyNumber m = { 1, 2, 3, 4 };</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>m.print(); <text:s/>// 1 2 3 4</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return 0;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>how to access a particular element in a initializer_list</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>unique_ptr&lt;BT::Node&gt; &amp; BT::AddNode(std::initializer_list&lt;int&gt; l, uint index)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    unique_ptr&lt;Node&gt; n = make_unique&lt;Node&gt;(<text:span text:style-name="T15">l[index]</text:span>);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro13">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p>don&apos;t understand :</text:p><text:p>      <text:span text:style-name="T3">constexpr</text:span> initializer_list(const_iterator __a, size_type __l)</text:p><text:p>      : _M_array(__a), _M_len(__l) { }</text:p><text:p/>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro14">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T3">constexpr</text:span> const T* begin() const noexcept;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="7">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro15">
     <table:table-cell/>
     <table:table-cell table:style-name="ce22" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T5">      </text:span><text:span text:style-name="T16">// The compiler can call a private constructor.</text:span><text:span text:style-name="T17">      constexpr initializer_list(const_iterator __a, size_type __l)      : _M_array(__a), _M_len(__l) { }</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>C++11 introduced { } initialization</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro16">
     <table:table-cell/>
     <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string">
      <text:p>Preventing narrowing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro17">
      <table:table-cell/>
      <table:table-cell table:style-name="ce16" office:value-type="string" calcext:value-type="string">
       <text:p>in legacy C++, narrowing happens silently</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro17">
      <table:table-cell/>
      <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string">
       <text:p>in C++11, using the {}, narrowing raises an error</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro17">
      <table:table-cell/>
      <table:table-cell table:style-name="ce16" office:value-type="string" calcext:value-type="string">
       <text:p>detail</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>int x = 7.3; <text:s text:c="11"/>// Ouch! But silent</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>void f(int);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>f(7.3); <text:s text:c="16"/>// Ouch! But silent</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>However, in C++11, {} initialization doesn&apos;t narrow: </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>int x0 {7.3}; <text:s text:c="2"/>// error: narrowing</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>int x1 = {7.3}; // error: narrowing</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>double d = 7;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>int x2{d}; <text:s text:c="13"/>// error: narrowing (double to int)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>char x3{7}; <text:s text:c="12"/>// ok: even though 7 is an int, this is not narrowing</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>vector&lt;int&gt; vi = { 1, 2.3, 4, 5.6 }; <text:s text:c="3"/>// error: double to int narrowing</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p>The way C++11 avoids a lot of incompatibilities is by relying on the actual values of initializers </text:p><text:p>(such as 7 in the example above) when it can (and not just type) when deciding what is a narrowing conversion.</text:p><text:p/>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p>If a value can be represented exactly as the target type, the conversion is not narrowing.</text:p><text:p>         char c1{7};      // OK: 7 is an int, but it fits in a char</text:p><text:p><text:span text:style-name="T2">         Char c2{77777};  // error: narrowing (assuming 8-bit chars)</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>Note that floating-point to integer conversions are always considered narrowing -- even 7.0 to 7. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce3"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
        <text:p>stl_copy.cpp:16:14: error: narrowing conversion of ‘4.5e+0’ from ‘double’ to ‘int’ inside { } [-Wnarrowing]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1"/>
       <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>int p1 = {4.5};</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce1" table:number-columns-repeated="2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:style-name="ce1" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce1" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro16">
     <table:table-cell table:style-name="ce1"/>
     <table:table-cell table:style-name="ce25" office:value-type="string" calcext:value-type="string">
      <text:p>Delegating constructors</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro17">
     <table:table-cell table:style-name="ce1"/>
     <table:table-cell table:style-name="ce26" office:value-type="string" calcext:value-type="string">
      <text:p>a constructor can call/use another</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce1" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>class X {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>int a;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>public:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>X(int x) { if (0&lt;x &amp;&amp; x&lt;=max) a=x; else throw bad_X(x); }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>X() :X{42} { }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>X(string s) :X{lexical_cast&lt;int&gt;(s)} { }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>// ...</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:style-name="ce1" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro16">
     <table:table-cell/>
     <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string">
      <text:p>In-class member initializers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>in legacy C++, only static const integral field can be in-class intialized</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>class X {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="5"/>static const int m1 =7;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>in C++11, any member can</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>class A {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>public:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>A() {}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>A(int a_val) : a(a_val) {}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>A(D d) : b(g(d)) {}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>public:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>int a = 7;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>int b = 5; <text:s text:c="5"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>private:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>HashingFunction hash_algorithm{&quot;MD5&quot;}; <text:s/>// Cryptographic hash to be applied to all A instances</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>std::string s{&quot;Constructor run&quot;}; <text:s text:c="6"/>// String indicating state in object lifecycle</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce5" office:value-type="string" calcext:value-type="string">
      <text:p>inherited constructor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
       <text:p>In C03, a derived class must absolutely define a constructor to call the Base class&apos;s </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
       <text:p>in C++11, the derived class has the option of not defining any constructor but just use the base class&apos;s using the using keyword</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro4" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T4">class</text:span><text:span text:style-name="T5"> B{</text:span><text:span text:style-name="T6">int</text:span><text:span text:style-name="T5"> x=4;</text:span><text:span text:style-name="T6">public</text:span><text:span text:style-name="T5">:B(</text:span><text:span text:style-name="T6">int</text:span><text:span text:style-name="T5"> o):x(o){}};</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T4">class</text:span><text:span text:style-name="T5"> D:</text:span><text:span text:style-name="T6">public</text:span><text:span text:style-name="T5"> B{</text:span><text:span text:style-name="T6">public</text:span><text:span text:style-name="T5">:</text:span><text:span text:style-name="T6">using</text:span><text:span text:style-name="T5"> B::B;};</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T4">int</text:span><text:span text:style-name="T5"> main (){D f;  //error. No default constructorD t(3); //ok, using B constructor</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro16">
     <table:table-cell/>
     <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string">
      <text:p>static_assert</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro17">
      <table:table-cell/>
      <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string">
       <text:p>A static_assert is useful to make explicit any assumption about a program and its treatment by a compiler.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro17">
      <table:table-cell/>
      <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string">
       <text:p>The compiler evaluates the expression and writes the string as an error message if the expression is false</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>static_assert(sizeof(long)&gt;=8, &quot;64-bit code generation required for this library.&quot;);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>struct S { X m1; Y m2; };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>static_assert(sizeof(S)==sizeof(X)+sizeof(Y),&quot;unexpected padding in S&quot;);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro17">
      <table:table-cell/>
      <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string">
       <text:p>it cannot be used to check assumptions that depends on run-time values. For example: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>int f(int* p, int n)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>static_assert(p==0,&quot;p is not null&quot;); <text:s text:c="3"/>// error: static_assert() expression not a constant expression</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>// ...</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro16">
     <table:table-cell/>
     <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string">
      <text:p>long long -- a longer integer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>An integer that&apos;s at least 64 bits long. For example: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>long long x = 9223372036854775807LL;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro16">
     <table:table-cell/>
     <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string">
      <text:p>nullptr -- a null pointer literal</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>nullptr is a literal denoting the null pointer; it is not an integer: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>char* p = nullptr;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>int* q = nullptr;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>char* p2 = 0; <text:s text:c="10"/>// 0 still works and p==p2</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>void f(int);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>void f(char*);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>f(0); <text:s text:c="18"/>// call f(int)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>f(nullptr); <text:s text:c="12"/>// call f(char*)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>void g(int);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>g(nullptr); <text:s text:c="12"/>// error: nullptr is not an int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>int i = nullptr; <text:s text:c="7"/>// error nullptr is not an int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro16">
     <table:table-cell/>
     <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string">
      <text:p>Suffix return type syntax</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>Consider: </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>template&lt;class T, class U&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>??? mul(T x, U y)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>return x*y;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string"><text:p>What can we write as the return type? It&apos;s &quot;the type of x*y&quot;, of course, but how can we say that? First idea, use <text:a xlink:href="modernC++/C++11%20FAQ.html#decltype" xlink:type="simple">decltype</text:a>: </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>template&lt;class T, class U&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>decltype(x*y) mul(T x, U y) // scope problem!</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>return x*y;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>That won&apos;t work because x and y are not in scope. However, we can write: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>template&lt;class T, class U&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>decltype(*(T*)(0)**(U*)(0)) mul(T x, U y) <text:s text:c="6"/>// ugly! and error prone</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>return x*y;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>However, calling that &quot;not pretty&quot; would be overly polite. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>The solution is put the return type where it belongs, after the arguments: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce27" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>template&lt;class T, class U&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>auto mul(T x, U y) -&gt; decltype(x*y)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>return x*y;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>We use the notation auto to mean &quot;return type to be deduced or specified later.&quot; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>The suffix syntax is not primarily about templates and type deduction, it is really about scope. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce27" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>struct List {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>struct Link { /* ... */ };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>Link* erase(Link* p); <text:s text:c="2"/>// remove p and return the link before p</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>// ...</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>List::Link* List::erase(Link* p) { /* ... */ }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>The first List:: is necessary only because the scope of List isn&apos;t entered until the second List::. Better: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>auto List::erase(Link* p) -&gt; Link* { /* ... */ }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
       <text:p>Now neither Link needs explicit qualification. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro16">
     <table:table-cell/>
     <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string">
      <text:p>template alias (formerly known as &quot;template typedef&quot;)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string">
      <text:p>using instead of typedef</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class T&gt; using Vec = std::vector&lt;T,My_alloc&lt;T&gt;&gt;; <text:s/>// standard vector using my allocator</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>Vec&lt;int&gt; fib = { 1, 2, 3, 5, 8, 13 }; // allocates elements using My_alloc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce28" office:value-type="string" calcext:value-type="string">
      <text:p>second part unclear</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro16">
     <table:table-cell/>
     <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string">
      <text:p>auto -- deduction of a type from an initializer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>The old meaning of auto (&quot;this is a local variable&quot;) is now illegal.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro12">
     <table:table-cell/>
     <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string"><text:p>How does the C++ keyword export help with template linker errors? <text:span text:style-name="T12">(https://isocpp.org/wiki/faq/templates)</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>This answer will be updated due to C++11 extern template. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce30" office:value-type="string" calcext:value-type="string">
      <text:p>check if C++11 faq has an update on extern template</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro17">
     <table:table-cell/>
     <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string">
      <text:p>Why can’t I define constraints for my template parameters?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string">
      <text:p>Use static_assert to improve the constraint</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>shared_ptr</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string">
      <text:p>static_pointer_cast</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>is interesting because not only it casts the pointee to the new type but also increments the use_count. Sth that can&apos;t be done by a simple cast</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>Std::ref</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>In C03, once you create a reference r to an object x, then r &amp; x share the same base address. <text:s/>In C++11, <text:s text:c="4"/>reference_wrapper&lt;int&gt; r=x; <text:s text:c="2"/>r and x are different objects</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Furthermore, r cannot refer to any other object. <text:s/>In C++11, <text:s text:c="4"/>reference_wrapper&lt;int&gt; r=x; <text:s text:c="4"/>r=y;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce6" office:value-type="string" calcext:value-type="string">
      <text:p>Also you cannot create an array of references</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>int&amp; arr[] {x,y,z}; <text:s text:c="3"/>// error: declaration of &apos;arr&apos; as array of references</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>in C++11:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>reference_wrapper&lt;int&gt; arr[] {x,y,z};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T3">ref</text:span> constructs an object of the appropriate reference_wrapper type to hold a reference to an object.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>auto r = ref(x); <text:s/>//This return a reference_wrapper &amp; not a direct reference to x (not T&amp;)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce17"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;iostream&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;type_traits&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;functional&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>using namespace std;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>int main()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>cout&lt;&lt;boolalpha;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int x=5, y=7;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reference_wrapper&lt;int&gt; r=x; <text:s text:c="2"/>// or auto r = ref(x);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>cout&lt;&lt;is_same&lt;int&amp;, decltype(r.get())&gt;::value&lt;&lt;&quot;\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>cout&lt;&lt;(&amp;x==&amp;r.get())&lt;&lt;&quot;\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>r=y;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>cout&lt;&lt;(&amp;y==&amp;r.get())&lt;&lt;&quot;\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>r.get()=70;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>cout&lt;&lt;y;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>/* Ouput :-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce32" office:value-type="string" calcext:value-type="string">
      <text:p>true</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce32" office:value-type="string" calcext:value-type="string">
      <text:p>true</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce32" office:value-type="string" calcext:value-type="string">
      <text:p>true</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="float" office:value="70" calcext:value-type="float">
      <text:p>70</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>*/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T3">std::reference_wrapper::get</text:span> Returns a reference to the referred element.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>std::reference_wrapper&lt;int&gt; wrap (foo);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
      <text:p>static_cast&lt;int&amp;&gt;(wrap) = 10; <text:s text:c="2"/>//same as wrap.get()=10;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string">
      <text:p>int y = wrap; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string">
      <text:p>Int &amp; yr = wrap; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>callable objects</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class A</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>void f(int i, char c)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int operator()(int r)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>return r;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void fct(int r){}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int main()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>output(&quot;this is the parent thread, and it is &quot;&lt;&lt;this_thread::get_id());</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>A ai;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>thread t1(ai, 6); //copy of ai in a different thread + ai is a functor.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>thread t2(ref(ai), 7); //reference of ai in a different thread + ai is a functor.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    thread t3(move(ai), 8); //ai is moved. as is no longer valid in this thread. <text:span text:style-name="T18">But it is still usable below. This need clarification</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>thread t4(A(), 9); //a temp A</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>thread t5(&amp;A::f, ai, 6, &apos;z&apos;); //(copy of ai).f(6,&apos;z&apos;);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>thread t6(&amp;A::f, &amp;ai, 6, &apos;z&apos;); //ai.f(6,&apos;z&apos;);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>thread t7([](int x){return x*x;}, 6); //a lamda</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>thread t8(fct, 6);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>t1.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>t2.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>t3.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>t4.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>t5.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>t6.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>t7.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>t8.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
   </table:table>
   <table:table table:name="good coding" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="1024" table:default-cell-style-name="ce34"/>
    <table:table-row table:style-name="ro17" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro17">
     <table:table-cell table:style-name="ce35" office:value-type="string" calcext:value-type="string">
      <text:p>maintenance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17">
     <table:table-cell table:style-name="ce36"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17">
     <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string">
      <text:p>1-Verbosity hinders readability and repetition is error-prone. Both get in the way of maintainability. <text:s text:c="2"/>REFACTORing is needed</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17">
     <table:table-cell table:style-name="ce24"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2-reusing functions in new functions instead of creating new code, reduces the chance for error and makes maintenaining code easier. <text:s/>This is REFACTORING</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro13">
     <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string"><text:p>3-The fact that hash_algorithm and s each has a single default is lost in the mess of code and could easily become a problem during maintenance. </text:p><text:p>Instead, we can factor out the initialization of the data members.</text:p><text:p>Conclusion: a lot of text is a mess. It need refactoring. Well refactored code eases maintenance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17" table:number-rows-repeated="1048566">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro17">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="family" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I don&apos;t discuss with him.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I did when taking mum to belgiu but refused to help</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>then how can I discuss with so who didn&apos;t care about his mum</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>then does he discuss with me ? He bought villas, he settle his step family in one, I never knew</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>he said to said that I spoiled the education of my children. Thing he can&apos;t say</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>he said to said why did you help hassan go to nz</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
   </table:table>
   <table:table table:name="Agile" table:style-name="ta1">
    <table:table-column table:style-name="co5" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co1" table:number-columns-repeated="1023" table:default-cell-style-name="ce1"/>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Scrum team: A typical scrum team has between five and nine people, but Scrum projects can easily scale into the hundreds. However, Scrum can easily be used by one-person teams and often is. This team does not include any of the traditional software engineering roles such as programmer, designer, tester or architect. Everyone on the project works together to complete the set of work they have collectively committed to complete within a sprint. Scrum teams develop a deep form of camaraderie and a feeling that “we’re all in this together.”</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Product owner: The product owner is the project’s key stakeholder and represents users, customers and others in the process. The product owner is often someone from product management or marketing, a key stakeholder or a key user.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>ScrumMaster: The ScrumMaster is responsible for making sure the team is as productive as possible. The ScrumMaster does this by helping the team use the Scrum process, by removing impediments to progress, by protecting the team from outside, and so on.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro13">
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Product backlog: The product backlog is a prioritized features list containing every desired feature or change to the product. Note: The term “backlog” can get confusing because it’s used for two different things. To clarify, the product backlog is a list of desired features for the product. The sprint backlog is a list of tasks to be completed in a sprint.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro13">
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Sprint planning meeting: At the start of each sprint, a sprint planning meeting is held, during which the product owner presents the top items on the product backlog to the team. The Scrum team selects the work they can complete during the coming sprint. That work is then moved from the product backlog to a sprint backlog, which is the list of tasks needed to complete the product backlog items the team has committed to complete in the sprint.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Daily Scrum: Each day during the sprint, a brief meeting called the daily scrum is conducted. This meeting helps set the context for each day’s work and helps the team stay on track. All team members are required to attend the daily scrum.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro13">
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Sprint review meeting: At the end of each sprint, the team demonstrates the completed functionality at a sprint review meeting, during which, the team shows what they accomplished during the sprint. Typically, this takes the form of a demonstration of the new features, but in an informal way; for example, PowerPoint slides are not allowed. The meeting must not become a task in itself nor a distraction from the process.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Sprint retrospective: Also at the end of each sprint, the team conducts a sprint retrospective, which is a meeting during which the team (including its ScrumMaster and product owner) reflect on how well Scrum is working for them and what changes they may wish to make for it to work even better.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro17" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce38"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="1048549">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="interviewCriqHQ" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co1" table:default-cell-style-name="ce39"/>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>multi threading quiz</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>network programming</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>C++11</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>STL</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce40" office:value-type="string" calcext:value-type="string">
       <text:p>-how to go from reverse_iterator to <text:s/>iterator and vice-versa ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>-what is the complexity of insert, find, delete, push_back in stl containers ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro22">
      <table:table-cell/>
      <table:table-cell table:style-name="ce42" office:value-type="string" calcext:value-type="string"><text:p>-there is std::ostream_iterator as in : std::copy(intVect.begin(), intVect.end(), std::ostream_iterator&lt;int&gt;(std::cout));</text:p><text:p>But what are the other iterators ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>-what is trait ? char_traits ? …</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>- practice std::function vs <text:s/>lambda</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>27- how come functions are overloaded with different the return types ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>list&lt;T&gt;::iterator begin();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>list&lt;T&gt;::iterator end();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>list&lt;T&gt;::const_iterator begin() const;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>list&lt;T&gt;::const_iterator end() const;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
       <text:p>-algo adaptors ? function object adaptors ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce42" office:value-type="string" calcext:value-type="string">
       <text:p>- bitset</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce42" office:value-type="string" calcext:value-type="string">
       <text:p>- set, multiset, multimap, hashtable, ... <text:s/>&lt;iterator&gt; &lt;array&gt; &lt;deque&gt; &lt;forward_list&gt; &lt;list&gt; &lt;map&gt; &lt;regex&gt; &lt;set&gt; &lt;string&gt; &lt;unordered_map&gt; &lt;unordered_set&gt; &lt;vector&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce42" office:value-type="string" calcext:value-type="string">
       <text:p>- try to assign a vector::iterator to a list::iterator, to make sure they are not random, and get the name of i=each class from the compiler</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce42" office:value-type="string" calcext:value-type="string">
       <text:p>-how to erase elements from a container in a batch</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>-define my own allocator for a container.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>C++</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>What is encapsulation? </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
         <text:p>The process of binding the data and the functions acting on the data together in an entity (class) called as encapsulation.</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
         <text:p>a struct implements this or a class</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro21" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro21" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>What is abstraction? </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
         <text:p>Abstraction refers to hiding the internal implementation and exhibiting only the necessary details.</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro21" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>implemented by using the accessors public, protected and private </text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro21" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro21" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro21" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>what is intrensic ? Alignment ? Why are classes padded ? (for when its objects are placed in an array and access to it should be aligned)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro21" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>what is the storage class auto, register ?</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
         <text:p>Auto is the default for local variables. It is stored in the stack. Is that what makes a variable get destructed at the end of the bloc ?</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro22" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>register is for varialbes that require quick access like counters. Register variable have a max size no bigger than the size of a register + we canot get its address</text:p><text:p>It might and might not be placed in a register</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro21" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro21" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>S++ or S=S+1, which can be recommended to increment the value by 1 and why? </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
         <text:p>S++, as it is single machine instruction (INC) internally.</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro21" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro21" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what are the other storage classes ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>static, extern</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>stl</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>boost</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>oo:SOLID, GRASP</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>embedded</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Hardware/software integrated systems and/or embedded software Development</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>grasp</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>design patterns</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>design principles</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>SQL</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>Python</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="interviewInvenco" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>have knowledge file open</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="Todo" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>solve the question in the test</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>oo design, design patterns</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>c optimized, bit operations</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>optimization, ARM</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>multithreading. Pthread + c++11</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>embedded development in real. You tube</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>c++ for embedded system</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>templating issue</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>virtual functions issue. Polymorphism</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>bit operations</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>finite state machine</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>protocols</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>timing tcp/ip</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>stl</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>transferable skills</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>learn big files opening from 4d</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>learned lessons</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro14">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://cpptruths.blogspot.co.nz/2011/07/want-speed-use-constexpr-meta.html" xlink:type="simple">http://cpptruths.blogspot.co.nz/2011/07/want-speed-use-constexpr-meta.html</text:a> (Want speed? Use constexpr meta-programming!)</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://rosettacode.org/wiki/Category:Solutions_by_Programming_Task</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>algos</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce47" office:value-type="string" calcext:value-type="string">
      <text:p>Question 83 find how many times a number occurs in a sorted array.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Question 85- How do you get the depth of a binary tree? (the maximum length of all paths.)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>move</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ref</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>mutlithreading</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>scheduling</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Memory ordering</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>https://books.google.co.nz/books?id=mS_5nCLPaQsC&amp;pg=PT312&amp;lpg=PT312&amp;dq=software+design+for+vehicle+class&amp;source=bl&amp;ots=FHxF-MZ9eW&amp;sig=esiEnhZ8-Gr47DopCqITTKYbAQs&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwitorbml43MAhUGUZQKHWWgDfIQ6AEISDAI#v=onepage&amp;q=software%20design%20for%20vehicle%20class&amp;f=false</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.bogotobogo.com/cplusplus/C11/4_C11_Rvalue_Lvalue.php</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>design</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>vehicle class design</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>float point</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>fix point</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>float point</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NaN detection</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>memory management</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Fundamentals of Shared, Unique and Weak references, C++ Memory Management Theory</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>virtual memory</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>DMA</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>can I do a DMA transfer on linux ? Understand what DMA is at <text:a xlink:href="http://lxr.free-electrons.com/source/Documentation/DMA-API-HOWTO.txt" xlink:type="simple">http://lxr.free-electrons.com/source/Documentation/DMA-API-HOWTO.txt</text:a></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how to access a particular element in a initializer_list</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unique_ptr&lt;BT::Node&gt; &amp; BT::AddNode(std::initializer_list&lt;int&gt; l, uint index)</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    unique_ptr&lt;Node&gt; n = make_unique&lt;Node&gt;(<text:span text:style-name="T15">l[index]</text:span>);</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Evgeny Yashin: Hi ,</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I am contacting you from Real Time Recruitment Solutions, a specialist recruitment consultancy dedicated to providing permanent and contract staff to the IT and Engineering sectors throughout the UK.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>We are looking for a number of people who match the criteria of the following job spec, if this position matches your profile please send me a word version of your CV quoting your salary requirements and availability.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>If this position is not suitable, I would really be grateful if you could pass this email onto anyone else who you think may be relevant.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>---------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Salary: £40-55k</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Location: Cambridge</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Job Spec: C++ Software Developer/ C++ Programmer/ Software Engineer £40-55k</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>My client is looking for a C++ Developer to join a growing team in exchange for a challenging and fulfilling development position.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Skills</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>STL</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Software Design using UML</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Full-life cycle development</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>It would be useful to know:</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Google test or a similar framework</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Boost</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Software interfacing with Electronic Hardware</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>The Role</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Key responsibilities will include but not be limited to:</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Software implementation of PC applications</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Software verification and validation</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Requirements analysis</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Problem solving and providing solutions</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>As well as joining a well established organisation in Cambridge, you will have a role which constantly challenges your problem solving abilities.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>---------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>To apply, please email your CV to me and I will ring you back with more details.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Kind Regards,</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Ross Atkinson</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Senior Recruitment Consultant</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Real Time Recruitment Solutions</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Tel: 01925 821 133</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ross.atkinson@rtrs.co.uk</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>www.rtrs.co.uk</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[11:26:17 PM] Hassan Boulmarouf: Thank you very much</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce46" office:value-type="date" office:date-value="2016-05-09" calcext:value-type="date">
      <text:p>09/05/16</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I am working with a European client, based in a Mediterranean climate, who are developing high profile licenced games, using Unreal 4, for multi-platform, console and VR.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>They are seeking a Technical Director and experienced game programmers to bolster and build their development team.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Could these opportunities be great options for you, a friend, or former colleague? If so, please get in touch with me ASAP, I am happy to discuss this further.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I look forward to receiving your reply.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Thank you and have a good weekend.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Regards,</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Adrian</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Adrian Garrick</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Team Lead</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>INTERACTIVE SELECTION</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>adrian@interactiveselection.com</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>www.interactiveselection.com</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Tel: +44 0)208 944 7777 DL</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Fax: +44 0)208 944 8100</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Skype: <text:s text:c="3"/>terratrainer</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
   </table:table>
   <table:table table:name="Arc" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>open scene graph</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4d:talk about ms symbol server, perforce, the perl scripts that write into the pdb files, commands to load the source code from perforce server</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>visual studio is set with the http servers (sym stores) where the different symbols are to be found. <text:s/>Module</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>When a crash dump for a specific version is loaded, we instruct it to load the corresponding symbols from the servers. VS must have symsrv installed since it understand the server and symbols</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4d:windows sytem programming</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Atos:testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>requirements</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>plan for testing while designing / developing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>automatique testing platform</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Decide what Test Cases to Automate</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Repetitive tests that run for multiple builds.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Tests that require multiple data sets.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Tests that are impossible to perform manually. Hb:Like what ? Multithreading environment ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Tests that run on several different hardware or software platforms and configurations.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Tests that take a lot of effort and time when manual testing.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>example: loading different kinds of data, buildings, scenes, etc, after each submission of new code in the code base</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Architecture to implementation to testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>OOD, Solid, Grasp</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Software architecture, design patterns, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>testing. Talk about ATSU, requirements, black box testing, white box testing (unit), code coverage, integration testing, test driven development, behavior driven development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>testing platform python</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>mature way of software development, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the quickest way to develop is when, after writing code, tests show that no bugs are there.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the worst way is producing code in 2 days WOW. See the result WOW ? But then fixing or trying to fix bugs for 7 or 8 days !!!! - - - - &gt; development turns into HELL</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>meeting the requirements</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>writing a high level, psodo code algorithm without getting lost in the details of the C++ implementation. <text:s/>Requirements</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>And think it through for sometime, making sure every case is covered by the pseudo code. Go back and forth between the requirements and the psedo code. Doing just that for sometime. Reviewing the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Design should meet the testability</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>modularity, </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>high level of low coupling between components (that communicate between them)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>versions of releases. And their debugging</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>keep .pdb files of each version released</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>install symbol server which will load the appropriate pdb files for the version under debugging</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the3Stones: experience in development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pattern design, architechture</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>shaders</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>GUI, QT, wxWidgets</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>windows system programming: threads, processes, crash dumps (talk about 4D windows and Mac)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>know the software, see other 3D CAD (what does CAD stand for ?), autoCAD</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>is there any version available &gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>why is rewriting</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ios/andriod</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how does it compare to autoCad ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro14">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T3">Initiative</text:span>:Viewers for phone/pad ? No prototyping</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
   </table:table>
   <table:table table:name="testing" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>testing types</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Black box testing – Internal system design is not considered in this type of testing. Tests are based on requirements and functionality.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>White box testing – This testing is based on knowledge of the internal logic of an application’s code. Also known as Glass box Testing. Internal software and code working should be known for this type of testing. Tests are based on coverage of code statements, branches, paths, conditions.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Unit testing – Testing of individual software components or modules. Typically done by the programmer and not by testers, as it requires detailed knowledge of the internal program design and code. may require developing test driver modules or test harnesses.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Incremental integration testing – Bottom up approach for testing i.e continuous testing of an application as new functionality is added; Application functionality and modules should be independent enough to test separately. done by programmers or by testers.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Integration testing – Testing of integrated modules to verify combined functionality after integration. Modules are typically code modules, individual applications, client and server applications on a network, etc. This type of testing is especially relevant to client/server and distributed systems.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Functional testing – This type of testing ignores the internal parts and focus on the output is as per requirement or not. Black-box type testing geared to functional requirements of an application.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>System testing – Entire system is tested as per the requirements. Black-box type testing that is based on overall requirements specifications, covers all combined parts of a system.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>End-to-end testing – Similar to system testing, involves testing of a complete application environment in a situation that mimics real-world use, such as interacting with a database, using network communications, or interacting with other hardware, applications, or systems if appropriate.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Sanity testing – Testing to determine if a new software version is performing well enough to accept it for a major testing effort. If application is crashing for initial use then system is not stable enough for further testing and build or application is assigned to fix.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Regression testing – Testing the application as a whole for the modification in any module or functionality. Difficult to cover all the system in regression testing so typically automation tools are used for these testing types.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Acceptance testing -Normally this type of testing is done to verify if system meets the customer specified requirements. User or customer do this testing to determine whether to accept application.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Load testing – Its a performance testing to check system behavior under load. Testing an application under heavy loads, such as testing of a web site under a range of loads to determine at what point the system’s response time degrades or fails.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Stress testing – System is stressed beyond its specifications to check how and when it fails. Performed under heavy load like putting large number beyond storage capacity, complex database queries, continuous input to system or database load.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Performance testing – Term often used interchangeably with ‘stress’ and ‘load’ testing. To check whether system meets performance requirements. Used different performance and load tools to do this.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Usability testing – User-friendliness check. Application flow is tested, Can new user understand the application easily, Proper help documented whenever user stuck at any point. Basically system navigation is checked in this testing.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Install/uninstall testing – Tested for full, partial, or upgrade install/uninstall processes on different operating systems under different hardware, software environment.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>------------</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Recovery testing – Testing how well a system recovers from crashes, hardware failures, or other catastrophic problems.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Security testing – Can system be penetrated by any hacking way. Testing how well the system protects against unauthorized internal or external access. Checked if system, database is safe from external attacks.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Compatibility testing – Testing how well software performs in a particular hardware/software/operating system/network environment and different combination s of above.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Comparison testing – Comparison of product strengths and weaknesses with previous versions or other similar products.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Alpha testing – In house virtual user environment can be created for this type of testing. Testing is done at the end of development. Still minor design changes may be made as a result of such testing.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Beta testing – Testing typically done by end-users or others. Final testing before releasing application for commercial purpose.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="invenco" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="3" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>secure: payment solution should be PCI compliant , has trusted name, safe with systems that have never been breached, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Reliable = soution always available + back ups in place </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>easy to use:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>scalable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>eft system : electronic fast transfer system</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>smart cards</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>authenticatin the user</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Client is </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>asked additional info</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>encrypting the card numbers during transmission (SSL) : encrypt mainling address, date of birht, email, cc # , bank account #</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ecommerce solution typically provide 128 bits encryption, sometimes 256 bits</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Online payment security</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>individual wants their money safe when paying online</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>banks don&apos;t want their sensitive info (money, financial info, …) be wknow so it was not stolen, </text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>so CVV2, verified by visa, adress verification system, visa code (=one-time code f(genuin card, user are present), )</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>verified by visa = password protecting identity checking system</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
   </table:table>
   <table:table table:name="job" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>call for <text:a xlink:href="http://www.trademe.co.nz/jobs/it/other/listing-1063008985.htm" xlink:type="simple">http://www.trademe.co.nz/jobs/it/other/listing-1063008985.htm</text:a></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Peter McKenzie , with at least 3 years NZ experience. The posiiton is Assistant Electronics Design Engineer. </text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="QAC" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Database used Is ms sql server 2008 R3</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the database designer is Microsoft SQL Server Management Studio, to desing tables, create new ones, create db, add fields remove others</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>SQL Developer</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="canada" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co1" table:default-cell-style-name="ce2"/>
    <table:table-column table:style-name="co1" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co6" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>complete an online <text:a xlink:href="http://www.cic.gc.ca/english/immigrate/skilled/profile.asp" xlink:type="simple">Express Entry profile</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>langauge</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>may need education assessment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NOC skill type or level</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string"><text:p>NOC:2174 type:A title: <text:a xlink:href="http://www5.hrsdc.gc.ca/NOC/English/NOC/2011/ProfileQuickSearch.aspx?val=2&amp;val1=2174&amp;val65=*" xlink:type="simple">Computer programmers and interactive media developers</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce50" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>register with Employment and Social Development Canada’s (ESDC) Job Bank</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>promote themselves to employers in other ways</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>http://onlineservices-servicesenligne.cic.gc.ca/eapp/eapp.do;jsessionid=ABB2CA2C2C95142133751C7EBE1BACEA</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>ontario</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>test on 3/01/16</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>In the last three years, how many years of <text:a xlink:href="http://onlineservices-servicesenligne.cic.gc.ca/eapp/glossary.do?id=5008790" xlink:type="simple">skilled work experience</text:a> do you have in Canada? It must have been full-time (or an equal amount in part time).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
   </table:table>
   <table:table table:name="weeknesses" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>lack of hands on threading coding</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>algorithms</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>understanding systems</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="determinism" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="https://en.wikipedia.org/wiki/Deterministic_algorithm#What_makes_algorithms_non-deterministic.3F" xlink:type="simple">https://en.wikipedia.org/wiki/Deterministic_algorithm#What_makes_algorithms_non-deterministic.3F</text:a></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>deterministic finite automaton.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Deterministic algorithms can be defined in terms of a state machine: a state describes what a machine is doing at a particular instant in time. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>State machines pass in a discrete manner from one state to another. Just after we enter the input, the machine is in its initial state or start state. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>If the machine is deterministic, this means that from this point onwards, its current state determines what its next state will be; its course through the set of states is predetermined. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Note that a machine can be deterministic and still never stop or finish, and therefore fail to deliver a result.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Examples of particular abstract machines which are deterministic include the deterministic Turing machine and deterministic finite automaton.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>What makes algorithms non-deterministic?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>A variety of factors can cause an algorithm to behave in a way which is not deterministic, or non-deterministic:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>If it uses external state other than the input, such as user input, a global variable, a hardware timer value, a random value, or stored disk data.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>If it operates in a way that is timing-sensitive, for example if it has multiple processors writing to the same data at the same time. In this case, the precise order in which each processor writes its data will affect the result.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>If a hardware error causes its state to change in an unexpected way.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Although real programs are rarely purely deterministic, it is easier for humans as well as other programs to reason about programs that are. For this reason, most programming languages and especially functional programming languages make an effort to prevent the above events from happening except under controlled conditions.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>The prevalence of multi-core processors has resulted in a surge of interest in determinism in parallel programming and challenges of non-determinism have been well documented.[1][2] A number of tools to help deal with the challenges have been proposed[3][4][5][6] to deal with deadlocks and race conditions.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>side effect</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the copy constructor has a visible side effect (printing text).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a function or expression is said to have a side effect if it modifies some state or has an observable interaction with calling functions or the outside world. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>For example, a particular function might modify a global variable or static variable, modify one of its arguments, raise an exception, write data to a display or file, read data, or call other side-effecting functions. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>In the presence of side effects, a program&apos;s behaviour may depend on history; that is, the order of evaluation matters.</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="algo" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>w</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>q</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ffff</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>bbb</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>bbb</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>wwwww</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ffff</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>fffff</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ffff</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ffff</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
   </table:table>
   <table:table table:name="games" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what game do you like ? Why ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>pros/cons of templates, virtual functions overhead in terms of memory/performance) and other game related concepts such as memory management, collision detection, etc.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>pros and cons about different things like virtual functions, templates, multi-platform programming, and the graphics pipeline. </text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="3d" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce30" office:value-type="string" calcext:value-type="string">
      <text:p>what is the w component needed for ? What happens if it is not 1 ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>handedness</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in both handedness, z cross x = y . and x cross y = z</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in both handedness, x is pointing to the right of user (the Right vector), and y is ponting toward the top of the user (the Up vector)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in left handedness, z is pointing away from the user and into the screen</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>positive rotration is counterclokwise in left handed coordinate system.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>positive rotration is clokwise in right handed coordinate system. But then why z cross x = y (positive vector) ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>angular velocity</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rotation</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>430-what is the Det of a 3x3 matrix ? </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Det of M = V1. (V2 x V3)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when det of M is null, means … ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>… the V2,V3 and V1 are co-planar. And so the three vectors can not be the basis</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>Quaternion</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void Quaternion::Lerp(const Quaternion&amp; source, const Quaternion&amp; dest, float t)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>x = source.x + ((dest.x - source.x) * t);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>y = source.y + ((dest.y - source.y) * t);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>z = source.z + ((dest.z - source.z) * t);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>w = source.w + ((dest.w - source.w) * t);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>write the following function : void getConjugate(const Quaternion &amp; input, Quaternion &amp; output)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the conjugate is same as the inverse in what case ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>when quaternion is unit </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is the inverse of a quaternion</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>(w – x – y – z)/(w^2 + x^2 + y^2 + z^2)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>plane</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>a point belongs to a plane if <text:s/></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro23" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Dot  [ N ]   ,    [point ]    =   0</text:p><text:p>       [ D ]        [ 1     ]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>a line intersect a plane if</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro23" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Dot  [ N ]   ,    [point + t V ]    =   0</text:p><text:p>       [ D ]        [ 1             ]                     ------ &gt;    t = (-d-N.A) / (N . V)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>factorial sergey</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:24:45 PM] Sergey Krusch: Hey</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:24:54 PM] Sergey Krusch: memcpy should be the fastest</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:27:11 PM] Hassan Boulmarouf: Hey Sergey</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:27:21 PM] Hassan Boulmarouf: Why would it be the fastest?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:27:44 PM] Hassan Boulmarouf: did you have to look at its assembly code ? or do you know something about it ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:28:11 PM] Sergey Krusch: Well, the thing is</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:28:20 PM] Sergey Krusch: The question is generic</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:28:51 PM] Sergey Krusch: There are number of different compilers and computer architectures</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:29:43 PM] Sergey Krusch: And there is a good chance that memcpy will be optimized for specific platform-compiler</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:30:29 PM] Hassan Boulmarouf: OK</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:31:01 PM] Sergey Krusch: And also</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:31:45 PM] Sergey Krusch: I&apos;m not 100% sure, but in some cases compilers will detect loop-copying and replace it with generic memcpy (or other memroy copying function)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:33:51 PM] Sergey Krusch: But if we are talking about 32bit architecture and absolutely no compiler optimizations, I would say: B C A D</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:34:15 PM] Sergey Krusch: Though I&apos;m not entirely sure about the 2 last ones</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:34:22 PM] Hassan Boulmarouf: OK</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:34:23 PM] Sergey Krusch: Ah</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:34:25 PM] Sergey Krusch: Hold on</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:34:38 PM] Sergey Krusch: Pretty sure that D goes last</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:34:43 PM] Sergey Krusch: What is it for?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:37:11 PM] Hassan Boulmarouf: Why do you think D go last ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:37:24 PM] Hassan Boulmarouf: is it because of the branches</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:37:32 PM] Sergey Krusch: Well, let&apos;s reverse the question :)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:37:46 PM] Sergey Krusch: Why would it go last? :)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:37:51 PM] Sergey Krusch: What do you think?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:38:43 PM] Hassan Boulmarouf: The only thing I see is because it has to do a branch when J == 16</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:38:59 PM] Hassan Boulmarouf: so it has one branch more than A version</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:39:12 PM] Sergey Krusch: Well, yes. Sort of.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:39:21 PM] Sergey Krusch: But it also has something else</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:39:24 PM] Hassan Boulmarouf: ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:39:33 PM] Sergey Krusch: Multiplications</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:39:40 PM] Sergey Krusch: The code is the same as A</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:39:46 PM] Sergey Krusch: It operates on bytes</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:39:47 PM] Sergey Krusch: But</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:40:10 PM] Sergey Krusch: It adds two multiplications and two additions</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:40:15 PM] Hassan Boulmarouf: Yesssss</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:40:23 PM] Sergey Krusch: And also another nested cycle</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:40:45 PM] Hassan Boulmarouf: OK</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:40:52 PM] Hassan Boulmarouf: I understand</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:41:13 PM] Hassan Boulmarouf: Do you still have time for another question ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:41:22 PM] Hassan Boulmarouf: otherwise we can talk later</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:44:42 PM] Sergey Krusch: Well, go ahead :)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:45:02 PM] Hassan Boulmarouf: the question is as follow:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:45:13 PM] Hassan Boulmarouf: write two versions of factorial function</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:45:24 PM] Hassan Boulmarouf: one recursive, and one iterative</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:46:47 PM] Hassan Boulmarouf: Which implementation do you expect to be faster and why?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>Give at least 3 reasons.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:47:19 PM] Hassan Boulmarouf: I can only think of one reason. I don&apos;t know the two other reasons</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:48:10 PM] Hassan Boulmarouf: here is the iterative version</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:48:34 PM] Hassan Boulmarouf: int factorial1(int N)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>int res = 1;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>for(int i=N;i&gt;1; i--)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="5"/>res *= i;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>return res;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:49:05 PM] Hassan Boulmarouf: here is the recursive version</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:49:37 PM] Hassan Boulmarouf: </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>int factorial2(int N)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>if(N&gt;1)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="5"/>return N*factorial2(N-1);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>return 1;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:50:18 PM] Hassan Boulmarouf: I believe the recursive one will be slower</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:50:36 PM] Sergey Krusch: Hm...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:50:42 PM] Sergey Krusch: In this case — yes :)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:51:01 PM] Sergey Krusch: But. It&apos;s another not quite specific question :)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:51:10 PM] Hassan Boulmarouf: ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:51:53 PM] Sergey Krusch: Think about the following thing</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:52:19 PM] Sergey Krusch: How many multiplications do you need to calculate this: <text:s/>a1 * a2 * a3 * a4?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:52:23 PM] Sergey Krusch: Damn</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:52:55 PM] Hassan Boulmarouf: for N numbers, we need N-1 multiplications</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:53:05 PM] Sergey Krusch: Can you do it faster?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:54:40 PM] Hassan Boulmarouf: I don&apos;t know</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[1:57:51 PM] Hassan Boulmarouf: I am looking on internet for faster way to get factorial</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:00:18 PM] Sergey Krusch: Hm... Well, actually I&apos;m probably wrong then :D</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:14:13 PM] Sergey Krusch: So, yeah, I was thinking about merge-sort-alike multiplication</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:14:38 PM] Sergey Krusch: But actually it&apos;s still O(N)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:15:21 PM] Sergey Krusch: In your code recursive is a much worse variant</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:15:45 PM] Sergey Krusch: Because it also uses O(N) memory</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:16:45 PM] Hassan Boulmarouf: Yes. I can see that</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:18:21 PM] Sergey Krusch: And, obviously, more jumps, more instructions because of need to maintain stack</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:19:03 PM] Sergey Krusch: Well, performance wise memory usage means cache misses</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:19:10 PM] Sergey Krusch: Which is a performance penalty</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:20:14 PM] Sergey Krusch: Apparently, if compiler does it&apos;s optimizations well, iterative code will be calculated using registers (but it depends)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:20:56 PM] Hassan Boulmarouf: So the main problem is in MY version of the recursive one</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:21:37 PM] Sergey Krusch: You can&apos;t really make it better</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:22:05 PM] Sergey Krusch: Well, apart from using advannced algorithms</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:24:18 PM] Hassan Boulmarouf: OK</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:28:18 PM] Hassan Boulmarouf: apart from using advanced algos, can you see the three reasons for performance issues they are expecting ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:28:56 PM] Sergey Krusch: Well, I guess you already have them :)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:29:09 PM] Sergey Krusch: Just read my previous messages :)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:34:02 PM] Sergey Krusch: The only thing that you can improve in your recurrent version is to reduce memory usage to O(log N)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:34:20 PM] Sergey Krusch: But ultimatelly, it doesn&apos;t have a lot of sense</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:37:19 PM] Hassan Boulmarouf: How can i reduce the memory usage to O(log N) ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:38:00 PM] Sergey Krusch: By treating your array kind of like a binary tree</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[2:39:11 PM] Sergey Krusch: a1 * a2 * a3 * a4 = (a1 * a2) * (a3 * a4)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="9">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="the3stones" table:style-name="ta1">
    <table:table-column table:style-name="co7" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co8" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co1" table:number-columns-repeated="19" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>squares are independent elements</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>they can be drawn anywhere in the game</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this means they hold their own position! they do not use Positions&apos;. their resting position coincides with a Position.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>otherwise I will have to take the trouble of updating their corresponding position</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a Position has the id of the square sitting on it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>shouldn&apos;t the board be singleton ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a square should be able to be drawn anywhere in the board.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>at the end of a transition, the square should rest in a position.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when resting in a position, it should know the location pixel-wise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when resting, it has the location of a positioninboard</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>7-when a tile is moving, its current, as opposite to destined, position is not marked fred. only when it has reached the destined position</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>does it swap marking.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this late marking of the free space prevents a descending/resting tile from moving until the one below has rested. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this will help in obtaining the cascading actions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>but we loose control if we need to remove this cascading movement.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>8-PositionInBoard[0][0] is occupied by the tile that is drawn at row 0 and column 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>PositionInBoard are not visible objects. there corresponding tiles get drawn at location relative to row and column of the PositionInBoard.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>9-Board: we need to determine the tile corresponding to positions[i][j]. in order to ask it to move</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the best idea is position-&gt;tile and vice versa tile-&gt;position</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this needs a lot of update</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>bugs can slip when half updates are done.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-10" calcext:value-type="float">
      <text:p>-10</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when X free positions are found, how to ask tiles to move X positions down.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-should the board ask the first found up and instruct it to move 1 positions, and the next one to move 3 postions,etc ... </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>instructing each tile to move a number of positions depending on the number of free positions below it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>we will have to keep track of the number of positions free</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>we will have to tell this to each tile above until the generated ones.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>we will have to decide where each tile has to rest.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-should the board instruct just one tile, which will pass the info on to the tiles above it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-should the board only order the generated ones to move a number of times and these will &apos;push&apos; the other on board</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-should a tile move by itself when a position is free</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-the board could be informed when a position becomes free.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>choosing a solution might mean a lot of change in the code when the solution is found to be not viable.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>which choice is most viable, that fits for all cases.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>thoughts triggered by :</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//start from below, for free positions, inform tile above it, to move to it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(uint i=0; i&lt;e_RowSize; ++i)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(uint j=0; j&lt;e_ColumnSize; ++j)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if (positions[i][j].tile==NULL)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>positions[i][j+1].tile move to positions[i][j];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="17"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>find the first tile on the way up and move to positions[i][j];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="17"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>10.1-selected the solution of the tile checking and moving automatically to the next position</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if (pFreePositionToMoveTo=b.GetFreePositionBelow(loc))</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>has a limitiation:it does not look beyond the imediate next position</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Board::Board():r(0.5f, <text:s/>0.5f,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>0.5f+Board::e_ColumnSize*Square::e_Width,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="17"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>0.5f+Board::e_RowSize*Square::e_Height)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="17"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//note-optim-possibility to optimize out the assignment operator. using an array of pointers or static incrementer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>optimze out the rectangle of position, which is used to determine whether a tile has arrived to a position.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>from the rectangle of position we only need the bottom and the top.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void Tile::Behavior_Move()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>UPDATE_BEHAVIOR_BEGIN</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>r.b--; r.t--;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(r.b == pCurrentPosition-&gt;r.b)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>12.1 optimize out the desctructive part in behaviors</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>DESTRUCT_BEHAVIOR_BEGIN</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>DESTRUCT_BEHAVIOR_END</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="12.2" calcext:value-type="float">
      <text:p>12.2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>each function, accesses fields in a data structure in a different order.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for cache friendly data, use the order of fields required by most frequent accesses.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>12.3 optimize</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>bool Tile::CheckMatches()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>12.4 optimize using bit-wise operations</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>12.5 write a profiler. to assess the difference before and after optimization.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>12.6 optimize out the divisions in TimeCounter::Update</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-13" calcext:value-type="float">
      <text:p>-13</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>used draw1312281114 for basics and movement</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>using draw1312301204 created for mouse.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>clicking on the tiles is correct in draw1312301204</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>using draw1312302135 for swapping</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>using draw1401021316 to carry on the work done in draw1312302135, which is incomplete</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>using draw1401021316 to carry on the work done in draw1312302135, which is incomplete</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401031541 reflects the core of the game</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401041219 same as draw1401031541 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401050937 to work on text. text and individual done</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401061210 to work on global score. done</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401062124 to work on the time</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401122021 closed the loop on the game.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401122022 is for texturing and animating the countdown</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401122022 is saved in draw1401132126.7z</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401132127 is derived ffrom draw1401122022 at 1401132127</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401142138 is the outcome of the work on draw1401132127 until 1401142138.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1401142139</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb::auto_ptr,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>14- point and r should be constants</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct PositionInBoard</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb::Pointu8</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>point;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Tile</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>*tile;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb::Rectangle r;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-15" calcext:value-type="float">
      <text:p>-15</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>draw1312302135, doing swap, destruction, swap back, match</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the board is Behavior_Stable. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>receives a click</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>then a second</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the board is in Behavior_Swapping</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>two tiles go to Behavior_Swapping. the other tiles are in Behavior_Resting</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the board finds match</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>three tiles are disappearing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>there can&apos;t be a state where the ones below them have disappeared. because the board haven&apos;t been receiving clicks since a while</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>because when tiles were ordered to disappear, the board could not have received new clicks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-17" calcext:value-type="float">
      <text:p>-17</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a fine line between </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>using the same behavior/function to be used in many situation: this yields a long and complexe function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>using many little functions for each little situation. a lot of duplications, different bugs in similar codes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="17.2" calcext:value-type="float">
      <text:p>17.2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>coding is a series of decisions: will timeout be a class or code part of game. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if it is a class will it have full access to game the inverse ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>will it be global or will game be ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>16-test cases for swap&amp;match</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>swap&amp;match the corners</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>swap&amp;match the corners with matches</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>vertically</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>horizontally</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>vertically &amp; horizontally</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>swap&amp;match in the midle w&amp;w/o matches</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>vertically</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>horizontally</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>vertically &amp; horizontally</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1 2 3 4 5 1 2 3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4 5 1 2 3 4 5 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2 3 4 5 1 2 3 4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>5 1 2 3 4 5 1 2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3 4 5 1 2 3 4 5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1 2 3 4 5 1 2 3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4 5 1 2 3 4 5 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2 3 4 5 1 2 3 4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1 2 3 4 5 3 2 3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4 5 1 2 3 4 3 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2 3 4 5 5 5 3 4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>5 1 2 3 4 <text:s text:c="2"/>1 2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3 4 5 1 2 3 4 5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1 2 3 4 5 1 2 3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4 5 1 2 3 4 5 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2 3 4 5 1 2 3 4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="121" calcext:value-type="float">
      <text:p>121</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="212" calcext:value-type="float">
      <text:p>212</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="21" calcext:value-type="float">
      <text:p>21</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="21122" calcext:value-type="float">
      <text:p>21122</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="12314" calcext:value-type="float">
      <text:p>12314</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="1213" calcext:value-type="float">
      <text:p>1213</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="1134" calcext:value-type="float">
      <text:p>1134</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="3" calcext:value-type="float">
      <text:p>3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="121" calcext:value-type="float">
      <text:p>121</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>232 (1)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="343" calcext:value-type="float">
      <text:p>343</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1211 (1)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="2322" calcext:value-type="float">
      <text:p>2322</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>non displaced ones-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>waiting for swap</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>waiting for destruction, from moved tiles</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>waiting for free room, due to the desctruction</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>involved in movement-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>checking for matches</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if found destruction issued</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>waiting for destruction from moved tiles, using non-displaced tiles</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>waiting for free room, due to the desctruction</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4,3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4,3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4,2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>5,0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>5,2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>5,3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3,0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>6,0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4,1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>5,5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>0,4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2,5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4,4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4,4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4,2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>5,0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>5,2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>5,?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1,3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3,2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>5,1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3,2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3,4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2,5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>4,4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3,6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1,6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Board::Behavior_Swapping</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Board::Behavior_InTransition</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Board::Behavior_Stable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tile s to destory</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tiles stable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Board::Behavior_SwappingBack</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19-clean coding</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.1- going from one scale ot another, from loc to rectangle, should generate a warning or an error.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>so that we are forced to consciously manipulate the level we are handling. going from values from one scale to another </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>should be careful.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pay attention to warning C4309: truncation of constant value. assigning 0xffffff to char may not be what we want. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>solutions : seperate usage or combination of the two following ways:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.1.1-catching warnings</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>warning C4365: &apos;=&apos; : conversion from &apos;uint&apos; to &apos;sint32&apos;, signed/unsigned mismatch</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>warning C4245: &apos;argument&apos; : conversion from &apos;int&apos; to &apos;uint&apos;, signed/unsigned mismatch</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.1.2-using data structure/class where the assignment/conversion operator is not defined from one type to the </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>other: Pointu8 to Pointu32.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void Board::OnClick(uint32 x, uint32 y) is better than</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void Board::OnClick(int x, int y). because i know that (1) x,y are bigger than those in hb::Pointu8 (2) x,y can go to hb::Pointu32 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void IndividualScore::AddScore(char *s,hb::Pointu32 sp) is better than</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void IndividualScore::AddScore(char *s,int x, int y). because i know that sp should receive uint32 and not uint8 values.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>glutInitWindowSize (</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>i am controling the conversion. it was a warning issued at level all</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>static_cast&lt;int&gt;(windowRectangle.r)-static_cast&lt;int&gt;(windowRectangle.l),</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>static_cast&lt;int&gt;(windowRectangle.t)-static_cast&lt;int&gt;(windowRectangle.b)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.2-after compiling to fix errors, recompile the code with all warnings activated to detect probable errors </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.3-it is enjoyable to code when:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-you analyze correctly, give yoursefl time, and then discover cases you didn&apos;t supect existed. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>your glad of yourself. this indicates that analysis and the </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>time it takes is not a waste. and because these are one more bugs to deal with during the first tests.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-you discover that the code behaves exactly the way you have expected it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-you just code, with only very little debugging to do.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="19.3" calcext:value-type="float">
      <text:p>19.3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>coding is a nightmare when you code a little and debug all the time crashes and incoherences. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>just to discover that you haven&apos;t given yourself time to think</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>about the proper desing, or forgot to set all fields in some data structure.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="19.4" calcext:value-type="float">
      <text:p>19.4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.4.1-write the pseudo code. with the big picture in the mind. while enumerating all the cases</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.4.2-enumerate all the fields</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>activeobjects.next;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>activeobjects.prev;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>activeobjects.next.prev;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>activeobjects.prev.next;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.4.3-enumatate all fields and see how they should be modified for each new function.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct.a;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct.b;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.4.4-a new field in a struct should be evaluated how it modified in every function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct.a;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct.b;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="19.5" calcext:value-type="float">
      <text:p>19.5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>figuring out the input and the result (the ouptut) of the container, then think out the input and output of the contained.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>figure out the container and its input and output, before tackling the details</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>example:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>figure out how and whrer data for an Encouragement class will be and how will be accessed and processed</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>before getting down to the sprite.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this way of working is better because it helps setting the boundaries of objects. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I ended up having this sprite constructor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>instead of </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Sprite * sprite=new(stAnim*, pointsofrectangleitanimates);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Sprite * sprite=new(pointsofrectangleitanimates,texturename.c_str(), animationfile);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in the first version, loading the animation is the responsibility of the container !!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in the second version, loading the animation is the responsibility of the sprite.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.6 figuring out crashes:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.6.1- </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>read the call stack and figure out WHY each function is calling the other, and WHAT each function is doing and see </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how is that RELEVANT and RELATED to the application.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.6.2- </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>an object&apos;s list elements are discovered to have been fred at destruction time when the game is ending. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>trick at 19.6.1 helped a lot. a big call stack with scoped_ptr and std::list functions being called.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I got to better understand the functions </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>here I discovered that scoped_ptr::swap is what to use for copying and not scoped_ptr::reset</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.6.3- </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>write the compiler-error-reported code in one function/bloc and see why it is erroneous.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a list element seems to not have been ever allocated.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.7 -step by step to include big changes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I had to derive all classes from Sprite. which will encapsulate functionalities for graphics displays.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>instead of each class Board, TimeOut, ... having the code for graphics displays.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>classes would inheret from two classes Object and Sprite. and i had never done that </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Created a TimeCounter2, which is based on TimeCounter, made sure it worked</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>So created Sprite, based on Sprite</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>removed TimeCounter2 graphic capabilities and exlusively used those built in a member of it object of Sprite </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>then derived TimeCounter2 from Sprite and removed the Sprite member.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>19.8 class AnimatedSpriteNcrg : public AnimatedSprite</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>AnimatedSpriteNcrg::Draw reusing AnimatedSprite::Draw reduces errors:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-different errors in similar functions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-one function fixed for a bug and not the other.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>20-properties of the code</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>extensible ? called also scalable in &quot;coding interviews&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>maintenable ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="20.1" calcext:value-type="float">
      <text:p>20.1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>GlobalObject is used instead of providing a function in game to wrap the fields function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>GlobalObject is used instead of giving access to game.fields;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>GlobalObject is also useful for any object in the system.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-21" calcext:value-type="float">
      <text:p>-21</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when does notick happen?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>FactoryCreateObject?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="21.1" calcext:value-type="float">
      <text:p>21.1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>SwitchRootContext.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>popall</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pushback</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>create, via FactoryCreateObject, an unnamed object when passed a classid. it will be deleted on pop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>insertbefore active tail.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in the list of inactive contexts, the last set of contexts that were last ticking are delimited by MASTERs</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-22" calcext:value-type="float">
      <text:p>-22</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>load the graphics of the game</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>interaction with the difficulty menu.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>menu dissmissed</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>countdown</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>game is playable.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>time out</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>feedback</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>show scores</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>restart</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="23" calcext:value-type="float">
      <text:p>23</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the following function should ideally run pops or pushback in the order they were registered </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void ObjectsManager::RunDelayedFunctions()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(int i=0; i&lt;NbrOfPopsToRun; ++i)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>PopsToRun[i].*pf(PopsToRun[i].arg1,true);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Pop(PopsToRun[i].arg,true);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Pop(PopsArgs[i],true);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(int i=0; i&lt;NbrOfPushBacksToRun; ++i)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Push(PopsArgs[i],true);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-23.1" calcext:value-type="float">
      <text:p>-23.1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>game::WhenPushed()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the code in this function can be removed by using DelayedPushes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use DelayedPushes to make it popular</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="23.2" calcext:value-type="float">
      <text:p>23.2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Score::WhenDeactivated()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the code in this function is necessary and can&apos;t go anywhere else or delayed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="23.3" calcext:value-type="float">
      <text:p>23.3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ObjectsManager::GetInstance().PushBack(CLASSID_game,true);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>game is constructed and pushed immediately</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>game constructor should not contain objects pushed immediately. they will be at the head of the list, so without a master object.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>(removal, desactivation,... are done starting from the master)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ObjectsManager</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="23.4" calcext:value-type="float">
      <text:p>23.4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>delayed push/pop are mandatory when pushing a master</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the list will end up with the new master pushed ....????? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Q:read the push/pop function and see how the list will end up.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="23.5" calcext:value-type="float">
      <text:p>23.5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct DelayedFunctionInfo</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>enum</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>e_NumberOfDelayedFunctionsToRun=4, //at a moment there is board, score, timer and intro waiting to be pushed</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="9"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this value acts as a first shield against objects being pushed indifinitely by mistake</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="10"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>23.6-ObjectsManager::GetInstance()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>can not update the list when issued by an element from the list </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>problematic updates of the list are: add a master. remove the current master or current object (this).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="24" calcext:value-type="float">
      <text:p>24</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>memory management in </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>boost</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>books</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ubiengines</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>internet</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>make sure the new[] and delete[] calls are correct.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>make sure the overloaded new[] and delete[] calls are correct. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>my overlaoded delete[] uses and address different from the one new[] returns</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>either new[] returns incorrect. or called wrongly</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>or delete[] receives incorrect.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="24.1" calcext:value-type="float">
      <text:p>24.1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how to test </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1&gt;code\TexturesManager.cpp(21): warning C4291: &apos;void *operator new[](size_t,const char *,int)&apos; : no matching operator delete found; memory will not be freed if initialization throws an exception</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1&gt; <text:s text:c="9"/>c:\data2\code\c\king\thethreestones1401161557\code\MemTracker.h(17) : see declaration of &apos;operator new[]&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>25 animation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>two kinds of sprites in the game</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>regular and animated</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>animated is a regular with animation structure + rectangle defined to be independent from any other rectangle in the game.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ObjectsRectangles.h holds in one spot all the rectangles which positions depend on each other.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>animated sprites&apos; rectangles do not depend on other rectangles. this is why the rectangle is defined as part of the xml data.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="30" calcext:value-type="float">
      <text:p>30</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;&gt; class scoped_array&lt;unsigned int&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>typedef unsigned int T;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>_hbPart1oftheclass_;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>/* implicit conversion to &quot;bool&quot;*/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;boost/smart_ptr/detail/operator_bool.hpp&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>_hbPart2oftheclass_;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>i am defining _hbPart1oftheclass_ and _hbPart2oftheclass_ just because i don&apos;t want to rewrite the whole code from the </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>principale class template.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Q:Why &quot;#include &lt;boost/smart_ptr/detail/operator_bool.hpp&gt;&quot; is not part of the macro ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>30.1.memory management</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>---------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>boost::scoped_array&lt;TileTex&gt; tiles;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#define new new(__FILE__,__LINE__)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tiles.reset(new TileTex [e_RowSize*e_ColumnSize]);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the above code uses the smart pointer &apos;tiles&apos; so mem will be deallocated when it is destructed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the allocated mem is also tracked my the mem tracker, so it will be reported at the end of the game if for whatever reason it is not deallocated.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>30.2.memory management issue</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>---------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Encouragement freeing crashes. it might be because it is viewed an array of Graphic elements at desctruction is not viewed as such at allocation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>30.3.memory management</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>---------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in each array row in allocations, the elements are just not used to store mem info. only the next elements are.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>could need changing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct lALLOC_INFO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>+---NULL</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>lALLOC_INFO * next -------------+</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct lALLOC_INFO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>+---struct lALLOC_INFO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>+---struct lALLOC_INFO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>lALLOC_INFO * next ---------+ <text:s text:c="6"/>long address;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>|</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>long address;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>+---NULL</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct lALLOC_INFO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>long size;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>|</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>long size;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>|</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>lALLOC_INFO * next ---------+ <text:s text:c="6"/>char file[FILENAMELEN+1];</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>|</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>char file[FILENAMELEN+1];</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>|</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>| </text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>long line;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>|</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>long line;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>|</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>|</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>lALLOC_INFO * next;-------------+</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>lALLOC_INFO * next;---------+</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>|</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>+---struct lALLOC_INFO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="9"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>long address;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="11"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="9"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>long size;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="11"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="9"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>char file[FILENAMELEN+1];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="11"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="9"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>long line;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="11"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="9"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>lALLOC_INFO * next;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="11"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-30.4" calcext:value-type="float">
      <text:p>-30.4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>explain when my overloaded new operator is called.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>explain why using ::operator new[] does not create a infinite loop ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>why new and not malloc ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void * operator new[](size_t size, char *filename, int line)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void *ptr = //(void *)malloc(size);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>::operator new[](size);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>AddTrack((long)ptr, size,filename, line);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb::AddTrack((long)ptr, size,filename, line);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return(ptr);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="30.6" calcext:value-type="float">
      <text:p>30.6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>i overload the global operator new, operator delete, array new, or array delete</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>to detect memory leaks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for code that uses the standard global operator new as used by Deque, no checking is done at their destruction when the overload (my version) global operator delete is called.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>it is not important that i assert if an address is not found in the array at its delete.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>but it important that any registered address is deleted.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I take care that my allocation are registered by invoking the overloaded operator new and array new.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="30.5" calcext:value-type="float">
      <text:p>30.5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Not all arrays need to be pointed to by scoped_array, which calls delete [] at destruction</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this is required for classes defining a destructor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for buit-in type arrays and classes without destructor, scoped_ptr should be used.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>or scoped_array needs to be specialized and its destructor is redefined to use deleteo&lt;&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>30.7 error</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>while overloadeding allocator, i was very influenced by the original code, and was trying to use the new keyword </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>using the syntax for the standard global new operator</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>|| (_Ptr = new [_Count * sizeof (_Ty)]) == 0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>|| (_Ptr = new (_Count * sizeof (_Ty))) == 0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>instead of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>|| (_Ptr = new _Ty[_Count]) == 0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>30.8 allocator</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-deriving hb::allocator from std::allocator needed rebind, and hb::allocator constructors</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-container elements need default constructor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-namespace hb</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>typedef std::deque&lt;Text,hb::allocator&lt;Text&gt; &gt; deque;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>yields hb::deque</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="30.9" calcext:value-type="float">
      <text:p>30.9</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>copy contructor of Sprite::Sprite(const Sprite &amp;s) was necessary because is holds a scoped_ptr, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>which is a non-copiable class (assignment and copy constructor are private)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="30.1" calcext:value-type="float">
      <text:p>30.1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>watch out : use scoped_ptr or scoped_array for pointer to objects only.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>do not use UNECESSARY them for objects and containers that are going to be destroyed anyway when their encompaing object</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>is destructed:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>boost::scoped_ptr&lt;std::list&lt;Sprite&gt; &gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_listofsprites; <text:s/>!!!!!!!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="17"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_listofsprites.reset(new std::list&lt;Sprite&gt; ); <text:s/>!!!!!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>boost::scoped_ptr&lt;std::vector&lt;stKeyFrame,hb::allocator&lt;stKeyFrame&gt; &gt; &gt; m_keyFrameList; <text:s/>!!!!!!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_keyFrameList.reset(new std::vector&lt;stKeyFrame,hb::allocator&lt;stKeyFrame&gt; &gt; ); !!!!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_keyFrameList-&gt;push_back(stKeyFrame(offset)); !!!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="30.11" calcext:value-type="float">
      <text:p>30.11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::list&lt;Sprite *, hb::allocator&lt;Sprite *&gt; &gt;</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_listofsprites;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>is more efficient than</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::list&lt;Sprite , hb::allocator&lt;Sprite &gt; &gt;</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_listofsprites;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>because the earlier there is no copy constructor involved;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use of list of pointers to avoid the swap of objects which members points to dead objects when copy constructor uses scoped_ptr::swap</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>but needs explicit call of list::clear</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>better use a smart-ptr holding the list</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>compiling errors</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-----------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1&gt;c:\data2\code\c\the3stones0\bezier\the3stones\code\mem\allocator.h(24): error C2955: &apos;hb::allocator&apos; : use of class template requires template argument list</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1&gt; <text:s text:c="9"/>c:\data2\code\c\the3stones0\bezier\the3stones\code\mem\allocator.h(24) : see declaration of &apos;hb::allocator&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1&gt; <text:s text:c="9"/>c:\data2\code\c\the3stones0\bezier\the3stones\code\mem\allocator.h(49) : see reference to class template instantiation &apos;hb::allocator&lt;_Ty&gt;&apos; being compiled</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>solution include in this order:include &lt;vector&gt; before &lt;allocator.h&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1&gt;c:\data2\code\c\the3stones0\bezier\the3stones\code\mem\memtracker.h(9): error C2365: &apos;operator new&apos; : redefinition; previous definition was &apos;function&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1&gt;c:\data2\code\c\the3stones0\bezier\the3stones\code\mem\memtracker.h(9): error C2078: too many initializers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1&gt;c:\data2\code\c\the3stones0\bezier\the3stones\code\mem\memtracker.h(9): error C2440: &apos;initializing&apos; : cannot convert from &apos;int&apos; to &apos;void *&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>solution include in this order:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#include &quot;../mem/MemTracker.h&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#include &quot;../mem/allocator.h&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>test mem allocation in xml</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>check whether vector&lt;object *&gt; deletes object at destruction</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>make sure scoped_ptr&lt;vector&lt;.... works fine</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Things i forgot:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>operator=() should be a non-static class member !</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>error:contains errors i did</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>300-todo: </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>301-remove assert</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>302-common.h to include MemNew.h</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-303" calcext:value-type="float">
      <text:p>-303</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use smart ptr in this macro</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#define ImplementCreator(classname)</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>\</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Object * classname##_Creator()</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>\</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>\</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="11"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return new classname;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>\</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-304" calcext:value-type="float">
      <text:p>-304</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>study the utility of the followinf and give a small example of its usage.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class _Other&gt; struct allocator ::rebind</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>why the constructors are essential ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class _Ty, class _Alloc&gt; class _Vector_val</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>_Vector_val(_Alloc _Al = _Alloc())</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>: _Alval(_Al)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>// construct allocator from _Al</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>typename _Alloc::template rebind&lt;_Container_proxy&gt;::other </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>_Alproxy(_Alval);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-305" calcext:value-type="float">
      <text:p>-305</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>explain the following code TimeOut::Draw used to dim the board: why is alpha used ? explain how the dim happens ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>glEnable(GL_BLEND); </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA );</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>glColor4f (0.0, 0.0, 0.0,.25);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-306" calcext:value-type="float">
      <text:p>-306</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Sprite(stAnim * _a, hb::Points32 <text:s/>_r[]);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>make sure that the array is passed just by address. that the whole array is not copied.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>who to pass the size of _r</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>307-use a scoped_ptr of list of Sprites in Encouragement</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>308-how to read negative values from xml file ? consider using another way of reading data. look into using C++ Timesaving Techniques for Dummies/xml</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-309" calcext:value-type="float">
      <text:p>-309</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>explain this code in ObjectsManager</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void operator()()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>(mo-&gt;*mf)(marg1,marg2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-310" calcext:value-type="float">
      <text:p>-310</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if A and B are two mutually exclusive preprocessor directives, what to specify for B in the following code ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#ifdef A</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#elif def B ???</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#endif</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>instead of </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#ifdef A</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#else</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#ifdef B</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#endif B</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#endif A</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-311" calcext:value-type="float">
      <text:p>-311</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I am confused on the benefit of a scoped_ptr member. the following question shows the confusion:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how is a scoped_ptr member of encouragement class beneficial when an exception happens in a encouragement function ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>explain what happens then ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>is the scoped_ptr destructor called then even when the encouragement destructor is not?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ANSWER:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1-typically the scoped_ptr is useful when declared and used in a bloc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if an exception is thrown in the middle, even by a called function, the subsequent is not run (which would leak memory if</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>traditional mem alloc was used). but the destructor of scoped_ptr is called as it variable goes our of scope.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2-when scoped_ptr data is member of encouragement class, it will be destroyed, and the mem it points to fred, when </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the encouragement destructor, default or written one, is called.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>so it all depends on whether the Encouragement destructor is being called or not.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the big benefit of scoped_ptr is in not having to write the Encouragement destructor </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-312" calcext:value-type="float">
      <text:p>-312</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>improve design to derive all objects from Sprite</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>have Sprite and AnimatedSprite</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-313" calcext:value-type="float">
      <text:p>-313</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>encouragment holds one sprite</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-314" calcext:value-type="float">
      <text:p>-314</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use unordered_map&apos;s hash function for mem tracker.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-315" calcext:value-type="float">
      <text:p>-315</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use unordered_map to map texture names to ids</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-316" calcext:value-type="float">
      <text:p>-316</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct ConfirmEncouragement</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#define max_size 4 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//const int max_size;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Text * a[max_size];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>isn&apos;t const int suffiscient ? compiler does not accept it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3171-why is destruction done in reverse order ? what&apos;s the benefit over the normal traversal ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>IndividualScore::~IndividualScore()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_texts.clear();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(hb::deque::reverse_iterator it=m_texts.rbegin(), end=m_texts.rend();it!=end; )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(hb::deque::reverse_iterator rit=m_texts.rbegin();rit!=m_texts.rend(); )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rit=std::reverse_iterator&lt;hb::deque::iterator&gt;(m_texts.erase((rit+1).base()));</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>317-work is needed to improve the reverse_iterator loop and avoid using </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rit!=m_scores.rend()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in the condition loop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>and rather use </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rit!=end. which currently crashes. why ? does the rend() changes ?!!! and end becomes invalid</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>IndividualScore::~IndividualScore()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb::deque::reverse_iterator rit1,rit2;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Text a,b;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(hb::deque::reverse_iterator it=m_scores.rbegin(), end=m_scores.rend();it!=end; )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(hb::deque::reverse_iterator rit=m_scores.rbegin();rit!=m_scores.rend(); )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rit1=m_scores.rend();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a= (*rit1);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb::deque::iterator it=m_scores.erase((rit+1).base());</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rit=std::reverse_iterator&lt;hb::deque::iterator&gt;(it);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(rit==m_scores.rbegin())</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int y=9;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rit2=m_scores.rend();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b= (*rit2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>318-work is needed to undersand why the code crashes at the line a= (*rit1);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>(may be read effective STL, http://stackoverflow.com/questions/1830158/how-to-call-erase-with-a-reverse-iterator, etc ...)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>IndividualScore::~IndividualScore()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb::deque::reverse_iterator rit1,rit2;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Text a,b;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(hb::deque::reverse_iterator rit=m_scores.rbegin();rit!=m_scores.rend(); )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rit1=m_scores.rend();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a= (*rit1);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb::deque::iterator it=m_scores.erase((rit+1).base());</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rit=std::reverse_iterator&lt;hb::deque::iterator&gt;(it);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(rit==m_scores.rbegin())</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int y=9;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rit2=m_scores.rend();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b= (*rit2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-319" calcext:value-type="float">
      <text:p>-319</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>why is IndividualScore::m_scores a deque ? wouldn&apos;t it as a list be equally good ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>320-todo:what is the difference between r and point ? isn&apos;t r redundant with point there ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void Tile::Behavior_WaitingToGoIntoBoard()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>CONSTRUCT_BEHAVIOR_BEGIN</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//all disappeared tiles in a column have the same rectangle, waiting to get into the board</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>r = Tile::board-&gt;positions[loc.x][Board::e_RowSize].r;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>loc=Tile::board-&gt;positions[loc.x][Board::e_RowSize].point;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>320-todo-response</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Tile::r represent the tile&apos;s location in pixels. this rectangle could be any where in the displaye area. not only in the board.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Tile::point is the square information. using the point in a formula, r is gotten.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>321-todo-queue ? why is m_texts not a list/vector ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class IndividualScore</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb::deque</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_texts; //watch out:no cc for Text</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-322" calcext:value-type="float">
      <text:p>-322</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>&lt;animatedsprite</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>points=&quot;0 50 100 50 100 350 0 350&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>texture=&quot;Encrg-W.tga&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>animation=&quot;data/anim1.xml&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>/&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Load the texture entry through TextureManager</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>TextureManager will have functions that load a single texture.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if more than one game element use the same texture, it is loaded by the first call and gets used by the second.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-323" calcext:value-type="float">
      <text:p>-323</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>improve TextureManager constructor.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use exception or another loading error management instead of just returning false; and then a crash when textures are being loaded.(Tile)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>324-animation exercise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>rotate Wow instead of translating its vertices.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>325-placement new spits an error in vs2010:it doesn&apos;t like a variable next to the new keyword but expects a data type.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void IndividualScore::Add(hb::Pointu32 sp)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>sp=sp+hb::Pointu32(Square::e_Height&gt;&gt;2,Square::e_Height&gt;&gt;1);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(hb::deque::iterator it=m_texts.begin();it!=m_texts.end(); ++it)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(it-&gt;end)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>/*</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Text *pUnused = &amp;(*it);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>new (pUnused) Text(IndividualScore::score_str,sp);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>placement new spits an error in vs2010:it doesn&apos;t like a variable next to the new keyword but expects a data type.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>*/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>it-&gt;Reset(IndividualScore::ms_score_str,sp);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_texts.push_back(Text(IndividualScore::ms_score_str,sp,m_gs));</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//printf(&quot;nbr of indiv. scores == %d\n&quot;,m_texts.size());</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="float" office:value="-326" calcext:value-type="float">
      <text:p>-326</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void GlobalScore::Update()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ConfirmEncouragement confirmNcrg;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if (auto encourg=dynamic_cast&lt;Encouragement*&gt;(ObjectsManager::GetInstance().GetGlobalObject(CLASSID_Encouragement)))</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int i=0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(auto rit=listOfTimesNcrgd.rbegin(), end=listOfTimesNcrgd.rend(); rit!=end; ++i,++rit)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#define threshold_wow 4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>#define threshold_good 2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(i== threshold_wow-1)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//if(std::distance(listOfTimesNcrgd.rbegin(),rit)==(threshold-1)) TODO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>clock_t diff=listOfTimesNcrgd.rbegin()-&gt;time - rit-&gt;time;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="17"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//TODO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//if( diff&lt; 1050) sometimes this condition is true. other times it is not !!! </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="17"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//how come the frame rate is not constant ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="17"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if( diff&lt; 1400)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="17"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Release</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-Derive from Sprite and Object</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-remove non copiable means in classes derived from Object</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-remove ObjectsRectangles and only keep ObjectsRectangles2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-what is void Anim::operator=(Anim* p) for ? it is not used !!!!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-how much memory does the game use ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-review score,tile, board,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-review memtracker </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-documentation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-review variable naming conventions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2Learn.1:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>STD::list</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::list is a list of nodes. each node contains essentially three fields _Next, _Prev, _Myval</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>_Myval is of type the element&apos;s data type. see below :</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>_Next</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>0x02e9cdb8 {_Next=0x02e9e070 _Prev=0x048be2a0 _Myval=0x048be1c8 }</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::_List_nod&lt;Sprite *,hb::allocator&lt;Sprite *&gt; &gt;::_Node *</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>_Prev</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>0x02e97db8 {_Next=0x02e97db8 _Prev=0x02e97db8 _Myval=0xcdcdcdcd }</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::_List_nod&lt;Sprite *,hb::allocator&lt;Sprite *&gt; &gt;::_Node *</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>_Myval</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>0x048bd100 {m_r=0x048bd100 m_offset=0x048bd120 m_texObj=0x00000008 ...}</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Sprite *</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2Learn.2:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::list::clear() destroys the nodes of the list in turn. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::_List_nod&lt;Sprite,hb::allocator&lt;Sprite&gt; &gt;::_Node does not define a custom destructor (which would be made so that it calls </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the destructor of _Myval, whether it is an object or a pointer)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::_List_nod&lt;Sprite,hb::allocator&lt;Sprite&gt; &gt;::_Node uses instead the default destructor. which calls the destructor of _Myval</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when it is an object only.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>So to ensure destruction of _Myval as a pointer, i should free the memory pointed to by _Myval manually, before making a call</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>to std::list::clear()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Here is the code </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Sprite * g;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(auto it=m_listofsprites.begin(); it!=m_listofsprites.end(); ++it)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>g=*it;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>delete g;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_listofsprites.clear();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2Learn.3:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>*it for an std::list::iterator is programmed so it returns _Myval. this makes the following operation possible:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for(auto it=m_listofsprites.begin(); it!=m_listofsprites.end(); ++it)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>delete *it;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="19"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>*it could have been programmed to return sth else.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ACTIVE,board, tiles, score, timecounter, INACTIVE,menu pause, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ACTIVE,show scores,restart,INACTIVE,feedback,board, tiles, score, timecounter, menu pause, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>still to do:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>at the end of the game, pop objects pushed</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>done</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-text &quot;points&quot; in the score window</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-text &quot;time&quot; in the timecounter</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>todo</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-increment of the global score.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-timecounter is a count down</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-exiting. may be use the windows way.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-countdown animation</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-shaded board</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>multitexturing, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="17"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-countdown alpha color-key</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>++ <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>or countdown image is of the size of the board, with alpha! or something</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-timeout</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>shaded board</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>last score vs highest score</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="18"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>replay ? yes quit</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-review code.cpp, assert(TextInit),</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="20"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-anim of tiles at setting, curve or trick(place each tile at a specific pos)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-glow of tiles</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-review destruction of the game. see if everything is undone.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-for maintenance :review and make coherent enum naming. e_type1,e_FLAG_...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-reduce the inclusion of header files. use as much as possible things like : </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class TimeCounter;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-check that for each new there is a corresponding delete</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-add a mem allocator. to make sure no leak is there and to showcase knowledge</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-how to write #ifdef DEBUGMODE &amp;&amp; TESTING</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-DelayedFunctionsToRun see 23</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-how to modulate between texture and a color</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>grep -e &apos;board.cpp&apos; -e &apos;tile.cpp&apos; -e &apos;rectangle.cpp&apos; -e &apos;IndividualScore.cpp&apos; -e &apos;code.cpp&apos; -e &apos;boardtest.cpp&apos; -e &apos;board.h&apos; -e &apos;tile.h&apos; -e &apos;rectangle.h&apos; -e &apos;IndividualScore.h&apos; -e &apos;code.h&apos; -e &apos;boardtest.h&apos; <text:s text:c="2"/>/cygdrive/c/data2/code/c/king/draw1401050937/output.txt &gt; /cygdrive/c/data2/code/c/king/draw1401050937/output2.txt</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="9">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>abdoterbaoui@gmail.com</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hello Aaron,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Last week, I estimated that I would submit the project today.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Unfortunately, I still need to work on it for two more days.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I will submit it on Wednesday.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Please tell me if this delay may jeopardize my application.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Thank you and Sorry</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hassan Boulmarouf</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>is a problem to you <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I would be grateful to know the impact of this delay on </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hello Emilie,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I have been working recently on a little game. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>And I thought Game Loft might be interested in taking a look at a sample of my code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>So, please find enclosed the source code of the game.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>The name of the game is &quot;TheThreeStones&quot;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-To play it, decompress the archive to find the executable in TheThreeStones\EXE</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The source code is found in TheThreeStones\code</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The file TheThreeStones\Readme-Overview.txt gives a brief overview of the main elements in the code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The file TheThreeStones\Readme-Technical_features.txt gives the three main important technical features used to implement the game.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Best Regards,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hassan Boulmarouf</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hello Rebecca,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Please find enclosed the source code for the test.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>The name of the game is &quot;TheThreeStones&quot;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-To play it, decompress the archive to find the executable in TheThreeStones\EXE</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The source code is found in TheThreeStones\code</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The file TheThreeStones\Readme.txt gives a brief overview of the main elements in the code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Best Regards,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hassan Boulmarouf</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hello Rebecca,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I have improved the test game a little bit.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>And I thought that King might be interested in considering this version over the previous one.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>So, please find the attached improved version.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-To play it, decompress the archive to find the executable in &quot;TheThreeStones\EXE&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The source code is found in &quot;TheThreeStones\code&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The file &quot;TheThreeStones\Readme-Overview.txt&quot; gives a brief overview of the main elements in the code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The file &quot;TheThreeStones\Readme-Technical_features.txt&quot; gives the most important technical features used in the game.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Best Regards,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hassan Boulmarouf</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hello </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I have been working recently on a little game. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>And I thought Rockstar might be interested in taking a look at a sample of my code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>So, please find enclosed the source code of the game. The name of the game is &quot;TheThreeStones&quot;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-To play it, decompress the archive to find the executable in TheThreeStones\EXE</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The source code is found in TheThreeStones\code</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The file TheThreeStones\Readme-Overview.txt gives a brief overview of the main elements in the code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-The file TheThreeStones\Readme-Technical_features.txt gives the three main important technical features used to implement the game.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Best Regards,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="22"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hassan Boulmarouf</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="21"/>
    </table:table-row>
   </table:table>
   <table:table table:name="pikpok" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>AI: path finding, A*, Heuristic</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>graphics:opengl graphics</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>gameplay system</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>networking</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>animation</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:named-expressions>
    <table:named-range table:name="python--ex18.py-idio.html-3" table:base-cell-address="$python.$B$73" table:cell-range-address="$python.$B$75"/>
    <table:named-range table:name="python--ex18.py-idio.html-4" table:base-cell-address="$python.$B$74" table:cell-range-address="$python.$B$76"/>
    <table:named-range table:name="python--ex24.py-idio.html-22" table:base-cell-address="$python.$B$89" table:cell-range-address="$python.$B$95"/>
    <table:named-range table:name="python--ex24.py-idio.html-23" table:base-cell-address="$python.$B$90" table:cell-range-address="$python.$B$96"/>
    <table:named-range table:name="python--ex24.py-idio.html-24" table:base-cell-address="$python.$B$91" table:cell-range-address="$python.$B$97"/>
    <table:named-range table:name="python--ex24.py-idio.html-25" table:base-cell-address="$python.$B$92" table:cell-range-address="$python.$B$98"/>
    <table:named-range table:name="python--ex32.py-idio.html-19" table:base-cell-address="$python.$B$136" table:cell-range-address="$python.$B$153"/>
    <table:named-range table:name="python--ex32.py-idio.html-2" table:base-cell-address="$python.$B$163" table:cell-range-address="$python.$B$256"/>
    <table:named-range table:name="python--ex32.py-idio.html-23" table:base-cell-address="$python.$B$138" table:cell-range-address="$python.$B$155"/>
    <table:named-range table:name="python--ex32.py-idio.html-24" table:base-cell-address="$python.$B$139" table:cell-range-address="$python.$B$156"/>
    <table:named-range table:name="python--ex32.py-idio.html-25" table:base-cell-address="$python.$B$140" table:cell-range-address="$python.$B$157"/>
    <table:named-range table:name="python--ex32.py-idio.html-3" table:base-cell-address="$python.$B$164" table:cell-range-address="$python.$B$256"/>
    <table:named-range table:name="python--ex32.py-idio.html-5" table:base-cell-address="$python.$B$165" table:cell-range-address="$python.$B$256"/>
    <table:named-range table:name="python--ex32.py-idio.html-6" table:base-cell-address="$python.$B$166" table:cell-range-address="$python.$B$256"/>
    <table:named-range table:name="python--ex32.py-idio.html-7" table:base-cell-address="$python.$B$167" table:cell-range-address="$python.$B$257"/>
    <table:named-range table:name="python--ex33.py-idio.html-10" table:base-cell-address="$python.$B$189" table:cell-range-address="$python.$B$262"/>
    <table:named-range table:name="python--ex33.py-idio.html-5" table:base-cell-address="$python.$B$185" table:cell-range-address="$python.$B$260"/>
    <table:named-range table:name="python--ex33.py-idio.html-6" table:base-cell-address="$python.$B$186" table:cell-range-address="$python.$B$260"/>
    <table:named-range table:name="python--ex33.py-idio.html-8" table:base-cell-address="$python.$B$187" table:cell-range-address="$python.$B$261"/>
    <table:named-range table:name="python--ex33.py-idio.html-9" table:base-cell-address="$python.$B$188" table:cell-range-address="$python.$B$262"/>
    <table:named-range table:name="python--ex39.py-idio.html-49" table:base-cell-address="$python.$B$167" table:cell-range-address="$python.$B$208"/>
    <table:named-range table:name="python--ex39.py-idio.html-50" table:base-cell-address="$python.$B$168" table:cell-range-address="$python.$B$209"/>
    <table:named-range table:name="python--ex39.py-idio.html-57" table:base-cell-address="$python.$B$170" table:cell-range-address="$python.$B$211"/>
    <table:named-range table:name="python--ex39_pycon.py-idio-pycon-pyg.html-10" table:base-cell-address="$python.$B$165" table:cell-range-address="$python.$B$202"/>
    <table:named-range table:name="python--ex39_pycon.py-idio-pycon-pyg.html-2" table:base-cell-address="$python.$B$157" table:cell-range-address="$python.$B$198"/>
    <table:named-range table:name="python--ex39_pycon.py-idio-pycon-pyg.html-3" table:base-cell-address="$python.$B$158" table:cell-range-address="$python.$B$199"/>
    <table:named-range table:name="python--ex39_pycon.py-idio-pycon-pyg.html-4" table:base-cell-address="$python.$B$159" table:cell-range-address="$python.$B$200"/>
    <table:named-range table:name="python--ex39_pycon.py-idio-pycon-pyg.html-5" table:base-cell-address="$python.$B$160" table:cell-range-address="$python.$B$200"/>
    <table:named-range table:name="python--ex39_pycon.py-idio-pycon-pyg.html-6" table:base-cell-address="$python.$B$161" table:cell-range-address="$python.$B$200"/>
    <table:named-range table:name="python--ex39_pycon.py-idio-pycon-pyg.html-7" table:base-cell-address="$python.$B$162" table:cell-range-address="$python.$B$200"/>
    <table:named-range table:name="python--ex39_pycon.py-idio-pycon-pyg.html-8" table:base-cell-address="$python.$B$163" table:cell-range-address="$python.$B$200"/>
    <table:named-range table:name="python--ex39_pycon.py-idio-pycon-pyg.html-9" table:base-cell-address="$python.$B$164" table:cell-range-address="$python.$B$201"/>
    <table:named-range table:name="python--ex41.py-idio.html-46" table:base-cell-address="$python.$B$180" table:cell-range-address="$python.$B$181"/>
    <table:named-range table:name="python--ex44c.py-idio.html-10" table:base-cell-address="$python.$B$300" table:cell-range-address="$python.$B$300"/>
    <table:named-range table:name="python--ex44c.py-idio.html-11" table:base-cell-address="$python.$B$301" table:cell-range-address="$python.$B$301"/>
    <table:named-range table:name="python--ex44c.py-idio.html-13" table:base-cell-address="$python.$B$302" table:cell-range-address="$python.$B$302"/>
    <table:named-range table:name="python--ex44c.py-idio.html-14" table:base-cell-address="$python.$B$303" table:cell-range-address="$python.$B$303"/>
    <table:named-range table:name="python--ex44c.py-idio.html-16" table:base-cell-address="$python.$B$304" table:cell-range-address="$python.$B$304"/>
    <table:named-range table:name="python--ex44c.py-idio.html-17" table:base-cell-address="$python.$B$305" table:cell-range-address="$python.$B$305"/>
    <table:named-range table:name="python--ex44c.py-idio.html-3" table:base-cell-address="$python.$B$295" table:cell-range-address="$python.$B$295"/>
    <table:named-range table:name="python--ex44c.py-idio.html-4" table:base-cell-address="$python.$B$296" table:cell-range-address="$python.$B$296"/>
    <table:named-range table:name="python--ex44c.py-idio.html-6" table:base-cell-address="$python.$B$297" table:cell-range-address="$python.$B$297"/>
    <table:named-range table:name="python--ex44c.py-idio.html-8" table:base-cell-address="$python.$B$298" table:cell-range-address="$python.$B$298"/>
    <table:named-range table:name="python--ex44c.py-idio.html-9" table:base-cell-address="$python.$B$299" table:cell-range-address="$python.$B$299"/>
    <table:named-range table:name="python--hashmap.py-idio.html-2" table:base-cell-address="$python.$B$233" table:cell-range-address="$python.$B$276"/>
    <table:named-range table:name="python--hashmap.py-idio.html-3" table:base-cell-address="$python.$B$234" table:cell-range-address="$python.$B$277"/>
    <table:named-range table:name="python--hashmap.py-idio.html-4" table:base-cell-address="$python.$B$235" table:cell-range-address="$python.$B$278"/>
    <table:named-range table:name="python--hashmap.py-idio.html-5" table:base-cell-address="$python.$B$236" table:cell-range-address="$python.$B$279"/>
    <table:named-range table:name="python--hashmap.py-idio.html-6" table:base-cell-address="$python.$B$237" table:cell-range-address="$python.$B$280"/>
   </table:named-expressions>
  </office:spreadsheet>
 </office:body>
</office:document>