<?xml version="1.0" encoding="UTF-8"?>

<office:document xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:presentation="urn:oasis:names:tc:opendocument:xmlns:presentation:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:config="urn:oasis:names:tc:opendocument:xmlns:config:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:grddl="http://www.w3.org/2003/g/data-view#" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:drawooo="http://openoffice.org/2010/draw" xmlns:calcext="urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0" xmlns:loext="urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" xmlns:formx="urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0" xmlns:css3t="http://www.w3.org/TR/css3-text/" office:version="1.2" office:mimetype="application/vnd.oasis.opendocument.spreadsheet">
 <office:meta><meta:creation-date>2016-02-03T00:11:04.989869140</meta:creation-date><meta:editing-duration>P3DT17H46M17S</meta:editing-duration><meta:editing-cycles>704</meta:editing-cycles><meta:generator>LibreOffice/5.0.2.2$Linux_X86_64 LibreOffice_project/00m0$Build-2</meta:generator><dc:date>2016-03-17T10:28:46.272695766</dc:date><meta:document-statistic meta:table-count="29" meta:cell-count="3077" meta:object-count="0"/></office:meta>
 <office:settings>
  <config:config-item-set config:name="ooo:view-settings">
   <config:config-item config:name="VisibleAreaTop" config:type="int">0</config:config-item>
   <config:config-item config:name="VisibleAreaLeft" config:type="int">2257</config:config-item>
   <config:config-item config:name="VisibleAreaWidth" config:type="int">11289</config:config-item>
   <config:config-item config:name="VisibleAreaHeight" config:type="int">44783</config:config-item>
   <config:config-item-map-indexed config:name="Views">
    <config:config-item-map-entry>
     <config:config-item config:name="ViewId" config:type="string">view1</config:config-item>
     <config:config-item-map-named config:name="Tables">
      <config:config-item-map-entry config:name="C# faq">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="C++ faq">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">25</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">18</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille10">
       <config:config-item config:name="CursorPositionX" config:type="int">5</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">6</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille14">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">52</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">36</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille2">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">9</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille3">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">21</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">1</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille4">
       <config:config-item config:name="CursorPositionX" config:type="int">2</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">17</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">3</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Sheet1">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">614</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">23</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">2</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">595</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Sheet29">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="TCP IP">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">23</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">20</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="TDD BDD">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">15</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="books">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">1</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="c++ idioms">
       <config:config-item config:name="CursorPositionX" config:type="int">4</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">15</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="c++ ref">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">328</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">309</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="c++ ref update">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">54</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">48</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="code quality">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">3</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="embedded">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">23</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">2</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="gcc">
       <config:config-item config:name="CursorPositionX" config:type="int">4</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">26</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="interviews">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">82</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">27</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="ios">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">64</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">48</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="ios faq">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">220</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">192</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="ios faq2">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">42</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="links">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">5</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="multithreading">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">204</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">198</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="oodesign">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">6</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">21</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="optim">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">4</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="somecompanies">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">2</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="tester job description">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">88</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="time management">
       <config:config-item config:name="CursorPositionX" config:type="int">2</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">24</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">9</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
     </config:config-item-map-named>
     <config:config-item config:name="ActiveTable" config:type="string">interviews</config:config-item>
     <config:config-item config:name="HorizontalScrollbarWidth" config:type="int">1304</config:config-item>
     <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
     <config:config-item config:name="ZoomValue" config:type="int">100</config:config-item>
     <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
     <config:config-item config:name="ShowPageBreakPreview" config:type="boolean">false</config:config-item>
     <config:config-item config:name="ShowZeroValues" config:type="boolean">true</config:config-item>
     <config:config-item config:name="ShowNotes" config:type="boolean">true</config:config-item>
     <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
     <config:config-item config:name="GridColor" config:type="long">8637183</config:config-item>
     <config:config-item config:name="ShowPageBreaks" config:type="boolean">true</config:config-item>
     <config:config-item config:name="HasColumnRowHeaders" config:type="boolean">true</config:config-item>
     <config:config-item config:name="HasSheetTabs" config:type="boolean">true</config:config-item>
     <config:config-item config:name="IsOutlineSymbolsSet" config:type="boolean">true</config:config-item>
     <config:config-item config:name="IsValueHighlightingEnabled" config:type="boolean">false</config:config-item>
     <config:config-item config:name="IsSnapToRaster" config:type="boolean">false</config:config-item>
     <config:config-item config:name="RasterIsVisible" config:type="boolean">false</config:config-item>
     <config:config-item config:name="RasterResolutionX" config:type="int">1000</config:config-item>
     <config:config-item config:name="RasterResolutionY" config:type="int">1000</config:config-item>
     <config:config-item config:name="RasterSubdivisionX" config:type="int">1</config:config-item>
     <config:config-item config:name="RasterSubdivisionY" config:type="int">1</config:config-item>
     <config:config-item config:name="IsRasterAxisSynchronized" config:type="boolean">true</config:config-item>
    </config:config-item-map-entry>
   </config:config-item-map-indexed>
  </config:config-item-set>
  <config:config-item-set config:name="ooo:configuration-settings">
   <config:config-item config:name="SyntaxStringRef" config:type="short">9999</config:config-item>
   <config:config-item config:name="IsDocumentShared" config:type="boolean">false</config:config-item>
   <config:config-item config:name="LoadReadonly" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AllowPrintJobCancel" config:type="boolean">true</config:config-item>
   <config:config-item config:name="UpdateFromTemplate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsKernAsianPunctuation" config:type="boolean">false</config:config-item>
   <config:config-item config:name="EmbedFonts" config:type="boolean">false</config:config-item>
   <config:config-item config:name="IsSnapToRaster" config:type="boolean">false</config:config-item>
   <config:config-item config:name="RasterResolutionX" config:type="int">1000</config:config-item>
   <config:config-item config:name="RasterResolutionY" config:type="int">1000</config:config-item>
   <config:config-item config:name="HasSheetTabs" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsRasterAxisSynchronized" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowPageBreaks" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowNotes" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsOutlineSymbolsSet" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowZeroValues" config:type="boolean">true</config:config-item>
   <config:config-item config:name="SaveVersionOnClose" config:type="boolean">false</config:config-item>
   <config:config-item config:name="GridColor" config:type="long">8637183</config:config-item>
   <config:config-item config:name="RasterIsVisible" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrinterName" config:type="string">Generic Printer</config:config-item>
   <config:config-item-map-indexed config:name="ForbiddenCharacters">
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">US</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">fr</config:config-item>
     <config:config-item config:name="Country" config:type="string">FR</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">GB</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">CA</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">NZ</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
   </config:config-item-map-indexed>
   <config:config-item config:name="LinkUpdateMode" config:type="short">3</config:config-item>
   <config:config-item config:name="RasterSubdivisionX" config:type="int">1</config:config-item>
   <config:config-item config:name="HasColumnRowHeaders" config:type="boolean">true</config:config-item>
   <config:config-item config:name="RasterSubdivisionY" config:type="int">1</config:config-item>
   <config:config-item config:name="AutoCalculate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrinterSetup" config:type="base64Binary">jAH+/0dlbmVyaWMgUHJpbnRlcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU0dFTlBSVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAMAsgAAAAAAAAAEAAhSAAAEdAAASm9iRGF0YSAxCnByaW50ZXI9R2VuZXJpYyBQcmludGVyCm9yaWVudGF0aW9uPVBvcnRyYWl0CmNvcGllcz0xCm1hcmdpbmRhanVzdG1lbnQ9MCwwLDAsMApjb2xvcmRlcHRoPTI0CnBzbGV2ZWw9MApwZGZkZXZpY2U9MApjb2xvcmRldmljZT0wClBQRENvbnRleERhdGEKUGFnZVNpemU6QTQARHVwbGV4Ok5vbmUAABIAQ09NUEFUX0RVUExFWF9NT0RFCgBEVVBMRVhfT0ZG</config:config-item>
   <config:config-item config:name="ApplyUserData" config:type="boolean">true</config:config-item>
   <config:config-item config:name="CharacterCompressionType" config:type="short">0</config:config-item>
  </config:config-item-set>
 </office:settings>
 <office:scripts>
  <office:script script:language="ooo:Basic">
   <ooo:libraries xmlns:ooo="http://openoffice.org/2004/office" xmlns:xlink="http://www.w3.org/1999/xlink">
    <ooo:library-embedded ooo:name="Standard"/>
   </ooo:libraries>
  </office:script>
 </office:scripts>
 <office:font-face-decls>
  <style:font-face style:name="Arial2" svg:font-family="Arial"/>
  <style:font-face style:name="Cambria" svg:font-family="Cambria" style:font-family-generic="modern"/>
  <style:font-face style:name="Cambria1" svg:font-family="Cambria" style:font-family-generic="roman"/>
  <style:font-face style:name="Times New Roman" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="roman"/>
  <style:font-face style:name="Arial1" svg:font-family="Arial" style:font-family-generic="swiss"/>
  <style:font-face style:name="Calibri" svg:font-family="Calibri" style:font-family-generic="swiss"/>
  <style:font-face style:name="Monospace" svg:font-family="Monospace" style:font-pitch="fixed"/>
  <style:font-face style:name="Liberation Mono" svg:font-family="&apos;Liberation Mono&apos;, &apos;Courier New&apos;, &apos;Nimbus Mono L&apos;, &apos;DejaVu Sans Mono&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Arial3" svg:font-family="Arial" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Liberation Serif" svg:font-family="&apos;Liberation Serif&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Arial" svg:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="FreeSans" svg:font-family="FreeSans" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="Liberation Sans" svg:font-family="&apos;Liberation Sans&apos;" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="DejaVu Sans" svg:font-family="&apos;DejaVu Sans&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="Droid Sans Fallback" svg:font-family="&apos;Droid Sans Fallback&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="FreeSans1" svg:font-family="FreeSans" style:font-family-generic="system" style:font-pitch="variable"/>
 </office:font-face-decls>
 <office:styles>
  <style:default-style style:family="table-cell">
   <style:paragraph-properties style:tab-stop-distance="12.5mm"/>
   <style:text-properties style:font-name="Liberation Sans" fo:language="en" fo:country="NZ" style:font-name-asian="DejaVu Sans" style:language-asian="zh" style:country-asian="CN" style:font-name-complex="DejaVu Sans" style:language-complex="hi" style:country-complex="IN"/>
  </style:default-style>
  <number:number-style style:name="N0">
   <number:number number:min-integer-digits="1"/>
  </number:number-style>
  <number:currency-style style:name="N104P0" style:volatile="true">
   <number:currency-symbol number:language="en" number:country="NZ">$</number:currency-symbol>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
  </number:currency-style>
  <number:currency-style style:name="N104">
   <style:text-properties fo:color="#ff0000"/>
   <number:text>-</number:text>
   <number:currency-symbol number:language="en" number:country="NZ">$</number:currency-symbol>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <style:map style:condition="value()&gt;=0" style:apply-style-name="N104P0"/>
  </number:currency-style>
  <number:currency-style style:name="N111P0" style:volatile="true">
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <number:text> </number:text>
   <number:currency-symbol number:language="fr" number:country="FR">€</number:currency-symbol>
  </number:currency-style>
  <number:currency-style style:name="N111">
   <style:text-properties fo:color="#ff0000"/>
   <number:text>-</number:text>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <number:text> </number:text>
   <number:currency-symbol number:language="fr" number:country="FR">€</number:currency-symbol>
   <style:map style:condition="value()&gt;=0" style:apply-style-name="N111P0"/>
  </number:currency-style>
  <style:style style:name="Default" style:family="table-cell">
   <style:text-properties style:font-name-asian="Droid Sans Fallback" style:font-family-asian="&apos;Droid Sans Fallback&apos;" style:font-family-generic-asian="system" style:font-pitch-asian="variable" style:font-name-complex="FreeSans1" style:font-family-complex="FreeSans" style:font-family-generic-complex="system" style:font-pitch-complex="variable"/>
  </style:style>
  <style:style style:name="Result" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-style="italic" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="Result2" style:family="table-cell" style:parent-style-name="Result" style:data-style-name="N104"/>
  <style:style style:name="Heading" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties fo:font-size="16pt" fo:font-style="italic" fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="Heading1" style:family="table-cell" style:parent-style-name="Heading">
   <style:table-cell-properties style:rotation-angle="90"/>
  </style:style>
 </office:styles>
 <office:automatic-styles>
  <style:style style:name="co1" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="39.21mm"/>
  </style:style>
  <style:style style:name="co2" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="161.22mm"/>
  </style:style>
  <style:style style:name="co3" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="193.36mm"/>
  </style:style>
  <style:style style:name="co4" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="22.58mm"/>
  </style:style>
  <style:style style:name="co5" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="122.82mm"/>
  </style:style>
  <style:style style:name="co6" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="269.61mm"/>
  </style:style>
  <style:style style:name="co7" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="271.52mm"/>
  </style:style>
  <style:style style:name="co8" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="9.53mm"/>
  </style:style>
  <style:style style:name="co9" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="80.06mm"/>
  </style:style>
  <style:style style:name="co10" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="218.67mm"/>
  </style:style>
  <style:style style:name="ro1" style:family="table-row">
   <style:table-row-properties style:row-height="5.29mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro2" style:family="table-row">
   <style:table-row-properties style:row-height="5.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro3" style:family="table-row">
   <style:table-row-properties style:row-height="20.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro4" style:family="table-row">
   <style:table-row-properties style:row-height="30.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro5" style:family="table-row">
   <style:table-row-properties style:row-height="45.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro6" style:family="table-row">
   <style:table-row-properties style:row-height="85.55mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro7" style:family="table-row">
   <style:table-row-properties style:row-height="55.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro8" style:family="table-row">
   <style:table-row-properties style:row-height="50.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro9" style:family="table-row">
   <style:table-row-properties style:row-height="110.56mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro10" style:family="table-row">
   <style:table-row-properties style:row-height="15.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro11" style:family="table-row">
   <style:table-row-properties style:row-height="10.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro12" style:family="table-row">
   <style:table-row-properties style:row-height="105.04mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro13" style:family="table-row">
   <style:table-row-properties style:row-height="40.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro14" style:family="table-row">
   <style:table-row-properties style:row-height="94.77mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro15" style:family="table-row">
   <style:table-row-properties style:row-height="25.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro16" style:family="table-row">
   <style:table-row-properties style:row-height="95.55mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro17" style:family="table-row">
   <style:table-row-properties style:row-height="10.53mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro18" style:family="table-row">
   <style:table-row-properties style:row-height="98.46mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro19" style:family="table-row">
   <style:table-row-properties style:row-height="5.79mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro20" style:family="table-row">
   <style:table-row-properties style:row-height="4.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro21" style:family="table-row">
   <style:table-row-properties style:row-height="20.27mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro22" style:family="table-row">
   <style:table-row-properties style:row-height="8.41mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro23" style:family="table-row">
   <style:table-row-properties style:row-height="12.36mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro24" style:family="table-row">
   <style:table-row-properties style:row-height="5.26mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro25" style:family="table-row">
   <style:table-row-properties style:row-height="6.95mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro26" style:family="table-row">
   <style:table-row-properties style:row-height="5.7mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro27" style:family="table-row">
   <style:table-row-properties style:row-height="11.04mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro28" style:family="table-row">
   <style:table-row-properties style:row-height="16.32mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro29" style:family="table-row">
   <style:table-row-properties style:row-height="21.57mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro30" style:family="table-row">
   <style:table-row-properties style:row-height="32.1mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro31" style:family="table-row">
   <style:table-row-properties style:row-height="26.85mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro32" style:family="table-row">
   <style:table-row-properties style:row-height="37.38mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro33" style:family="table-row">
   <style:table-row-properties style:row-height="12.63mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro34" style:family="table-row">
   <style:table-row-properties style:row-height="36.05mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro35" style:family="table-row">
   <style:table-row-properties style:row-height="6.12mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro36" style:family="table-row">
   <style:table-row-properties style:row-height="45.28mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro37" style:family="table-row">
   <style:table-row-properties style:row-height="63.18mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro38" style:family="table-row">
   <style:table-row-properties style:row-height="40.8mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro39" style:family="table-row">
   <style:table-row-properties style:row-height="67.65mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro40" style:family="table-row">
   <style:table-row-properties style:row-height="9.45mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro41" style:family="table-row">
   <style:table-row-properties style:row-height="197.96mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro42" style:family="table-row">
   <style:table-row-properties style:row-height="4.87mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro43" style:family="table-row">
   <style:table-row-properties style:row-height="6.58mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro44" style:family="table-row">
   <style:table-row-properties style:row-height="14.73mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro45" style:family="table-row">
   <style:table-row-properties style:row-height="10mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro46" style:family="table-row">
   <style:table-row-properties style:row-height="24.22mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro47" style:family="table-row">
   <style:table-row-properties style:row-height="38.44mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro48" style:family="table-row">
   <style:table-row-properties style:row-height="52.65mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro49" style:family="table-row">
   <style:table-row-properties style:row-height="19.47mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ta1" style:family="table" style:master-page-name="Default">
   <style:table-properties table:display="true" style:writing-mode="lr-tb"/>
  </style:style>
  <number:date-style style:name="N37" number:automatic-order="true">
   <number:day number:style="long"/>
   <number:text>/</number:text>
   <number:month number:style="long"/>
   <number:text>/</number:text>
   <number:year/>
  </number:date-style>
  <style:style style:name="ce1" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce2" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce3" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff33ff"/>
   <style:text-properties style:use-window-font-color="true" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce4" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce5" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce6" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties style:use-window-font-color="true" style:font-name="Liberation Serif" fo:font-size="12pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:font-name-complex="FreeSans1" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce7" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce8" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce9" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce10" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce11" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="DejaVu Sans" style:font-size-asian="12pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce12" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce13" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce14" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce15" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce16" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce17" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce18" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" fo:font-weight="bold" style:font-size-asian="12pt" style:font-weight-asian="bold" style:font-size-complex="12pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce19" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce20" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce21" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce22" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce23" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-name-complex="FreeSans" style:font-size-complex="12pt" style:language-complex="none" style:country-complex="none"/>
  </style:style>
  <style:style style:name="ce24" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-name-complex="FreeSans" style:font-size-complex="12pt" style:language-complex="none" style:country-complex="none"/>
  </style:style>
  <style:style style:name="ce25" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-name-complex="FreeSans" style:font-size-complex="12pt" style:language-complex="none" style:country-complex="none"/>
  </style:style>
  <style:style style:name="ce26" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#cc66ff" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce27" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce28" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#cc66ff" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce29" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce30" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce31" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce32" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff99ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce33" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce34" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce35" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce36" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff" fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#0066cc" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce37" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" fo:font-weight="normal" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce38" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="12pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:font-name-complex="FreeSans1" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce39" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce40" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce41" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce42" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce43" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce44" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce45" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce46" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce47" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce48" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce49" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce50" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce51" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
  </style:style>
  <style:style style:name="ce52" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce53" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce54" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce55" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce56" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="16pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="16pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="16pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce57" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:font-name="Arial" fo:font-size="13pt" style:font-size-asian="13pt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce58" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Arial" fo:font-size="13pt" style:font-size-asian="13pt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce59" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce60" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#ff00cc" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce61" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce62" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce63" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce64" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce65" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce66" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Liberation Serif" fo:font-size="12pt" fo:font-weight="normal" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce67" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce68" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color"/>
  </style:style>
  <style:style style:name="ce69" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="12pt" fo:font-weight="normal" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce70" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce71" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce72" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#365f91" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="14pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="14pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce73" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="14pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce74" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial1" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="9pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce75" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Times New Roman" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce76" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-style="normal" fo:text-shadow="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce77" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="12pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce78" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="14pt" fo:font-weight="bold" style:font-size-asian="14pt" style:font-weight-asian="bold" style:font-size-complex="14pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce79" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce80" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="Monospace" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce81" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce82" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria1" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="9pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce83" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria1" fo:font-size="12pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce84" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff0000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial1" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="9pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce85" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#888888" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce86" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria1" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce87" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff00cc"/>
  </style:style>
  <style:style style:name="ce88" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce89" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent"/>
   <style:text-properties fo:color="#ff99ff"/>
  </style:style>
  <style:style style:name="ce90" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="22pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="22pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="22pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce91" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce92" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N37"/>
  <style:style style:name="ce93" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="end"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce94" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce95" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#800000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce96" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce97" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce98" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#800000" style:font-name="Arial2" fo:font-size="14pt" fo:font-weight="bold" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="10pt" style:font-name-complex="FreeSans1" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="ce99" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce100" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000080" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce101" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce102" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000080" style:font-name="Arial2" fo:font-size="14pt" fo:font-weight="bold" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="10pt" style:font-name-complex="FreeSans1" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="ce103" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="11pt" fo:font-weight="bold" style:font-size-asian="11pt" style:font-weight-asian="bold" style:font-size-complex="11pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce104" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce105" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:paragraph-properties fo:text-align="start"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce106" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce107" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce108" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:paragraph-properties fo:text-align="start"/>
   <style:text-properties fo:color="#800000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce109" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce110" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="11pt" fo:font-weight="bold" style:font-size-asian="11pt" style:font-weight-asian="bold" style:font-size-complex="11pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce111" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce112" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce113" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="GB" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce114" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="GB" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Arial" style:font-size-asian="10pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-name-complex="DejaVu Sans" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce115" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="GB" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce116" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#00ff66"/>
  </style:style>
  <style:style style:name="ce117" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="GB" style:font-name-asian="Arial" style:font-size-asian="10pt" style:language-asian="ar" style:country-asian="SA"/>
  </style:style>
  <style:style style:name="ce118" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="GB" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce119" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="GB" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce120" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent"/>
   <style:text-properties fo:color="#cc0066"/>
  </style:style>
  <style:style style:name="ce121" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:background-color="transparent"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:color="#cc0066" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="GB" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce122" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#0000ff" style:font-name-complex="DejaVu Sans" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce123" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:font-name="Liberation Sans" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans1"/>
  </style:style>
  <style:style style:name="ce124" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="center"/>
  </style:style>
  <style:style style:name="ce125" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce126" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce127" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce128" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:page-layout style:name="pm1">
   <style:page-layout-properties style:writing-mode="lr-tb"/>
   <style:header-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-bottom="2.5mm"/>
   </style:header-style>
   <style:footer-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-top="2.5mm"/>
   </style:footer-style>
  </style:page-layout>
  <style:page-layout style:name="pm2">
   <style:page-layout-properties style:writing-mode="lr-tb"/>
   <style:header-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-bottom="2.5mm" fo:border="2.49pt solid #000000" fo:padding="0.18mm" fo:background-color="#c0c0c0">
     <style:background-image/>
    </style:header-footer-properties>
   </style:header-style>
   <style:footer-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-top="2.5mm" fo:border="2.49pt solid #000000" fo:padding="0.18mm" fo:background-color="#c0c0c0">
     <style:background-image/>
    </style:header-footer-properties>
   </style:footer-style>
  </style:page-layout>
  <style:style style:name="T1" style:family="text">
   <style:text-properties style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T2" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T3" style:family="text">
   <style:text-properties style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="T4" style:family="text">
   <style:text-properties style:font-name-asian="FreeSans" style:font-name-complex="DejaVu Sans"/>
  </style:style>
  <style:style style:name="T5" style:family="text">
   <style:text-properties style:font-name="Liberation Sans" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T6" style:family="text">
   <style:text-properties fo:color="#0000ff"/>
  </style:style>
  <style:style style:name="T7" style:family="text">
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="T8" style:family="text">
   <style:text-properties fo:color="#3333ff"/>
  </style:style>
  <style:style style:name="T9" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T10" style:family="text">
   <style:text-properties fo:color="#0000ff" fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T11" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#2b91af" fo:country="none"/>
  </style:style>
  <style:style style:name="T12" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#0000ff" fo:country="none"/>
  </style:style>
  <style:style style:name="T13" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:country="none" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T14" style:family="text">
   <style:text-properties fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#0000ff" fo:font-size="12pt" style:letter-kerning="true"/>
  </style:style>
  <style:style style:name="T15" style:family="text">
   <style:text-properties fo:font-size="12pt"/>
  </style:style>
  <style:style style:name="T16" style:family="text">
   <style:text-properties fo:font-size="12pt" fo:country="none" style:font-size-asian="12pt" style:font-name-asian="FreeSans" style:letter-kerning="true" fo:color="#2b91af" style:country-asian="none"/>
  </style:style>
  <style:style style:name="T17" style:family="text">
   <style:text-properties fo:font-size="12pt" fo:color="#2b91af" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T18" style:family="text">
   <style:text-properties fo:font-size="12pt" fo:color="#0000ff" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T19" style:family="text">
   <style:text-properties fo:color="#0000ff" fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt"/>
  </style:style>
  <style:style style:name="T20" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt"/>
  </style:style>
  <style:style style:name="T21" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt" fo:color="#2b91af" fo:country="none"/>
  </style:style>
  <style:style style:name="T22" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt" fo:color="#0000ff" fo:country="none"/>
  </style:style>
  <style:style style:name="T23" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt" fo:country="none" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T24" style:family="text">
   <style:text-properties fo:color="#000000" fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt"/>
  </style:style>
  <style:style style:name="T25" style:family="text">
   <style:text-properties style:font-name-asian="FreeSans" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T26" style:family="text">
   <style:text-properties fo:color="#0000cc" fo:font-size="13pt" style:font-size-asian="13pt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="T27" style:family="text">
   <style:text-properties fo:color="#2b91af" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T28" style:family="text">
   <style:text-properties fo:color="#0000ff" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T29" style:family="text">
   <style:text-properties fo:color="#ff99ff" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T30" style:family="text">
   <style:text-properties fo:color="#a31515" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T31" style:family="text">
   <style:text-properties fo:color="#ff3333"/>
  </style:style>
  <style:style style:name="T32" style:family="text">
   <style:text-properties style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T33" style:family="text">
   <style:text-properties fo:color="#6600ff"/>
  </style:style>
  <style:style style:name="T34" style:family="text">
   <style:text-properties style:font-name="Liberation Serif" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T35" style:family="text">
   <style:text-properties fo:color="#333333"/>
  </style:style>
  <style:style style:name="T36" style:family="text">
   <style:text-properties fo:color="#dddddd"/>
  </style:style>
  <style:style style:name="T37" style:family="text">
   <style:text-properties fo:color="#9900ff"/>
  </style:style>
  <style:style style:name="T38" style:family="text">
   <style:text-properties style:letter-kerning="true"/>
  </style:style>
  <style:style style:name="T39" style:family="text">
   <style:text-properties style:letter-kerning="true" fo:color="#000000" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T40" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#2b91af"/>
  </style:style>
  <style:style style:name="T41" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#0000ff"/>
  </style:style>
  <style:style style:name="T42" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#000000" fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T43" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T44" style:family="text">
   <style:text-properties fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="T45" style:family="text">
   <style:text-properties fo:color="#ff00cc"/>
  </style:style>
  <style:style style:name="T46" style:family="text">
   <style:text-properties style:font-name="Calibri" fo:font-size="14pt" fo:country="none" style:country-asian="none" style:font-name-asian="Calibri" style:font-size-asian="14pt"/>
  </style:style>
  <style:style style:name="T47" style:family="text">
   <style:text-properties fo:color="#ff0000" style:font-name="Calibri" fo:font-size="14pt" fo:country="none" style:country-asian="none" style:font-name-asian="Calibri" style:font-size-asian="14pt"/>
  </style:style>
  <style:style style:name="T48" style:family="text">
   <style:text-properties style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T49" style:family="text">
   <style:text-properties style:font-name="Liberation Serif" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T50" style:family="text">
   <style:text-properties fo:color="#ff33ff"/>
  </style:style>
  <style:style style:name="T51" style:family="text">
   <style:text-properties style:font-name="Arial" fo:font-size="9pt" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:country="none" style:country-asian="none" style:font-name-asian="Arial" style:font-size-asian="9pt"/>
  </style:style>
  <style:style style:name="T52" style:family="text">
   <style:text-properties fo:color="#ff0066"/>
  </style:style>
  <style:style style:name="T53" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:color="#333333" style:font-size-complex="10pt" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-name-asian="Monospace" fo:font-size="10pt"/>
  </style:style>
  <style:style style:name="T54" style:family="text">
   <style:text-properties style:font-name="Monospace" style:font-size-complex="10pt" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-name-asian="Monospace" fo:font-size="10pt" fo:color="#009695"/>
  </style:style>
  <style:style style:name="T55" style:family="text">
   <style:text-properties style:font-name="Monospace" style:font-size-complex="10pt" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-name-asian="Monospace" fo:font-size="10pt" fo:color="#333333"/>
  </style:style>
  <style:style style:name="T56" style:family="text">
   <style:text-properties style:font-size-complex="10pt" fo:color="#009695" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt"/>
  </style:style>
  <style:style style:name="T57" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#333333"/>
  </style:style>
  <style:style style:name="T58" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#009695"/>
  </style:style>
  <style:style style:name="T59" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#f57d00"/>
  </style:style>
  <style:style style:name="T60" style:family="text">
   <style:text-properties fo:color="#ff99ff"/>
  </style:style>
  <style:style style:name="T61" style:family="text">
   <style:text-properties fo:color="#ff0000"/>
  </style:style>
  <style:style style:name="T62" style:family="text">
   <style:text-properties style:font-name="Arial" fo:font-size="10pt" fo:font-style="italic" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="Arial" style:font-size-asian="10pt" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T63" style:family="text">
   <style:text-properties fo:color="#000000" style:font-name="Arial" fo:font-size="10pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="Arial" style:font-size-asian="10pt"/>
  </style:style>
  <style:style style:name="T64" style:family="text">
   <style:text-properties style:font-name="Times New Roman" fo:font-size="11pt" fo:font-style="italic" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-size-asian="11pt" style:font-size-complex="11pt" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T65" style:family="text">
   <style:text-properties fo:color="#000000" style:font-name="Calibri" fo:font-size="12pt" fo:country="none" style:country-asian="none" style:font-name-asian="Calibri"/>
  </style:style>
  <style:style style:name="T66" style:family="text">
   <style:text-properties fo:color="#000000" style:font-name="Calibri" fo:font-size="9pt" fo:country="none" style:country-asian="none" style:font-name-asian="Calibri" style:font-size-asian="9pt"/>
  </style:style>
 </office:automatic-styles>
 <office:master-styles>
  <style:master-page style:name="Default" style:page-layout-name="pm1">
   <style:header>
    <text:p><text:sheet-name>???</text:sheet-name></text:p>
   </style:header>
   <style:header-left style:display="false"/>
   <style:footer>
    <text:p>Page <text:page-number>1</text:page-number></text:p>
   </style:footer>
   <style:footer-left style:display="false"/>
  </style:master-page>
  <style:master-page style:name="Report" style:page-layout-name="pm2">
   <style:header>
    <style:region-left>
     <text:p><text:sheet-name>???</text:sheet-name> (<text:title>???</text:title>)</text:p>
    </style:region-left>
    <style:region-right>
     <text:p><text:date style:data-style-name="N2" text:date-value="2016-03-17">00/00/0000</text:date>, <text:time style:data-style-name="N2" text:time-value="09:58:27.526875382">00:00:00</text:time></text:p>
    </style:region-right>
   </style:header>
   <style:header-left style:display="false"/>
   <style:footer>
    <text:p>Page <text:page-number>1</text:page-number> / <text:page-count>99</text:page-count></text:p>
   </style:footer>
   <style:footer-left style:display="false"/>
  </style:master-page>
 </office:master-styles>
 <office:body>
  <office:spreadsheet>
   <table:calculation-settings table:automatic-find-labels="false"/>
   <table:table table:name="Sheet1" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co2" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co3" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1021" table:default-cell-style-name="ce1"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>.Net</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>any language compiler that targets .NET must emit code in IL, intermediate language, rather than native processor code.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>Programming languages that target .NET emit what we call managed code. As opposed to traditional compilers, the emitted code is not native to the processor that will execute it.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The Common Language Runtime, or CLR, is the .NET runtime environment that loads and manages our .NET programs and provides them with runtime services. We&apos;ll discuss the CLR in much detail in this module.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The Framework Class Library, or FCL, provides us with the essential building blocks we need in order to build our programs.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>In order to develop our programs, we need some building blocks - we can&apos;t start writing everything from scratch every time.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>The FCL is usable by all programming languages, since the vast majority of it is Common Language Specification compliant.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The Common Type System (CTS)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The CTS specified how types in .NET are defined. The CLS is a subset of the CTS that must be supported by any .NET language.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>the .NET type system is type safety ? Example ? can&apos;t assign a small object to a bigger one. the latter would access wrong data in memory.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>// won&apos;t compile:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>LargeType l = (LargeType)s;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>C#</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>C# is a statically typed language. A variable can never change its type once declared. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>If the variable is of a reference type, it can still refer to instances of different types, as long as they derive from the type of the variable. But the actual operations we can perform are always limited to those defined by the variable type, not by the actual type of instance it refers to.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The dynamic keyword is an exception to this rule. It allows performing operations on a variable based on the actual type of instance it will refer to at runtime. As a consequence, errors are detected at runtime instead of at compile time. This is called dynamic typing or late binding.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="7">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>inheritance</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>If the variable is of a reference type, it can still refer to instances of different types, as long as they derive from the type of the variable. But the actual operations we can perform are always limited to those defined by the variable type, not by the actual type of instance it refers to.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>This is why when we have a reference of type object to an instance of type string, we cannot directly invoke anything that is not defined in object. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>BOXING</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce10" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T2">a value type converted to object or interface</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Every type, including int derives from object</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Up casting (converting up the inheritance hierarchy) is legal by definition</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>What happens when we cast from int to object?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>An object must refer to the heap, but the int is in the stack!</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>The solution is ... BOXING</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>int num1 = 20;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>// boxing:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>object o = num1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>// unboxing:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>int num2 = (int)o;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>num2 is different from num1 //hb: risk of infinite creation of reference type and value type variables</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>int? Num4 = (int?)o; //cast to nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>IConvertible convertibe = num1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>from a struct</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>MyValType v1 = new MyValType();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>v1.Data = 1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Console.WriteLine(&quot;v1 &quot; + v1.ToString());</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>// boxing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>object o1 = v1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce11" office:value-type="string" calcext:value-type="string">
       <text:p>Using a virtual or normal method defined in the base class, explicitly or implicitly (because not overridden)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>advanced - restriction</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>There is some restriction: Unboxing and data conversions are not allowed in a single operation.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>int num1 = 20;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>object o = num1;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>short num2 = (short)o; // runtime exception: throws an InvalidCastException. A boxed int must be unboxed as int.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>data conversions should happen in a different instruction.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>short num2 = (short)(int)o; // Once unboxed, the int can be converted to short</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1023"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>advanced - performance</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>-boxing occuring too many times may actually cause more garbage collections → slower code</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>-In C# boxing is implicit. So review the emitted IL code for the opcode BOX or contrained</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>Q:How to view the IL code</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce12" office:value-type="string" calcext:value-type="string">
        <text:p>The constrained opcode checks if the value type it operates on overrides the method and if it doesn&apos;t, the value type is boxed. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1023"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>namespace</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>method1</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>System.IO.StreamWriter writer;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>method2</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>01using System.IO;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>03...</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>05StreamWriter writer;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>The type System.Console is defined in the assembly mscorlib.dll, whereas the type System.Uri is defined in the assembly System.dll.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>conversion/cast</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro4" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="6" table:number-rows-spanned="1"><text:p><text:span text:style-name="T3">Conversion 1: built-in types</text:span></text:p><text:p><text:span text:style-name="T3">int num1 = 10;</text:span></text:p><text:p><text:span text:style-name="T3">short num2 = (short)num1; // possible loss of data -&gt; explicit conversion needed</text:span></text:p><text:p/><text:p><text:span text:style-name="T3">short num2 = 10;</text:span></text:p><text:p><text:span text:style-name="T3">int num1 = num2; //no loss of data possible -&gt; no need for explicit conversion</text:span></text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="5"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T2">conversion 3 operators.Module 7</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T1">Conversion 2 complexe: class &quot;Convert&quot; is offered also, for more advanced conversion options that C# doesn&apos;t provide directly</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce7"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>enum</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce7"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro5" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p>enum Department : byte</text:p><text:p>{</text:p><text:p>    Sales = 10,</text:p><text:p>    IT = 20,</text:p><text:p>    RnD = 30,</text:p><text:p>    Management = 40</text:p><text:p>}</text:p><text:p>…</text:p><text:p>Department dep = Department.Sales;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>Note:the type byte, the values set</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>Use extenssion methods to enrich an enum</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="9" table:number-rows-spanned="1">
       <text:p>strongly typed. An int can&apos;t be used where enum is expected. But cast is possible : Department dep2 = (Department)10;</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="8"/>
      <table:table-cell table:number-columns-repeated="1014"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro6" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce16" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="8" table:number-rows-spanned="1"><text:p>operators are supported (comparison, …)</text:p><text:p>enum Priority</text:p><text:p>{</text:p><text:p>    Low,</text:p><text:p>    Normal,</text:p><text:p>    High,</text:p><text:p>}</text:p><text:p/><text:p>public void Process(</text:p><text:p>    Priority prio1,</text:p><text:p>    Priority prio2)</text:p><text:p>{</text:p><text:p>    if (prio1 &gt; prio2)</text:p><text:p>    {</text:p><text:p>        ...</text:p><text:p>    }</text:p><text:p>}</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>Enum derives System.Enum which derives from System.ValueType</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro7" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce17" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T4">the compiler emits sth like</text:span></text:p><text:p><text:span text:style-name="T4">struct Department : System.Enum</text:span></text:p><text:p><text:span text:style-name="T4">{</text:span></text:p><text:p><text:span text:style-name="T4">    public int value__;</text:span></text:p><text:p/><text:p><text:span text:style-name="T4">    public const Department Sales = (Department)0;</text:span></text:p><text:p><text:span text:style-name="T4">    public const Department IT = (Department)1;</text:span></text:p><text:p><text:span text:style-name="T4">    public const Department RnD = (Department)2;</text:span></text:p><text:p><text:span text:style-name="T4">    public const Department Management = (Department)3;</text:span></text:p><text:p><text:span text:style-name="T4">}</text:span></text:p><text:p><text:span text:style-name="T4">The only instance field it has is value__ which contains the actual numeric value of the current enum instance.</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro8" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p>System.Enum offers</text:p><text:p>    Non-static methods:</text:p><text:p>        ToString returns the name that corresponds to the current enum value</text:p><text:p>        GetHashCode returns the numeric value of the current instance</text:p><text:p>    Static methods:</text:p><text:p>        GetValues returns an array of all numeric values</text:p><text:p>        GetNames return an array of all names</text:p><text:p>        GetName returns the name that corresponds to the specified numeric value</text:p><text:p>        Parse / TryParse return an instance of the specified enum with the specified name</text:p><text:p>        IsDefined returns whether the specified value or name exists</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>flag</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro9" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce7"/>
       <table:table-cell table:style-name="ce16" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="10" table:number-rows-spanned="1"><text:p>[Flags]</text:p><text:p>02enum Mood</text:p><text:p>{</text:p><text:p>    None    = 0,</text:p><text:p>    Happy   = 0x01,</text:p><text:p>    Relaxed = 0x02,</text:p><text:p>    Good    = Happy | Relaxed,</text:p><text:p>    Sad     = 0x04,</text:p><text:p>    Grumpy  = 0x08,</text:p><text:p>    Bad = Sad | Grumpy</text:p><text:p>}</text:p><text:p/><text:p>Mood myMood = Mood.Happy | Mood.Relaxed;</text:p><text:p>if ((myMood &amp; Mood.Relaxed) == Mood.Relaxed)</text:p><text:p>{</text:p><text:p>}</text:p><text:p/><text:p>Using System.Enum.HasFlags </text:p><text:p>Mood myMood = Mood.Happy | Mood.Relaxed;</text:p><text:p>if (myMood.HasFlag(Mood.Relaxed))</text:p><text:p>{</text:p><text:p>}</text:p>
       </table:table-cell>
       <table:covered-table-cell table:number-columns-repeated="9"/>
       <table:table-cell table:number-columns-repeated="1012"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro10">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>visibility:</text:p><text:p>    Internal (default) - accessible by members of any types in the same assembly</text:p><text:p>    public - accessible by all</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Members Accessibility</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>private (default) - accessible by members of the containing class</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>protected - accessible by members of the containing class and derived classes even they are in other assemblies</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>internal - accessible by members of any types in the same assembly</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>protected internal -  accessible by members of any types in the same assembly or derived types</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>public - accessible by all</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>A member is affected by its accessibility modifier and by the visibility of the containing class - the more restrictive modifier prevails</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="6">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>constructor</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>static constructor</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro12" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="3"/>
       <table:table-cell table:style-name="ce15" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="25" table:number-rows-spanned="1"><text:p><text:span text:style-name="T38">-</text:span><text:span text:style-name="T39">Allows initialization of the type</text:span></text:p><text:p><text:span text:style-name="T38">-Invoked automatically by the CLR before first use of the type</text:span></text:p><text:p><text:span text:style-name="T38">-Guaranteed to execute only once and is thread-safe. If one is running it, others will wait it to finish, and will not run it again.</text:span></text:p><text:p><text:span text:style-name="T2">-If static constructor throws an exception, TypeLoadException is thrown and the type becomes unusable</text:span></text:p><text:p><text:span text:style-name="T2">-Static constructors of structures are not guaranteed to run! if we use a structure without the new keyword, no constructor is getting called and the static constructor will not get called either.</text:span></text:p><text:p/><text:p><text:span text:style-name="T10">class</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T40">SomeClass</text:span><text:span text:style-name="T2">{    </text:span><text:span text:style-name="T41">private</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T41">static</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T40">Logger</text:span><text:span text:style-name="T2"> logger;    </text:span><text:span text:style-name="T41">static</text:span><text:span text:style-name="T2"> SomeClass()    {        logger = </text:span><text:span text:style-name="T41">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T40">Logger</text:span><text:span text:style-name="T2">();        logger.Init();    }}</text:span></text:p><text:p><text:span text:style-name="T2">-</text:span><text:span text:style-name="T42">beforefieldinit</text:span><text:span text:style-name="T43"> flag allows the JIT to call the static constructor at an optimal point of time (to avoid checking at the middle of a loop).  </text:span></text:p><text:p><text:span text:style-name="T2">C# compiler automatically determines when to specify the flag</text:span></text:p><text:p><text:span text:style-name="T2">        NOT specified when an explicit static constructor is defined. Specified when static field initializers are used</text:span></text:p>
       </table:table-cell>
       <table:covered-table-cell table:number-columns-repeated="24"/>
       <table:table-cell table:number-columns-repeated="996"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>destructor</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>object initializer</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>static members</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>fields</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro13" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce16" office:value-type="string" calcext:value-type="string"><text:p>-Fields may be initialized at their declaration</text:p><text:p><text:span text:style-name="T32">Public int f=1;</text:span></text:p><text:p>-The compiler inserts the initialization to the beginning of every constructor</text:p><text:p>-</text:p><text:p>-Field initialization in structures:</text:p><text:p>--Not allowed for instance fields</text:p><text:p>--Allowed for static fields, but should not be used. because <text:a xlink:href="http://mottishaked.com/training/dot-net-tutorial/107/defining-types/static-constructors" xlink:type="simple">static constructors</text:a> are not guaranteed to be executed.</text:p><text:p><text:span text:style-name="T15">-Initialization occurs before calling the base class&apos; constructor</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro14" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce35" office:value-type="string" calcext:value-type="string"><text:p>Modifiers:</text:p><text:p/><text:p>    static – initialization is inserted to the static constructor. And are stored within the type object. If also readonly, its value can set only in the static constructor </text:p><text:p>    readonly - can be set only within the constructor or in the declaration line. Note that we can still call methods that change its state.</text:p><text:p>    const - defines a constant value. Impllicitly static. Only with primitives. Its value is embedded in code wich is efficient but dependency/verionning-problematic. Use internal access qualifier. But Overcome, by using readonly static qualifiers. </text:p><text:p>Class hoho</text:p><text:p>{</text:p><text:p>Readonly StringBuilder str = new StringBuilder(&quot;Hello&quot;);</text:p><text:p>    void SomeMethod()</text:p><text:p>    {</text:p><text:p>        // error</text:p><text:p>        str = new StringBuilder(&quot;Bye&quot;);</text:p><text:p/><text:p>        // ok</text:p><text:p>        str.Clear();</text:p><text:p>        str.Append(&quot;Bye&quot;);</text:p><text:p>    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>methods</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>the most common method modifiers are static, virtual, abstract, override, sealed and new. Here is a discussion of each modifier.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>static</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>virtual - the method may be overridden in a derived class</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>abstract - the method has no implementation. Containing class cannot be instanciated. Derived classes must override it. or be abstract</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>without override ?</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>override - overrides a virtual or abstract method defined in a base class.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>sealed - prevents a method from being overridden</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>new - hides a method with the same signature defined in the base class. Without new keyword, compiler emits warning</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>other overload rules ?</text:p>
       </table:table-cell>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>we can&apos;t overload a method that differs only by out and ref because They qre the same for the CLR</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>parameters</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>By default parameters are passed by value</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>When passing a value type the actual instance is copied</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>When passing a reference type the reference is copied</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    Use <text:span text:style-name="T6">ref</text:span> to pass by reference</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>The address of the variable, value type or reference, is copied</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>Changed to the parameter inside the method affect the original</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro15" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>        Method2(<text:span text:style-name="T33">ref</text:span> r);</text:p><text:p>        static void Method2(<text:span text:style-name="T33">ref</text:span> MyRefType r)</text:p><text:p>        {</text:p><text:p>            r = new MyRefType();</text:p><text:p>        }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    Use <text:span text:style-name="T6">out</text:span> to define an output parameter</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>The caller does not have to initialize the passed variable</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>The callee must assign a value before it returns</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>Array and variable number of parameters</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row-group table:display="false">
        <table:table-row table:style-name="ro1" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell office:value-type="string" calcext:value-type="string">
          <text:p>an array is a ref type</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>double Average(double[] nums)</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>{</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>    if (nums == null || nums.Length == 0)</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>        return 0;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="float" office:value="5" calcext:value-type="float">
          <text:p>5</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>    double sum = 0;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>    foreach (double num in nums)</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>    {</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>        sum += num;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>    }</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="float" office:value="11" calcext:value-type="float">
          <text:p>11</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>    return sum / nums.Length;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>}</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>…</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>double avg = Average(new double [] { 2, 4, 6, 8});</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>    </text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro11" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>double Average(params double[] nums) { … }</text:p><text:p><text:span text:style-name="T34">double avg = Average( 2, 4, 6, 8);</text:span></text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13"/>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro10" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>A call to a method with variable number of parameters is less efficient than a call to a method with fixed number of parameters, because before the method can be invoked an array must be created and initialized. Also, the array must later be garbage collected, which is even more work.</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>provide multiple overloaded versions of the method that accept different number of parameters.</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro3" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>double Average(double num1, double num2) { ... }</text:p><text:p>double Average(double num1, double num2, double num3) { ... }</text:p><text:p>double Average(double num1, double num2, double num3, double num4) { ... }</text:p><text:p>Double Average(params double[] nums) { ... }</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="1024"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>The last parameter to a method may be marked with the params keyword</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>It must be an array and can be of any type</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>When the compiler emits code for a call to a method with params, it creates an array and assigns values</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>Use of params is less efficient because an array is used</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>Use multiple overloaded versions to reduce calls to method with params</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>To pass an unknown number of parameters of any type use an array of object</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
          <text:p>When passing null, the array is never created</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="1024"/>
        </table:table-row>
        <table:table-row table:style-name="ro3" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>void Method(params object[] objs) { … }</text:p><text:p>Method(null); //array never created</text:p><text:p>Method(null, null, null); //array created with three null ref</text:p><text:p>Method(new object[] { null }); //array created with one null ref</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
         <table:table-cell table:number-columns-repeated="1024"/>
        </table:table-row>
       </table:table-row-group>
      </table:table-row-group>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Optional, named params</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce18" office:value-type="string" calcext:value-type="string">
         <text:p>It&apos;s possible to provide parameters by name</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro4" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>void Method(int p1, int p2, int p3)</text:p><text:p>{</text:p><text:p>}</text:p><text:p/><text:p>Method(p3: 3, p2: 2, p1: 1);</text:p><text:p/>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>void Method(ref int p1, out int p2)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>int num1 = 1;</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>int num2;</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce36" office:value-type="string" calcext:value-type="string"><text:p>Method(p1: ref num1, p2: out num2); <text:span text:style-name="T35">//note the systaxe when naming ref and out param</text:span></text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
         <text:p>Q:How about naming by-value params ?</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce18" office:value-type="string" calcext:value-type="string">
         <text:p>Default param values:</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce37"/>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
         <text:p>order of appearance: required (non optional + ref + out), optional, params parameters</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>the default values are resolved when the caller is compiled, rather than at runtime. This means that if the default values change, the caller will still use the old defaults until it recompiles. </text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
         <text:p>You should also avoid renaming parameters, because the caller will need to be modified accordingly if it resides in a different assembly</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>When adding a new optional parameter to a method, you should add it after existing optional parameters. Otherwise existing code may provide values to the wrong parameters.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro3" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>watch out for inheritance scenarios because the default values might not be what you expect them to be. More specifically, you should remember that it&apos;s the compiler that resolves the default of optional parameters, not the runtime. So the default is assigned based on the type known at compile time, even if at runtime the actual object might be of another type.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13"/>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce18"/>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>void Method(int p1 = 1, int p2 = 2, int p3 = 3)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>02{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>03}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>07Method();</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>09Method(10, 20); //p3 will take 3</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>11Method(p2: 20, p3: 30); <text:span text:style-name="T31">//We MUST name params if want to skip some of them</text:span></text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>Optional parameters cannot be used with ref and out.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro10" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>Not any value can be specified as default, only what the compiler considers a compile-time constant. When the compiler encounters a method with optional arguments it must persist the default values, and it can only persist compile-time constants.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Any C# primitive, such as int or string can be a default value.</text:p><text:p>void Method1(int num = 10, string str = &quot;Hello&quot;, bool flag = false) { }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro4" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>if the parameter is a reference type we can always specify null. </text:p><text:p>void Method2(System.IO.FileInfo file = null) { }</text:p><text:p>void Method3(int[] nums = null) { }</text:p><text:p/><text:p>If you have to specify a default array, you can&apos;t use optional parameters. </text:p><text:p>Instead you should create two overloaded versions of the method, one that accepts an array and one without parameters that creates an array and calls the first version.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro10" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>any value type, as long as it&apos;s in its default state where the value of all members is 0. so use default constructor or default keyword</text:p><text:p>void Method4(DateTime date = new DateTime()) { }</text:p><text:p>void Method5(DateTime date = default(DateTime)) { }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro16" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>// won&apos;t compile</text:p><text:p>12void Method6(DateTime date = new DateTime(2010, 1, 1)) { }  //fileds are not 0</text:p><text:p>14// workaround</text:p><text:p>15void Method7(DateTime? date = null)</text:p><text:p>16{</text:p><text:p>17    time = date ?? new DateTime(2010, 1, 1);</text:p><text:p>18}</text:p><text:p>The ?? operator is called the null-coalescing operator. It returns the left-hand operand if the operand is not null; otherwise it returns the right hand operand.</text:p><text:p>int? num = null; // num can have any int value and also null, hence the type int?. In this case num == null. </text:p><text:p/><text:p>// Is the HasValue property true?</text:p><text:p>        if (num.HasValue)</text:p><text:p>        {</text:p><text:p>            System.Console.WriteLine(&quot;num = &quot; + num.Value); <text:span text:style-name="T31">//Q:is num.Value mandatory ?</text:span></text:p><text:p>        }</text:p><text:p>        else</text:p><text:p>        {</text:p><text:p>            System.Console.WriteLine(&quot;num = Null&quot;);</text:p><text:p>        }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>interface I</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>02{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>03    void Method(int num = 10);</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>04}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="float" office:value="5" calcext:value-type="float">
         <text:p>5</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>06class A : I</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>07{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>08    public void Method(int num)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>09    {</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>10        Console.WriteLine(num);</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>11    }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>12}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="float" office:value="13" calcext:value-type="float">
         <text:p>13</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>14...</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="float" office:value="15" calcext:value-type="float">
         <text:p>15</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>16A a = new A();</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>17a.Method(); //error. Because <text:span text:style-name="T36">Method is implemented without a default param.</text:span></text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="5">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce18" office:value-type="string" calcext:value-type="string">
       <text:p>properties</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro15" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Properties are a .NET feature, not a C# feature</text:p><text:p>Look like methods without parameters.</text:p><text:p>Has get, set or both</text:p><text:p><text:span text:style-name="T5">Can have any code in the ?etter. Watch out:Debugger invokes get accessor of property, So avoid having any side effects in it like incrementing a value when called</text:span></text:p><text:p><text:span text:style-name="T5">Properties are methods, so they can be static, virtual, abstract and can be in interfaces</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>01class Circle</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>03    private double radius;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>05    public double Radius</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>07        get { return this.radius; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>08        set { this.radius = <text:span text:style-name="T6">value</text:span>; } //value is a keyword used only in set accessor of properties. Nowhere else. It represents the value to set.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>09    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="float" office:value="10" calcext:value-type="float">
        <text:p>10</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>11    public double Area</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>12    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>13        get { return this.radius * this.radius * 3.14; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>14    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>15}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro10" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Circle c;</text:p><text:p>c.Radius = 3;</text:p><text:p>double d = c.Area;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce18" office:value-type="string" calcext:value-type="string">
        <text:p>automatic properties</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row-group>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>class Circle</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro15" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>     public Circle(double radius)</text:p><text:p>    {</text:p><text:p>        this.Radius = radius;</text:p><text:p>    }</text:p><text:p>     Public double Radius { get; private set; }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro10" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>The compiler automatically generates the field, a get accessor to return its value and a set accessor to set its value.</text:p><text:p>Note, The set accessor is private. So c.Radius = 5; is illegal but the constructor can set it.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>Automatic properties must be both readable and writable.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string">
         <text:p>overridable property</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>abstract class Shape</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>02{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>03    public abstract string ShapeType { get; }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>04}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="float" office:value="5" calcext:value-type="float">
         <text:p>5</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>06class Circle : Shape</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>07{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>08    public override string ShapeType</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>09    {</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>10        get { return &quot;Circle&quot;; }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>11    }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>12}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13"/>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string">
         <text:p>benefits/rules</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>If validity check is neded in the ?et accessor, then create the property manually (get, set, field)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>And there&apos;s no way to set its value in the declaration line, only in constructors, ALL</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>cannot pass them to methods as <text:a xlink:href="http://mottishaked.com/training/dot-net-tutorial/128/fields-methods-properties/pass-by-value-pass-by-reference" xlink:type="simple">ref or out</text:a> parameters. </text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>component in the .NET framework and Visual Studio take advantage of properties, which they cannot with simple, disjoint get and set methods.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>Visual Studio also helps while debugging. Debugger invokes get accessor of property, So avoid having any side effects in it like incrementing a value.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro3" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>a user interface control, with properties to get and set your control&apos;s attributes, Visual Studio will allow users to get and set properties values through the user interface designer. This happens automatically and without any effort on your part, because the Visual Studio designer looks for properties by reading the metadata.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>properties accessors should have leightweight code. Imagine the impact when VS debugger uses get accessor, or users calling set every time. Otherwise define methods.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro10" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>Take advantage of inlining: JIT compiler will emit the code that is in the accessor directly into the code that uses it. But if the accessor is long JIT compiler will emit a call to the property&apos;s accessor method</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
         <text:p>inlining happens for any short method. But never happens in debug mode.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce13"/>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce18" office:value-type="string" calcext:value-type="string">
       <text:p>indexers</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>public class GradeHolder</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>03    private int[] counts = new int[100];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>03    private string[] names = new string[100];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>05    public int this[int grade]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>07        get { return this.counts[grade];}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>08        set { this.counts[grade] = value; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>09    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>05    public int this[string name]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>07        get { return this.names[name];}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>08        set { this.names[name] = value; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>09    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>14GradeHolder holder = new GradeHolder();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string">
        <text:p>15holder[100] = 10;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string">
        <text:p>16holder[99] = 33;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce19"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>the parameter can be anything else, such as string or any custom type. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>We can define indexers that accept multiple parameters, which makes them seem like a multidimensional array. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>Also, we can define multiple indexers in the same type if their signature is different.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>Another limitation of indexers is that they cannot be defined as static. Again, this is a limitation of C#, not a limitation of .NET.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>.NET treats indexers just like regular properties. But C# treats them very differently:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>we cannot give an indexer a name</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="5"/>it is accessed directly on the instance using square brackets.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>.NET sees an indexer is just another property, and the generated IL calls it Item.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>if our component is consumed by other languages, we might want to change the name to something more meaningful. But this has no effect on any usage of this class from C#</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>public class GradeHolder</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>03    private int[] counts = new int[101];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>05    <text:span text:style-name="T7">[IndexerName(&quot;Count&quot;)]</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>06    public int this[int grade]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>07    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>08        get { return this.counts[grade];}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>09        set { this.counts[grade] = value; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>10    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>11}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>hassan: in the IL the indexer will be called Count instead of Item</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>operators</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>Unary: +, -, !, ~, ++, --, true, false</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>Binary: +, -, *, /, %, &amp;, |, ^, &lt;&lt;, &gt;&gt;, ==, !=, &gt;, &lt;, &gt;=, &lt;=</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>Operators are defined with the <text:span text:style-name="T8">operator</text:span> keyword, must be <text:span text:style-name="T8">public</text:span> and <text:span text:style-name="T8">static</text:span> and at least one of the parameters must be of the containing type</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>The compiler emits operators as methods with op_ prefix</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>some operator become automatically available when one is overloaded. We get += for free when + is defined</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>some operators must be overloaded together. When == is defined, != should be also</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>compiler recommends to redefine System.Object.Equals when == is overloaded</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>struct Currency</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>03    ...</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>05    <text:span text:style-name="T8">public static</text:span> bool <text:span text:style-name="T8">operator</text:span> ==(Currency c1, Currency c2)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>07        return c1.Sign == c2.Sign &amp;&amp; c1.Value == c2.Value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>08    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="float" office:value="9" calcext:value-type="float">
        <text:p>9</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>10    public static bool operator !=(Currency c1, Currency c2)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>11    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>12        return c1.Sign != c2.Sign || c1.Value != c2.Value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>13    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>public static Currency operator +(Currency c1, decimal d)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>07        return new Currency(c1.Sign, c1.Value + d);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>08    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>14}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>conversion operators</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>If conversion is not possible, C# tries to cast instead</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro10" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>Casting is legal when the type we are casting to is up or down the inheritance hierarchy from the type we are casting from. But casting doesn&apos;t convert anything. It just refers to the same object using a different type of reference.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>struct Currency</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>03    ...</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>22    public static <text:span text:style-name="T8">implicit</text:span> operator Currency(decimal d) //conversion from decimal to Currency</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>23    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>24        return new Currency(&apos;$&apos;, d);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>25    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="float" office:value="26" calcext:value-type="float">
        <text:p>26</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>27    public static implicit operator decimal(Currency c)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>28    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>29        return c.Value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>30    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>01public static <text:span text:style-name="T8">explicit</text:span> operator int(Currency c) //possible loss of data from decimal to int, hence explicit</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>03    return (int)c.value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>04}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="float" office:value="5" calcext:value-type="float">
        <text:p>5</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>14}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>Currency price = 20; // $20</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>34decimal d = price;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>08// compile-time error:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>09int n1 = price; <text:s/>//to use the int conversion operator an explicit cast is to be used</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="float" office:value="10" calcext:value-type="float">
        <text:p>10</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>11// explcit conversion - ok</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>12int n2 = (int)price;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro10" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
        <text:p>Converting to non-nullable is only allowed when the nullable has a value. Otherwise it will throw an InvalidOperationException. And when a conversion might fail it should be done explicitly. See Nullable below for more info</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>Find topic about Template in C#. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Nullable&lt;int&gt; num1 = 10; var numsList = new List&lt;int&gt;();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce5" office:value-type="string" calcext:value-type="string">
      <text:p>anonymous methods and lambda expression</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Interface</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T9">    An interface contains no implementations</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T9">    A class or structure may implement one or more interfaces</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce21" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="11" table:number-rows-spanned="1">
       <text:p><text:s text:c="4"/>The implementing type must provide implementations to all members defined by the interface and must be public</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="10"/>
      <table:table-cell table:number-columns-repeated="1012"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p/>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T10">interface</text:span><text:span text:style-name="T9"> </text:span><text:span text:style-name="T11">IVehicle</text:span><text:span text:style-name="T9">{    </text:span><text:span text:style-name="T12">void</text:span><text:span text:style-name="T9"> IncreaseSpeed();    </text:span><text:span text:style-name="T12">void</text:span><text:span text:style-name="T13"> DecreaseSpeed();}</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro17" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce22" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T14">interface</text:span><text:span text:style-name="T15"> </text:span><text:span text:style-name="T16">ImotorizedVehicle </text:span><text:span text:style-name="T15">: </text:span><text:span text:style-name="T17">IVehicle</text:span><text:span text:style-name="T15">{    </text:span><text:span text:style-name="T18">void</text:span><text:span text:style-name="T15"> StartEngine();}</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="13" table:number-rows-spanned="1"><text:p><text:span text:style-name="T19">class</text:span><text:span text:style-name="T20"> </text:span><text:span text:style-name="T21">MyCar</text:span><text:span text:style-name="T20"> :  someBaseClass, </text:span><text:span text:style-name="T21">ImotorizedVehicle</text:span></text:p><text:p><text:span text:style-name="T20">{    </text:span></text:p><text:p><text:span text:style-name="T19">public</text:span><text:span text:style-name="T20"> </text:span><text:span text:style-name="T22">void</text:span><text:span text:style-name="T20"> IncreaseSpeed()    {    }    </text:span></text:p><text:p><text:span text:style-name="T19">public</text:span><text:span text:style-name="T20"> </text:span><text:span text:style-name="T22">void</text:span><text:span text:style-name="T20"> DecreaseSpeed()    {    }    </text:span></text:p><text:p><text:span text:style-name="T19">public</text:span><text:span text:style-name="T20"> </text:span><text:span text:style-name="T22">void</text:span><text:span text:style-name="T23"> StartEngine()    {    }</text:span></text:p><text:p><text:span text:style-name="T24">}</text:span></text:p><text:p/><text:p><text:span text:style-name="T24">Car myCar = new Car();</text:span></text:p><text:p><text:span text:style-name="T24">Ivehicle myVehicle = myCar;</text:span></text:p><text:p/><text:p><text:span text:style-name="T24">myVehicle.IncreaseSpeed();</text:span></text:p><text:p><text:span text:style-name="T24">myCar.IncreaseSpeed();</text:span></text:p><text:p><text:span text:style-name="T24">myCar.Stop();</text:span></text:p><text:p><text:span text:style-name="T24">// error:</text:span></text:p><text:p><text:span text:style-name="T24">myVehicle.Stop();</text:span></text:p><text:p/><text:p><text:span text:style-name="T24">// error : cannot instantiate interface</text:span></text:p><text:p><text:span text:style-name="T24">IVehicle anotherVehicle = new IVehicle();</text:span></text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="12"/>
      <table:table-cell table:number-columns-repeated="1010"/>
     </table:table-row>
     <table:table-row table:style-name="ro11" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1"><text:p><text:span text:style-name="T25">a derived class can redefine an interface method inhereted from its base class. Specify the interface name, otherwize the new implementation will not be invoked:</text:span></text:p><text:p><text:span text:style-name="T25">class MyCar2 : MyCar, ImotorizedVehicle { public void IncreaseSpeed() {} }</text:span></text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string">
       <text:p>explicit implementation</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>interface name appears in implementation</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
        <text:p>implementation does not have “public” access modifier</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>called only through the interface ref</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>interface IVehicle</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>03    void IncreaseSpeed();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>05    void DecreaseSpeed();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>06}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>08class Car : IVehicle</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>09{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>10    void <text:span text:style-name="T37">Ivehicle</text:span>.IncreaseSpeed() <text:span text:style-name="T37">//note the absence of public access modifier</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>11    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>12        ...</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>13    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>15    public void DecreaseSpeed() { … }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>16}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce23"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>to avoid collisions</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>Car myCar = new Car();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>myCar.IncreaseSpeed(); //error. IncreaseSpeed is explicitly implemented</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>myCar.DecreaseSpeed(); //OK. implicitly implemented</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>Ivehicle myVehicle = myCar;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>myVehicle.IncreaseSpeed();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce25"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>extension methods</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Method 1: static method in a static class</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>static class StringUtils</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>03    public static int WordCount(string str)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>04    {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>05        return str.Split(&apos; &apos;).Length;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>06    }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>07}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>11string str = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce26" office:value-type="string" calcext:value-type="string">
       <text:p>12int count = StringUtils.WordCount(str);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Method 2: extension method:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>static class StringExtensions</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce27" office:value-type="string" calcext:value-type="string"><text:p>    public static int WordCount(<text:span text:style-name="T26">this</text:span> string str)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>    {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>        return str.Split(&apos; &apos;).Length;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>    }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>string str = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce28" office:value-type="string" calcext:value-type="string">
       <text:p>int count = str.WordCount();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="7" table:number-rows-spanned="1">
       <text:p>Extension methods are static methods that are defined in a static non-generic class. </text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="6" table:style-name="ce39"/>
      <table:table-cell table:style-name="ce39"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" table:number-columns-spanned="7" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="6" table:style-name="ce39"/>
      <table:table-cell table:style-name="ce39"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="7" table:number-rows-spanned="1">
       <text:p>Extension methods can apply to classes, structures, enums, interfaces and delegates</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="6" table:style-name="ce39"/>
      <table:table-cell table:style-name="ce39"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce30" office:value-type="string" calcext:value-type="string">
       <text:p>Limitations:</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce39" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce30" office:value-type="string" calcext:value-type="string">
       <text:p>Applies to the specified class and all derived classes</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce39" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell table:style-name="ce6" office:value-type="string" calcext:value-type="string">
       <text:p>Example ?</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce30" office:value-type="string" calcext:value-type="string">
       <text:p>To be accessible the class must be in the current namespace scope. </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce39" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="8" table:number-rows-spanned="1">
       <text:p>If there is more than one extension method with the same signature for the same type, neither can be invoked. But we can still invoke the extension method as regular static methods.</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="7" table:style-name="ce39"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="8" table:number-rows-spanned="1">
       <text:p>If there is an extension method with the same signature as a member method, the extension method cannot be invoked. But we can still invoke the extension method as regular static methods.</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="7" table:style-name="ce39"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce13"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>RTTI</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Reference has an overhead of 8 or 16 bytes. The first part is the pointer to the heap. The second part is a pointer to the System.Type instance that represents its type.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce12" office:value-type="string" calcext:value-type="string">
      <text:p>How does the CLR know which type to point at when boxing? The compiler provides this information. Check the IL code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce22" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T27">XmlSerializer</text:span> serializer = <text:span text:style-name="T28">new</text:span> <text:span text:style-name="T27">XmlSerializer</text:span>(<text:span text:style-name="T28">typeof</text:span>(Employee));</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>XmlSerializer requires an instance of System.Type</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T1">STRUCT</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Structures are value types: always allocated in the stack</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Always derive from System.ValueType</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Cannot be the base for other types.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Defined with the struct keyword.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
       <text:p>Q : what is the difference between struct and class ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May be created with or without the new keyword.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A constructor is only invoked if new is used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="7"/>If new is not used, all fields must be initialized prior to use. Because no constructor is called. Otherwise, no function call, no passing fields to functions.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>A structure may have constructors</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A default constructor may NOT be defined explicitly. It is always automatically available even when other constructors are defined.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A constructor must initialize all fields. Otherwise compile error.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A constructor may not call a base class&apos; constructor (System.ValueType) but may call another constructor of the same struct</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>Initialization of non-static fields at the declaration in a structure is not allowed.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Suitable for lightweight objects such as Point, Rectangle and Color</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>When inheritance is not required</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May not be the best choice when boxing is a concern</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May be more efficient than class is some scenarios thanks of the absence of the overhead</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce22" office:value-type="string" calcext:value-type="string"><text:p>    Also used for interoperability with unmanaged code. <text:span text:style-name="T29">Example?</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May be suitable for larger object that are never passed to or returned from methods, or otherwise assigned. Because on assignment the instance is copied.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce22" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T28">struct</text:span> <text:span text:style-name="T27">Point</text:span>{    <text:span text:style-name="T28">public</text:span> <text:span text:style-name="T28">int</text:span> X;    <text:span text:style-name="T28">public</text:span> <text:span text:style-name="T28">int</text:span> Y;    <text:span text:style-name="T28">public</text:span> Point(<text:span text:style-name="T28">int</text:span> x, <text:span text:style-name="T28">int</text:span> y)   {        <text:span text:style-name="T28">this</text:span>.X = x;        <text:span text:style-name="T28">this</text:span>.Y = y;    }    <text:span text:style-name="T28">public</text:span> <text:span text:style-name="T28">void</text:span> PrintValue()    {        <text:span text:style-name="T27">Console</text:span>.WriteLine( <text:span text:style-name="T30">&quot;{0},{1}&quot;</text:span>,  <text:span text:style-name="T28">this</text:span>.X, <text:span text:style-name="T28">this</text:span>.Y);    }}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>System.Object</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Default implementation in System.Object:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>GetHashCode returns an unpredictable hash code</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Equals performs an identity test. which means that two separate instances of a class will not be considered equal, even if their fields have equal values.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Default implementation in System.ValueType:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>GetHashCode returns a value calculated arbitrarily from one or more of its field</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Equals compares the all actual fields, but may be slow due to use of reflection</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>object myVar = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>02myVar = true;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>03myVar = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
       <text:p>everything in .NET derives from object, there is no problem with any of these assignments. It is perfectly valid to cast anything to object and the cast can be implicit, so the assignments work just fine.</text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>09object [] paramVals = new object [] { &quot;world&quot;, 3 };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>dynamic</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>01object myVar = 10;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>02myVar = true;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>03myVar = &quot;hello world&quot;;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>05// won&apos;t compile: because myVar is object which doesnot define IndexOf</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>06int index = myVar.IndexOf(&quot;world&quot;);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>solution use dynamic</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>dynamic myVar = 10;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>02myVar = true;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>03myVar = &quot;hello world&quot;;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>06int index = myVar.IndexOf(&quot;world&quot;);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>the compiler does not check, the CLR will and will throw exception</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11">
       <table:table-cell/>
       <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
        <text:p>If the variable is of a reference type, it can still refer to instances of different types, as long as they derive from the type of the variable. But the actual operations we can perform are always limited to those defined by the variable type, not by the actual type of instance it refers to.</text:p>
       </table:table-cell>
       <table:covered-table-cell/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro11">
       <table:table-cell/>
       <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1"><text:p>The dynamic keyword is an exception to this rule. It allows performing operations on a variable based on the actual type of instance it will refer to at runtime. </text:p><text:p>As a consequence, errors are detected at runtime instead of at compile time. This is called dynamic typing or late binding.</text:p>
       </table:table-cell>
       <table:covered-table-cell/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce32" office:value-type="string" calcext:value-type="string">
       <text:p>Q:what is reflection ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>reflection is used by the default implementation of Equals to access the fields of our structure, which is much slower than direct access.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>A techinique to find the method and invoke it.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>05// invoke IndexOf using reflection</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>01object myVar = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>02myVar = true;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>03myVar = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
       <text:p>Type type = myVar.GetType(); //obtain a representation of the object&apos;s runtime type information</text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>Type[] paramTypes = new Type[] { typeof(string) };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1"><text:p>MethodInfo method = type.GetMethod(&quot;IndexOf&quot;, paramTypes); <text:span text:style-name="T31">//what if GetMethod returns null ?</text:span> </text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>09object [] paramVals = new object [] { &quot;world&quot; };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
       <text:p>10int index = (int)method.Invoke(myVar, paramVals); //Invoke returns an Object. But casting to int because IndexOf returns int</text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="5">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>System.Nullable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>A nullable value type is represented with the System.Nullable structure.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce34" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="5" table:number-rows-spanned="1">
       <text:p>A nullable is a structure that internally contains two components: a boolean that specifies whether a value exists + the actual value. </text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="4" table:style-name="ce8"/>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>Since System.Nullable is a structure, it&apos;s still a value type.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
       <text:p>The value in System.Nullable can be of any type. </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>01Nullable&lt;int&gt; num1 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>02Nullable&lt;int&gt; num2 = null;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="float" office:value="3" calcext:value-type="float">
       <text:p>3</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>04int? num3 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>05int? num4 = null;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>03if (num1.HasValue)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>04{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>05}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="float" office:value="6" calcext:value-type="float">
       <text:p>6</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>07if (num1 == null)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>08{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>09}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>01// uses conversion operator from non nullable to nullable </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>02int? num1 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="float" office:value="3" calcext:value-type="float">
       <text:p>3</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>04// uses conversion operator non nullable to non nullable </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>05int num2 = (int)num1; <text:s/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>Converting to non-nullable is only allowed when the nullable has a value. Otherwise it will throw an InvalidOperationException. And when a conversion might fail it should be done explicitly.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
      <text:p>BOXING</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>// create a nullable int without a value</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>02Nullable&lt;int&gt; num = new Nullable&lt;int&gt;();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>04// box by casting to object</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>05object obj = num;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>07// check if null</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>08if (obj == null)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>09{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>10    Console.WriteLine(&quot;null&quot;);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>11}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>// create a nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>02int? num1 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>04// box it</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>05object obj = num1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>07// unbox as a nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>08int? num2 = (int?)obj;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>10// unbox as a non-nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>11int num3 = (int)obj;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
       <text:p>boxing a nullable, boxes the underlying value.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="4" table:number-rows-spanned="1">
       <text:p>calling GetType method on a nullable type, it gets invoked on the underlying value instead, which first gets boxed</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>Nullable&lt;int&gt; num = new Nullable&lt;int&gt;(10);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>03// prints System.Int32</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro11" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
       <text:p>04Console.WriteLine(num.GetType()); //if you invoke GetType on a nullable that has no value, a NullReferenceException will be thrown. That&apos;s because when boxing a Nullable that has no value the CLR returns null.</text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Implicitly Typed Local Variables</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>A local variable may be declared as var - compiler infers the type</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>01// compiler determines that type is string</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>02var text1 = &quot;hello&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>// List&lt;int&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>11var numsList = new List&lt;int&gt;();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>13// int[]</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>14var numsArray = new[] {1, 2, 3, 4, 5};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>16// can be used in loops</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>17foreach (var oneNum in numsArray)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>18{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>19    Console.WriteLine(oneNum);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>20}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>Limitations:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>Must be assigned a value at the declaration</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>Cannot be assigned null initially</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>Only local variables: no parameters, return types or fields</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>Cannot be nullable. var? Num1 = 10; //illegal</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>Statically typed - cannot change after declaration</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>var someVar = &quot;some string&quot;; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>someVar = 10; // won&apos;t compile</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>01int GetNum()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>02{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>03    var num = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>04    return num; //compiler has determined that it is an int; This method returns int, not a var.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>05}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>Guidelines:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>Do you need an int?   </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string"><text:p>Use with anonymous types, <text:a xlink:href="http://msdn.microsoft.com/en-us/netframework/aa904594" xlink:type="simple">LINQ</text:a>, cumbersome generic types</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>// use var when LINQ returns anonymous types</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>14var res3 = from n in nums</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>15            where n &gt;= 5</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
       <text:p>16            select new { Num = n, IsEven = (n % 2 == 0) };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="15">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce13"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce13" office:value-type="float" office:value="4" calcext:value-type="float">
      <text:p>4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce13" office:value-type="float" office:value="5" calcext:value-type="float">
      <text:p>5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="1047825">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="Feuille2" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>f:e</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>e:d</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>d:c</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>c:b</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b:a</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class a</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>virtual fun1</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>new</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
   </table:table>
   <table:table table:name="Feuille3" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="16" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>select film.name from film where film.actorid</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="14"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>film1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="14"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>film34</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="14"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>film</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>actor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>filmactor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>id</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>name</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>id</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>name</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>filmid</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>actorid</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="6" calcext:value-type="float">
      <text:p>6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="18" calcext:value-type="float">
      <text:p>18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="92" calcext:value-type="float">
      <text:p>92</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="34" calcext:value-type="float">
      <text:p>34</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="1" calcext:value-type="float">
      <text:p>1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="34" calcext:value-type="float">
      <text:p>34</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="6" calcext:value-type="float">
      <text:p>6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="34" calcext:value-type="float">
      <text:p>34</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="18" calcext:value-type="float">
      <text:p>18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="35" calcext:value-type="float">
      <text:p>35</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>From film.id → list of actor.names</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>From actor.id → list of film.names</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:style-name="ce40" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="16" table:number-rows-spanned="1">
      <text:p>select actor.name WHERE id=filmactor.filmid &amp;&amp; filmactor.actorid=actor.id</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="15"/>
    </table:table-row>
   </table:table>
   <table:table table:name="Feuille4" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co5" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41"/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string"><text:p>You&apos;ve gotten answers that mention ensuring that the ctor can&apos;t change what&apos;s being copied -- and they&apos;re right, putting the const there does have that effect.</text:p><text:p>More important, however, is that a temporary object cannot bind to a non-const reference. The copy ctor must take a reference to a const object to be able to make copies of temporary objects.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce42" office:value-type="string" calcext:value-type="string"><text:p>class Foo {</text:p><text:p>  Foo( const Foo&amp; f ) :</text:p><text:p>      mem1( f.mem1 ), mem2( f.mem2 ) /* etc */</text:p><text:p>  {}</text:p><text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce44"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p>where mem1 and mem2 are data members of Foo, which can be const</text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p>members, non-const members, const references or non-const references.</text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
   </table:table>
   <table:table table:name="ios" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="6" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Party * pi;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pi = [Party alloc]; <text:s text:c="2"/>can a pointer be set this way ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(ip == nil) </text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(!ip)</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ip=nil; the obj pointed to by ip is desctucted.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[ip method1]; doesn&apos;t crash or does anything if ip is nil; unlike in C</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>get ip;</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>get ip;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>single inheritance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NSObject is the root class of the entire hierarchy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>overriding a method only needs to be implemented. No need to declare it in the overriding class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>every object has an instance variable called isa. It is a pointer to the class that created it. At run time, when a message is sent to the object, it uses its isa variable to find the class and run the method</text:p><text:p>It is not a compile time type determination. It is run time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>self == this in C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Self = [super init]</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[self setItemName:name];</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>super start the search for the method from the base class, not from the current one.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>@interface BNRItem:NSObject</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>NSString *name;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int <text:s text:c="11"/>id; <text:s text:c="3"/>//this only lives within the BNRItem instance. Pointers do not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>NSMutableArray <text:s text:c="2"/>*ar; <text:s text:c="2"/>//arrays&apos; elements do not live within the array. Array can hold any mix of objects</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- (NSString *)itemName</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return itemName;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>- (void)setItemName:<text:span text:style-name="T44">(</text:span>NSString *<text:span text:style-name="T44">)</text:span>str</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>itemName=str;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>BNRItem *p = [[BNRItem alloc] init];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[p setItem:@”red sosssssa”];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NSString *str=[p itemName];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NSMutableArray array = [[NSMutableArray alloc] init];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[array addObject:[NSNull null]];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[array addObject:@”this is a string”];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int len = [array count];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>can&apos;t have two methods with different return types</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>init</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>initializer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>for each class, no matter how many initializers it has, one is chosen as designated initializer. Typically is has parameters for the most important and frequently used instance variables.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>designated </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Default init calls the designated init</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>- (id) init</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>return [self initWithField1:@”item”</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="17"/>field2:0];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>init</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="code quality" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>reusing functions in new functions instead of creating new code, reduces the chance for error and makes maintenaining code easier.</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="C# faq" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce48"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.allinoneplace.info/FAQ/Programming/DotNetFaq.aspx</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p>C#.NET FAQ</text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="150">
      <text:p>1.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="150">
      <text:p>What is C#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>C# (pronounced C-Sharp) is a new programming language introduced with the Microsoft .NET framework and is no doubt the language of choice in .NET environment. It was first created in the late 1990&apos;s as part of Microsoft’s whole .NET strategy. It is a whole new language free of backward compatibility curse and a whole bunch of new, exciting and promising features. It is an Object Oriented Programming language, which at its core, has similarities with Java, C++ and VB.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce47" table:number-columns-spanned="2" table:number-rows-spanned="1"/>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>2.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What are Jagged Arrays in C#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>A special type of array is introduced in C#. A Jagged Array is an array of an array in which the length of each array index can differ. Example: A Jagged Array can be used is to create a table in which the lengths of the rows are not same. This Array is declared using square brackets ( [ ] ) to indicate each dimension.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>3.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>How do you prevent the class from being inheritance??</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Simply include the keyword ‘Sealed’ in front of the class keyword.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>4.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What’s the advantage of using System.Text.StringBuilder over System String?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>String Builder is more efficient in cases where there is a large amount of string manipulation. Strings are immutable, so each time a string is changed, a new instance in memory is created.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>5.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the use of abstraction in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Abstraction is used to create a common set of methods that might have different specific implementations by subclasses. Abstract class cannot be instantiated and consists of abstract methods without any implementations. Classes inheriting from abstract class must implement all the methods in abstract class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>6.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the Difference between instance data and class data?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Class data in terms of static class is the data that particular class holds in its structure. Instances can refer to different objects of the same class that hold different values using the same class structure in memory heap.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>7.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the significance of static method?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Static methods are used when we want only one copy of that method to perform action and remain active at a single point in time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>8.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the uses of boxing and unboxing?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Boxing and Unboxing are used to convert value types into reference types and vice versa. Developers often need to make some methods generic and hence create methods that accept objects rather than specific value types. The advantage of reference types is that they don’t create a copy of the object in memory, instead pass the reference of the data in the memory. This uses memory much more efficiently, especially, if the object to be passed is very heavy.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>9.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the Debug class methods?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string"><text:p>a. Assert:This method checks for a condition. It displays a user message if the condition is false.</text:p><text:p>b. Write:used to write information which will be used by Trace Listeners.</text:p><text:p>c. WriteIf:Write information for Trace Listeners only if the condition is true.</text:p><text:p>d. WriteLine: same as write but, every time writes in a new line.</text:p><text:p>e. WriteLineIf:same as WriteIf but everytime writes in a new line. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>10.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is Anchoring a control and Docking a control? </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string"><text:p>Anchoring: used to resize controls dynamically with the form.</text:p><text:p>Docking: to adhere to the edges of its container.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>11.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is Form level validation and Field level Validation?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Form level validation occurs once the user is ready to submit the form. The application checks the complete form at once and validates all the fields in it and informs the user about it. Field level validation occurs only for a specific field. E.g.: As soon as the user looses focus from a name input box, the application validates the data in that particular field and informs the user about it. They are normally used for mandatory fields using javascript.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>12.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is Code-Access security?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Code access security is a mechanism that helps limit the access to the code by protecting the resources. It defines permissions which tell about the rights to access various. It also imposes restrictions on code at run time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>13.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between DataGrid control in Windows Forms and Web Forms?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Windows Forms controls have more functionality than Web Forms. Also, DataGrid in Web Forms has to be bound to the form before it displays any data.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>14.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between Finalize() and Dispose()?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Dispose() is called by as an indication for an object to release any unmanaged resources it has held.Finalize() is used for the same purpose as dispose however finalize doesn’t assure the garbage collection of an object.Dispose() operates determinalistically due to which it is generally preferred.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>15.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>How does the XmlSerializer work? What ACL permissions does a process using it require?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>The XmlSerializer constructor generates a pair of classes derived from XmlSerializationReader and XmlSerializationWriter by analysis of the classes using reflection. Temporary C# files are created and compiled into a temporary assembly and then loaded into a process.The XmlSerializer caches the temporary assemblies on a per-type basis as the code generated like this is expensive. This cached assembly is used after a class is created.Therefore the XmlSerialize requires full permissions on the temporary directory which is a user profile temp directory for windows applications.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>16.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What are circular references?how garbage collection deals with circular references?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string"><text:p>A circular reference is a run-around wherein the 2 or more resources are interdependent on each other rendering the entire chain of references to be unusable.There are quite a few ways of handling the problem of detecting and collecting cyclic references. </text:p><text:p>1. A system may explicitly forbid reference cycles.</text:p><text:p>2. Systems at times ignore cycles when they have short lives and a small amount of cyclic garbage. In this case a methodology of avoiding cyclic data structures is applied at the expense of efficiency.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>17.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between Interface-oriented, Object-oriented and Aspect-oriented programming?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Interface oriented approach compels to develop the software based on the contract. Object oriented approach emphasizes on its aspects like, Abstraction, Encapsulation, Inheritance, Polymorphism. Cross cutting concerns cannot be implemented in object oriented programming. That’s not the case with aspect-oriented. However, there is a risk of system failure in this situation.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>18.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the accessibility modifier &quot;protected internal&quot; in C#.?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string"><text:p>The Protected Internal access modifier can be accessed by:</text:p><text:p>Members of the Assembly</text:p><text:p>The inheriting class</text:p><text:p>The class itself,</text:p><text:p>Its access is limited to the types derived from the defining class in the current assembly or the assembly itself.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>19.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between Debug.Write and Trace.Write? When should each be used?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string"><text:p>Debug.Write: Debug Mode, Release Mode (used while debuging a project).</text:p><text:p>Trace.write: Release Mode (used in Released verion of Applications).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>20.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What are implementation inheritance and interface inheritance?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Implementation inheritance is achieved when a class is derived from another class in such a way that it inherits all its members. Interface inheritance is when a class inherits only the signatures of the functions from another class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>21.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What are generics in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Generic types to maximize code reuse, type safety, and performance. They can be used to create collection classes. Generic collection classes in the System.Collections.Generic namespace should be used instead of classes such as ArrayList in the System.Collections namespace.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>22.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the use of GetCommandLineArgs() method in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>With GetCommandLineArgs() method, the command line arguments can be accessed. The value returned is an array of strings.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>23.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the use of System.Environment class in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>The System.Environment class can be used to retrieve information like command-line arguments, the exit code, environment variable settings, contents of the call stack, time since last system boot, the version of the common language runtime.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>24.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is an Exception in .NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Exceptions are errors that occur during the runtime of a program. The advantage of using exceptions is that the program doesn’t terminate due to the occurrence of the exception. Whenever an exception is occurred the .NET runtime throws an object of specified type of Exception. The class ‘Exception’ is the base class of all the exceptions..</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>25.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What are Custom Exceptions?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Custom Exceptions are user defined exceptions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>26.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is a Constructor?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>It is the first method that are called on instantiation of a type. It provides way to set default values for data before the object is available for use. Performs other necessary functions before the object is available for use.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>27.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Can private virtual methods be overridden in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>No, moreover, you cannot access private methods in inherited classes. They have to be protected in the base class to allow any sort of access.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>28.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Is is possible to force garbage collector to run?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Yes, we can force garbage collector to run using System.GC.Collect().</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>29.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is an Event?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>When an action is performed, this action is noticed by the computer application based on which the output is displayed. These actions are called events. Examples of events are pressing of the keys on the keyboard, clicking of the mouse. Likewise, there are a number of events which capture your actions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>30.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is Delegate?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Delegates are kind of similar to the function pointers. But they are secure and type-safe. A delegate instance encapsulates a static or an instance method. Declaring a delegate defines a reference type which can be used to encapsulate a method having a specific signature.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>31.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>How does object pooling and connection pooling differ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>In Object pooling, you can control the number of connections. In connection pooling, you can control the maximum number reached. When using connection pooling, if there is nothing in the pool, a connection is created since the creation is on the same thread. In object pooling, the pool decides the creation of an object depending on whether the maximum is reached which in case if it is, the next available object is returned. However, this could increase the time complexity if the object is heavy.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>32.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is Language Integrated Query (LINQ)?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>LINQ is a set of extensions to .NET Framework that encapsulate language integrated query, set and other transformation operations. It extends VB, C# with their language syntax for queries. It also provides class libraries which allow a developer to take advantages of these features.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>33.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the purpose of CultureInfo class. What namespace contains it?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>System.Globalization namespace contains CultureInfo class. This class provides information about a specific culture, i.e. datetime format, currency, language etc.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>34.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Which is the class from where everything is derived in .NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>System.Object. Object class is the ultimate base class of all classes in the .NET Framework, it is the root of the type hierarchy. It is often used as a generic argument in class methods - all classes are treatable as Object classes.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>35.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the use of assert() method?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Assert method is in debug compilation. It takes a boolean condition as a parameter. It shows error dialog if the condition is false and if the condition is true, the program proceeds without interruption.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>36.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Difference between the System.Array.CopyTo() and System.Array.Clone()?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>System.Array.CopyTo() performs a deep copy of the array. System.Array.Clone() performs a shallow copy of the array</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>37.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the purpose of Dispose method?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Dispose method is used to destroy the objects from the memory.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>38.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between shadow and override?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>In general when you extend a class you shadow fields with the same name in the base class and override virtual methods with the same name and parameter list in the base class. Overriding makes the base class method invisible. Shadowing a field only hides the field from view. You can still explicitly touch the hidden shadowed field if you wish. You cannot touch an invisible overridden method.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>39.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between const and readonly in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>The read only can be modified by the class it is contained in. However, the const cannot be modified. It needs to be instantiated only at the compile time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>40.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Is there regular expression (regex) support available to C# developers?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Yes. The .NET class libraries provide support for regular expressions. Look at the System.Text.RegularExpressions namespace.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>41.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Is there an equivalent of exit() for quitting a C# .NET application?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Yes, you can use System.Environment.Exit(int exitCode) to exit the application or Application.Exit() if it’s a Windows Forms app. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>42.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Is there a way to force garbage collection?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Yes. Set all references to null and then call System.GC.Collect(). If you need to have some objects destructed, and System.GC.Collect() doesn’t seem to be doing it for you, you can force finalizers to be run by setting all the references to the object to null and then calling System.GC.RunFinalizers().</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>43.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Is it possible to restrict the scope of a field/method of a class to the classes in the same namespace?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>There is no way to restrict to a namespace. Namespaces are never units of protection. But if you’re using assemblies, you can use the ‘internal’ access modifier to restrict access to only within the assembly.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>44.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>How do I implement function pointers in C#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Delegates provide the functionality of function pointers in C#. A delegate is a type that references a method. Once a delegate is assigned a method, it behaves exactly like that method.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>45.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is partial class?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>partial classes mean that your class definition can be split into multiple physical files. Logically, partial classes do not make any difference to the compiler. During compile time, it simply groups all the various partial classes and treats them as a single entity.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>46.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What does the volatile modifier do?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>The volatile modifier is usually used for a field that is accessed by multiple threads without using the lock statement to serialize access. Using the volatile modifier ensures that one thread retrieves the most up-to-date value written by another thread.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>47.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Why do I get a security exception when I try to run my application?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Some security exceptions are thrown if you are working on a network share. There are some parts of the frameworks that run if being run off a share (roaming profile, mapped drives, etc.). To see if this is what&apos;s happening, just move the executable over to your local drive and see if it runs without the exceptions. One of the common exceptions thrown under these conditions is System.Security.SecurityException.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>48.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between directcast and ctype</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>DirectCast requires the run-time type of an object variable to be the same as the specified type.The run-time performance of DirectCast is better than that of CType, if the specified type and the run-time typeof the expression are the same. Ctype works fine if there is a valid conversion defined between the expression and the type.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>49.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>How to create and manage files in c#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Using System.IO namespace and FileStream and StreamWriter classes.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>50.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is FormClosed and FormClosing events?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>The FormClosing event occurs as the form is being closed.You can Cancel this event. If you cancel this event, the form remains opened. To cancel the closure of a form, set the Cancel property of the FormClosingEventArgs passed to your event handler to true. The FormClosed event occurs after the form has been closed by the user. When a form is closed, it is disposed, releasing all resources associated with the form</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce47" table:number-columns-spanned="2" table:number-rows-spanned="1"/>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="1048273">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
   </table:table>
   <table:table table:name="ios faq" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce51"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.faqs.org/faqs/computer-lang/Objective-C/faq/</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Contents</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* Contents</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 1. About this FAQ</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 1.1 Where can I find the latest version of the FAQ ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 2. Objective-C Compiler Commands</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.1 What&apos;s the file suffix for Objective-C source ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.2 How do I compile .m files with the Stepstone compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.3 How do I compile .m files with the Apple compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.4 How do I compile .m files with the GNU C compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.5 How do I compile .m files with the POC ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 3. Objective-C preprocessor issues</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.1 What&apos;s the syntax for comments ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.2 How do I include the root class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.3 What is #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.4 Why am I lectured about using #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 4. Object datatype (id)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 4.1 What is id ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 4.2 What is the difference between self and super ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 4.3 What is @defs() ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 5. Message selectors (SEL)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 5.1 What is a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 5.2 What is perform: doing ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 5.3 How do I know the SEL of a given method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 6. Implementation pointers (IMP)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.1 What is an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.2 How do I get an IMP given a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.3 How do I send a message given an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.4 How can I use IMP for methods returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.5 Can I use perform: for a message returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 7. Copying objects</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 7.1 What&apos;s the difference between copy and deepCopy ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 8. Objective-C and C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 8.1 How can I link a C++ library into an Objective-C program</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 9. Messages</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 9.1 How do I make a static method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 9.2 How do I prevent an object from sending a given message ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 9.3 Do I have to recompile everything if I change the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>implementation of a method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 10. Instance and Class Variables</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 10.1 Do I have to recompile everything if I change instance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>variables of a class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 11. Objective-C and X-Windows</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 11.1 How do I include X Intrinsics headers into an</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C file ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 12. Stepstone Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 12.1 How do I allocate an object on the stack ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 13. GNU Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 13.1 Why do I get a &apos;floating point exception&apos; ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 14. Apple Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 14.1 What&apos;s the class of a constant string ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 14.2 How can I link a C++ library into an Objective-C program</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 15. Portable Object Compiler Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 15.1 What&apos;s the syntax for class variables ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 15.2 How do I forward messages ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 15.3 How can I link a C++ library into an Objective-C program</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 16. Books and further reading</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.1 Object-Oriented Programming : An Evolutionary Approach,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.2 An Introduction To Object-Oriented Programming, 2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.3 Objective-C : Object-Oriented Programming Techniques</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.4 Applications of Object-Oriented Programming; C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>SmallTalk Actor Objective-C Object PASCAL</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="7"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="31"/>1. About this FAQ</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>1.1 Where can I find the latest version of the FAQ ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>   It&apos;s posted once a month to <text:a xlink:href="http://groups.google.com/group/comp.lang.objective-c" xlink:type="simple">comp.lang.objective-c</text:a>, <text:a xlink:href="http://groups.google.com/group/comp.answers" xlink:type="simple">comp.answers</text:a> and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>   <text:a xlink:href="http://groups.google.com/group/news.answers" xlink:type="simple">news.answers</text:a>. It is archived at</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>   <text:a xlink:href="ftp://rtfm.mit.edu/pub/faqs/computer-lang/Objective-C/faq" xlink:type="simple">ftp://rtfm.mit.edu/pub/faqs/computer-lang/Objective-C/faq</text:a>.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>2. Objective-C Compiler Commands</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>2.1 What&apos;s the file suffix for Objective-C source ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s .m for implementation files, and .h for header files. Objective-C</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>compilers usually also accept .c as a suffix, but compile those files</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>in plain C mode.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>2.2 How do I compile .m files with the Stepstone compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>objcc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>objcc -o class class.o</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>2.3 How do I compile .m files with the Apple compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>cc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>cc -o class class.o</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>   See <text:a xlink:href="http://www.apple.com/" xlink:type="simple">http://www.apple.com</text:a> for more information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>2.4 How do I compile .m files with the GNU C compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>gcc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>gcc -o class class.o -lobjc -lpthread</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>   See <text:a xlink:href="http://www.gnu.org/" xlink:type="simple">http://www.gnu.org</text:a> for more information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>2.5 How do I compile .m files with the POC ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>objc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>objc -o class class.o</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>   See <text:a xlink:href="http://metalab.unc.edu/pub/Linux/devel/lang/objc/" xlink:type="simple">http://metalab.unc.edu/pub/Linux/devel/lang/objc/</text:a> for more</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="22"/>3. Objective-C preprocessor issues</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>3.1 What&apos;s the syntax for comments ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The Objective-C preprocessor usually supports two styles of comments :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>// this is a BCPL-style comment (extends to end of line)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>/* this is a C-style comment */</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>3.2 How do I include the root class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>On Stepstone and the POC, the header file to include is :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>On GNU cc and Apple cc, it&apos;s :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;objc/Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The root class is located in a directory called runtime for the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Stepstone compiler, and in a directory called objcrt for the POC, but</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>because of implicit -I options passed on to the preprocessor, these</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>locations are automatically searched.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>3.3 What is #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s a C preprocessor construct to avoid multiple inclusions of the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>same file.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>#import &lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>is an alternative to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>where the .h file is protected itself against multiple inclusions :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>#ifndef _OBJECT_H_</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>#define _OBJECT_H_</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>#endif</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>3.4 Why am I lectured about using #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The GNU Objective-C compiler emits a warning when you use #import</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>because some people find using #import poor style. You can turn off</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>the warning by using the -Wno-import option, you could modify the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>compiler source code and set the variable warn_import (in the file</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>cccp.c) or you could convert your code to use pairs of #ifndef and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>#endif, as shown above, which makes your code work with all compilers.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>4. Object datatype (id)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>4.1 What is id ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s a generic C type that Objective-C uses for an arbitrary object.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>For example, a static function that takes one object as argument and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>returns an object, could be declared as :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>static id myfunction(id argument) { ... }</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>4.2 What is the difference between self and super ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>self is a variable that refers to the object that received a message</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>in a method implementation. super refers to the same variable, but</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>directs the compiler to use a method implementation from the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>superclass.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Using pseudo-code, where copy (from super) is the syntax for the copy</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>implementation of the superclass, the following are equivalent :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>myObject = [super copy];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>and,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>myObject = [self copy (from super)]; // pseudo-code</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>4.3 What is @defs() ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s a compiler directive to get access to the internal memory layout</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of instances of a particular class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>typedef struct { @defs(MyClass) } *TMyClass;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>defines a C-type TMyClass with a memory layout that is the same as</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>that of MyClass instances.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="26"/>5. Message selectors (SEL)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>5.1 What is a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s the C type of a message selector; it&apos;s often defined as a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>(uniqued) string of characters (the name of the method, including</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>colons), but not all compilers define the type as such.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>5.2 What is perform: doing ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>perform: is a message to send a message, identified by its message</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>selector (SEL), to an object.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>5.3 How do I know the SEL of a given method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>If the name of the method is known at compile time, use @selector :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>[myObject perform:@selector(close)];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>At runtime, you can lookup the selector by a runtime function that</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>takes the name of the message as argument, as in :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = selUid(name); // for Stepstone</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = sel_getUid(name); // for Apple</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = sel_get_any_uid(name); // for GNU Objective C</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = selUid(name); // for POC</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>6. Implementation pointers (IMP)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>6.1 What is an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s the C type of a method implementation pointer, a function pointer</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>to the function that implements an Objective-C method. It is defined</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>to return id and takes two hidden arguments, self and _cmd :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>typedef id (*IMP)(id self,SEL _cmd,...);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>6.2 How do I get an IMP given a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>This can be done by sending a methodFor: message :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>IMP myImp = [myObject methodFor:mySel];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>6.3 How do I send a message given an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>By dereferencing the function pointer. The following are all</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>equivalent :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>[myObject myMessage];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>or</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>IMP myImp = [myObject methodFor:@selector(myMessage)];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>myImp(myObject,@selector(myMessage));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>or</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>[myObject perform:@selector(myMessage)];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>6.4 How can I use IMP for methods returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>For methods that return a C type such as double instead of id, the IMP</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>function pointer is casted from pointer to a function returning id to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>pointer to a function returning double :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>double aDouble = ((double (*) (id,SEL))myImp)(self,_cmd);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>6.5 Can I use perform: for a message returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>No. The method perform: is for sending messages returning id without</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>any other argument. Use perform:with: if the message returns id and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>takes one argument. Use methodFor: for the general case of any number</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of arguments and any return type.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="30"/>7. Copying objects</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>7.1 What&apos;s the difference between copy and deepCopy ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>copy is intented to make a bytecopy of the object, sharing pointers</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>with the original, and can be overridden to copy additional memory.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>deepCopy is intented to make a copy that doesn&apos;t share pointers with</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>the original. A deep copy of an object contains copies of its instance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>variables, while a plain copy is normally just a copy at the first</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>level.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>8. Objective-C and C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>8.1 How can I link a C++ library into an Objective-C program ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You have two options : either use the Apple compiler or use the POC.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The former accepts a mix of C++ and Objective-C syntax (called</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Objective-C++), the latter compiles Objective-C into C and then</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>compiles the intermediate code with a C++ compiler. See the compiler</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>specific questions for more information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="34"/>9. Messages</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>9.1 How do I make a static method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Methods are always implemented in Objective-C as static functions. The</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>only way to obtain the IMP (implementation pointer) of a method is</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>through the runtime (via methodFor: and friends), because the function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>itself is static to the file that implements the method.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>9.2 How do I prevent an object from sending a given message ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You can&apos;t. If your object responds to a message, any other class can</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>send this message. You could add an extra argument sender and check,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>as in :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>- mymethod:sender</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if ([sender isKindOf:..]) ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>But this still requires cooperation of the sender, to use a correct</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>argument :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>[anObject mymethod:self];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>9.3 Do I have to recompile everything if I change the implementation of a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>No, you only have to recompile the implementation of the method</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>itself. Files that only send that particular messages do not have to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>be recompiled because Objective-C has dynamic binding.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>10. Instance and Class Variables</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>10.1 Do I have to recompile everything if I change instance variables of a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You have to recompile that class, all of its subclasses, and those</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>files that use @defs() or use direct access to the instance variables</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of that class. In short, using @defs() to access instance variables,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>or accessing instance variables through subclassing, breaks the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>encapsulation that the Objective-C runtime normally provides for all</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>other files (the files that you do not have to recompile).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="25"/>11. Objective-C and X-Windows</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>11.1 How do I include X Intrinsics headers into an Objective-C file ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>To avoid a conflict between Objective-C&apos;s Object and the X11/Object,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>do the following :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>#define Object XtObject</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;X11/Intrinsic.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;X11/IntrinsicP.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>#undef Object</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>12. Stepstone Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>12.1 How do I allocate an object on the stack ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>To allocate an instance of &apos;MyClass&apos; on the stack :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>MyClass aClass = [MyClass new];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="20"/>13. GNU Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>13.1 Why do I get a &apos;floating point exception&apos; ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>This used to happen on some platforms and is described at</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>   <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387</text:a>. A solution</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>was to add -lieee to the command line, so that an invalid floating</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>point operation in the runtime did not send a signal. DJGPP users can</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>consult http://www.delorie.com/djgpp/v2faq/. AIX users may want to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>consult http://world.std.com/~gsk/oc-rs6000-problems.html. In some</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>cases, you can fix the problem by upgrading to a more recent version</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of the GNU Objective-C runtime and/or compiler.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="19"/>14. Apple Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>14.1 What&apos;s the class of a constant string ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s an NXConstantString.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>NXConstantString *myString = @&quot;my string&quot;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>14.2 How can I link a C++ library into an Objective-C program ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>c++ -c file.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>c++ file.o -lcpluslib -o myprogram</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>15. Portable Object Compiler Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>15.1 What&apos;s the syntax for class variables ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>List the class variables after the instance variables, and group them</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>together in the same way as instance variables, as follows :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>@implementation MyClass : Object { id ivar1; int ivar2; } : { id cvar1; }</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>@end</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>15.2 How do I forward messages ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You have to implement doesNotUnderstand: to send a sentTo: message.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>- doesNotUnderstand:aMsg</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return [aMsg sentTo:aProxy];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>15.3 How can I link a C++ library into an Objective-C program ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>objc -c -cplus file.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>objc -cplus file.o -lcpluslib -o myprogram</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="25"/>16. Books and further reading</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>16.1 Object-Oriented Programming : An Evolutionary Approach, 2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Brad Cox &amp; Andy Novobilski, ISBN 0201548348.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>16.2 An Introduction To Object-Oriented Programming, 2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Timothy Budd, ISBN 0201824191</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>16.3 Objective-C : Object-Oriented Programming Techniques</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Pinson, Lewis J. / Wiener, Richard S., ISBN 0201508281</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>16.4 Applications of Object-Oriented Programming; C++ SmallTalk Actor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Objective-C Object PASCAL</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="1048219">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
   </table:table>
   <table:table table:name="ios faq2" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="1024" table:default-cell-style-name="ce51"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://faqs.cs.uu.nl/na-dir/Objective-C/answers.html</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://www.cs.uu.nl/" xlink:type="simple"> </text:a> Note from archiver&lt;at&gt;cs.uu.nl: This page is part of a big <text:a xlink:href="http://faqs.cs.uu.nl/" xlink:type="simple">collection</text:a> of Usenet postings, archived here for your convenience. For matters concerning the content of this page, please contact its author(s); use the <text:a xlink:href="ftp://ftp.cs.uu.nl/pub/NEWS.ANSWERS/Objective-C/answers" xlink:type="simple">source</text:a>, if all else fails. For matters concerning the archive as a whole, please refer to the <text:a xlink:href="http://faqs.cs.uu.nl/na-msc/descr.html" xlink:type="simple">archive description</text:a> or contact the archiver. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>Subject: comp.lang.objective-c FAQ, part 1/3: Answers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>This article was archived around: 17 Sep 1998 12:52:00 GMT </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>All FAQs in Directory: <text:a xlink:href="http://faqs.cs.uu.nl/na-dir/Objective-C/idx.html" xlink:type="simple">Objective-C</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>All FAQs posted in: <text:a xlink:href="http://faqs.cs.uu.nl/na-bng/comp.lang.objective-c.html" xlink:type="simple">comp.lang.objective-c</text:a>, <text:a xlink:href="http://faqs.cs.uu.nl/na-bng/comp.sys.mac.programmer.info.html" xlink:type="simple">comp.sys.mac.programmer.info</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>Source: <text:a xlink:href="ftp://ftp.cs.uu.nl/pub/NEWS.ANSWERS/Objective-C/answers" xlink:type="simple">Usenet Version</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Archive-name: Objective-C/answers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Version: $Id: answers,v 3.64 1998/09/17 12:51:31 tiggr Exp $</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="33"/>Answers to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="25"/>FREQUENTLY ASKED QUESTIONS</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="27"/>concerning Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>This is the first in a series of three informational postings concerning</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>comp.lang.objective-c. <text:s/>This first part answers FAQs; the second part lists</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>available class libraries and the third part is a simple sample Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>program.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>This document answers the following questions:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>1 <text:s text:c="2"/>What is Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>2 <text:s text:c="2"/>What exactly is it that makes Objective-C have `classes similar to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>Smalltalk&apos;, and what are the resulting capabilities of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>3 <text:s text:c="2"/>What are the differences between Objective-C and C++?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>4 <text:s text:c="2"/>What are the differences between Objective-C and Java?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>5 <text:s text:c="2"/>What are the `nice features&apos; of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>6 <text:s text:c="2"/>What are some problems of the language and how can I work around them?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>7 <text:s text:c="2"/>What object encapsulation does Objective-C provide?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>8 <text:s text:c="2"/>What are protocols?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>9 <text:s text:c="2"/>Does Objective-C employ garbage collection?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>10 <text:s/>How do I debug Objective-C using an unaware gdb?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>11 <text:s/>I get this `Floating exception&apos;...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>12 <text:s/>Why am I lectured by gcc about `#import&apos;?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>13 <text:s/>What written information concerning Objective-C is available?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>14 <text:s/>History <text:s text:c="3"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>15 <text:s/>Major compilers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>16 <text:s/>Compiler differences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>17 <text:s/>Objective-C support per platform</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>18 <text:s/>What are the newsgroups or mailing lists to read?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>19 <text:s/>Are there any FTP sites with Objective C code? <text:s/>Where?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>20 <text:s/>Is there any information on the Net concerning Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>21 <text:s/>For more information...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>(To find a question search on the question number starting a line.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>1 <text:s text:c="2"/>What is Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C is an object oriented computer programming language. <text:s/>It is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a superset of ANSI C and provides classes and message passing similar to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C includes, when compared to C, a few more keywords and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>constructs, a short description of which follows. <text:s/>For a complete</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>example see part 3 of this FAQ.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`@interface&apos; declares a new class. <text:s/>It indicates the name of the class,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the name of its superclass, the protocols adhered to (see Q7), the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>layout of the instance variables (similar to the definition of a struct,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>but including encapsulation information (see Q6)) and declares the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>methods implemented by this class. <text:s/>A class&apos; interface usually resides</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>in a file called `&lt;classname&gt;.h&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`@implementation&apos; defines a class. <text:s/>The implementation is no more than a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>collection of method definitions. <text:s/>Without an implementation, a class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>does not exist at run time. <text:s/>The implementation of a class usually</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>resides in a file called `&lt;classname&gt;.m&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>A category is a named collection of method definitions which are added</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to an existing class, possibly at run time. <text:s/>Thus, you use a category</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to add methods to a class. <text:s/>Some Objective-C implementations allow a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>category to even replace methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C includes the predefined type `id&apos; which stands for a pointer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to some object. <text:s/>Thus, `id obj;&apos; declares a pointer to an object. <text:s/>The</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>actual class of the object being pointed to is almost irrelevant, since</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C does run-time binding.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`-message;&apos; declares a method called `message&apos;. <text:s/>The `-&apos; indicates that</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the message can be sent to objects. <text:s/>A `+&apos; instead indicates the message</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>can be sent to class objects. <text:s/>A method is similar to a function in that</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it has arguments and a return value. <text:s/>The default return type is `id&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>If a method has nothing useful to return, it returns `self&apos;, which is a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>pointer to the object to which the message was sent (similar to `this&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>in C++).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>[obj message], [obj message: arg1] and [obj message: arg1 with: arg2]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>are examples of sending a message to the object OBJ with 0, 1 and 2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>arguments respectively. <text:s/>The name of the message is called the selector.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In this example, the selectors are: `message&apos;, `message:&apos; and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`message:with:&apos;, respectively.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>2 <text:s text:c="2"/>What exactly is it that makes Objective-C have `classes similar to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Smalltalk&apos;, and what are the resulting capabilities of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C is as close to Smalltalk as a compiled language allows:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Much of the syntax, i.e. both Smalltalk and Objective-C use method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>names like `a:method:name:&apos;. <text:s/>In Objective-C, the message sending</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>construct is enclosed in square brackets, like this:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[anObject aMessage: arg]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>whereas Smalltalk uses something like</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>anObject aMessage: arg</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* The basic class hierarchy: single inheritance with the `Object&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>class as the root of the tree.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Most method names in the Object class are the same like, for example,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`respondsTo:&apos;. <text:s/>What is called `doesNotUnderstand:&apos; in Smalltalk</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>is unchanged in the POC, but it is called `doesNotRecognize:&apos; in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU and Apple Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Smalltalk normally uses `doesNotUnderstand:&apos; to implement</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>forwarding, delegation, proxies, etc. <text:s/>In [GNU, Apple] Objective-C,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>such functionality is implemented by `forward::&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Objective-C has class objects and meta classes mostly like Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* You can add or delete methods and classes at runtime. <text:s/>A subclass</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>can pose as its superclass.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Objective-C does not have class variables like Smalltalk, but pool</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>variables and globals are easily emulated via static variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Objective-C is compiled---Smalltalk is only partially compiled. <text:s/>The</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>current Objective-C implementations are all *much* faster than any</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Smalltalk. <text:s/>For example ParcPlace Smalltalk-80/4 is at least 3 times</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>slower than both the GNU and NeXT Objective-C&apos;s. <text:s/>(This was measured</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>using the Self/Smalltalk benchmark suite available by FTP from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`self.stanford.edu:pub/Self-2.0.1&apos;.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The big difference of course is that Objective-C is a hybrid between</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Smalltalk and C. <text:s/>One can choose to represent a string as a `char *&apos; or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>as an object, whereas in Smalltalk everything is an object. <text:s/>This is one</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reason for Objective-C being faster. <text:s/>On the other hand, if every bit of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>information in an Objective-C program would be represented by an object,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the program would probably run at a speed comparable to Smalltalk and it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>would suffer from not having optimizations performed on the basic</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>classes, like Smalltalk can do.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>3 <text:s text:c="2"/>What are the differences between Objective-C and C++?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>C++ is a multi-paradigm language; Objective-C is object orientation on</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>top of C. <text:s/>In this answer, only the OO aspects of both languages will be</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>discussed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In Objective-C, the value of a variable denoting an object is always a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reference to the object. <text:s/>In C++ it is, in addition, possible for the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>variable&apos;s value to be the actual object.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In Objective-C, all method invocations are dynamically bound. <text:s/>In C++,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>invocations of virtual member functions are dynamically bound. <text:s/>Other</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>(non-virtual) member functions are more like scoped normal functions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>with a different syntax. <text:s/>In Objective-C, the dynamic binding is safe:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it will be signaled if an object does not implement the requested</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>method; in C++, the results will be unpredictable. <text:s/>In Objective-C, the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>safe dynamic binding mechanism underlies method forwarding and easy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>delegation. <text:s/>The selector type and perform: methods further increase the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>usefulness of dynamic binding.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C only allows single inheritance, with the Object class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>residing at the root of the inheritance tree. <text:s/>C++ allows multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance where direct superclasses must be distinct and conspicuous</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>use of `virtual&apos; defines whether a repeatedly inherited superclass is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>shared or repeated in the subclass.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In Objective-C, static typing is optional, though commonly used; in C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>static typing is mandatory.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In C++ (member) functions can be overloaded on argument types.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Operators can be overloaded too. <text:s/>Both are not possible in Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Other differences include C++&apos; implicit invocation of constructor and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>destructor functions when objects enter and exit scope, respectively;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and the concept of `friend&apos; classes and functions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C protocols resemble C++ signatures. <text:s/>In Objective-C, a class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>is an object like any other; C++ classes do not exist at run time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>4 <text:s text:c="2"/>What is the difference between Objective-C and Java?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The most obvious difference is syntax: Java&apos;s syntax is based on C++&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>whereas Objective-C employs the C syntax (and semantics) with the syntax</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of object declaration and manipulation based on Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The Java object model comes straight from Objective-C. <text:s/>Nested classes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>do not change that since they are retrofitted, in Java 1.1, onto the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>original Java 1.0 object model for compatibility with 1.0 tools.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Features that Java adds include mandatory typing, exception and thread</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>support in the language, security managers, name spaces, predefined</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class libraries (java.lang, awt), etc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Features that Java misses include categories and the selector type. <text:s/>No</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>categories means that a class can not be amended to suit your needs (a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>problem suffered by more OO languages, including C++). <text:s/>No selector type</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>means that `forward::&apos; and `perform:&apos; methods do not exist, and that the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>possibilities of dynamic binding are limited; e.g. you can&apos;t tell an</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>array to say `@selector (hello)&apos; to all its elements, and the buttons in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>your GUI won&apos;t be able to use the target/action paradigm employed by the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>OPENSTEP AppKit (and which is why inner classes were invented in Java</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>1.1).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Java currently enjoys a lot of `compile-once run-anywhere&apos; hype. <text:s/>Even</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>though Objective-C in this respect suffers the portability problems of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>C, OPENSTEP provides a foundation that could be described as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`compile-once-for-each-platform run-on-each-platform&apos;: OPENSTEP enables</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>application deployment on platforms ranging from MS Windows to Solaris.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>This is without modifications to the source, which is what</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`compile-once&apos; is all about.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>5 <text:s text:c="2"/>What are the `nice features&apos; of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The possibility to load class definitions at run time. <text:s/>The possibility</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to extend a class at compile, link, or run time, through a category or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class posing.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objects are dynamically typed: full type information (name and type of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>instance variables; name, argument and return types of methods, etc) is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>available at run time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Every method invocation is dynamically bound. <text:s/>Add to this the selector</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>type, forward:: and perform: methods, and you get flexibility not easily</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>matched by other OO languages. <text:s/>Object archiving and distributed objects</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>(`remote method invocation&apos; in Java speak) are easy, not just to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>implement but also to use.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>6 <text:s text:c="2"/>What are some problems of the language and how can I work around them?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The underlying language is C: use Objective-C and you get all of C&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>problems for free.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There are some `common problems&apos;:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>There is no innate multiple inheritance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Protocols address the absence of multiple inheritance (MI) to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>some extent: Technically, protocols are equivalent to MI for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>purely &quot;abstract&quot; classes (see the answer on `Protocols&apos; below).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>To get around the absence of MI, you can create a compound</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>class, i.e. a class with instance variables that are references</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>to other objects. <text:s/>Instances can specifically redirect messages</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>to any combination of the objects they are compounded of. <text:s/>(It</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>isn&apos;t that much of a hassle and you have direct control over the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>inheritance logistics.) <text:s/>Of course, this is not `getting around</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>the problem of not having multiple inheritance&apos;, but just</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>modeling the world slightly different in such a way that you</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>don&apos;t need multiple inheritance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>There are no class variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>You can get around this by defining a static variable in the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>implementation file, and defining access methods for it. <text:s/>This</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>is actually a more desirable way of designing a class hierarchy,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>because subclasses shouldn&apos;t access superclass storage (this</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>would cause the subclass to break if the superclass was</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>reimplemented), and allows the subclass to override the storage</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>(if the classes access all their own variables via methods).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>To get the effect of class variables for which each subclass has</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>a distinct value, more elaborate schemes are needed. <text:s/>An often</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>used solution is to use a hash table to store the value of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>`variable&apos;, keyed on the class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>7 <text:s text:c="2"/>What object encapsulation does Objective-C provide?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Object encapsulation can be discerned at two levels: encapsulation of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>instance variables and of methods. <text:s/>In Objective-C, the two are quite</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>different.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Instance variables:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The keywords @public, @private and @protected are provided to secure</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>instance variables from prying eyes to some extent.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>@public <text:s text:c="8"/>anyone can access any instance variable.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>@protected <text:s text:c="5"/>only methods belonging to this object&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>class or a subclass thereof have access to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>the instance variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>@private <text:s text:c="7"/>only methods of this class may access the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>instance variables. <text:s/>This excludes methods</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>of a subclass.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>If not explicitly set, all instance variables are @protected. <text:s/>Some</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>people advocate that only @private should be used. <text:s/>It is generally</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>agreed upon that @public if prohibited.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Note: Instance variable encapsulation is enforced at compile-time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>At run-time, full typing information on all instance variables is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>available, which sort-of makes all variables @public again.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Methods:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>To the Objective-C runtime, all methods are @public. <text:s/>The programmer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>can only show his/her intention of making specific methods not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>public by not advertising them in the class&apos; interface. <text:s/>In</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>addition, so-called private methods can be put in a category with a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>special name, like `secret&apos; or `private&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>However, these tricks do not help much if the method is declared</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>elsewhere, unless one employs static typing. <text:s/>And the runtime</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>doesn&apos;t care about all this and any programmer can easily circumvent</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>the tricks described. <text:s/>Thus, all methods really are always @public.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>8 <text:s text:c="2"/>What are Protocols?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols are an addition to Objective-C that allows you to organize</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>related methods into groups that form high-level behaviors. <text:s/>Protocols</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>are currently available in NeXTSTEP (since 3.0) and derivatives, and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU CC (since 2.4).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In short, a protocol is a set of method declarations. <text:s/>A protocol can</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inherit from multiple other protocols, and a class can inherit multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>protocols. <text:s/>The protocol hierarchy is unrelated to the class hierarchy.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The type of a variable can be `id &lt;P&gt;&apos; to denote that the class of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>object pointed to does not matter, as long as the class implements all</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>methods prescribed by the protocol P. <text:s/>Protocols provide `multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance of interface&apos;. <text:s/>They are matched by Java interfaces and C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>signatures.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols address the MI issue. <text:s/>When you design an object with multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance, you usually don&apos;t want *all* the features of both A and B,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>you want feature set X from A and feature set Y from B. <text:s/>If those</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>features are methods, then encapsulating X and Y in protocols allows you</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to say exactly what you want in your new object. <text:s/>Furthermore, if</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>someone changes objects A or B, that doesn&apos;t break your protocols or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>your new object. <text:s/>This does not address the question of new instance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>variables from A or B, only methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols allow you to get type-checking features without sacrificing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>dynamic binding. <text:s/>You can say &quot;any object which implements the messages</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>in Protocol Foo is OK for this use&quot;, which is usually what you want -</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>you&apos;re constraining the functionality, not the implementation or the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols give library builders a tool to identify sets of standard</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>protocols, independent of the class hierarchy. <text:s/>Protocols provide</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>language support for the reuse of design, whereas classes support the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reuse of code. <text:s/>Well designed protocols can help users of an application</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>framework when learning or designing new classes. <text:s/>Here is a simple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>protocol definition for archiving objects:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@protocol Archiving</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>-read: (Stream *) stream;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>-write: (Stream *) stream;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@end</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Once defined, protocols can be referenced in a class interface as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>follows:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>/* MyClass inherits from Object and conforms to the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="11"/>Archiving protocol. <text:s/>*/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@interface MyClass: Object &lt;Archiving&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@end</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Unlike copying methods to/from other class interfaces, any incompatible</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>change made to the protocol will immediately be recognized by the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>compiler (the next time the class is compiled). <text:s/>Protocols also provide</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>better type checking without compromising the flexibility of untyped,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>dynamically bound objects.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>MyClass *obj1 = [MyClass new];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>// OK: obj1 conforms to the Archiving protocol.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>id &lt;Archiving&gt; obj2 = obj1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>// Error: obj1 does not conform to the TargetAction protocol.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>id &lt;TargetAction&gt; obj3 = obj1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>9 <text:s text:c="2"/>Does Objective-C employ garbage collection?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>No. <text:s/>Some libraries conventionally use a reference counting scheme, but</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>since such a scheme is implemented outside the language, it needs a lot</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of extra typing (by the programmer, on the keyboard) with all the usual</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>consequences: errors caused by not properly maintaining an object&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reference count.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Hans Boehm&apos;s garbage collector can be used with Objective-C. <text:s/>Depending</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>on the Objective-C compiler and library you use, integration is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>automatic or needs some work.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Garbage Collection in an Uncooperative Environment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Garbage collection of chunks of memory obtained through (its</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>replacement of) malloc(3). <text:s/>Works for C, C++, Objective-C, etc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>@article{bw88,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>title=&quot;Garbage Collection in an Uncooperative Environment&quot;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>author=&quot;Hans J\&quot;urgen Boehm and Mark Weiser&quot;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>journal=&quot;Software Practice and Experience&quot;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>pages=807-820,volume=18,number=9,month=sep,year=1988}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>            Available as `<text:a xlink:href="ftp://parcftp.xerox.com/pub/gc/gc4.10.tar.gz" xlink:type="simple">ftp://parcftp.xerox.com/pub/gc/gc4.10.tar.gz</text:a>&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>(check the directory for a newer version).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>10 <text:s/>How do I debug Objective-C using an unaware gdb.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>On August 20 1996, Michael Snyder of NeXT posted patches to GDB 4.16</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to make it Objective-C aware for GNU Objective-C code. <text:s/>This was</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>tested on HP-UX, Solaris and MS Windows. <text:s/>As he did not supply an URL</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>for these patches, I&apos;ve made the postings available as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.diff.gz.uue" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.diff.gz.uue</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    and <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.README" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.README</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Debugging Objective-C using a non-Objective-C aware gdb has been</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>documented by Martin Cracauer &lt;cracauer@wavehh.hanse.de&gt; on</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.cons.org/cracauer/objc-hint-gdb.html" xlink:type="simple">http://www.cons.org/cracauer/objc-hint-gdb.html</text:a>.  It comes down to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>understanding that you can very well look at Objective-C from the C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>perspective, a language very well understood by gdb.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>11 <text:s/>I get this `Floating exception&apos;...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>This answer describes possible solutions for the floating exception</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>problem when using GNU Objective-C on i386 machines. <text:s/>[This problem</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>existed some time ago; it should not exist any more with recent</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>versions of the libraries/software.] <text:s/>If the problem you&apos;re having</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>does not fit either description, try applying the hack described in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387</text:a>, which has</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>been reported to work for Linux, FreeBSD, and DJGPP (2.7.2). <text:s/>If it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>does not solve the problem, ask.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>If you&apos;re running Linux, adding `-lieee&apos; to the linker invocation could</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>help. <text:s/>Thomas March &lt;amadeus@bga.com&gt; reported that on several</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>occasions, on systems running Linux ELF, with libc.so.5.0.9 and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>libm.so.5.?.?, the problem was reproducible and adding `-lieee&apos; did not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>solve the problem. <text:s/>However, switching to a newer libc (libc.so.5.2.18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and libm.so.5.0.5) both solved the problem and removed the need for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`-lieee&apos; (i.e. a back to normal situation).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>If you&apos;re using DJGPP, you might want to take a look at the DJGPP FAQ,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    especially <text:a xlink:href="http://www.delorie.com/djgpp/v2faq/faq082.html" xlink:type="simple">http://www.delorie.com/djgpp/v2faq/faq082.html</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>12 <text:s/>Why am I lectured by gcc about `#import&apos;?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU CC issues the following multi-line warning about the how the use</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of `#import&apos; is discouraged (output from GNU CC 2.7.0):</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>foo.m:1: warning: using `#import&apos; is not recommended</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The fact that a certain header file need not be processed more than once</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>should be indicated in the header file, not where it is used.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The best way to do this is with a conditional of this form:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>#ifndef _FOO_H_INCLUDED</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>#define _FOO_H_INCLUDED</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>... &lt;real contents of file&gt; ...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>#endif /* Not _FOO_H_INCLUDED */</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Then users can use `#include&apos; any number of times.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU C automatically avoids processing the file more than once</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>when it is equipped with such a conditional.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In short, use `-Wno-import&apos; as an argument to gcc to stop it from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>producing this. <text:s/>Another possibility is to compile gcc after having</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>changed the line reading `static int warn_import = 1&apos; into `static</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int warn_import = 0&apos; in `cccp.c&apos; (line 467 in GNU CC 2.7.1); this way,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`-Wno-import&apos; is the default setting.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Whether or not using `#import&apos; is desirable (obviously) has to do with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>how to prevent multiple inclusions of the same file. <text:s/>Most include</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>files, when included multiple times, either do nothing new (possibly</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>due to guards being used) or (without the guards) cause the emission</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of C code on which the compiler will choke (due to, for instance,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>repeated typedefs). <text:s/>Thus, if everybody were to use `#import&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>everybody would be happy, since it does not seem to matter. <text:s/>However,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a notable exception to this rule is `assert.h&apos;, which changes the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>definition of the `assert&apos; macro depending on the setting of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NDEBUG macro.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There is one point to be made in favor of the warning: if the _user_</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of an include file uses `#include&apos; instead of `#import&apos;, the guards</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>will be necessary. <text:s/>Thus, actually, the warning should be issued when</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a file is imported that appears not to be guarded.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Apart from the more-or-less religious (and thus useless) debate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>whether `#import&apos; or `#include&apos;-with-guards is better, it has been</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>observed that `#import&apos; does not catch re-reading a linked and/or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>duplicated file, whereas the guards do. <text:s/>However, this is, of course,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a highly unlikely and probably undesirable situation for which neither</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>was designed to catch.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The reason for the existence of `#import&apos; probably is historical: the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>first implementation of Objective-C (by Stepstone) was as a preprocessor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to C, run after a modified cpp. <text:s/>`#import&apos; was the include-once</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>directive to that cpp. <text:s/>Since it is part of the Objective-C language, it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>has made it into GNU CC&apos;s cpp.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>13 <text:s/>What written information concerning Objective-C is available?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Books on Objective-C, or object oriented programming in general:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Brad J. Cox, Andrew J. Novobilski: `Object Oriented Programming:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>An Evolutionary Approach&apos;, Addison-Wesley Publishing Company,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Reading, Massachusetts, 1991. <text:s/>ISBN: 0-201-54834-8 (Japanese:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>4-8101-8046-8).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This is the original book on Objective-C, which actually is a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>book on object oriented system development using Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Object-Oriented Programming and the Objective-C Language.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Originally published as `Nextstep Object-Oriented Programming and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>the Objective-C Language&apos; by Addison-Wesley in 1993 with ISBN</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>0-201-63251-9 (Japanese: 4-7952-9636-7). <text:s/>In its current [Tue Aug</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>26 1997] incarnation it is available on-line from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="http://devworld.apple.com/dev/SWTechPubs/Documents/OPENSTEP/ObjectiveC/objctoc.htm" xlink:type="simple">http://devworld.apple.com/dev/SWTechPubs/Documents/OPENSTEP/ObjectiveC/objctoc.htm</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This is a good book on OO programming in general, which focuses</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>on Objective-C as the implementation language. <text:s/>It is also the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>definitive source of information for the Objective-C language as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>implemented by NeXT (and GNU).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Lewis J. Pinson, Richard S. Wiener: Objective-C: Object Oriented</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Programming Techniques. <text:s/>Addison-Wesley Publishing Company, Reading,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Massachusetts, 1991. ISBN 0-201-50828-1 (Japanese: 4-8101-8054-9).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Includes many examples, discusses Stepstone&apos;s and NeXT&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>versions of Objective-C, and their differences.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Timothy Budd: An Introduction to Object-Oriented Programming.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Addison-Wesley Publishing Company, Reading, Massachusetts.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ISBN 0-201-54709-0 (Japanese: 4-8101-8048-4).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>An intro to the topic of OOP, as well as a comparison of C++,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C, Smalltalk, and Object Pascal</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Simson L. Garfinkel, Michael K. Mahoney: NeXTSTEP Programming Step</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ONE: Object-Oriented Applications. <text:s/>TELOS/Springer-Verlag, 1993</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>(tel: (800)SPR-INGE).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>It&apos;s updated to discuss NeXTSTEP 3.0 features (Project Builder,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>new development environment) but doesn&apos;t discuss 3DKit or DBKit.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Articles</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Why I need Objective-C&apos;, by Christopher Lozinski.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Journal of Object-Oriented Programming (JOOP) September 1991.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Contact info@bpg.com for a copy and subscription to the BPG</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>newsletter.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This article discusses the differences between C++ and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C in great detail and explains that Objective-C is a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>better object oriented language.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Concurrent Object-Oriented C (cooC)&apos;, by Rajiv Trehan et. al.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ACM SIGPLAN Notices, Vol. 28, No 2, February 1993.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This article discusses cooC, a language based on the premise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>that an object not only provides an encapsulation boundary but</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>should also form a process boundary. <text:s/>cooC is a superset of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Porting NEXTSTEP Applications to Microsoft Windows&apos;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>by Christopher Lozinski. <text:s/>NEXTWORLD EXPO Conference Proceedings,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>San Francisco, CA, May 25-27, 1993. <text:s/>Updated version of the article</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>available from the author. <text:s/>Contact info@bpg.com.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This article describes how to develop Objective-C applications</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for both Microsoft Windows and NEXTSTEP.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU Documentation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The GNU project needs a free manual describing the Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>language features. <text:s/>Because of its cause, GNU cannot include the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>non-free books in the GNU system, but the system needs to come with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>documentation.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Anyone who can write good documentation, please think about giving</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>it to the GNU project. <text:s/>Contact rms@gnu.ai.mit.edu.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>14 <text:s/>History</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C was developed by Brad Cox, who founded the Stepstone</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>corporation in 1983 to develop and support the language, a compiler,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and supporting libraries. <text:s/>Stepstone never really made it big,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>fostering Objective-C in a niche similar to that of Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In 1985, Steve Jobs left Apple and started NeXT, a company that</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>developed m68k machines and the NeXTSTEP operating system. <text:s/>The user</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>interface of these machines was provided by Display PostScript and the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>AppKit, which, written in Objective-C, made Objective-C the language of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>choice on NeXT computers.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Brad Cox and Andrew Novobilski write `Object Oriented Programming: An</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Evolutionary Approach&apos; in 1986, the first book on Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NEXTSTEP 1.0a was released in 1989. <text:s/>The Objective-C compiler is based</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>on gcc 1.34.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In 1991, the Objective-C related modifications by NeXT to gcc find</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>their way back into the FSF GNU CC distribution. <text:s/>By version 1.99, gcc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>(the compiler) supports Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NEXTSTEP 3.0 is released in 1992. <text:s/>The compiler supports Objective-C++,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and the Objective-C language has been extended with `@protocol&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In the same year, gcc 2.0 comes supplied with an Objective-C runtime</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>library.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In 1993, gcc supports protocols by version 2.4. <text:s/>NeXT stops the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>production of hardware. <text:s/>With NEXTSTEP 3.1 they include support for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>PC&apos;s. <text:s/>NeXT starts creating other products not bound to a particular</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>operating system, such as Portable Distributed Objects (PDO), which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>comes with its own Objective-C compiler and debugger.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>OPENSTEP, an Objective-C API, is made public in 1994.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NEXTSTEP 3.3 is released in 1995; it adds support for HP hppa and Sun</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>sparc machines. <text:s/>Also in this year, NeXT acquires all rights to the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C programming language and trademark from Stepstone.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Sun includes support for Objective-C++ in their SparcCompiler in 1996.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>They release OPENSTEP for Solaris. <text:s/>NeXT releases OPENSTEP 4.0 for PC</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>hardware. <text:s/>Support for hppa and sparc has vanished. <text:s/>OPENSTEP for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Windows NT is released.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Early 1997, Apple acquires NeXT and starts work on the next Macintosh</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>operating system, code named Rhapsody, based on the technology they got</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>from NeXT. <text:s/>In the same year, Sun fosters the success of Java and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>subsequently kills OPENSTEP for Solaris.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>[Entry updated Tue Feb 17 1998. <text:s/>Credits to Norihiro Ito, Hajime Murao,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>KATO Tsuguru, and Hironobu Suzuki.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>15 <text:s/>Major compilers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There are 4 major Objective-C compilers, provided by Apple, GNU,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Stepstone, and Portable Object Compiler. <text:s/>The Stepstone and POC are</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>preprocessors that emit vanilla C code, which makes them very</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>portable. <text:s/>The GNU compiler compiles directly to assembly, as does</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Apple&apos;s, which is based on the GNU compiler.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Apple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Apple (formerly NeXT) Objective-C compiler comes bundled with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OpenStep Developer, current Rhapsody seeds, and various other</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>products like Portable Distributed Objects (PDO) and WebObjects.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Bundled with the operating systems is the FoundationKit general</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>class library and the AppKit GUI library.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OpenStep is available for NeXT hardware and PC compatible Intel</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>machines. <text:s/>Rhapsody is the current name for the next-generation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Apple Macintosh operating system; it is based on OpenStep. <text:s/>Rhapsody</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>will be available for PowerPC-based Macintoshes and Intel-based PC</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>compatibles.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Apple Computer, Inc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>1 Infinite Loop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Cupertino, CA 95014</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>voice: 408-996-1010</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>        www: <text:a xlink:href="http://www.apple.com/" xlink:type="simple">http://www.apple.com/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Sep 21 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU CC, since version 2, comes with an Objective-C compiler. <text:s/>The</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>current distribution of GNU CC (version 2.8.0) includes an</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Objective-C compiler and runtime library. <text:s/>The latter includes the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Object&apos; and `NXConstantString&apos; classes. <text:s/>Some people are working</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>on GNU libraries, see part 2 of this FAQ (The ClassWare Listing)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>        for details or visit <text:a xlink:href="http://www.gnustep.org/" xlink:type="simple">http://www.gnustep.org/</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Free Software Foundation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>59 Temple Place -- Suite 330</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Boston, MA <text:s text:c="2"/>02111</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>+1-617-542-5942</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>General questions about the GNU Project can be asked to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>gnu@prep.ai.mit.edu.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>For information on how to order GNU software on tape or cd-rom,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>and printed GNU manuals, check the file etc/ORDERS in the GNU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Emacs distribution, ftp the file /pub/gnu/GNUinfo/ORDERS on prep,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>or e-mail a request to: gnu@prep.ai.mit.edu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>By ordering your GNU software from the FSF, you help us continue</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>to develop more free software. <text:s/>Media revenues are our primary</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>source of support. <text:s/>Donations to FSF are deductible on US tax</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>returns.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The above software will soon be at these ftp sites as well.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Please try them before prep.ai.mit.edu as prep is very busy!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>thanx -gnu@prep.ai.mit.edu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ASIA: ftp.cs.titech.ac.jp, tron.um.u-tokyo.ac.jp/pub/GNU/prep</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>cair-archive.kaist.ac.kr/pub/gnu, ftp.nectec.or.th/pub/mirrors/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>AUSTRALIA: archie.au/gnu (archie.oz or archie.oz.au for ACSnet)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>AFRICA: ftp.sun.ac.za/pub/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>MIDDLE-EAST: ftp.technion.ac.il/pub/unsupported/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>EUROPE: irisa.irisa.fr/pub/gnu, ftp.univ-lyon1.fr:pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.mcc.ac.uk, unix.hensa.ac.uk/mirrors/uunet/systems/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>src.doc.ic.ac.uk/gnu, ftp.ieunet.ie:pub/gnu, ftp.eunet.ch,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>nic.sunsite.cnlab-switch.ch/mirror/gnu, ftp.win.tue.nl/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.nl.net, ftp.informatik.rwth-aachen.de/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.informatik.tu-muenchen.de, ftp.etsimo.uniovi.es/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.funet.fi/pub/gnu, ftp.denet.dk, ftp.stacken.kth.se,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>isy..se, ftp.luth.se/pub/unix/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.sunet.se/pub/gnu, archive.eu.net</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>SOUTH AMERICA: ftp.inf.utfsm.cl/pub/gnu, ftp.unicamp.br/pub/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>WESTERN CANADA: ftp.cs.ubc.ca/mirror2/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>USA: wuarchive.wustl.edu/systems/gnu, labrea.stanford.edu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.digex.net/pub/gnu, ftp.kpc.com/pub/mirror/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>f.ms.uky.edu/pub3/gnu, jaguar.utah.edu/gnustuff,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.hawaii.edu/mirrors/gnu, uiarchive.cso.uiuc.edu/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.cs.columbia.edu/archives/gnu/prep,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>archive.cis.ohio-state.edu/pub/gnu, gatekeeper.dec.com/pub/GNU,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.uu.net/systems/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Sep 21 1997. <text:s/>GNU FTP mirror site list</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>up to date as of Tue Jan 13 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU/EGCS</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>        EGCS (at <text:a xlink:href="http://www.cygnus.com/egcs/" xlink:type="simple">http://www.cygnus.com/egcs/</text:a>) is a variation of GCC.  From</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>the EGCS FAQ:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>In brief, the three biggest differences between egcs and gcc2 are</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>these:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>More rexamination of basic architectual decisions of gcc and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>an interest in adding new optimizations;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>working with the groups who have fractured out from gcc2 (like</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>the Linux folks, the Intel optimizations folks, Fortran folks)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>including more front-ends; and finally</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>An open development model (see below) for the development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>process.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Like GCC, EGCS supports Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Stepstone</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Steptone provides Objective-C compilers and runtime for: Apple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Macintosh (running Mac Programmers Workshop), DEC (Open VMS,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OSF/1, ULTRIX), HP9000/700, 800 (HPUX), IBM RISC System/6000</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>(AIX), MIPS, NeXT, PC (MS-DOS, OS/2, MS Windows 3.1/95/NT, SCO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Unix), Sun 3/4/SPARC (SunOS, Solaris), Silicon Graphics INDIGO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>(IRIS). <text:s/>Other ports available by market demands or consulting</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>services.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The ICpak101 Foundation Class Library is available on all the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>above. <text:s/>The ICpak201 GUI Class Library is available on platforms</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>that support XWindows, Motif, OpenWindows and SunView.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Stepstone Corporation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>75 Glen Road</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Sandy Hook, CT 06482</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>voice: 203 426 1875</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>voice: 800 BUY OBJEct</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>fax: <text:s text:c="2"/>203 270 0106</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>        www: <text:a xlink:href="http://www.stepstn.com/" xlink:type="simple">http://www.stepstn.com/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Aug 31 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Portable Object Compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Portable Object Compiler is available on Windows 95, Windows</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>NT, OS/2, Macintosh MPW, Amiga, BeOS, Linux, Linux/Alpha, MkLinux,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>FreeBSD, NetBSD, AIX, SunOS, Solaris, NeXTstep, HP-UX, SGI IRIX,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OSF/1 Digital UNIX, Apple Rhapsody, and CRAY Unicos.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>It&apos;s an Objective C compiler, developed under the GNU Library</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>General Public License, compatible with several C compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>environments, including GNU cc, lcc, SGI cc, MIPSpro cc, HP-UX cc,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>AIX cc, DEC cc, SUN acc, DJGPP gcc, Cray cc, pgcc, WATCOM wcc,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Microsoft Visual C, Metrowerks MWCPPC, Metrowerks/BeOS mwcc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>and IBM Visual Age icc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Portable Object Compiler supports C and C++ as base languages,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>and comes with an extensive set of collection class objects,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>including objects for arbitrary precision arithmetic. <text:s/>Most of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>collection class objects compile on, and work with, Stepstone</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Objective C, GNU Objective C and NeXT Objective C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Additional interesting features of the compiler are support for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Objective-C blocks, an option for garbage collection and an inline</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>cache, pure C messenger.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Portable Object Compiler is obtainable from a few sites,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>         <text:a xlink:href="http://www.can.nl/%7Estes/compiler.html" xlink:type="simple">http://www.can.nl/~stes/compiler.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>         <text:a xlink:href="http://cage.rug.ac.be/%7Estes/compiler.html" xlink:type="simple">http://cage.rug.ac.be/~stes/compiler.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>         <text:a xlink:href="http://hydrogen.ch.ntu.edu.tw:8080/%7Edavid/OBJC/software.html" xlink:type="simple">http://hydrogen.ch.ntu.edu.tw:8080/~david/OBJC/software.html</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Jan 25 1998.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>16 <text:s/>Compiler differences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>This section lists differences between the various Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>compilers that are available. <text:s/>The following compilers are compared:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Compiler <text:s text:c="3"/>Description</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>gcc <text:s text:c="8"/>GNU CC, version 2.8.0 or later</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>apple <text:s text:c="6"/>The (GNU CC based) compiler supplied with Rhapsody (previously</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>known as the NeXT compiler supplied with NextStep/OpenStep).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>stepstone <text:s text:c="2"/>Stepstone Objective-C compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>objc <text:s text:c="7"/>Portable Object Compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The following table lists features of only the compiler and runtime</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>library. <text:s/>Any other libraries normally supplied or associated with the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>compiler are not taken into account.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Feature <text:s text:c="28"/>gcc <text:s text:c="4"/>apple <text:s text:c="2"/>stepstn objc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>supports</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>blocks (1) <text:s text:c="23"/>no <text:s text:c="5"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>categories <text:s text:c="23"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>replacing methods <text:s text:c="14"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>garbage collection <text:s text:c="15"/>no (3) <text:s/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes (2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Objective-C++ <text:s text:c="20"/>no <text:s text:c="5"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>protocols <text:s text:c="24"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>no</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>static method binding <text:s text:c="12"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes <text:s text:c="4"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>static/automatic allocation <text:s text:c="6"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes <text:s text:c="4"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>supports =-style class defs <text:s text:c="6"/>no <text:s text:c="5"/>no <text:s text:c="5"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>method decls in implementation <text:s text:c="3"/>no <text:s text:c="5"/>no <text:s text:c="5"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>multithreading <text:s text:c="19"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>+initialize method <text:s text:c="15"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>+load method <text:s text:c="21"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>@&quot;string objects&quot; <text:s text:c="16"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>no</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>@class forward declarations <text:s text:c="6"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>source available <text:s text:c="19"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>method binding mechanism <text:s text:c="11"/>sparse <text:s/>class <text:s text:c="2"/>? <text:s text:c="6"/>inline</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="40"/>array <text:s text:c="2"/>cache <text:s text:c="10"/>cache</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>exception handling mechanism <text:s text:c="7"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>notes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>1: Described as `Action Expressions&apos; in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>       <text:a xlink:href="http://www.virtualschool.edu/cox/CoxTaskMaster.html" xlink:type="simple">http://www.virtualschool.edu/cox/CoxTaskMaster.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>2: Using Hans Boehm&apos;s garbage collector (see question 9).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>3: Work in progress; some next release of gcc/ecgs will</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="7"/>have support for using Boehm&apos;s garbage collector.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>17 <text:s/>Objective-C support per platform</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Below is a list of compilers supporting Objective-C, and which are not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NeXT&apos;s, Stepstone&apos;s or plain GCC.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>DOS, Windows, OS/2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>BPG</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG provides the Borland Extensions to Objective-C which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>allows the Objective-C translator to be used with the Borland</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Compiler, and makes it easy to develop Objective-C application</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for Microsoft Windows.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG provides the Smalltalk Interface to Objective-C which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>makes Objective-C objects look like Smalltalk Objects. <text:s/>It can</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>be used to build Graphical User Interface on portable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C objects, or to sell Objective-C libraries to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Smalltalk developers.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG provides the Objective-C Message Bus which sends</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C messages across heterogeneous computer platforms.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG has a library of objects for modeling Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>programs. <text:s/>A browser application has been built on this</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>library. <text:s/>Other potential applications include adding class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>variables to Objective-C, adding runtime information about</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>instance variables, and method argument types, generating</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>object versions, and eventually building a browser/translator.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Christopher Lozinski</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>BPG</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>35032 Maidstone Court</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Newark, CA 94560</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Tel: +1 510 795-6086</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>fax: +1 510 795-8077</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>email: info@bpg.com</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>DJGPP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>DJGPP includes Objective-C support [though I do not know to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>which extent].</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>            From the DJGGP homepage at <text:a xlink:href="http://www.delorie.com/" xlink:type="simple">http://www.delorie.com</text:a>:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>DJGPP is a complete 32-bit C/C++ development system for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Intel 80386 (and higher) PCs running DOS. It includes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>ports of many GNU development utilities. The development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>tools require a 80386 or newer computer to run, as do the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>programs they produce. In most cases, the programs it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>produces can be sold commercially without license or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>royalties.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GCC/EMX</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>The EMX port of GCC implements Objective-C, and with RSX (or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>RSXNT) it runs on DOS/DPMI boxes (or NT) too.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>EMX is available for anonymous ftp on at following locations:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://ftp.uni-stuttgart.de/pub/systems/os2/leo/devtools/emx+gcc/" xlink:type="simple">ftp://ftp.uni-stuttgart.de/pub/systems/os2/leo/devtools/emx+gcc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://ftp-os2.cdrom.com/pub/os2/lang/emxtools/" xlink:type="simple">ftp://ftp-os2.cdrom.com/pub/os2/lang/emxtools/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://ftp.leo.org/pub/comp/os/os2/devtools/emx+gcc/" xlink:type="simple">ftp://ftp.leo.org/pub/comp/os/os2/devtools/emx+gcc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://src.doc.ic.ac.uk/packages/os2/ftp.cdrom.com/lang/emxtools/" xlink:type="simple">ftp://src.doc.ic.ac.uk/packages/os2/ftp.cdrom.com/lang/emxtools/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>RSX is available from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>            <text:a xlink:href="ftp://ftp.uni-bielefeld.de/pub/systems/msdos/misc/" xlink:type="simple">ftp://ftp.uni-bielefeld.de/pub/systems/msdos/misc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Without RSX EMX is limited to DOS/VCPI and OS/2 &gt;=2.0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>[Thanks to &lt;huug@poboxes.com&gt; for this information.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GCC for Win32</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Hyungjip Kim &lt;hjkim@namo.co.kr&gt; provides GCC 2.7.2 binaries</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for Win32. <text:s/>This GCC is modified to generate CodeView</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>compatible debug information, to enable the use of existing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>            Windows debuggers.  Visit <text:a xlink:href="http://www.darkland.co.kr/%7Ehjkim/objc/" xlink:type="simple">http://www.darkland.co.kr/~hjkim/objc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for more information, and the binaries.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU-Win32</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>The GNU-Win32 project aims at providing the GNU tools</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>(including GCC) for Windows NT/95. <text:s/>[I do not know to which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>extent Objective-C is supported.] <text:s/>Below is a description of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>            the project, taken from <text:a xlink:href="http://www.cygnus.com/misc/gnu-win32" xlink:type="simple">http://www.cygnus.com/misc/gnu-win32</text:a>:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>The GNU-Win32 tools are ports of the popular GNU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>development tools to Windows NT/95 for the x86 and powerpc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>processors. Applications built with these tools have</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>access to the Microsoft Win32 API as well as the Cygwin32</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>API which provides additional UNIX-like functionality</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>including UNIX sockets, process control with a working</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>fork and select, etc...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>With these tools installed, it is now possible to:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>write Win32 console or GUI applications that make use of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>the standard Microsoft Win32 API and/or the Cygwin32 API.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>easily configure and build many GNU tools from source</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>(including rebuilding the gnu-win32 development tools</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>themselves under x86 NT).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>port many other significant UNIX programs to Windows NT/95</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>without making significant changes to the source code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>have a fairly full UNIX-like environment to work in, with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>access to many of the common Unix utilities (from both the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>bash shell and command.com).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>The GNU-Win32 project is run by Cygnus; for more information</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>            see <text:a xlink:href="http://www.cygnus.com/" xlink:type="simple">http://www.cygnus.com</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Macintosh</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Metrowerks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Preliminary Objective-C support for the MacOS will be included</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>in CodeWarrior Professional 1, to be released at the end of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>May 1997. <text:s/>[Entry written Thu May 15 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Metrowerks Corporation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>2201 Donley Drive</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Austin, TX 78758</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>            <text:a xlink:href="http://www.metrowerks.com/" xlink:type="simple">http://www.metrowerks.com/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>phone: 1-800-377-5416, +1 512 873 8313</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>email: info@metrowerks.com</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Tenon</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Tenon CodeBuilder supports Objective-C. <text:s/>This product is based</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>on GNU CC and targeted at the Power Macintosh.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>            <text:a xlink:href="http://www.tenon.com/products/codebuilder/" xlink:type="simple">http://www.tenon.com/products/codebuilder/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Sun SPARC</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Sun</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Sun&apos;s SPARCcompiler C++ 4.1 understands Objective-C, though it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>does not come with the relevant include files and libraries.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>At one time, Sun provided OpenStep on Solaris; it now seems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>that they are trying very hard to forget that: Sun&apos;s WWW site</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>no longer provides any relevant information on either OpenStep</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>or Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>18 <text:s/>What are the newsgroups or mailing lists to read?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Read comp.lang.objective-c, which is bound to discuss current events.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Also, threads on comp.sys.next.programmer are Objective-C specific on</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>occasion.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There is a mailing list on GNU Objective-C: gnu-objc@gnu.ai.mit.edu.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>To subscribe to this list, send a mail with your request to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`gnu-objc-request@gnu.ai.mit.edu.&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There&apos;s a mailing list for Portable Object Compiler users. Send email to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>&apos;objc-users-request@peti.gmd.de&apos; to subscribe.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNUstep has several newsgroups devoted to it: gnu.gnustep.announce and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>gnu.gnustep.discuss to name but a few.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Furthermore, the various kits that are being developed each come with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>their own mailing list. <text:s/>See part 2 of this FAQ for more information.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>19 <text:s/>Are there any FTP sites with Objective C code? <text:s/>Where?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>All Rhapsody/NextStep/OpenStep sites carry Objective-C material.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>To name a few:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://next-ftp.peak.org/pub/next/" xlink:type="simple">ftp://next-ftp.peak.org/pub/next/</text:a>       (NEXTSTEP)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ftp.leo.org/pub/comp/platforms/next/" xlink:type="simple">ftp://ftp.leo.org/pub/comp/platforms/next/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ftp.informatik.uni-muenchen.de/" xlink:type="simple">ftp://ftp.informatik.uni-muenchen.de</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ftp.gnustep.org/pub/" xlink:type="simple">ftp://ftp.gnustep.org/pub/</text:a>              (GNUStep)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ccrma-ftp.stanford.edu/pub/NeXT/" xlink:type="simple">ftp://ccrma-ftp.stanford.edu/pub/NeXT/</text:a>  (MusicKit a.o.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>See also part 2 of this FAQ.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>20 <text:s/>Is there any information on the Net concerning Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Basic and related Objective-C (and/or NeXTSTEP) information is available</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>at the following places:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    Apple Enterprise Group at <text:a xlink:href="http://www.enterprise.apple.com/" xlink:type="simple">http://www.enterprise.apple.com/</text:a> with the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    book at <text:a xlink:href="http://gemma.apple.com/techinfo/techdocs/rhapsody/apple.html" xlink:type="simple">http://gemma.apple.com/techinfo/techdocs/rhapsody/apple.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Steve deKorte&apos;s Objective-C page at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.slip.net/%7Edekorte/Objective-C/" xlink:type="simple">http://www.slip.net/~dekorte/Objective-C/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Brad Cox&apos;s Objective-C page at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.virtualschool.edu/mon/Cox/ObjectiveC.html" xlink:type="simple">http://www.virtualschool.edu/mon/Cox/ObjectiveC.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    the GNUStep project at <text:a xlink:href="http://www.gnustep.org/" xlink:type="simple">http://www.gnustep.org/</text:a>, with a mirror at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.nmr.embl-heidelberg.de/GNUstep" xlink:type="simple">http://www.nmr.embl-heidelberg.de/GNUstep</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the libobjects FAQ at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="ftp://ftp.cs.rochester.edu/pub/u/mccallum/libobjects/Gnustep-FAQ.html" xlink:type="simple">ftp://ftp.cs.rochester.edu/pub/u/mccallum/libobjects/Gnustep-FAQ.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    the NEXTSTEP/OpenStep Information Service at <text:a xlink:href="http://www.stepwise.com/" xlink:type="simple">http://www.stepwise.com/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    the eduStep initiative at <text:a xlink:href="http://www.nmr.embl-heidelberg.de/eduStep/" xlink:type="simple">http://www.nmr.embl-heidelberg.de/eduStep/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    Cetus Links (<text:a xlink:href="http://www.rhein-neckar.de/%7Ecetus/" xlink:type="simple">http://www.rhein-neckar.de/~cetus/</text:a>) has many links on OO;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    Objective-C is on <text:a xlink:href="http://www.rhein-neckar.de/%7Ecetus/oo_objective_c.html" xlink:type="simple">http://www.rhein-neckar.de/~cetus/oo_objective_c.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Nelson Minar&apos;s Objective-C page at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.santafe.edu/projects/swarm/ObjC/objective-c.html" xlink:type="simple">http://www.santafe.edu/projects/swarm/ObjC/objective-c.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    Tiggr&apos;s Objective-C page at <text:a xlink:href="http://www.ics.ele.tue.nl/%7Etiggr/objc/" xlink:type="simple">http://www.ics.ele.tue.nl/~tiggr/objc/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    Portable Object Compiler homepage at <text:a xlink:href="http://www.can.nl/%7Estes/compiler.html" xlink:type="simple">http://www.can.nl/~stes/compiler.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>    Norihiro Itoh&apos;s page at <text:a xlink:href="http://www.fsinet.or.jp/%7Enito/index-j.html" xlink:type="simple">http://www.fsinet.or.jp/~nito/index-j.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and of course the HTML versions of this FAQ and associated information</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>at the addresses listed below.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>21 For more information...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Visit one of the places mentioned in #20, or see part 2 of this FAQ,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C/classes a.k.a. the ClassWare Listing, for an [incomplete!]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>overview of available Objective-C classes and libraries. <text:s/>See part 3 of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>this FAQ, Objective-C/sample a.k.a. the Simple Sample Program, for an</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>example Objective-C program.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>A World Wide Web hypertext version of this FAQ is maintained by Steve Dekorte</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>&lt;dekorte@suite.com&gt; at <text:a xlink:href="http://www.slip.net/%7Edekorte/Objective-C/" xlink:type="simple">http://www.slip.net/~dekorte/Objective-C/</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>A Japanese language version of this FAQ, maintained by Norihiro Itoh</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string"><text:p>&lt;nito@fsinet.or.jp&gt;, resides at <text:a xlink:href="http://www.fsinet.or.jp/%7Enito/index-j.html" xlink:type="simple">http://www.fsinet.or.jp/~nito/index-j.html</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>The early version of this FAQ was compiled by Bill Shirley, with the aid of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>many people. <text:s/>The current version is being maintained by Pieter Schoenmakers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;tiggr@gerbil.org&gt;, aided by input from a lot of people, including: Per</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Abrahamsen, Paul Burchard, Brad Cox, Christopher Lozinski, Mike Mahoney, Jon</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>F. Rosen, Paul Sanchez, Lee Sailer, David Stes, Paul Sanchez, Bill Shirley,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Subrata Sircar, Ted Slupesky, Richard Stallman, and Kersten Krab Thorup.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Send your suggestions, additions, bug reports, comments and fixes to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>tiggr@gerbil.org.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The information in this file comes AS IS, WITHOUT ANY WARRANTY. <text:s/>You may</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>use the information contained in this file or distribute this file, as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>long as you do not modify it, make money out of it or take the credits.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="1047739">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="Feuille10" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="1024" table:default-cell-style-name="ce51"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Base classes and general description How the event handling happens? Difference between UIWindow and UIView Can we have more UIWindows in iOS?Yes, but rare – UIAlertView is a separate window Difference between bounds, frame of a view What&apos;s very important designing UIs (views)? Difference between points and pixels What is the responder chain? What is IBOutlet and IBAction? How do you use them? Basic tableview how to: datasource and delegate implementation Drawbacks of UITableViews Collection views Benefits of collections views What is very important updating the UI in a multithreaded application? How can you do that? what to do when the keyboard appears and hides some parts of the UI that are important - logic implementation Why should we release the outlets in viewDidUnload in MRC? What about ARC? Difference in Xib/storyboard vs nib? Animations? view transitions? how can we present new view controllers? tabbar vs toolbar vs navigationbar: when to use which, can you combine them? [expand tag=”div”  title=”UI customization (possible ways to set color etc)”]use public properties, use appearance[/expand] UIAppearance basics, difference between setting through appearance proxy and instance </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
      <text:p>CoreData</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>what is CoreData and what do we use it for is CoreData == sqlite or some wrapper? what types of stores does core data support What is the minimum necessary classes and relationship between them? Can the NSPersistentStoreCoordinator have more persistent stores? What is a managed object context What about multi-threading and core data usage What is an NSManagedObjectId What is lazy loading, how does this relate to core data, situations when this can be handy How to read only a few attributes of an entity What is a fetchedresultcontroller How to synchronize contexts How could one simulate an NSManagedObject (dynamic properties) </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
      <text:p>Tricky questions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>What is an actual class in ObjectiveC What is the isa member How to make a static library optional? How to correctly implement a retaining setter property How to declare the properties to work the same in MRC and ARC? What happens if you add your just created object to a mutable array, and you release your object What happens with the objects if the array is released What happens if you remove the object from the array/dict, and you try to use it Garbage collection on iPhone The circular reference problem with delegates What happens when we invoke a method on a nil pointer? What happens when we call a method on an object which doesn&apos;t exists? Does KVO works with iVars? Does KVC works with iVars? When it is mandatory to synthesize properties What to do in a situation when a class not necessarily implement a method from a protocol Difference between nil and Nil and NULL??? How does proxy-ing work ??? How to call a method on an &apos;unknown&apos; typed object? How to call a selector with more than 2 parameters? How to cancel a block? How NSOperation cancellation works? Can we/should we invoke (public) instance methods in an initializer and the dealloc? what about properties? NSCoding, NSKeyedArchiving Can we use our own objects as key in a dictionary? The difference between a shallow and a deep copy What can&apos;t we put into an array or dictionary? How can we put nil it into dictionary/array? How to get the current language of the device? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>Post navigation </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://andras.palfi.hu/robert-c-martin-clean-architecture-and-design/" xlink:type="simple">←Robert C. Martin: Clean Architecture and Design</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://andras.palfi.hu/select-items-from-a-list-without-repetition/" xlink:type="simple">Select items from a list without repetition →</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="1048563">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="C++ faq" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce57"/>
    <table:table-column table:style-name="co6" table:default-cell-style-name="ce58"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1022" table:default-cell-style-name="ce57"/>
    <table:table-row table:style-name="ro26">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how to get the effect of To get the effect of a virtual friend ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Why can’t my derived class access private things from my base class?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:style-name="ce60" office:value-type="string" calcext:value-type="string">
      <text:p>protected inline access functions</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro26" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>Is inheritance important to C++? <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#importance-of-inherit" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Yep.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Some who champion OO programming, believe that inheritance is what separates abstract data type (ADT) programming from OO programming.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>Those who consider <text:a xlink:href="http://stlport.org/resources/StepanovUSA.html" xlink:type="simple">OO programming philosophically unsound</text:a>, still find inheritance useful to take advantage of empty base optimization when constructing a class by inheriting from mixin classes that donate data or behavior to the resulting class or to facilitate tag dispatch in template meta-programming.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>When would I use inheritance? <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#when-to-use-inherit" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>If you follow the OO paradigm, use it as a specification device.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Human beings abstract things on two dimensions: part-of and kind-of. A Ford Taurus is-a-kind-of-a Car, and a Ford Taurus has-a Engine, Tires, etc. The part-of hierarchy has been a part of software since the ADT style became relevant; inheritance adds “the other” major dimension of decomposition.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>If you don’t follow the OO paradigm, use inheritance to mix-in behavior and data from donor classes and help with tag dispatch.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>How do you express inheritance in C++? <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#how-to-code-inherit" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>By the : public syntax:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>class Car : public Vehicle {public: <text:s/>// ...}; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>We state the above relationship in several ways:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Car is “a kind of a” Vehicle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Car is “derived from” Vehicle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Car is “a specialized” Vehicle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Car is a “subclass” of Vehicle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Car is a “derived class” of Vehicle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Vehicle is the “base class” of Car</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Vehicle is the “superclass” of Car (this not as common in the C++ community)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>(Note: this FAQ has to do with public inheritance; <text:a xlink:href="https://isocpp.org/wiki/faq/private-inheritance" xlink:type="simple">privateand protectedinheritance</text:a> are different.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>Is it okay to convert a pointer from a derived class to its base class? <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#derivedptr-to-baseptr" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Yes.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>An object of a derived class is a kind of the base class. Therefore the conversion from a derived class pointer to a base class pointer is perfectly safe, and happens all the time. For example, if I am pointing at a car, I am in fact pointing at a vehicle, so converting a Car* to a Vehicle* is perfectly safe and normal:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>void f(Vehicle* v);void g(Car* c) { f(c); } <text:s/>// Perfectly safe; no cast </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>(Note: this FAQ has to do with public inheritance; <text:a xlink:href="https://isocpp.org/wiki/faq/private-inheritance" xlink:type="simple">privateand protectedinheritance</text:a> are different.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>What’s the difference between public, private, and protected? <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#access-rules" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>A member (either data member or member function) declared in a private section of a class can only be accessed by member functions and <text:a xlink:href="https://isocpp.org/wiki/faq/friends" xlink:type="simple">friends</text:a> of that class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>A member (either data member or member function) declared in a protected section of a class can only be accessed by member functions and <text:a xlink:href="https://isocpp.org/wiki/faq/friends" xlink:type="simple">friends</text:a> of that class, and by member functions and <text:a xlink:href="https://isocpp.org/wiki/faq/friends" xlink:type="simple">friends</text:a> of derived classes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>A member (either data member or member function) declared in a public section of a class can be accessed by anyone</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>Why can’t my derived class access private things from my base class? <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#base-class-private" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>To protect you from future changes to the base class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Derived classes do not get access to private members of a base class. This effectively “seals off” the derived class from any changes made to the private members of the base class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>How can I protect derived classes from breaking when I change the internal parts of the base class? <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#protected-interface" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>A class has two distinct interfaces for two distinct sets of clients:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>It has a public interface that serves unrelated classes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>It has a protected interface that serves derived classes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro29">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Unless you expect all your derived classes to be built by your own team, you should declare your base class’s data members as private and use protected inline access functions by which derived classes will access the private data in the base class. This way the private data declarations can change, but the derived class’s code won’t break (unless you change the protected access functions).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>I’ve been told to never use protected data, and instead to always use private data with protected access functions. Is that a good rule? <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#protected-data-not-evil" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Nope.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Whenever someone says to you, “You should always make data private,” stop right there — it’s an “always” or “never” rule, and those rules are what I call one-size-fits-all rules. The real world isn’t that simple.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro29">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Here’s the way I say it: if I expect derived classes, I should ask this question: who will create them? If the people who will create them will be outside your team, or if there are a huge number of derived classes, then and only then is it worth creating a protected interface and using private data. If I expect the derived classes to be created by my own team and to be reasonable in number, it’s just not worth the trouble: use protected data. And hold your head up, don’t be ashamed: it’s the right thing to do!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro30">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The benefit of protected access functions is that you won’t break your derived classes as often as you would if your data was protected. Put it this way: if you believe your users will be outside your team, you should do a lot more than just provide get/set methods for your private data. You should actually create another interface. You have a public interface for one set of users, and a protected interface for another set of users. But they both need an interface that is carefully designed — designed for stability, usability, performance, etc. And at the end of the day, the real benefit of privatizing your data (including providing an interface that is coherent and, as much as possible, opaque) is to avoid breaking your derived classes when you change that data structure.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro30">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>But if your own team is creating the derived classes, and there are a reasonably small number of them, it’s simply not worth the effort: use protected data. Some purists (translation: people who’ve never stepped foot in the real world, people who’ve spent their entire lives in an ivory tower, people who don’t understand words like “customer” or “schedule” or “deadline” or “ROI”) think that everything ought to be reusable and everything ought to have a clean, easy to use interface. Those kinds of people are dangerous: they often make your project late, since they make everything equally important. They’re basically saying, “We have 100 tasks, and I have carefully prioritized them: they are all priority 1.” They make the notion of priority meaningless.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro29">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>You simply will not have enough time to make life easy for everyone, so the very best you can do is make life easy for a subset of the world. Prioritize. Select the people that matter most and spend time making stable interfaces for them. You may not like this, but everyone is not created equal; some people actually do matter more than others. We have a word for those important people. We call them “customers.”</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>Okay, so exactly how should I decide whether to build a “protected interface”? <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#protected-interfaces-and-roi" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/basics-of-inheritance#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Three keys: ROI, ROI and ROI.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Every interface you build has a cost and a benefit. Every reusable component you build has a cost and a benefit. Every test case, every cleanly structured thing-a-ma-bob, every investment of any sort. You should never invest any time or any money in any thing if there is not a positive return on that investment. If it costs your company more than it saves, don’t do it!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Not everyone agrees with me on this; they have a right to be wrong. For example, people who live sufficiently far from the real world act like every investment is good. After all, they reason, if you wait long enough, it might someday save somebody some time. Maybe. We hope.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>That whole line of reasoning is unprofessional and irresponsible. You don’t have infinite time, so invest it wisely. Sure, if you live in an ivory tower, you don’t have to worry about those pesky things called “schedules” or “customers.” But in the real world, you work within a schedule, and you must therefore invest your time only where you’ll get good pay-back.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro31">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Back to the original question: when should you invest time in building a protected interface? Answer: when you get a good return on that investment. If it’s going to cost you an hour, make sure it saves somebody more than an hour, and make sure the savings isn’t “someday over the rainbow.” If you can save an hour within the current project, it’s a no-brainer: go for it. If it’s going to save some other project an hour someday maybe we hope, then don’t do it. And if it’s in between, your answer will depend on exactly how your company trades off the future against the present.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The point is simple: do not do something that could damage your schedule. (Or if you do, make sure you never work with me; I’ll have your head on a platter.) Investing is good if there’s a pay-back for that investment. Don’t be naive and childish; grow up and realize that some investments are bad because they, in balance, cost more than they return.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro26" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>What is a “virtual member function”? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#overview-virtual-fns" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>Virtual member functions are <text:a xlink:href="https://isocpp.org/wiki/faq/big-picture#virt-is-central-to-oo" xlink:type="simple">key to the object-oriented paradigm</text:a>, such as making it easy for <text:a xlink:href="https://isocpp.org/wiki/faq/big-picture#old-code-can-call-new-code" xlink:type="simple">old code to call new code</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro29">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>A virtual function allows derived classes to replace the implementation provided by the base class. The compiler makes sure the replacement is always called whenever the object in question is actually of the derived class, even if the object is accessed by a base pointer rather than a derived pointer. This allows algorithms in the base class to be replaced in the derived class, even if users don’t know about the derived class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The derived class can either fully replace (“override”) the base class member function, or the derived class can partially replace (“augment”) the base class member function. The latter is accomplished by having the derived class member function call the base class member function, if desired.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>Why are member functions not virtual by default? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#virtual-by-default" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>Because many classes are not designed to be used as base classes. For example, see <text:a xlink:href="https://isocpp.org/wiki/faq/classes-and-objects#data-in-class" xlink:type="simple">class complex</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Also, objects of a class with a virtual function require space needed by the virtual function call mechanism - typically one word per object. This overhead can be significant, and can get in the way of layout compatibility with data from other languages (e.g. C and Fortran).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>See <text:a xlink:href="http://stroustrup.com/dne.html" xlink:type="simple">The Design and Evolution of C++</text:a> for more design rationale.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>How can C++ achieve dynamic binding yet also static typing? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#dyn-binding-and-static-typing" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>When you have a pointer to an object, the object may actually be of a class that is derived from the class of the pointer (e.g., a Vehicle* that is actually pointing to a Car object; this is called “polymorphism”). Thus there are two types: the (static) type of the pointer (Vehicle, in this case), and the (dynamic) type of the pointed-to object (Car, in this case).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro29">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>Static typing means that the legality of a member function invocation is checked at the earliest possible moment: by the compiler at compile time. The compiler uses the static type of the pointer to determine whether the member function invocation is legal. If the type of the pointer can handle the member function, certainly the pointed-to object can handle it as well. E.g., if Vehicle has a certain member function, certainly Car also has that member function since Car is a kind-of Vehicle.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>Dynamic binding means that the address of the code in a member function invocation is determined at the last possible moment: based on the dynamic type of the object at run time. It is called “dynamic binding” because the binding to the code that actually gets called is accomplished dynamically (at run time). Dynamic binding is a result of virtual functions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>What is a pure virtual function? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#pure-virtual" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>A pure virtual function is a function that must be overridden in a derived class and need not be defined. A virtual function is declared to be “pure” using the curious =0 syntax. For example:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Base { <text:s text:c="3"/>public: <text:s text:c="7"/>void f1(); <text:s text:c="5"/>// not virtual <text:s text:c="7"/>virtual void f2(); <text:s/>// virtual, not pure <text:s text:c="7"/>virtual void f3() = 0; <text:s/>// pure virtual <text:s text:c="3"/>}; <text:s text:c="3"/>Base b; // error: pure virtual f3 not overridden </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Here, Base is an abstract class (because it has a pure virtual function), so no objects of class Base can be directly created: Base is (explicitly) meant to be a base class. For example:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Derived : public Base { <text:s text:c="7"/>// no f1: fine <text:s text:c="7"/>// no f2: fine, we inherit Base::f2 <text:s text:c="7"/>void f3(); <text:s text:c="3"/>}; <text:s text:c="3"/>Derived d; <text:s/>// ok: Derived::f3 overrides Base::f3 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Abstract classes are immensely useful for defining interfaces. In fact, a class with no data and where all functions are pure virtual functions is often called an interface.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>You can provide a definition for a pure virtual function:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Base::f3() { /* ... */ } </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>This is very occasionally useful (to provide some simple common implementation detail for derived classes), but Base::f3() must still be overridden in some derived class. If you don’t override a pure virtual function in a derived class, that derived class becomes abstract:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class D2 : public Base { <text:s text:c="7"/>// no f1: fine <text:s text:c="7"/>// no f2: fine, we inherit Base::f2 <text:s text:c="7"/>// no f3: fine, but D2 is therefore still abstract <text:s text:c="3"/>}; <text:s text:c="3"/>D2 d; <text:s text:c="2"/>// error: pure virtual Base::f3 not overridden </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>What’s the difference between how virtual and non-virtual member functions are called? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#dyn-binding" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Non-virtual member functions are resolved statically. That is, the member function is selected statically (at compile-time) based on the type of the pointer (or reference) to the object.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro31">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>In contrast, virtual member functions are resolved dynamically (at run-time). That is, the member function is selected dynamically (at run-time) based on the type of the object, not the type of the pointer/reference to that object. This is called “dynamic binding.” Most compilers use some variant of the following technique: if the object has one or more virtual functions, the compiler puts a hidden pointer in the object called a “virtual-pointer” or “v-pointer.” This v-pointer points to a global table called the “virtual-table” or “v-table.”</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro31">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The compiler creates a v-table for each class that has at least one virtual function. For example, if class Circle has virtual functions for draw() and move() and resize(), there would be exactly one v-table associated with class Circle, even if there were a gazillion Circle objects, and the v-pointer of each of those Circle objects would point to the Circle v-table. The v-table itself has pointers to each of the virtual functions in the class. For example, the Circle v-table would have three pointers: a pointer to Circle::draw(), a pointer to Circle::move(), and a pointer to Circle::resize().</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>During a dispatch of a virtual function, the run-time system follows the object’s v-pointer to the class’s v-table, then follows the appropriate slot in the v-table to the method code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro31">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The space-cost overhead of the above technique is nominal: an extra pointer per object (but only for objects that will need to do dynamic binding), plus an extra pointer per method (but only for virtual methods). The time-cost overhead is also fairly nominal: compared to a normal function call, a virtual function call requires two extra fetches (one to get the value of the v-pointer, a second to get the address of the method). None of this runtime activity happens with non-virtual functions, since the compiler resolves non-virtual functions exclusively at compile-time based on the type of the pointer.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string"><text:p>Note: the above discussion is simplified considerably, since it doesn’t account for extra structural things like multiple inheritance, virtual inheritance, RTTI, etc., nor does it account for space/speed issues such as page faults, calling a function via a pointer-to-function, etc. If you want to know about those other things, please ask <text:a xlink:href="news:comp.lang.c++" xlink:type="simple">comp.lang.c++</text:a>; PLEASE DO NOT SEND E-MAIL TO ME!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>What happens in the hardware when I call a virtual function? How many layers of indirection are there? How much overhead is there? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#dyn-binding2" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>This is a drill-down of <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#dyn-binding" xlink:type="simple">the previous FAQ</text:a>. The answer is entirely compiler-dependent, so your mileage may vary, but most C++ compilers use a scheme similar to the one presented here.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Let’s work an example. Suppose class Base has 5 virtual functions: virt0() through virt4().</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>// Your original C++ source codeclass Base {public: <text:s/>virtual arbitrary_return_type virt0( /*...arbitrary params...*/ ); <text:s/>virtual arbitrary_return_type virt1( /*...arbitrary params...*/ ); <text:s/>virtual arbitrary_return_type virt2( /*...arbitrary params...*/ ); <text:s/>virtual arbitrary_return_type virt3( /*...arbitrary params...*/ ); <text:s/>virtual arbitrary_return_type virt4( /*...arbitrary params...*/ ); <text:s/>// ...}; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro31">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Step #1: the compiler builds a static table containing 5 function-pointers, burying that table into static memory somewhere. Many (not all) compilers define this table while compiling the .cpp that defines Base’s first non-inline virtual function. We call that table the v-table; let’s pretend its technical name is Base::__vtable. If a function pointer fits into one machine word on the target hardware platform, Base::__vtable will end up consuming 5 hidden words of memory. Not 5 per instance, not 5 per function; just 5. It might look something like the following pseudo-code:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>// Pseudo-code (not C++, not C) for a static table defined within file Base.cpp// Pretend FunctionPtr is a generic pointer to a generic member function// (Remember: this is pseudo-code, not C++ code)FunctionPtr Base::__vtable[5] = { <text:s/>&amp;Base::virt0, &amp;Base::virt1, &amp;Base::virt2, &amp;Base::virt3, &amp;Base::virt4}; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Step #2: the compiler adds a hidden pointer (typically also a machine-word) to each object of class Base. This is called the v-pointer. Think of this hidden pointer as a hidden data member, as if the compiler rewrites your class to something like this:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>// Your original C++ source codeclass Base {public: <text:s/>// ... <text:s/>FunctionPtr* __vptr; <text:s/>// Supplied by the compiler, hidden from the programmer <text:s/>// ...}; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>Step #3: the compiler initializes this-&gt;__vptr within each constructor. The idea is to cause each object’s v-pointer to point at its class’s v-table, as if it adds the following instruction in each constructor’s <text:a xlink:href="https://isocpp.org/wiki/faq/ctors#init-lists" xlink:type="simple">init-list</text:a>:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Base::Base( /*...arbitrary params...*/ ) <text:s/>: __vptr(&amp;Base::__vtable[0]) <text:s/>// Supplied by the compiler, hidden from the programmer <text:s/>// ...{ <text:s/>// ...} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro29">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Now let’s work out a derived class. Suppose your C++ code defines class Der that inherits from class Base. The compiler repeats steps #1 and #3 (but not #2). In step #1, the compiler creates a hidden v-table, keeping the same function-pointers as in Base::__vtable but replacing those slots that correspond to overrides. For instance, if Der overrides virt0() through virt2() and inherits the others as-is, Der’s v-table might look something like this (pretend Der doesn’t add any new virtuals):</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>// Pseudo-code (not C++, not C) for a static table defined within file Der.cpp// Pretend FunctionPtr is a generic pointer to a generic member function// (Remember: this is pseudo-code, not C++ code)FunctionPtr Der::__vtable[5] = { <text:s/>&amp;Der::virt0, &amp;Der::virt1, &amp;Der::virt2, &amp;Base::virt3, &amp;Base::virt4 <text:s text:c="41"/>↑↑↑↑ <text:s text:c="9"/>↑↑↑↑ // Inherited as-is}; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>In step #3, the compiler adds a similar pointer-assignment at the beginning of each of Der’s constructors. The idea is to change each Der object’s v-pointer so it points at its class’s v-table. (This is not a second v-pointer; it’s the same v-pointer that was defined in the base class, Base; remember, the compiler does not repeat step #2 in class Der.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Finally, let’s see how the compiler implements a call to a virtual function. Your code might look like this:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>// Your original C++ codevoid mycode(Base* p){ <text:s/>p-&gt;virt3();} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The compiler has no idea whether this is going to call Base::virt3() or Der::virt3() or perhaps the virt3() method of another derived class that doesn’t even exist yet. It only knows for sure that you are calling virt3() which happens to be the function in slot #3 of the v-table. It rewrites that call into something like this:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>// Pseudo-code that the compiler generates from your C++void mycode(Base* p){ <text:s/>p-&gt;__vptr[3](p);} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>On typical hardware, the machine-code is two ‘load’s plus a call:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The first load gets the v-pointer, storing it into a register, say r1.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The second load gets the word at r1 + 3*4 (pretend function-pointers are 4-bytes long, so r1 + 12 is the pointer to the right class’s virt3() function). Pretend it puts that word into register r2 (or r1 for that matter).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The third instruction calls the code at location r2.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Conclusions:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Objects of classes with virtual functions have only a small space-overhead compared to those that don’t have virtual functions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Calling a virtual function is fast — almost as fast as calling a non-virtual function.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>You don’t get any additional per-call overhead no matter how deep the inheritance gets. You could have 10 levels of inheritance, but there is no “chaining” — it’s always the same — fetch, fetch, call.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string"><text:p>Caveat: I’ve intentionally ignored multiple inheritance, virtual inheritance and RTTI. Depending on the compiler, these can make things a little more complicated. If you want to know about these things, DO NOT EMAIL ME, but instead ask <text:a xlink:href="news:comp.lang.c++" xlink:type="simple">comp.lang.c++</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>Caveat: Everything in this FAQ is compiler-dependent. Your mileage may vary.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>How can a member function in my derived class call the same function from its base class? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#fully-qualified-calls-to-base" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Use Base::f();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>Let’s start with a simple case. When you call a non-virtual function, the compiler obviously doesn’t use <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#dyn-binding2" xlink:type="simple">the virtual-function mechanism</text:a>. Instead it calls the function by name, using the fully qualified name of the member function. For instance, the following C++ code…</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>void mycode(Fred* p){ <text:s/>p-&gt;goBowling(); <text:s/>// Pretend Fred::goBowling() is non-virtual} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>…might get compiled into something like this C-like code (the p parameter becomes the this object within the member function):</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>void mycode(Fred* p){ <text:s/>__Fred__goBowling(p); <text:s/>// Pseudo-code only; not real} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The actual name-mangling scheme is more involved than the simple one implied above, but you get the idea. The point is that there is nothing strange about this particular case — it resolves to a normal function more-or-less like printf().</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro29">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>Now for the case being addressed in the question above: When you call a virtual function using its fully-qualified name (the class-name followed by “::”), the compiler does not use the virtual call mechanism, but instead uses the same mechanism as if you called a non-virtual function. Said another way, it calls the function by name rather than <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#dyn-binding2" xlink:type="simple">by slot-number</text:a>. So if you want code within derived class Der to call Base::f(), that is, the version of f() defined in its base class Base, you should write:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>void Der::f(){ <text:s/>Base::f(); <text:s/>// Or, if you prefer, this-&gt;Base::f();} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The complier will turn that into something vaguely like the following (again using an overly simplistic name-mangling scheme):</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>void __Der__f(Der* this) <text:s/>// Pseudo-code only; not real{ <text:s/>__Base__f(this); <text:s text:c="7"/>// Pseudo-code only; not real} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>I have a heterogeneous list of objects, and my code needs to do class-specific things to the objects. Seems like this ought to use dynamic binding but can’t figure it out. What should I do? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#inversion" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>It’s surprisingly easy.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Suppose there is a base class Vehicle with derived classes Car and Truck. The code traverses a list of Vehicle objects and does different things depending on the type of Vehicle. For example it might weigh the Truck objects (to make sure they’re not carrying too heavy of a load) but it might do something different with a Car object — check the registration, for example.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The initial solution for this, at least with most people, is to use an if statement. E.g., “if the object is a Truck, do this, else if it is a Car, do that, else do a third thing”:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro30">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>typedef std::vector&lt;Vehicle*&gt; <text:s/>VehicleList;void myCode(VehicleList&amp; v){ <text:s/>for (VehicleList::iterator p = v.begin(); p != v.end(); ++p) { <text:s text:c="3"/>Vehicle&amp; v = **p; <text:s/>// just for shorthand <text:s text:c="3"/>// generic code that works for any vehicle... <text:s text:c="3"/>// ... <text:s text:c="3"/>// perform the &quot;foo-bar&quot; operation. <text:s text:c="3"/>// note: the details of the &quot;foo-bar&quot; operation depend <text:s text:c="3"/>// on whether we&apos;re working with a car or a truck. <text:s text:c="3"/>if (v is a Car) { <text:s text:c="5"/>// car-specific code that does &quot;foo-bar&quot; on car v <text:s text:c="5"/>// ... <text:s text:c="3"/>} else if (v is a Truck) { <text:s text:c="5"/>// truck-specific code that does &quot;foo-bar&quot; on truck v <text:s text:c="5"/>// ... <text:s text:c="3"/>} else { <text:s text:c="5"/>// semi-generic code that does &quot;foo-bar&quot; on something else <text:s text:c="5"/>// ... <text:s text:c="3"/>} <text:s text:c="3"/>// generic code that works for any vehicle... <text:s text:c="3"/>// ... <text:s/>}} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The problem with this is what I call “else-if-heimer’s disease” (say it fast and you’ll understand). The above code gives you else-if-heimer’s disease because eventually you’ll forget to add an else if when you add a new derived class, and you’ll probably have a bug that won’t be detected until run-time, or worse, when the product is in the field.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The solution is to use dynamic binding rather than dynamic typing. Instead of having (what I call) the live-code dead-data metaphor (where the code is alive and the car/truck objects are relatively dead), we move the code into the data. This is a slight variation of Bertrand Meyer’s Law of Inversion.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The idea is simple: use the description of the code within the {...} blocks of each if (in this case it is “the foo-bar operation”; obviously your name will be different). Just pick up this descriptive name and use it as the name of a new virtual member function in the base class (in this case we’ll add a fooBar() member function to class Vehicle).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>class Vehicle {public: <text:s/>// performs the &quot;foo-bar&quot; operation <text:s/>virtual void fooBar() = 0;}; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Then you remove the whole if...else if… block and replace it with a simple call to this virtual function:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>typedef std::vector&lt;Vehicle*&gt; <text:s/>VehicleList;void myCode(VehicleList&amp; v){ <text:s/>for (VehicleList::iterator p = v.begin(); p != v.end(); ++p) { <text:s text:c="3"/>Vehicle&amp; v = **p; <text:s/>// just for shorthand <text:s text:c="3"/>// generic code that works for any vehicle... <text:s text:c="3"/>// ... <text:s text:c="3"/>// perform the &quot;foo-bar&quot; operation. <text:s text:c="3"/>v.fooBar(); <text:s text:c="3"/>// generic code that works for any vehicle... <text:s text:c="3"/>// ... <text:s/>}} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Finally you move the code that used to be in the {...} block of each if into the fooBar() member function of the appropriate derived class:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>class Car : public Vehicle {public: <text:s/>virtual void fooBar();};void Car::fooBar(){ <text:s/>// car-specific code that does &quot;foo-bar&quot; on &apos;this&apos; <text:s/>// this is the code that was in {...} of if (v is a Car)}class Truck : public Vehicle {public: <text:s/>virtual void fooBar();};void Truck::fooBar(){ <text:s/>// truck-specific code that does &quot;foo-bar&quot; on &apos;this&apos; <text:s/>// this is the code that was in {...} of if (v is a Truck)} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>If you actually have an else block in the original myCode() function (see above for the “semi-generic code that does the ‘foo-bar’ operation on something other than a Car or Truck”), change Vehicle’s fooBar() from pure virtual to plain virtual and move the code into that member function:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>class Vehicle {public: <text:s/>// performs the &quot;foo-bar&quot; operation <text:s/>virtual void fooBar();};void Vehicle::fooBar(){ <text:s/>// semi-generic code that does &quot;foo-bar&quot; on something else <text:s/>// this is the code that was in {...} of the else <text:s/>// you can think of this as &quot;default&quot; code...} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>That’s it!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>The point, of course, is that we try to avoid decision logic with decisions based on the kind-of derived class you’re dealing with. In other words, you’re trying to avoid if the object is a car do xyz, else if it&apos;s a truck do pqr, etc., because that leads to else-if-heimer’s disease.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>When should my destructor be virtual? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#virtual-dtors" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>When someone will delete a derived-class object via a base-class pointer.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>In particular, here’s when you need to make your destructor virtual:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>if someone will derive from your class,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>and if someone will say new Derived, where Derived is derived from your class,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>and if someone will say delete p, where the actual object’s type is Derived but the pointer p’s type is your class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Confused? Here’s a simplified rule of thumb that usually protects you and usually doesn’t cost you anything: make your destructor virtual if your class has any virtual functions. Rationale:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>that usually protects you because most base classes have at least one virtual function.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro29">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>that usually doesn’t cost you anything because there is no added per-object space-cost for the second or subsequent virtual in your class. In other words, you’ve already paid all the per-object space-cost that you’ll ever pay once you add the first virtual function, so the virtual destructor doesn’t add any additional per-object space cost. (Everything in this bullet is theoretically compiler-specific, but in practice it will be valid on almost all compilers.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Note: in a derived class, if your base class has a virtual destructor, your own destructor is automatically virtual. You might need an explicitly defined destructor for other reasons, but there’s no need to redeclare a destructor simply to make sure it is virtual. No matter whether you declare it with the virtual keyword, declare it without the virtual keyword, or don’t declare it at all, it’s still virtual.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro29">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>By the way, if you’re interested, here are the mechanical details of why you need a virtual destructor when someone says delete using a Base pointer that’s pointing at a Derived object. When you say delete p, and the class of p has a virtual destructor, the destructor that gets invoked is the one associated with the type of the object *p, not necessarily the one associated with the type of the pointer. This is A Good Thing. In fact, violating that rule makes your program undefined. The technical term for that is, “Yuck.”</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>Why are destructors not virtual by default? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#virtual-dtor-rationale" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Because many classes are not designed to be used as base classes. Virtual functions make sense only in classes meant to act as interfaces to objects of derived classes (typically allocated on a heap and accessed through pointers or references).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>So when should I declare a destructor virtual? Whenever the class has at least one virtual function. Having virtual functions indicate that a class is meant to act as an interface to derived classes, and when it is, an object of a derived class may be destroyed through a pointer to the base. For example:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Base { <text:s text:c="7"/>// ... <text:s text:c="7"/>virtual ~Base(); <text:s text:c="3"/>}; <text:s text:c="3"/>class Derived : public Base { <text:s text:c="7"/>// ... <text:s text:c="7"/>~Derived(); <text:s text:c="3"/>}; <text:s text:c="3"/>void f() <text:s text:c="3"/>{ <text:s text:c="7"/>Base* p = new Derived; <text:s text:c="7"/>delete p; <text:s text:c="2"/>// virtual destructor used to ensure that ~Derived is called <text:s text:c="3"/>} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Had Base’s destructor not been virtual, Derived’s destructor would not have been called – with likely bad effects, such as resources owned by Derived not being freed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>What is a “virtual constructor”? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#virtual-ctors" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>An idiom that allows you to do something that C++ doesn’t directly support.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>You can get the effect of a virtual constructor by a virtual clone() member function (for copy constructing), or a virtual create() member function (for the <text:a xlink:href="https://isocpp.org/wiki/faq/ctors#default-ctor" xlink:type="simple">default constructor</text:a>).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro31">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>class Shape {public: <text:s/>virtual ~Shape() { } <text:s text:c="16"/>// A virtual destructor <text:s/>virtual void draw() = 0; <text:s text:c="12"/>// A pure virtual function <text:s/>virtual void move() = 0; <text:s/>// ... <text:s/>virtual Shape* clone() <text:s/>const = 0; <text:s text:c="2"/>// Uses the copy constructor <text:s/>virtual Shape* create() const = 0; <text:s text:c="2"/>// Uses the default constructor};class Circle : public Shape {public: <text:s/>Circle* clone() <text:s/>const; <text:s text:c="2"/>// Covariant Return Types; see below <text:s/>Circle* create() const; <text:s text:c="2"/>// Covariant Return Types; see below <text:s/>// ...};Circle* Circle::clone() <text:s/>const { return new Circle(*this); }Circle* Circle::create() const { return new Circle(); <text:s text:c="5"/>} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>In the clone() member function, the new Circle(*this) code calls Circle’s copy constructor to copy the state of this into the newly created Circle object. (Note: unless Circle is known to be <text:a xlink:href="https://isocpp.org/wiki/faq/strange-inheritance#final-classes" xlink:type="simple">final (AKA a leaf)</text:a>, you can reduce the chance of <text:a xlink:href="https://isocpp.org/wiki/faq/value-vs-ref-semantics#pass-by-value" xlink:type="simple">slicing</text:a> by making its copy constructor protected.) In the create() member function, the new Circle() code calls Circle’s <text:a xlink:href="https://isocpp.org/wiki/faq/ctors#default-ctor" xlink:type="simple">default constructor</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Users use these as if they were “virtual constructors”:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>void userCode(Shape&amp; s){ <text:s/>Shape* s2 = s.clone(); <text:s/>Shape* s3 = s.create(); <text:s/>// ... <text:s/>delete s2; <text:s text:c="3"/>// You need a virtual destructor here <text:s/>delete s3;} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>This function will work correctly regardless of whether the Shape is a Circle, Square, or some other kind-of Shape that doesn’t even exist yet.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro31">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Note: The return type of Circle’s clone() member function is intentionally different from the return type of Shape’s clone() member function. This is called Covariant Return Types, a feature that was not originally part of the language. If your compiler complains at the declaration of Circle* clone() const within class Circle (e.g., saying “The return type is different” or “The member function’s type differs from the base class virtual function by return type alone”), you have an old compiler and you’ll have to change the return type to Shape*.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>Why don’t we have virtual constructors? <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#virtual-ctor-rationale" xlink:type="simple"> </text:a> <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions#" xlink:type="simple"> </text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>A virtual call is a mechanism to get work done given partial information. In particular, virtual allows us to call a function knowing only an interfaces and not the exact type of the object. To create an object you need complete information. In particular, you need to know the exact type of what you want to create. Consequently, a “call to a constructor” cannot be virtual.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string"><text:p>Techniques for using an indirection when you ask to create an object are often referred to as “Virtual constructors”. For example, see <text:a xlink:href="http://stroustrup.com/3rd.html" xlink:type="simple">TC++PL3</text:a> 15.6.2.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>For example, here is a technique for generating an object of an appropriate type using an abstract class:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>struct F { <text:s/>// interface to object creation functions <text:s text:c="7"/>virtual A* make_an_A() const = 0; <text:s text:c="7"/>virtual B* make_a_B() const = 0; <text:s text:c="3"/>}; <text:s text:c="3"/>void user(const F&amp; fac) <text:s text:c="3"/>{ <text:s text:c="7"/>A* p = fac.make_an_A(); // make an A of the appropriate type <text:s text:c="7"/>B* q = fac.make_a_B(); <text:s/>// make a B of the appropriate type <text:s text:c="7"/>// ... <text:s text:c="3"/>} <text:s text:c="3"/>struct FX : F { <text:s text:c="7"/>A* make_an_A() const { return new AX(); } // AX is derived from A <text:s text:c="7"/>B* make_a_B() const { return new BX(); <text:s/>} // BX is derived from B <text:s text:c="3"/>}; <text:s text:c="3"/>struct FY : F { <text:s text:c="7"/>A* make_an_A() const { return new AY(); } // AY is derived from A <text:s text:c="7"/>B* make_a_B() const { return new BY(); <text:s/>} // BY is derived from B <text:s text:c="3"/>}; <text:s text:c="3"/>int main() <text:s text:c="3"/>{ <text:s text:c="7"/>FX x; <text:s text:c="7"/>FY y; <text:s text:c="7"/>user(x); <text:s text:c="3"/>// this user makes AXs and BXs <text:s text:c="7"/>user(y); <text:s text:c="3"/>// this user makes AYs and BYs <text:s text:c="7"/>user(FX()); // this user makes AXs and BXs <text:s text:c="7"/>user(FY()); // this user makes AYs and BYs <text:s text:c="7"/>// ... <text:s text:c="3"/>} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>This is a variant of what is often called “the factory pattern”. The point is that user() is completely isolated from knowledge of classes such as AX and AY.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro26" table:number-rows-repeated="1048400">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="c++ ref" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co7" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
      <text:p>What is a “virtual constructor”?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>An idiom that allows you to do something that C++ doesn’t directly support.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
      <text:p>Example 1 using the idiom of virtual contructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Shape {</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual ~Shape() { } <text:s text:c="16"/>// A virtual destructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual void draw() = 0; <text:s text:c="12"/>// A pure virtual function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual void move() = 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>// ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>      virtual <text:span text:style-name="T45">Shape</text:span>* clone()  const = 0;   // Uses the copy constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual Shape* create() const = 0; <text:s text:c="2"/>// Uses the default constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Circle : public Shape {</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Circle* clone() <text:s/>const; <text:s text:c="2"/>// Covariant Return Types; see below</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Circle* create() const; <text:s text:c="2"/>// Covariant Return Types; see below</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>// ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T45">Circle</text:span>* Circle::clone()  const { return new Circle(*this); }</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Circle* Circle::create() const { return new Circle(); <text:s text:c="5"/>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>with the code above, calling clone using Shape, creates Circle.</text:p><text:p>Note the covariant return type of clone and create functions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
      <text:p>Example 2 using the idiom of virtual constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>A variant of factory method using virtual constructor idiom:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct F { <text:s/>// interface to object creation functions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>virtual A* make_an_A() const = 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>virtual B* make_a_B() const = 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>void user(const F&amp; fac)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>A* p = fac.make_an_A(); // make an A of the appropriate type</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>B* q = fac.make_a_B(); <text:s/>// make a B of the appropriate type</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>// ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>user function can use any class derived from F, even if it is completely isolated from it.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Arrays and inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>casting or passing as function argument :</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Derived * <text:s/>→ Base * <text:s/>: legal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Derived ** <text:s/>→ Base ** : illegal, pass a vector of Dogs to a function expecting a vector of Pets</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>array of Derived <text:s/>→ array of Base : legal but run-time error see code 13 <text:s text:c="4"/>use std::array&lt;T, N&gt; is better </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Std::container of Derived * <text:s/>→ Std::container of Base * : illegal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Code 13</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>void userCode(Base* arrayOfBase)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>arrayOfBase[2].f(); <text:s/>//this points to the position arrayOfBase+sizeof(Base)*2. If sizeof(Derived) &gt; sizeof(Base) → catastrophy </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>Derived arrayOfDerived[10]; <text:s text:c="2"/>// 4</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>userCode(arrayOfDerived); <text:s text:c="4"/>// 5</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:number-rows-repeated="5">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>std::map vs std::unordered_map</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>the first uses tree-based lookedup, the second uses hash based lookedup</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Array, collection, typle, shared_ptr, unique_ptr</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>std::vector vs std::Array</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro20" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>the first uses the heap, the second uses the stack</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro20" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
        <text:p>Arrays are fixed-size sequence containers: they hold a specific number of elements ordered in a strict linear sequence.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;array&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce42" office:value-type="string" calcext:value-type="string">
        <text:p>int main ()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::array&lt;int,10&gt; myarray;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>unsigned int i;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>// assign some values:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>for (i=0; i&lt;10; i++) myarray[i]=i;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>// print content</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;myarray contains:&quot;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>for (i=0; i&lt;10; i++)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>std::cout &lt;&lt; &apos; &apos; &lt;&lt; myarray[i];</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
        <text:p>A tuple is an object capable to hold a collection of elements. Each element can be of a different type.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;tuple&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce42" office:value-type="string" calcext:value-type="string">
        <text:p>int main ()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::tuple&lt;int,char&gt; mytuple (10,&apos;a&apos;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::get&lt;0&gt;(mytuple) = 20;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;mytuple contains: &quot;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::get&lt;0&gt;(mytuple) &lt;&lt; &quot; and &quot; &lt;&lt; std::get&lt;1&gt;(mytuple);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>Std::get function is specialized for pair and array too.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;utility&gt; <text:s text:c="5"/>// std::pair, std::get</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt; <text:s text:c="4"/>// std::cout</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce42" office:value-type="string" calcext:value-type="string">
        <text:p>int main () {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::pair &lt;int,char&gt; foo (10,&apos;x&apos;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::get&lt;0&gt;(foo) = 50;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;foo contains: &quot;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::get&lt;0&gt;(foo) &lt;&lt; &quot; and &quot; &lt;&lt; std::get&lt;1&gt;(foo) &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
        <text:p>Is an array of Derived a kind-of an array of Base?</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>void userCode(Base* arrayOfBase)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>arrayOfBase[1].f(); <text:s text:c="10"/>// 3</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>int main()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>Derived arrayOfDerived[10]; <text:s text:c="2"/>// 4</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>userCode(arrayOfDerived); <text:s text:c="4"/>// 5</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>// ...</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>the compiler does not know the arg. To userCode is an array and does not detect the run time catastrophy.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
        <text:p>a container of derived can&apos;t be cast to container of base</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>void chug(list&lt;Base*&gt;&amp; alist)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>for (list&lt;Base*&gt;::iterator i = alist.begin(), z = alist.end(); i != z; ++i)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>(*i)-&gt;chug();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>int main() </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>list&lt;Base*&gt; baselist;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>list&lt;Derived*&gt; derlist;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>baselist.push_back(new Base);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>baselist.push_back(new Base);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>derlist.push_back(new Derived);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>derlist.push_back(new Derived);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>chug(baselist);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>// chug(derlist); <text:s/>// How do I make this work?</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>} </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;typename C, typename T&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>void chug(const C&lt;T&gt;&amp; container)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>typedef typename C&lt;T&gt;::iterator iter;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>for(iter i = container.begin(); i &lt; container.end(); ++i)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>(*i)-&gt;chug();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;typename T&gt; void chug(list&lt;T*&gt;&amp; alist) { for (list&lt;T*&gt;::iterator i = alist.begin(), z = alist.end(); i != z; ++i) (*i)-&gt;chug(); }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>soltuion</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
        <text:p>Either store them by pointer (boost::shared_ptr is a popular option), or use Boost ptr_containers that store pointers internally,</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;boost/ptr_container/ptr_vector.hpp&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>boost::ptr_vector&lt;FooBase&gt; foos;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>foos.push_back(new FooDerived(...));</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>foos[0].memberFunc();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>possible solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>`boost::any`</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>class IBase {};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>class Derived : virtual public IBase {};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>std::vector&lt;std::unique_ptr&lt;IBase&gt;&gt; v;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>v.push_back(std::unique_ptr&lt;IBase&gt;(new Derived())); </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro23">
       <table:table-cell/>
       <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string"><text:p>a unique_ptr, has the ownership of the pointee and delets it when it gets deleted. Ownership can be &quot;moved&quot; from one unique_ptr to another, but there can never be more than one owner. </text:p><text:p>With shared_ptr, there can be an arbitrary number of owners, and the last one to die deletes the pointee. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>kind of = if A can do something B can’t, then B can’t be a kind of A. when your derived class overrides a function as private, you violate the substitutability principle</text:p><text:p>B is a kind of A if you can do to a B object whatever you can do to A, and it will work correctly (not just compile). </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Design – inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>- Composition is for code reuse, inheritance is mainly for dynamic binding (flexibility). Don&apos;t inherit to reuse code. inherit for interface substitutability (https://isocpp.org/wiki/faq/multiple-inheritance#mi-disciplines)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
      <text:p>- the derived class objects must be substitutable for the base class objects. That means objects of the derived class must behave in a manner consistent with the promises made in the base class’ contract. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string"><text:p>you can make anything inherit from anything provided the methods in the derived class abide by the promises made in the base class. </text:p><text:p>But you ought not to use inheritance just because you feel like it, or just because you want to get code reuse. </text:p><text:p>You should use inheritance (a) only if </text:p><text:p>–--- the derived class’s methods can abide by all the promises made in the base class, </text:p><text:p>–--- and you don’t think you’ll confuse your users, </text:p><text:p>–--- and there’s something to be gained by using the inheritance — some real, measurable improvement in time, money or risk.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>Bad inheritances always have a base class with an extra capability (often an extra member function or two; sometimes an extra promise made by one or a combination of member functions) that a derived class can’t satisfy. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string"><text:p>interfaces are so valuable, they should be protected from being tarnished by data structures and other implementation artifacts. Thus you should separate interface from implementation.</text:p><text:p>And to seperate them, use an ABC</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Design – access</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>C++ access control is for clarity: you want to make it clear which parts of the class are supposed to be used and which are just implementation details or the bits that you might want to change later. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>prevent my class from being inhirited from:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce68" office:value-type="string" calcext:value-type="string">
       <text:p>solution1</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>It has no public constructor. To create instances of it, have a static creator or a friend one. See code 14</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce68" office:value-type="string" calcext:value-type="string">
       <text:p>solution2</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>declare it as final</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro23" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>class Point final</text:p><text:p>{</text:p><text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>code 14</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>class Point</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>private:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>int x, y;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>private:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Point(int xx=0, int yy=0):x(xx), y(yy){}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>static Point* create(int xx=0, int yy=0) { return new Point(xx,yy);}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>friend Point* create(int xx=0, int yy=0);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Point* create(int xx, int yy) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{ </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>return new Point(xx,yy);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>class Pointcol:public Point</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>int main()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Point* p=Point::create(3,14);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>cout &lt;&lt; *p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>delete p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>p=create(13,4);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>cout &lt;&lt; *p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>delete p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Pointcol pc; //←--------compile time error</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="6"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>prevent a member function from being overriden</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>solution1: set as non-virutal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>solution2: use final</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>solution3: use a comment to discourage from overriding</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>hiding</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Function f is hidden leads to static binding. Because B::f is called if B pointer is used</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>D *d=new D;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b→f(); //B::f is called. And can&apos;t see D&apos;s version</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>d→f(); //D::f is called. And can&apos;t see B&apos;s version. Unless <text:span text:style-name="T6">using B::f;</text:span> is used or call using <text:span text:style-name="T6">d.B::f();</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>private inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string"><text:p> a member function or friend of a privately derived class, the relationship to the base class is known, and the upward conversion from PrivatelyDer* to Base* (or PrivatelyDer&amp; to Base&amp;) is safe; no cast is needed</text:p><text:p>However, users of PrivatelyDer should avoid this unsafe conversion, since it is based on a private decision of PrivatelyDer, and is subject to change without notice.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>C++ ref/Design:-<text:span text:style-name="T46">Private inheritance is employed almost exclusively to inherit an implementation. hbf the code. so that the derived class takes advantage of it, while providing a new interface.</text:span></text:p><text:p><text:span text:style-name="T47">  </text:span><text:span text:style-name="T46">The necessity of using a cast to convert the derived class pointer to a base class pointer is a strong indicator of a bad design practice.gotcha 91</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public: using Base::f; //this makes f public symblol accessible through Derived even if derived privately from Base </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>multiple inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>There are two kinds of problems with multiple inheritance - &quot;static&quot; and &quot;dynamic&quot;. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>Static:If you override name in the class C, did you override A::name, B::name or both? What happens if the two name functions accept arguments of the same type? What happens if they don&apos;t? </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro10" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
        <text:p>dynamic: C derive from A and B. get an A* from a C*. then get a B* from A*. WRONG. No passing from B* to A* or vice-versa. Always start from C*. Because without knowing the definition of C, there&apos;s no way to figure out the location of the B sub-object given the location of the A sub-object. </text:p>
       </table:table-cell>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64"/>
     </table:table-row>
     <table:table-row table:style-name="ro11" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string"><text:p>to pro<text:span text:style-name="T48">perly multi inherit, the base classes and the join class should be ABCs.</text:span></text:p><text:p><text:span text:style-name="T49">this discipline helps you avoid situations where you need to inherit data or code along two paths, plus it encourages you to use inheritance properly.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>loop with array</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::thread threads[3];</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>for (auto&amp; th : threads) th.join();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::mutex mtx; std::unique_lock&lt;std::mutex&gt; lck(mtx);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unique_lock locks the mutex passed by parameter. The mutex is unlocked at destruction (at the end of the scope or in case an exception is thrown)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>at construction, it can defer locking, if passed the right second argument.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Modern C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1- no new/delete. <text:s/>Circle* p = new Circle(42); <text:s/>Auto p = make_shared&lt;circle&gt;(42); Auto p = make_unique&lt;circle&gt;(42);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2- Range-for : for (auto &amp;element : v)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>11- loops and algo </text:p><text:p>for_each(begin(v), end(v), [](){ … });  instead of for (auto i=v.begin(); I != v.end(); ++i) { … }</text:p><text:p/><text:p>Auto I = find_if(begin(v), end(v), []() { return … }); instead of auto i=v.begin(); for(…) { if (condition(i)) break;}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3- automatic return type deduction</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro34">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T50">auto</text:span> mean(auto <text:span text:style-name="T50">Sequence</text:span> &amp;s)  //any Sequence</text:p><text:p>{</text:p><text:p>  Auto n=0.0;</text:p><text:p>  For (auto x:s)</text:p><text:p>  {</text:p><text:p>   n+=x;</text:p><text:p>  }</text:p><text:p>  Return n/s.size(); //what if s is empty ?</text:p><text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>4- boost::any for any type. Boost::any so = “a string”; so=10;</text:p>
      </table:table-cell>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>5- boost::optional&lt;int&gt; I = 10;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>6- void someclass(const someclass&amp;)=delete;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>7-void bar() override {;}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>9-value type by default. Need more explanation and example</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>10-detrminism</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Concurrency</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Fractional arithmetic</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Clocks and Timers</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Random numbers and distributions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>New smart pointers</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Regular expressions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>New STL containers, such as arrays, forward lists, and unordered containers</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>New STL algorithms</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Tuples</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Type traits and type utilities</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Lambdas</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Range-based for loops</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Move semantics</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>Variadic templates.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>auto iterator_th = find_if(begin(v_threads), end(v_threads),[&amp;first_message_done](auto &amp; th) { … });</text:p><text:p>while find_if return an iterator, it passes to the lamda the element (a thread object in this case).</text:p><text:p>Note “auto &amp; th” is used, to pass a reference. “auto th” is rejected at compilation because it uses copy constructor which is deleted in std::thread class.</text:p><text:p><text:span text:style-name="T5">“use of deleted function ‘std::thread::thread(std::thread&amp;)”</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>todo</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>experiment few thing in arrays and inheritance(some shared_ptr, container_ptr, function &lt;T&lt;C&gt; &amp; array)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>What is copy assignment, move assignment ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>protected and private inheretance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what are the drawbacks of using OOP ? In embedded ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>the prohibition against converting Foo**to const Foo**.)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>complexity of operations on map, ordered_map, list, vector</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Built-in / Intrinsic / Primitive Data Types/ restrict?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>how much C++ support OO ? (see <text:a xlink:href="http://yosefk.com/c++fqa/class.html#fqa-7.1" xlink:type="simple">http://yosefk.com/c++fqa/class.html#fqa-7.1</text:a>)</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="c++ idioms" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Virtual Friend Function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class Base {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>friend std::ostream&amp; operator&lt;&lt; (std::ostream&amp; o, const Base&amp; b);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>protected:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>virtual void printOn(std::ostream&amp; o) const = 0; <text:s/>// Or plain virtual; see below</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>inline std::ostream&amp; operator&lt;&lt; (std::ostream&amp; o, const Base&amp; b)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>b.printOn(o);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>return o;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class Derived : public Base {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>protected:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>virtual void printOn(std::ostream&amp; o) const;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>void Derived::printOn(std::ostream&amp; o) const</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="c++ ref update" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="9" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>13.29 inheritance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
      <text:p>If the destructor isn&apos;t virtual, chances are it&apos;s not a base class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce76" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T51">elements for inherentance</text:span>:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
      <text:p>abstract function;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
      <text:p>virtual destructor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce77" office:value-type="string" calcext:value-type="string"><text:p>base class : protected destructor OR pure virtual function (see inheritance/virtual destructor) </text:p><text:p>And what about <text:span text:style-name="T52">virtual destructor.</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce78" office:value-type="string" calcext:value-type="string">
      <text:p>Hiding</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p>for hiding not to happen, the signatures of the functions and the number of the functions should be maintained</text:p><text:p>Inline, const are part of the signature</text:p><text:p/>
     </table:table-cell>
     <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro36" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce79" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T53">in visual 2010implemetation was :</text:span><text:span text:style-name="T54">inline</text:span><text:span text:style-name="T55"> </text:span><text:span text:style-name="T54">void</text:span><text:span text:style-name="T55"> * </text:span><text:span text:style-name="T54">operator</text:span><text:span text:style-name="T55"> </text:span><text:span text:style-name="T54">new</text:span><text:span text:style-name="T55">[](size_t size, </text:span><text:span text:style-name="T54">char</text:span><text:span text:style-name="T55"> </text:span><text:span text:style-name="T54">const</text:span><text:span text:style-name="T55"> * filename, </text:span><text:span text:style-name="T54">int</text:span><text:span text:style-name="T55"> line) { ...declaration was:</text:span><text:span text:style-name="T54">void</text:span><text:span text:style-name="T55"> * </text:span><text:span text:style-name="T54">operator</text:span><text:span text:style-name="T55"> </text:span><text:span text:style-name="T54">new</text:span><text:span text:style-name="T55">[](size_t size, </text:span><text:span text:style-name="T54">char</text:span><text:span text:style-name="T55"> </text:span><text:span text:style-name="T54">const</text:span><text:span text:style-name="T55"> * filename, </text:span><text:span text:style-name="T54">int</text:span><text:span text:style-name="T55"> line);linker could not find the function.</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro37" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce80" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T56">class</text:span><text:span text:style-name="T57"> Object{</text:span><text:span text:style-name="T58">public</text:span><text:span text:style-name="T57">:</text:span><text:span text:style-name="T58">virtual</text:span><text:span text:style-name="T57"> </text:span><text:span text:style-name="T58">void</text:span><text:span text:style-name="T57"> print() </text:span><text:span text:style-name="T58">const</text:span><text:span text:style-name="T57"> {cout &lt;&lt;</text:span><text:span text:style-name="T59">&quot;this is Object\n&quot;</text:span><text:span text:style-name="T57">;}};</text:span><text:span text:style-name="T58">class</text:span><text:span text:style-name="T57"> Point: </text:span><text:span text:style-name="T58">public</text:span><text:span text:style-name="T57"> Object{</text:span><text:span text:style-name="T58">public</text:span><text:span text:style-name="T57">:</text:span><text:span text:style-name="T58">void</text:span><text:span text:style-name="T57"> print() {cout &lt;&lt;</text:span><text:span text:style-name="T59">&quot;this is Point\n&quot;</text:span><text:span text:style-name="T57">;}};Point::print is hidden because of absence of const</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53"/>
     <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce81" office:value-type="string" calcext:value-type="string">
      <text:p>Constructor</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>copy constructor</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
        <text:p>copy constructor from ref of a base class only</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce53"/>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro38" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce79" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T56">class</text:span><text:span text:style-name="T57"> Point: </text:span><text:span text:style-name="T58">public</text:span><text:span text:style-name="T57"> Object{};</text:span><text:span text:style-name="T58">class</text:span><text:span text:style-name="T57"> Shape: </text:span><text:span text:style-name="T58">public</text:span><text:span text:style-name="T57"> Object{};</text:span><text:span text:style-name="T58">void</text:span><text:span text:style-name="T57"> cc(</text:span><text:span text:style-name="T58">const</text:span><text:span text:style-name="T57"> Object &amp; o){Point o1=o; o1.print();}</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
        <text:p>copy_constructor.cpp:57:11: error: conversion from ‘const Object’ to non-scalar type ‘Point’ requested</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>Point o1=o; <text:s/></text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="11"/>^</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce41" table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="9"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>13.12 exceptions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce82"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce82" office:value-type="string" calcext:value-type="string"><text:p>-exception raised in the middle of a bloc, <text:span text:style-name="T60">local objects are destructed</text:span>, the remaining code is not run in the rasing function, including any memory deletion instruction (memory leak)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce82" office:value-type="string" calcext:value-type="string">
      <text:p>control is passed to the catching bloc and execution continues after it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string"><text:p>This process continues until, at some level, a handler matches the exception. At that point, the exception is considered &quot;caught&quot;, and no further searching occurs. </text:p><text:p><text:span text:style-name="T60">And the execution continues after all catch blocs ?</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>throw;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>en bas on a dit que throw c&apos;est pour rethrow (the last exception object i believe). what happens in case no exceptions has been thrown, but we encounter throw ? it that correct code after all ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce85" office:value-type="string" calcext:value-type="string">
      <text:p>in a catch bloc it will rethrow the same exception object to the upper level</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inside try or in the code it calls function set for termination </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>throw obj;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in a catch bloc it will create a new object and throw it to the upper level</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>try </text:p><text:p>{</text:p><text:p>try </text:p><text:p>{</text:p><text:p>MyErrDerived e;</text:p><text:p>     throw e;  ←--  throw MyErrDerived. ok</text:p><text:p>    } </text:p><text:p>    catch (MyErr&amp; err) </text:p><text:p>    {</text:p><text:p>printf(&quot;B Inner catch, &amp;err=%p\n&quot;, &amp;err);</text:p><text:p>throw err; ←-- <text:span text:style-name="T61">throws an MyErr object !!! because the base class ref doens carry info on the underlying object + there could be MyErrDerived1, MyErrDerived2, … </text:span>    </text:p><text:p>    }</text:p><text:p>} </text:p><text:p>catch (MyErr&amp; err) </text:p><text:p>{</text:p><text:p>printf(&quot;B Outer catch, &amp;err=%p\n&quot;, &amp;err);</text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>QUIZ</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1-what does throw. Does in code, try and catch bloc ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>2-try </text:p><text:p>{</text:p><text:p>try </text:p><text:p>{</text:p><text:p>MyErrDerived e;</text:p><text:p>     throw e;  ←-- safe/correct ?</text:p><text:p>    } </text:p><text:p>    catch (MyErr&amp; err) </text:p><text:p>    {</text:p><text:p>printf(&quot;B Inner catch, &amp;err=%p\n&quot;, &amp;err);</text:p><text:p>throw err; ←-- safe/correct ?  </text:p><text:p>    }</text:p><text:p>} </text:p><text:p>catch (MyErr&amp; err) </text:p><text:p>{</text:p><text:p>printf(&quot;B Outer catch, &amp;err=%p\n&quot;, &amp;err);</text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>18.1 lambda</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce86" office:value-type="string" calcext:value-type="string">
      <text:p>int multi=2;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce86" office:value-type="string" calcext:value-type="string">
      <text:p>c=count_if(col.begin(),col.end(),[multi /*to capture the local variable multi*/](int x){return !(x%multi)});</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce87" office:value-type="string" calcext:value-type="string"><text:p>multi is read only. Its modification throws compiling error </text:p><text:p>If it needs to be modified, use [&amp;multi]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
   </table:table>
   <table:table table:name="Feuille14" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void f(double x)</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Base::f(double x)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>virtual ~Base(){}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Derived : public Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>void f(char c)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Derived::f(char c)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int main()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Derived* d = new Derived();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Base* b = d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>b-&gt;f(65.3); <text:s/>f defined in B&apos;s interface. And not virtual. So static binding</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>d-&gt;f(65.3); <text:s/>f defined in D&apos;s interface with a cast to char. And not virtual. So static binding</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>delete d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Virtual void f(double x)</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Base::f(double x)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>virtual ~Base(){}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Derived : public Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>void f(char c)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Derived::f(char c)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int main()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Derived* d = new Derived();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Base* b = d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>b-&gt;f(65.3); <text:s/>f defined in B&apos;s interface. And hidden virtual. So no access to the drived because different. So dynamic binding but Derived does not define it. So B&apos;s version is used</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>d-&gt;f(65.3); <text:s/>// error; can&apos;t convert float to Point and It can&apos;t see B&apos;s interface. i thought both version will be accessible. with Point one staticly. double one through the vtabe; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>delete d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
   </table:table>
   <table:table table:name="optim" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>prefetching</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>insertion deletion in array is faster than linked list. Complexity analysis is a rough estimate only (Bjarne). Thanks to prefetch</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>an array of AI, physic, graphics. Pointed by heterogeneous objects</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="embedded" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="5" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce88" office:value-type="string" calcext:value-type="string">
      <text:p>Will have an understanding of the impact of hardware on the design and implementation of code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce88"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>interrupts programming in embedded</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>JIRA</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>understanding of embedded systems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce89" office:value-type="string" calcext:value-type="string">
      <text:p>gui programming using Digia QT. Understand the messages, handling, controls children and their containers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Few insructions in gdb, make. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Find the call stack using registers.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>review registers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>object oriented principles</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ui in atsu. Find some code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Git </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>take notes of what I learned</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>document knowledge</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>I mean don&apos;t use , use inline functions instead of macros, and use const variables instead of #defines.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Don&apos;t use</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>new/delete, </text:p><text:p>avoid exceptions, </text:p><text:p>avoid virtual classes with inheritance, </text:p><text:p>possibly avoid inheritance all together, </text:p><text:p>Be very careful with templates</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
   </table:table>
   <table:table table:name="oodesign" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co8" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce90" office:value-type="string" calcext:value-type="string">
      <text:p>Liskov&apos;s Substitution Principle(LSP) violated</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Let&apos;s assume that the Rectangle object is used somewhere in the application. We extend the application and add the Square class. </text:p><text:p>The square class is returned by a factory pattern, based on some conditions and we don&apos;t know the exact what type of object will be returned. </text:p><text:p>But we know it&apos;s a Rectangle. We get the rectangle object, set the width to 5 and height to 10 and get the area. </text:p><text:p>For a rectangle with width 5 and height 10 the area should be 50. Instead the result will be 100</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Hb:we are creating a square which is based on rectangle class.</text:p><text:p><text:span text:style-name="T5">rectangle class has setWidth and setHeight functions.</text:span></text:p><text:p><text:span text:style-name="T5">But for square, these don&apos;t mean the same for its base class. VIOLATION</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>// Violation of Likov&apos;s Substitution Principle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class Rectangle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>protected int m_width;</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>protected int m_height;</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public void setWidth(int width){</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_width = width;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public void setHeight(int height){</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_height = height;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public int getWidth(){</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return m_width;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public int getHeight(){</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return m_height;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public int getArea(){</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return m_width * m_height;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class Square extends Rectangle </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public void setWidth(int width){</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_width = width;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_height = width;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public void setHeight(int height){</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_width = height;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>m_height = height;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class LspTest</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>private static Rectangle getNewRectangle()</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>// it can be an object returned by some factory ... </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return new Square();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public static void main (String args[])</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Rectangle r = LspTest.getNewRectangle();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>r.setWidth(5);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>r.setHeight(10);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>// user knows that r it&apos;s a rectangle. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>// It assumes that he&apos;s able to set the width and height as for the base class</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>System.out.println(r.getArea());</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>// now he&apos;s surprised to see that the area is 100 instead of 50.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
   </table:table>
   <table:table table:name="somecompanies" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>marine industrial design</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>eclipse recruitment</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="tester job description" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce51"/>
    <table:table-column table:style-name="co9" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="3" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Experience in Test Automation in a Continuous Integration </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Exposure to various delivery methodologies (Waterfall, Iterative and Agile)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>Trustwave : Senior Software Engineer C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave helps businesses fight cybercrime, protect data and reduce security risk. With cloud and managed security services, integrated technologies and a team of security experts, ethical hackers and researchers, Trustwave enables businesses to transform the way they manage their information security and compliance programs. Trustwave delivers automated, efficient and cost-effective threat, vulnerability and compliance management.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave is a privately held company, headquartered in Chicago, with customers in 96 countries. For more information about Trustwave, visit https://www.trustwave.com .</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Overview</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave ( www.trustwave.com ) helps businesses fights cybercrime by providing services and technologies that allow them to achieve information security and compliance. This includes secure email and Internet management solutions that integrate content filtering, compliance, secure messaging and archiving, to protect businesses against email and Interest-based threats.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Job Purpose</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>You will be responsible for the development and maintenance of our web content analysis product on a daily basis, as well as interaction with other teams with regards to product development. You will also be involved in the technical specifications of future versions, and be a liaison into the QA team.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Key Accountabilities</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Develop and maintain our web content analysis product to internal coding standards</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Develop and maintain our anti-virus add-ons to internal coding standards</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Develop and maintain our filetype and unpacking libraries to internal coding standards</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Liaise with members of the QA team during development and testing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Liaise with our technical support team to resolve customer issues</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Research new technologies to determine their applicability to the product</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Key Performance Criteria</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Development according to product release schedules</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Code quality and commenting</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Production of technical documentation for internal use</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Skills/Knowledge/Expereince Required</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Computer science qualification, or similar</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Solid knowledge of C++ and C++ 11</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Experience in MFC and STL</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>2+ years’ experience in C# development</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Knowledge of TCP/IP and networking, socket programming definitely an advantage</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Understanding of HTTP, SSL and common Internet protocols</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Strong Object-Oriented design skills</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Excellent communications and interpersonal skills</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce91" office:value-type="string" calcext:value-type="string">
       <text:p>Skills/Knowledge/Experience Advantageous </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Strong debugging skills</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Experience in Microsoft SQL / TSQL programming</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Experience with HTTP, TCP/IP and DNS</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Experience with Active directories, LDAP, Microsoft IIS</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Previous experience working in an Agile Development environment</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Interpersonal Characteristics</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Analytical skills with attention to detail</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Excellent verbal and written communication skills with people of varying technical ability</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Ability to prioritize and self-manage tasks, responsibilities and time</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Ability to work as a Team Player, in a cross functional team in an Agile Scrum environment</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Ability to understand the target audience and how the products are used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce91" office:value-type="string" calcext:value-type="string">
       <text:p>Reporting Relationship </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Formally reporting to the Development Lead, but primarily accountable to fellow Scrum Team members in a flat team structured environment.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Environment</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Working from a spacious, comfortable and modern office building conveniently located in the Greenlane business district, with easy parking and multiple public transport options. Trustwave’s Auckland office enjoys the benefits of being part of a large multi-national company, while maintaining a collaborative ‘start-up’ type atmosphere owing to a relatively small number of people at this site, operating within an Agile Software Development Framework.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Education:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>We prefer college-educated applicants, but at minimum, high school diploma or equivalent is required for employment.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave is an Equal Opportunity Employer of Minorities, Females, Protected Veterans, and Individuals with Disabilities.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>To All Agencies:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Please, no phone calls or emails to any employee of Trustwave outside of the Talent Acquisition team. Trustwave’s policy is to only accept resumes from agencies via the Trustwave Agency Portal. Agencies must have a valid fee agreement in place and they must have been assigned the specific requisition to which they submit resumes, by the Talent Acquisition team. Any resume submitted outside of this process will be deemed the sole property of Trustwave and in the event a candidate is submitted outside of this policy is hired, no fee or payment of any kind will be paid.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>https://www.linkedin.com/company/blitz-studios-entertainment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Aderant : <text:s/>Intermediate Software Developer </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Posted: </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce92" office:value-type="date" office:date-value="2015-09-08" calcext:value-type="date">
       <text:p>08/09/15</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Job Type: </text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Full Time </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Location: </text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>NZ-Auckland </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Category: </text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Development </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Job Description </text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro41" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string"><text:p>About the Company                                          </text:p><text:p> </text:p><text:p>We’re a global company and a leading provider of practice management software products for law firms worldwide. We have a large development team (over 80 in R&amp;D) in Auckland and are a strong adopter of Microsoft technologies and a Microsoft Gold Partner. Although our staff turnover is very low, the size and growth of the office means we have opportunities in many areas popping up all the time.</text:p><text:p> </text:p><text:p>We have over 3,300 clients including:</text:p><text:p>67 of the top 100 global law firms</text:p><text:p>The top 10 US law firms</text:p><text:p>21 out of the top 40 Australian law firms</text:p><text:p> </text:p><text:p>The Auckland office is almost entirely R&amp;D, away from top management. This allows an informal environment. Previous careful recruitment means you’ll be working alongside highly skilled and passionate peers building quality software and good team spirit (keen for a lunch time game of MtG? Soccer? Basketball? Badminton? Walk? Visit JB-HIFI to see the Galaxy S6?)</text:p><text:p> </text:p><text:p>About the Roles</text:p><text:p> </text:p><text:p>Our continuing growth means we are on the hunt for savvy, passionate developers to add to our teams. We’re looking for people that offer passion, quality, delivery focus, leadership and problem solving. Our teams are empowered and fast moving – our belief is that this happens with good collaboration and communication, meaning that we can act on the ideas and thought leadership that you’ll bring to the table.</text:p><text:p> </text:p><text:p>Tired of the harbour bridge? Do you like laughing at the people heading to the CBD?</text:p><text:p> </text:p><text:p>If you’ve got any interest in the following areas we’d love to hear from you.</text:p><text:p> </text:p><text:p> </text:p><text:p>Web Development</text:p><text:p>You’ll be a proven, clearly passionate, full stack web developer with a front-end focus – your core skills will be quality MVVM sites using JavaScript (possibly TypeScript), Less, HTML and MVC. Some Knockout or SQL wouldn’t hurt. You’ll be building a customisable product, not a one-off, and we’re pitching to the largest law firms in the world, meaning we’ll stretch you with some gnarly challenges that you wouldn’t find in normal web development - such as customization, internationalisation, easy deployment, varied network infrastructures, product level quality...</text:p><text:p> </text:p><text:p> </text:p><text:p>Mobile / Web App Development</text:p><text:p>We are putting apps into the Android, IOS and Blackberry app stores so that our global clients have ready access to them. You’ll help us make these complex and intelligent apps communicate with our back ends. Core skills in this area are again JavaScript / TypeScript, Less and MVC, but you’ll also have had exposure to Phonegap.</text:p><text:p> </text:p><text:p> </text:p><text:p>C# / WPF App Development</text:p><text:p>You’ll be building new applications, adding further features and services as we grow our large and technically challenging solutions that are used by the largest law firms in the world. You could choose to focus around the product modules or really test your technical skills and add value working on the framework that underpins the product. In this area you’d be solving some of the most challenging problems…. Core skills here are C#, WPF, SQL.</text:p><text:p> </text:p><text:p> </text:p><text:p>BI Development</text:p><text:p>We are about to start pushing the edge around the latest in BI and dashboard technologies. You’ll be involved in building and re-architecting from the ground up and involved in every phase of the project from conceptualisation to delivery. A key part of strategy that is starting to emerge is to leverage IBM Cognos – a new technology for us. If you’ve got skills with Framework Manager and BI Server 10.2.1 we’d love to hear from you. Oh, and you might have started looking at the newer version released in October – that’s looking very interesting and getting us excited as well….</text:p><text:p> </text:p><text:p> </text:p><text:p> </text:p><text:p>Culture and Benefits</text:p><text:p> </text:p><text:p>Even though we’re a global company the Auckland office feels like a software house – lots of technical people working in different teams and projects.</text:p><text:p> </text:p><text:p>We’ve got a funky, open plan office right across from Albany Westfield. As well as being pretty hard-core about work, we find some time for a Friday drink and some entertaining times out with the Social Club.</text:p><text:p> </text:p><text:p>We value our staff so there’s lots of perks including flexible working arrangements, additional sick leave, certification and tuition reimbursement, Income Protection, Life Insurance, an enhanced KiwiSaver Scheme, Financial Advisor and a Bonus Pool.</text:p><text:p> </text:p><text:p> </text:p><text:p>Want to know more?</text:p><text:p> </text:p><text:p>Check us out on Facebook:  http://www.facebook.com/pages/ADERANT-Asia-Pacific/119627654744243</text:p><text:p>Contact our HR manager, Reid Pittams: P: 09 414 3300, E: reid.pittams@aderant.com   </text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="ce45"/>
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce45"/>
      <table:table-cell table:style-name="ce93"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="1048490">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
   </table:table>
   <table:table table:name="books" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Pattern-Oriented-Software-Architecture</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>from mud to structure</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>layers </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pipes and filters</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>blackboard</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>distributed system</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>broker</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>interactive systems</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Model view controller</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>presentation abstraction control</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>adaptable systems</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>microkernel</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>reflection</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>design patterns</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>structural decomposition</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Whole-part</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>organization of work</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Master-slave</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="multithreading" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co10" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1020" table:default-cell-style-name="ce94"/>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro43">
     <table:table-cell/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>Boss/Worker Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>The boss creates each worker thread, assigns it tasks, and, if necessary, waits for it to finish. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>It can create its workers dynamically when requests arrive or creates all worker threads up front (thread pool)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>thread pool interface</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string"><text:p>init (nbrOfThreads)</text:p><text:p>startTask(task_function)</text:p><text:p>Const List&amp; GetNotStartedTasksYet() //as we might have more tasks to run than available threads in the pool</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string">
      <text:p>Peer Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>The peer model is suitable for applications that have a fixed or well-defined set of inputs, such as matrix multipliers, parallel database search engines, and prime number generators.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro44" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string"><text:p>Well-defined input allows programs to adopt what could be construed as a boss/worker model without the boss. </text:p><text:p>Because there is no boss, peers themselves must synchronize their access to any common sources of input. </text:p><text:p>However, like workers in the boss/worker model, Peers can also slow down if they must frequently synchronize to access shared resources.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>all threads must synchronize afterward to exchange and compare each other&apos;s results.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro43">
     <table:table-cell/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>Pipeline Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pipeline improves throughput because it can accomplish the many different stages of a process on different input units (be they cars or instructions) concurrently</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro44">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>a single thread receives input for the entire program, always passing it to the thread that handles the first stage of processing. </text:p><text:p>Similarly a single thread at the end of the pipeline produces all final output for the program. </text:p><text:p>Each thread in between performs its own stage of processing on the input it received from the thread that performed the previous stage, and passes its output to the thread performing the next. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro45">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Applications in which the pipeline might be useful are image processing and text processing or </text:p><text:p>Any application that can be broken down into a series of filter steps on a stream of input.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro45">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>We could add multiplexing or demultiplexing to this pipeline, allowing multiple threads to work in parallel on a particular stage. </text:p><text:p>We could also dynamically configure the pipeline at run time, having it create and terminate stages (and the threads to service them) as needed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro44">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>the overall throughput of a pipeline is limited by the thread that processes its slowest stage. Threads that follow it in the pipeline cannot perform their stages until it has completed. </text:p><text:p>When designing a multithreaded program according to the pipeline model, you should aim at balancing the work to be performed across all stages; </text:p><text:p>That is, all stages should take about the same amount of time to complete.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro43">
     <table:table-cell/>
     <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string">
      <text:p>Buffering Data Between Threads</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>one thread produces data, another one consumes it (producer/consumer)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this relationship requires:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro45">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string"><text:p>a buffer: that contains one data item to process. or many items with tracking for new unprocessed ones.</text:p><text:p>Double buffering: io thread reads io and places unprocessed data in b1. Calculating thread processes it and palces it in b2. Io thread writes it in io</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a lock: to synchronize access to buffer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro44">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string"><text:p>a suspend/resume mecanism:  The consumer may suspend itself when the buffer contains no data for it to consume. </text:p><text:p>If so, the producer must be able to resume it when it places a new item in the buffer. </text:p><text:p>With Pthreads, you would arrange this mechanism using a condition variable.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>state information: how much data is in the buffer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string">
      <text:p>Cost of Threading</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>The memory and CPU cycles required to manage each thread (each thread has its own stack), including the structures the operating system uses to manage them, plus the overhead for the Pthreads library and any special code in the operating system that supports the library.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>The CPU cycles spent for synchronization calls (mutex locks and unlocks, condition variables, ...) that enforce orderly access to shared data. These calls cost in CPU cycles to execute the calls.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>The time during which the application is inactive while one thread is waiting on another thread. This cost results from too many dependencies among threads and can be allayed by improved program design.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="8">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce103" office:value-type="string" calcext:value-type="string">
      <text:p>mutex</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro44">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>using mutex We&apos;ve limited access to the entire database to a single thread at a time, thus slowing performance considerably.</text:p><text:p>Other threads needing access to the database need to wait for one thread to finish its whole work</text:p><text:p>Improve Lock granularity by using mutexes for individual account records</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string"><text:p>which thread is the first to be granted the lock once it&apos;s released? The choice is made according to the scheduling priorities of the individual threads.</text:p><text:p>The thread with the highest priority gets the lock.</text:p><text:p>Many threaded programs, however, don&apos;t assign different priorities to different threads. Most of these programs are designed for real-time applications and allow the choice of which thread gets a lock first to be made randomly.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro46">
     <table:table-cell/>
     <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string"><text:p>using pthread_mutex_trylock represents a kind of polling for a resource≈repeatedly trying and backing off until the resource is obtained. </text:p><text:p>This polling leads to some overhead and, worse, potential resource starvation. If the lock is in high demand, the thread that polls for it may never get it. a thread that is not patient enough to block and wait may never try the lock and find it available≈there is always at least one other thread blocked waiting for the lock.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1019"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell/>
     <table:table-cell table:style-name="ce105" office:value-type="string" calcext:value-type="string">
      <text:p>If multiple threads are waiting on a condition variable or mutex, who gets awakened first when another thread issues a pthread_cond_signal call? the waiting threads are released according to their scheduling priority. If all waiting threads are of the same priority, they are released in a first-in first-out order for each pthread_cond_signal call that&apos;s issued.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1019"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="10">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
      <text:p>shortcomings</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string"><text:p>1-Sometimes you have many threads that read data but only an occasional thread that writes it. There should be a type of lock that allows any number of readers but works like a mutex whenever a writer enters the scene. Mutex does not help. It just locks against everyone. </text:p><text:p>Solution:</text:p><text:p>Reader/writer locks provide this type of access control. Done using using mutexes and condition variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>2- no recursive lock</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
      <text:p>recursive mutex</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro44">
     <table:table-cell/>
     <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string">
      <text:p>A recursive mutex is useful for a thread that makes a number of nested calls to a routine that locks and manipulates a resource. If the thread already holds the lock, the calls merely increase and decrease the recursive count and don&apos;t deadlock the thread.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T7">priority can lead to priority inversion problem.</text:span></text:p><text:p>Solution</text:p><text:p>1- minimize the degree to which threads of different priorities share the same locks.</text:p><text:p>2- use mutex attribute as shown in chap 4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro43">
     <table:table-cell/>
     <table:table-cell table:style-name="ce108" office:value-type="string" calcext:value-type="string">
      <text:p>Sharing a Mutex Among Processes</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce109"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="1">
      <text:p>mutex has 3 attributes. One of them can be set to PTHREAD_PROCESS_SHARED to be shared by many processes.</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2" table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce104"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
      <text:p>condition variable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro22">
      <table:table-cell/>
      <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
       <text:p>a common task in thread programming is event synchronization: each thread in a program reaches a certain point, a barrier in your program, and must wait for other threads to get there.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro24">
      <table:table-cell/>
      <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string">
       <text:p>Your best choice to impose this type of synchronization is a condition variable.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro47">
      <table:table-cell/>
      <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string"><text:p>std::condition_variable::wait* puts the thread to sleep waiting on a notification and releases the mutex it has locked previously. This allows other threads needing the mutex to run.</text:p><text:p>The notification happens from another thread using std::condition_variable::notify*</text:p><text:p>When the condition variable is notified, the sleeping thread is awaken and is put on the queue to get the mutex</text:p><text:p>But certain implementations may produce spurious wake-up calls without any std::condition_variable::notify* functions being called. Therefore, users of this function shall ensure their condition for resumption is met.</text:p><text:p><text:span text:style-name="T5">users of this function should ensure their condition for resumption is met also because another thread could have changed the condition between the time the sleeping thread was awaken and the time it owned the mutex</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro24">
      <table:table-cell/>
      <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
       <text:p>Thread waiting on CV</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro24">
      <table:table-cell/>
      <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>std::unique_lock&lt;std::mutex&gt; lck(mtx);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>while (count &lt;= WATCH_COUNT) </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;watch_count(): Thread &quot; &lt;&lt; idp &lt;&lt; &quot; might block and Count is &quot; &lt;&lt; count &lt;&lt; endl;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cv.wait(lck);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;watch_count(): Thread &quot; &lt;&lt; idp &lt;&lt; &quot; awoke and Count is &quot; &lt;&lt; count &lt;&lt; endl;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro24">
      <table:table-cell/>
      <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
       <text:p>Thread notifying</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>for (int i =0; i &lt; TCOUNT; i++) </text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>std::unique_lock&lt;std::mutex&gt; lck(mtx);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>count++;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>if (count == WATCH_COUNT)</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="3"/>cv.notify_all();</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro42">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce104"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string">
      <text:p>priority inversion</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string"><text:p>In <text:a xlink:href="http://maxim.int.ru/bookshelf/PthreadsProgram/htm/viewer_r.html+bkid=232&amp;destid=676161.html#676161" xlink:type="simple">Chapter 4</text:a>, we&apos;ll show you how to eliminate the risk of priority inversion by using mutex attributes.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
      <text:p>Refrences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>Later in this chapter, as a performance enhancement, we&apos;ll add mutexes for individual account records to our server.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>Later in this chapter, we&apos;ll discuss a more standard solution to locking hierarchy problems that involves defining an order in which any given thread must pursue locks.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string"><text:p>In <text:a xlink:href="http://maxim.int.ru/bookshelf/PthreadsProgram/htm/viewer_r.html+bkid=232&amp;destid=676161.html#676161" xlink:type="simple">Chapter 4</text:a>, we&apos;ll discuss how you can avoid priority inversion problems by using attributes to assign priorities to mutexes.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string"><text:p>Secure non-threadsafe code in <text:a xlink:href="http://maxim.int.ru/bookshelf/PthreadsProgram/htm/viewer_r.html+bkid=232&amp;destid=986815.html#986815" xlink:type="simple">Chapter 5</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>see Chapter 6, Practical Considerations, for performance issues and how to minimize locks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Interview questions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Name three thread design patterns </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>1. Thread pool (Boss/Workers)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>2. Peer (Work crew)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>3. Pipeline </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Explain how a thread pool works </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>One thread dispatches other threads to do useful work which are usually part of a worker thread pool. This thread pool is usually pre-allocated before the boss (or master) begins dispatching threads to work. Although threads are lightweight, they still incur overhead when they are created.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>If the boss thread becomes a worker thread once it&apos;s done starting other worker threads then this is a Peer Thread Design Pattern. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Define: critical section </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>The code between lock and unlock calls to a mutex. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>What are four mutex types? (also, try to explain each one) </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>- Recursive: allows a thread holding the lock to acquire the same lock again which may be necessary for recursive algorithms.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>- Queuing: allows for fairness in lock acquisition by providing FIFO ordering to the arrival of lock requests. Such mutexes may be slower due to increased overhead and the possibility of having to wake threads next in line that may be sleeping.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>- Reader/Writer: allows for multiple readers to acquire the lock simultaneously. If existing readers have the lock, a writer request on the lock will block until all readers have given up the lock. This can lead to writer starvation.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>- Scoped: RAII-style semantics regarding lock acquisition and unlocking. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Define: deadlock </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro23" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string"><text:p>Two (or more) threads have stopped execution or are spinning permanently. For example, a simple deadlock situation: thread 1 locks lock A, thread 2 locks lock B, thread 1 wants lock B and thread 2 wants lock A. </text:p><text:p>Hb:a deadlock can also happen with a single thread, in recursive function contaning a mutex lock</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>How can you prevent deadlocking from occurring? </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>You can prevent deadlocks from happening by making sure threads acquire locks in an agreed order (i.e. preservation of lock ordering). Deadlock can also happen if threads do not unlock mutexes properly. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Define: race condition </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>A race condition is when non-deterministic behavior results from threads accessing shared data or resources without following a defined synchronization protocol for serializing such access. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>How can you prevent race conditions from occurring? </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>Take steps within your program to enforce serial access to shared file descriptors and other external resources. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Define: priority inversion </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>A higher priority thread can wait behind a lower priority thread if the lower priority thread holds a lock for which the higher priority thread is waiting.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>As happened on the Mars Pathfinder. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Define: Condition Variables (what is/are the analogous Java structure(s)?) </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>Condition variables allow threads to synchronize to a value of a shared resource. Typically, condition variables are used as a notification system between threads.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>In Java wait() and notify() are used. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Define: (thread) barriers </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro23" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>Barriers are a method to synchronize a set of threads at some point in time by having all participating threads in the barrier wait until all threads have called the said barrier function. This, in essence, blocks all threads participating in the barrier until the slowest participating thread reaches the barrier call. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Define: Semaphores </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro28" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>Semaphores are another type of synchronization primitive that come in two flavors: binary and counting. Binary semaphores act much like simple mutexes, while counting semaphores can behave as recursive mutexes. Counting semaphores can be initialized to any arbitrary value which should depend on how many resources you have available for that particular shared data. Many threads can obtain the lock simultaneously until the limit is reached. This is referred to as lock depth. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>Semaphores are more common in multiprocess programming (i.e. it&apos;s usually used as a synch primitive between processes). </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Define: Spinlocks </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro28" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>Spinlocks are locks which spin on mutexes. Spinning refers to continuously polling until a condition has been met. In the case of spinlocks, if a thread cannot obtain the mutex, it will keep polling the lock until it is free. The advantage of a spinlock is that the thread is kept active and does not enter a sleep-wait for a mutex to become available, thus can perform better in certain cases than typical blocking-sleep-wait style mutexes. Mutexes which are heavily contended are poor candidates for spinlocks. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>Spinlocks should be avoided in uniprocessor contexts. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>List six synchronization primitives. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>1. Mutex</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>2. Join</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>3. Condition variables</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>4. Barriers</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>5. Spin lock</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>6. Semaphore </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Define: livelock </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>What does the term &apos;lock-free&apos; mean? </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>Multithreaded code written such that the threads can never permanently lock up. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
       <text:p>Define: &quot;Busy waiting&quot; and how it can be avoided </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>When one thread is waiting for another thread using an active looping structure that doesn&apos;t do anything. Example: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>Thread task = new TheTask();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>task.start();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>while( task.isAlive() ){</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>; // do nothing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
       <text:p>This can be avoided using mutexes. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro42" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pbs</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>priority inversion</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>deadlock</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro45">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Thread A may not represent any thread of execution. Default constructor of thread class creates such thread.</text:p><text:p><text:span text:style-name="T5">Thread::thread();</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro45">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>a thread A can be moved to a new thread. Thread A no more represents any thread of execution.</text:p><text:p>Thread::thread (thread&amp;&amp; x) noexcept;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro46">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>a thread can be joinable, if it is :</text:p><text:p>- Represents a thread of execution (Not default constructed, Not moved from)</text:p><text:p>- And join and detach have not been called yet.</text:p><text:p/><text:p>When the thread is joinable, it has a unique id</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro48">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>To reuse an ending thread object to run a new thread of execution, the thread::detach should have been called.</text:p><text:p>Otherwise, thread::joinable returns false even if the thread object does not represent any thread of execution</text:p><text:p/><text:p>See <text:a xlink:href="https://github.com/hbdevelop1/c.git" xlink:type="simple">https://github.com/hbdevelop1/c.git</text:a>, on the branch mttcpip </text:p><text:p>commit 684cbb0caadd42b2bb93fdee6ba85d1cb9ba8773</text:p><text:p>Author: hbdevelop1 &lt;https:<text:a xlink:href="mailto://hbdevelop1@github.com" xlink:type="simple">//hbdevelop1@github.com</text:a>&gt;</text:p><text:p>Date:   Mon Mar 14 16:06:20 2016 +1300</text:p><text:p/><text:p>    create a thread of each client and reuse thread objects that no more represent any thread of execution, thanks to std::thread::detach</text:p><text:p/><text:p/>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="1048370">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
   </table:table>
   <table:table table:name="gcc" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="3" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>makefile to compile and to produce preprocessor output</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>FLAG2=-Wall -std=c++11</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>compile:</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>g++ -ggdb $(FLAG2) mt_recursive_lock.cpp -o code</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>pp:</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>g++ -ggdb $(FLAG2) -E mt_recursive_lock.cpp -o code.i</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>produce preprocessor output</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cpp file.cpp &gt; file.i</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>change the language of g++</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>I had to set the three environment variables in .bashrc, not only LANG as stated in gcc/Environment-Variables.html</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>LANG=en_US.UTF-8</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>LANGUAGE=en_US</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>GDM_LANG=en_US</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="TDD BDD" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>create a test for object creation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>then create the class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the test passes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>create a test for object calling a method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the create the method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the test passes or fails following the input to the method </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Rule : write the simplest code just for the test to pass </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hb:but we are not developping with the enitre architecture in mind !!!!!</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>bdd uses natural language in code</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>TDD</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>BDD</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>assert(count == 5);</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>accout.should_be(5);</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="time management" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="1024" table:default-cell-style-name="ce94"/>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when estimating, plan for the bad things/insterruptions/relaxation and pause/surprises</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when estimating, break down the tasks to smaller ones</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>difficult tasks broken down to smaller tasks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>avoid time wasters</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>regularly check the time and progress</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>Regularly update your plans according to reality.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>delegate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Give objectives, not procedures, take responsibility and accountability. Describe a task clearly. Provide a &quot;how to test&quot; example.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>have a todo list. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>updated with every task you get</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>reorder priorities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>Estimate every task, set deadlines yourself. This will help you to avoid doing things in a last minute.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>prioritize them</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce111" office:value-type="string" calcext:value-type="string">
      <text:p>start some tasks ahead of time. So that they are ready when you want them. Not every customer can answer immediately</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inform team leader/manager of the road blocks, suggest priorities adjustments</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>start a task when waiting on sth</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>finish in time not worry about a perfect solution that fits for all. </text:p><text:p>Get the job done and you can add more features later. </text:p><text:p>Do not save on coding conventions and code quality. </text:p><text:p>Pure code usually increases support time later. Consider unit tests, it can improve quality and speedup development. Automated tests reward with a confidence.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>priorities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>urgent</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>not urgent</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro44">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>important</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>crying baby</text:p><text:p>Kitchen fire</text:p><text:p>Some calls</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>exercice</text:p><text:p>Vocation</text:p><text:p>Planing</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p>someone else is dependent on a specific task then do it first. </text:p><text:p>For equal tasks set priorities using a task difficulty: ugliest tasks first (some prefer interesting tasks first, why not?). </text:p><text:p>Domino Reaction method: This is the idea that there are actions that you invest in once and which produce over time in different channels.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1019"/>
    </table:table-row>
    <table:table-row table:style-name="ro44">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>not imporatant</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>interruptions</text:p><text:p>Distractions</text:p><text:p>Other calls</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>trivia</text:p><text:p>Busy work</text:p><text:p>Time wasters</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>Important/Urgent quadrant are done immediately and personally<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. crises, deadlines, problems.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>Important/Not Urgent quadrant get an end date and are done personally<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. relationships, planning, recreation.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>Unimportant/Urgent quadrant are delegated<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. interruptions, meetings, activities.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>Unimportant/Not Urgent quadrant are dropped<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. time wasters, pleasant activities, trivia.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce111"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="6">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce91" office:value-type="string" calcext:value-type="string">
      <text:p>1. Planning &amp; prioritizing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>2. Protect your time and avoid needless distractions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>3. Discipline yourself.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>“A time”</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Delivering Value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>“B time”</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41"/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>clarifying requirements</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41"/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>reviewing another’s code</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41"/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>otherwise helping another developer to deliver value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41"/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>improving the deployment process</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41"/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>automating chores</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41"/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>optimizing your environment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
      <text:p>“C time”</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>meetings not related to delivering value or planning to deliver value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>email not related to “A” or “B” time activities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce111" office:value-type="string" calcext:value-type="string">
      <text:p>…</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro42" table:number-rows-repeated="1048511">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="interviews" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="8" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell table:style-name="ce123" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="10"><text:p><text:span text:style-name="T32">retake tests:</text:span></text:p><text:p><text:span text:style-name="T32">GL</text:span></text:p><text:p><text:span text:style-name="T32">Ubisoft</text:span></text:p><text:p><text:span text:style-name="T32">Amazon</text:span></text:p><text:p><text:span text:style-name="T32">Rock star</text:span></text:p><text:p><text:span text:style-name="T32">Codility</text:span></text:p><text:p><text:span text:style-name="T32">Eidos</text:span></text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="5"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>multi threading quiz</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:covered-table-cell table:style-name="ce123"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>network programming</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:covered-table-cell table:style-name="ce123"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:covered-table-cell table:style-name="ce124"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>stl</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>boost</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>python</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>oo:SOLID, GRASP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>qt</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>see youtube for how to use treeview</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>embedded</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>book summary + practical c++ tutorial + code sample of how is that different from general s/w app</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Javascript and HTML5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hardware/software integrated systems and/or embedded software Development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>testing, code coverage, regression, unit testing,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3D, basics</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>graphic/game gems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tensor, game engine features in pirates</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>opengl,  modern opengl 4.0+, nehe tutorials are kinda old, and a lot of them use the fixed function pipeline. </text:p><text:p>Completely master the opengl pipeline (vertex/fragment stages), setting the 3d world up with matrix transformations.  </text:p><text:p>Be a MASSIVE bonus if you have computer vision background</text:p><text:p>(got info from an Animation Research Limited wallace Yuen)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>algo</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unity</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>senior</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>optimization: uses locality spatial and temporal instead of oo, profiling, design of your data over the design of your code (Data-Oriented Design)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>links</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://macton.smugmug.com/gallery/8936708_T6zQX#593426709_ZX4pZ" xlink:type="simple">http://macton.smugmug.com/gallery/8936708_T6zQX#593426709_ZX4pZ</text:a>  Cpp is bullshit</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://cellperformance.beyond3d.com/articles/2006/04/performance-and-good-data-design.html" xlink:type="simple">http://cellperformance.beyond3d.com/articles/2006/04/performance-and-good-data-design.html</text:a>  Design around data</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>http://gameprogrammingpatterns.com/data-locality.html</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Its the 20% that gets executed 80% of the time that you need to worry about.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>http://www.asawicki.info/news_1422_data-oriented_design_-_links_and_thoughts.html</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://lwn.net/Articles/250967/#TOC" xlink:type="simple">http://lwn.net/Articles/250967/#TOC</text:a> What every programmer should know about memory</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>View the prefetch buffer as an infinite cache. What is the prefetch buffer ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>multi threading</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>template and generic</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>modern c++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>https://visualstudiomagazine.com/articles/2013/02/12/future-c-plus-plus.aspx</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://www.stroustrup.com/bs_faq2.html#finally" xlink:type="simple">http://www.stroustrup.com/bs_faq2.html#finally</text:a></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>http://nwcpp.org/may-2013.html</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p>While C++ and C# have borrowed bits of functional programming, they simply don&apos;t foster true high level approaches to problem solving in ways that OCaml, Haskell, F# and similar languages do.</text:p><text:p>What is functional programming ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>Asynchronous Programming ? http://moderncpp.com/asynchronous-programming/</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
       <text:p>What is it?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro22" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p>RAII Resource Acquisition Is Initialization (RAII): is a C++ programming technique which binds the life cycle of a resource (allocated memory, thread of execution, open socket, open file, locked mutex, database connection—anything that exists in limited supply) to the lifetime of an object. Constructor holds resource Destructor releases it.</text:p><text:p>RAII wrappers : std::unique_ptr and std::shared_ptr, std::lock_guard, std::unique_lock, std::shared_lock</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="5"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
        <text:p>standard library containers and algorithms</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="5"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
        <text:p>templates</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="5"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
        <text:p>metaprogramming</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="5"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
        <text:p>exceptions</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="5"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
        <text:p>Boost</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="5"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce53"/>
       <table:table-cell table:number-columns-repeated="5"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro20" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce53"/>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>howto pass a code review</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>design patterns + Pattern-Oriented-Software-Architecture</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>60000, per annum</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Navico</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>difference between c++ and C#</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>knowledge of QT ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>a design needs 6 months, but the boss says 3 months. What to do ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>do not say overtime. He refused this idea</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Priority requirements + implement the core functionalities. He confirmed</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>the boss comes up with a stupide design or idea. What to do ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>can&apos;t say what I did in the past</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>convice them or see what the end user wants. He confirmed</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="8"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what to do when performance is bad ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>he:we use free tools like o-profile, valgrin.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>embedded like systems. What is that ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what were you doing in gameloft</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>was it not frustrating that the design kept changing ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>overwritten mem region ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Random crashes are due to heap corruption ( ! only ? I don&apos;t agree. Or I need to learn more), how to solve it ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>I looked it up on internet they use tools. He interrupted yes there are many tools the setting up of which is tricky.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what is a deadlock ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>how to avoid a deadlock ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="8"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Hamilton Jet</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce113" office:value-type="string" calcext:value-type="string">
      <text:p>testing strategy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce114" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T62">Medium to high level of competency in programming in C++ is essential.  Some experience using Python and C# would be preferred.  </text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Experience with automated testing frameworks beneficial</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>Experience and the ability to understand system requirements documentation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>create test methods to verify compliance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce116" office:value-type="string" calcext:value-type="string">
      <text:p>what language is used to create test methods. Unit, system,integration</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Learn unit testing using google framework/ cppunit/ IBM RRTT or other. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce117" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T63">Traceability</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce117" office:value-type="string" calcext:value-type="string">
      <text:p>severity, priority, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>A track record of working successfully with design &amp; systems engineers in the development of test methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hb would read first the system requirements documentation. And check with design and systems engineers to make sure</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
      <text:p>Strong on mathematics, statistics and reliability for analysis of results and setting test criteria.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string"><text:p>Skill at problem solving and the use of problem solving tools.!!!! <text:span text:style-name="T31">what problems ?</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>Able to clearly and concisely document test outcomes and test methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T15">hb would create </text:span><text:span text:style-name="T64">project test plans </text:span><text:span text:style-name="T15">similar to airbus PTV</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce119" office:value-type="string" calcext:value-type="string">
      <text:p>Making customer needs the primary focus</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>le texte de l&apos;objectif fait la qualité du test.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string">
      <text:p>interviewer will give a problem, and ask for test cases.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce121" office:value-type="string" calcext:value-type="string">
      <text:p>understands that different situations and levels may call for different skills and approaches; works to deploy strengths; works on compensating for weakness and limits.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string">
      <text:p>what is pinpointing ? Isolation ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell/>
     <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string"><text:p>RISKS during interview:</text:p><text:p>Not understading what an activity is ?</text:p><text:p>Not understanding what a key word means ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is DO167B ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is a senario for ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>How is the partition done ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>do you like the position ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>testing experience improved my programming skills. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>this experience will allow me to work with some highly skilled gyus. </text:p><text:p>      I had the experience in GL NZ. </text:p><text:p>      Testing in another environment where the team has only a requirement doc and a process to follow. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Les tests de vérification du logiciel sont des tests systèmes et unitaires exécutés avec l&apos;outil RTRT (Rational Test Real Time) sur SUN et PC-Lynx</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>name the test</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>test on which is depends. They are run one after the other as set in a script</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>list all objectives of the test</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>each objective shows the requirement it is linked to in the SLS</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Exigences couvertes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Environnement du test</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>- les zones de RAM utilisées par ARF_MGR,</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>- les canaux de communication : pipes et files de messages,</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>pipes needed. Printer pipe, pipe mcdu, …</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="8"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>- les databases,</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>- les interfaces simulées avec les autres sous-ensemble de l’ATSU.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro20" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="8"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Passage du test et résultats attendus</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-code coverage</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-unit tests</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pour vérifier des exigences de bas niveau ou</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pour compléter la couverture structurelle des instructions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>la couverture structurelle des instructions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>O1 : Dans le cas où la database WorldMap est invalide, ARF_MGR doit envoyer un LightOn afin d’afficher un &lt;REQ&gt;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
   </table:table>
   <table:table table:name="links" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>modern c++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://herbsutter.com/elements-of-modern-c-style/</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://stackoverflow.com/jobs/110626/software-engineer-c-plus-plus-30k-crossover?utm_source=stackoverflow.com&amp;utm_medium=ad&amp;utm_campaign=large-sidebar-tag-themed-cpp</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="TCP IP" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Socket is an end point of communication between two systems on a network.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>a socket is a combination of IP address and port on one system.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p>A combination of local socket and the socket at the remote system is also known a ‘Four tuple’ or ‘4-tuple’.</text:p><text:p>Each connection between two processes running at different systems can be uniquely identified through their 4-tuple.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>the communication over the network in TCP/IP model takes place in form of a client server architecture. ie, the client begins the communication and server follows up and a connection is established.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce18" office:value-type="string" calcext:value-type="string">
      <text:p>Bandwidth vs latency</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro10">
      <table:table-cell/>
      <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string"><text:p>Bandwidth is the amount of data that passes through a network connection over time as measured in bits per second (bps).</text:p><text:p><text:span text:style-name="T65">the theoretical peak bandwidth of a network connection is fixed according to the technology used, </text:span></text:p><text:p><text:span text:style-name="T65">the actual bandwidth you will obtain varies over time and is affected by high latencies.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro10">
      <table:table-cell/>
      <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T65">In Satellite Internet connections, </text:span>This high latency is due primarily to propagation delay as the request message travels at the speed </text:p><text:p>of light to the distant satellite station and back to the home network. </text:p><text:p>Once the messages arrive on Earth, however, the page loads quickly like on other high-bandwidth Internet connections (DSL or cable).</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro20">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string"><text:p>Very often, latency is measured by the time it takes a given network packet to travel from source to destination and back, </text:p><text:p>The so-called round-trip time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce125"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce126" office:value-type="string" calcext:value-type="string">
      <text:p>packet delivery time or latency</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
      <text:p>The packet delivery time or latency is the time from the first bit leaves the transmitter until the last is received.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce126" office:value-type="string" calcext:value-type="string">
      <text:p>The transmission time vs the propagation delay</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string"><text:p>(<text:span text:style-name="T66">http://en.wikipedia.org/wiki/Transmission_time</text:span>)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce128" office:value-type="string" calcext:value-type="string"><text:p>The transmission time should not be confused with the propagation delay, which is the time it takes for the first bit to travel from the sender</text:p><text:p> to the receiver (During this time the receiver is unaware that a message is being transmitted).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce125"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce86" office:value-type="string" calcext:value-type="string">
      <text:p>For all practical purposes you should view TCP receiving as composed of two independent processes:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce86" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the OS receives the TCP data and ACKs it to the other side, storing it in an internal kernel buffer that&apos;s not accessible to your process</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce86" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>when you recv or any equivalent system call, the OS copies the data from its internal buffers to your userspace buffer</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce125"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Tcp connection establishment</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>client sends SYN (a segment with the SYN bit set but no ACK bit set)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>server sends SYN, ACK</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>client sends ACK</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>connection is established and communication starts</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>for every set of packets received, an ACK is sent with <text:span text:style-name="T65">an acknowledgement number field which identifies the number of the next packet expected</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if server does nt receive it, (it will resend them ?)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>there is <text:span text:style-name="T65">Selective ACK which is used to say &quot;Received bytes 2000-8000, but not 0-2000&quot;</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
      <text:p>The exchanged sequence numbers are used to identify lost packets and enable a retry mechanism, and also to reassemble the entire stream of packets in the correct order.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
      <text:p>a message might be split across several packets, and a packet might be split across several datagrams.</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="Sheet29" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
    </table:table-row>
   </table:table>
   <table:named-expressions/>
  </office:spreadsheet>
 </office:body>
</office:document>