<?xml version="1.0" encoding="UTF-8"?>

<office:document xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:presentation="urn:oasis:names:tc:opendocument:xmlns:presentation:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:config="urn:oasis:names:tc:opendocument:xmlns:config:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:grddl="http://www.w3.org/2003/g/data-view#" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:drawooo="http://openoffice.org/2010/draw" xmlns:calcext="urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0" xmlns:loext="urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" xmlns:formx="urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0" xmlns:css3t="http://www.w3.org/TR/css3-text/" office:version="1.2" office:mimetype="application/vnd.oasis.opendocument.spreadsheet">
 <office:meta><meta:creation-date>2016-02-03T00:11:04.989869140</meta:creation-date><meta:editing-duration>P10DT11H36M19S</meta:editing-duration><meta:editing-cycles>1466</meta:editing-cycles><meta:generator>LibreOffice/5.0.2.2$Linux_X86_64 LibreOffice_project/00m0$Build-2</meta:generator><dc:date>2016-04-24T15:25:18.358436861</dc:date><meta:document-statistic meta:table-count="32" meta:cell-count="5130" meta:object-count="4"/><meta:user-defined meta:name="qrichtext">1</meta:user-defined></office:meta>
 <office:settings>
  <config:config-item-set config:name="ooo:view-settings">
   <config:config-item config:name="VisibleAreaTop" config:type="int">973</config:config-item>
   <config:config-item config:name="VisibleAreaLeft" config:type="int">2257</config:config-item>
   <config:config-item config:name="VisibleAreaWidth" config:type="int">10275</config:config-item>
   <config:config-item config:name="VisibleAreaHeight" config:type="int">416950</config:config-item>
   <config:config-item-map-indexed config:name="Views">
    <config:config-item-map-entry>
     <config:config-item config:name="ViewId" config:type="string">view1</config:config-item>
     <config:config-item-map-named config:name="Tables">
      <config:config-item-map-entry config:name="C#">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">126</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">23</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">92</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="C# faq">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="C++ faq">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">12</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille10">
       <config:config-item config:name="CursorPositionX" config:type="int">5</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">6</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille14">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">55</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille4">
       <config:config-item config:name="CursorPositionX" config:type="int">2</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">17</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="SQL">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">187</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">182</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="STL algo">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">263</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">242</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="STL iterator">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">16</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="TCP IP">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="TDD BDD">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">15</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="algo">
       <config:config-item config:name="CursorPositionX" config:type="int">2</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">251</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">239</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="books">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">1</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="c++ idioms">
       <config:config-item config:name="CursorPositionX" config:type="int">10</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">30</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="c++ ref">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">301</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">1152</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="c++ ref update">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">49</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">45</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="embedded">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">139</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">130</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="gcc">
       <config:config-item config:name="CursorPositionX" config:type="int">4</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">26</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="interview2">
       <config:config-item config:name="CursorPositionX" config:type="int">9</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">16</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="interview_tests">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">14</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">13</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="interviews">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">58</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">171</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="ios">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">64</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">48</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="ios faq">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">220</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">192</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="ios faq2">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">42</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="multithreading">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">426</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">419</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="oodesign">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">3</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="optim">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">1</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="protocols">
       <config:config-item config:name="CursorPositionX" config:type="int">9</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">16</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="somecompanies">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">4</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="tester job description">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">88</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">13</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="time management">
       <config:config-item config:name="CursorPositionX" config:type="int">2</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">24</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">9</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="tosave">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">2</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
     </config:config-item-map-named>
     <config:config-item config:name="ActiveTable" config:type="string">embedded</config:config-item>
     <config:config-item config:name="HorizontalScrollbarWidth" config:type="int">1296</config:config-item>
     <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
     <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
     <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
     <config:config-item config:name="ShowPageBreakPreview" config:type="boolean">false</config:config-item>
     <config:config-item config:name="ShowZeroValues" config:type="boolean">true</config:config-item>
     <config:config-item config:name="ShowNotes" config:type="boolean">true</config:config-item>
     <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
     <config:config-item config:name="GridColor" config:type="long">12632256</config:config-item>
     <config:config-item config:name="ShowPageBreaks" config:type="boolean">true</config:config-item>
     <config:config-item config:name="HasColumnRowHeaders" config:type="boolean">true</config:config-item>
     <config:config-item config:name="HasSheetTabs" config:type="boolean">true</config:config-item>
     <config:config-item config:name="IsOutlineSymbolsSet" config:type="boolean">true</config:config-item>
     <config:config-item config:name="IsValueHighlightingEnabled" config:type="boolean">false</config:config-item>
     <config:config-item config:name="IsSnapToRaster" config:type="boolean">false</config:config-item>
     <config:config-item config:name="RasterIsVisible" config:type="boolean">false</config:config-item>
     <config:config-item config:name="RasterResolutionX" config:type="int">1000</config:config-item>
     <config:config-item config:name="RasterResolutionY" config:type="int">1000</config:config-item>
     <config:config-item config:name="RasterSubdivisionX" config:type="int">1</config:config-item>
     <config:config-item config:name="RasterSubdivisionY" config:type="int">1</config:config-item>
     <config:config-item config:name="IsRasterAxisSynchronized" config:type="boolean">true</config:config-item>
    </config:config-item-map-entry>
   </config:config-item-map-indexed>
  </config:config-item-set>
  <config:config-item-set config:name="ooo:configuration-settings">
   <config:config-item config:name="SyntaxStringRef" config:type="short">9999</config:config-item>
   <config:config-item config:name="IsDocumentShared" config:type="boolean">false</config:config-item>
   <config:config-item config:name="LoadReadonly" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AllowPrintJobCancel" config:type="boolean">true</config:config-item>
   <config:config-item config:name="UpdateFromTemplate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsKernAsianPunctuation" config:type="boolean">false</config:config-item>
   <config:config-item config:name="EmbedFonts" config:type="boolean">false</config:config-item>
   <config:config-item config:name="IsSnapToRaster" config:type="boolean">false</config:config-item>
   <config:config-item config:name="RasterResolutionX" config:type="int">1000</config:config-item>
   <config:config-item config:name="RasterResolutionY" config:type="int">1000</config:config-item>
   <config:config-item config:name="HasSheetTabs" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsRasterAxisSynchronized" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowPageBreaks" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ShowNotes" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsOutlineSymbolsSet" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowZeroValues" config:type="boolean">true</config:config-item>
   <config:config-item config:name="SaveVersionOnClose" config:type="boolean">false</config:config-item>
   <config:config-item config:name="GridColor" config:type="long">12632256</config:config-item>
   <config:config-item config:name="RasterIsVisible" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrinterName" config:type="string">Generic Printer</config:config-item>
   <config:config-item-map-indexed config:name="ForbiddenCharacters">
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">US</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">fr</config:config-item>
     <config:config-item config:name="Country" config:type="string">FR</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">hi</config:config-item>
     <config:config-item config:name="Country" config:type="string">IN</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">GB</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">AU</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">CA</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">NZ</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
   </config:config-item-map-indexed>
   <config:config-item config:name="LinkUpdateMode" config:type="short">3</config:config-item>
   <config:config-item config:name="RasterSubdivisionX" config:type="int">1</config:config-item>
   <config:config-item config:name="HasColumnRowHeaders" config:type="boolean">true</config:config-item>
   <config:config-item config:name="RasterSubdivisionY" config:type="int">1</config:config-item>
   <config:config-item config:name="AutoCalculate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrinterSetup" config:type="base64Binary">jAH+/0dlbmVyaWMgUHJpbnRlcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU0dFTlBSVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAMAsgAAAAAAAAAEAAhSAAAEdAAASm9iRGF0YSAxCnByaW50ZXI9R2VuZXJpYyBQcmludGVyCm9yaWVudGF0aW9uPVBvcnRyYWl0CmNvcGllcz0xCm1hcmdpbmRhanVzdG1lbnQ9MCwwLDAsMApjb2xvcmRlcHRoPTI0CnBzbGV2ZWw9MApwZGZkZXZpY2U9MApjb2xvcmRldmljZT0wClBQRENvbnRleERhdGEKRHVwbGV4Ok5vbmUAUGFnZVNpemU6QTQAABIAQ09NUEFUX0RVUExFWF9NT0RFCgBEVVBMRVhfT0ZG</config:config-item>
   <config:config-item config:name="ApplyUserData" config:type="boolean">true</config:config-item>
   <config:config-item config:name="CharacterCompressionType" config:type="short">0</config:config-item>
  </config:config-item-set>
 </office:settings>
 <office:scripts>
  <office:script script:language="ooo:Basic">
   <ooo:libraries xmlns:ooo="http://openoffice.org/2004/office" xmlns:xlink="http://www.w3.org/1999/xlink">
    <ooo:library-embedded ooo:name="Standard"/>
   </ooo:libraries>
  </office:script>
 </office:scripts>
 <office:font-face-decls>
  <style:font-face style:name="Arial2" svg:font-family="Arial"/>
  <style:font-face style:name="Calibri" svg:font-family="Calibri, sans-serif"/>
  <style:font-face style:name="Cambria Math" svg:font-family="&apos;Cambria Math&apos;"/>
  <style:font-face style:name="Comic Sans MS" svg:font-family="&apos;Comic Sans MS&apos;, cursive"/>
  <style:font-face style:name="Consolas" svg:font-family="Consolas, sans-serif"/>
  <style:font-face style:name="Courier New1" svg:font-family="&apos;Courier New&apos;, monospace"/>
  <style:font-face style:name="Fixedsys" svg:font-family="Fixedsys"/>
  <style:font-face style:name="Times New Roman" svg:font-family="&apos;Times New Roman&apos;, serif"/>
  <style:font-face style:name="Cambria1" svg:font-family="Cambria" style:font-family-generic="modern"/>
  <style:font-face style:name="Cambria" svg:font-family="Cambria" style:font-family-generic="roman"/>
  <style:font-face style:name="Times New Roman1" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="roman"/>
  <style:font-face style:name="Arial1" svg:font-family="Arial" style:font-family-generic="swiss"/>
  <style:font-face style:name="Calibri1" svg:font-family="Calibri" style:font-family-generic="swiss"/>
  <style:font-face style:name="Monospace" svg:font-family="Monospace" style:font-pitch="fixed"/>
  <style:font-face style:name="Courier New" svg:font-family="&apos;Courier New&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Liberation Mono" svg:font-family="&apos;Liberation Mono&apos;, &apos;Courier New&apos;, &apos;Nimbus Mono L&apos;, &apos;DejaVu Sans Mono&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Arial3" svg:font-family="Arial" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Bitstream Charter" svg:font-family="&apos;Bitstream Charter&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Calibri2" svg:font-family="Calibri" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Liberation Serif" svg:font-family="&apos;Liberation Serif&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Arial" svg:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="FreeSans" svg:font-family="FreeSans" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="Liberation Sans" svg:font-family="&apos;Liberation Sans&apos;" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="DejaVu Sans" svg:font-family="&apos;DejaVu Sans&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="Droid Sans Fallback" svg:font-family="&apos;Droid Sans Fallback&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="FreeSans1" svg:font-family="FreeSans" style:font-family-generic="system" style:font-pitch="variable"/>
 </office:font-face-decls>
 <office:styles>
  <style:default-style style:family="table-cell">
   <style:paragraph-properties style:tab-stop-distance="12.5mm"/>
   <style:text-properties style:font-name="Liberation Sans" fo:language="en" fo:country="NZ" style:font-name-asian="DejaVu Sans" style:language-asian="zh" style:country-asian="CN" style:font-name-complex="DejaVu Sans" style:language-complex="hi" style:country-complex="IN"/>
  </style:default-style>
  <style:default-style style:family="graphic">
   <style:graphic-properties svg:stroke-color="#3465a4" draw:fill-color="#729fcf" fo:wrap-option="no-wrap" draw:shadow-offset-x="3mm" draw:shadow-offset-y="3mm"/>
   <style:paragraph-properties style:text-autospace="ideograph-alpha" style:punctuation-wrap="simple" style:line-break="strict" style:writing-mode="page" style:font-independent-line-spacing="false">
    <style:tab-stops/>
   </style:paragraph-properties>
   <style:text-properties style:use-window-font-color="true" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" style:letter-kerning="true" style:font-name-asian="DejaVu Sans" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN"/>
  </style:default-style>
  <number:number-style style:name="N0">
   <number:number number:min-integer-digits="1"/>
  </number:number-style>
  <number:currency-style style:name="N104P0" style:volatile="true">
   <number:currency-symbol number:language="en" number:country="NZ">$</number:currency-symbol>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
  </number:currency-style>
  <number:currency-style style:name="N104">
   <style:text-properties fo:color="#ff0000"/>
   <number:text>-</number:text>
   <number:currency-symbol number:language="en" number:country="NZ">$</number:currency-symbol>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <style:map style:condition="value()&gt;=0" style:apply-style-name="N104P0"/>
  </number:currency-style>
  <number:currency-style style:name="N111P0" style:volatile="true">
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <number:text> </number:text>
   <number:currency-symbol number:language="fr" number:country="FR">€</number:currency-symbol>
  </number:currency-style>
  <number:currency-style style:name="N111">
   <style:text-properties fo:color="#ff0000"/>
   <number:text>-</number:text>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <number:text> </number:text>
   <number:currency-symbol number:language="fr" number:country="FR">€</number:currency-symbol>
   <style:map style:condition="value()&gt;=0" style:apply-style-name="N111P0"/>
  </number:currency-style>
  <style:style style:name="Default" style:family="table-cell">
   <style:text-properties style:font-name-asian="Droid Sans Fallback" style:font-family-asian="&apos;Droid Sans Fallback&apos;" style:font-family-generic-asian="system" style:font-pitch-asian="variable" style:font-name-complex="FreeSans1" style:font-family-complex="FreeSans" style:font-family-generic-complex="system" style:font-pitch-complex="variable"/>
  </style:style>
  <style:style style:name="Result" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-style="italic" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="Result2" style:family="table-cell" style:parent-style-name="Result" style:data-style-name="N104"/>
  <style:style style:name="Heading" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties fo:font-size="16pt" fo:font-style="italic" fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="Heading1" style:family="table-cell" style:parent-style-name="Heading">
   <style:table-cell-properties style:rotation-angle="90"/>
  </style:style>
 </office:styles>
 <office:automatic-styles>
  <style:style style:name="co1" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="39.21mm"/>
  </style:style>
  <style:style style:name="co2" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="161.22mm"/>
  </style:style>
  <style:style style:name="co3" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="193.36mm"/>
  </style:style>
  <style:style style:name="co4" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="22.58mm"/>
  </style:style>
  <style:style style:name="co5" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="31.04mm"/>
  </style:style>
  <style:style style:name="co6" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="71.61mm"/>
  </style:style>
  <style:style style:name="co7" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="46.83mm"/>
  </style:style>
  <style:style style:name="co8" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="40.83mm"/>
  </style:style>
  <style:style style:name="co9" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="122.82mm"/>
  </style:style>
  <style:style style:name="co10" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="269.61mm"/>
  </style:style>
  <style:style style:name="co11" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="243.73mm"/>
  </style:style>
  <style:style style:name="co12" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="214.42mm"/>
  </style:style>
  <style:style style:name="co13" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="212.13mm"/>
  </style:style>
  <style:style style:name="co14" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="34.4mm"/>
  </style:style>
  <style:style style:name="co15" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="281.13mm"/>
  </style:style>
  <style:style style:name="co16" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="88.78mm"/>
  </style:style>
  <style:style style:name="co17" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="158.24mm"/>
  </style:style>
  <style:style style:name="co18" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="19.88mm"/>
  </style:style>
  <style:style style:name="co19" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="80.06mm"/>
  </style:style>
  <style:style style:name="co20" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="222.44mm"/>
  </style:style>
  <style:style style:name="co21" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="57.45mm"/>
  </style:style>
  <style:style style:name="co22" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="65.35mm"/>
  </style:style>
  <style:style style:name="co23" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="145.04mm"/>
  </style:style>
  <style:style style:name="co24" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="102.75mm"/>
  </style:style>
  <style:style style:name="ro1" style:family="table-row">
   <style:table-row-properties style:row-height="5.29mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro2" style:family="table-row">
   <style:table-row-properties style:row-height="5.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro3" style:family="table-row">
   <style:table-row-properties style:row-height="20.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro4" style:family="table-row">
   <style:table-row-properties style:row-height="30.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro5" style:family="table-row">
   <style:table-row-properties style:row-height="45.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro6" style:family="table-row">
   <style:table-row-properties style:row-height="85.55mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro7" style:family="table-row">
   <style:table-row-properties style:row-height="55.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro8" style:family="table-row">
   <style:table-row-properties style:row-height="50.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro9" style:family="table-row">
   <style:table-row-properties style:row-height="110.56mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro10" style:family="table-row">
   <style:table-row-properties style:row-height="15.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro11" style:family="table-row">
   <style:table-row-properties style:row-height="10.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro12" style:family="table-row">
   <style:table-row-properties style:row-height="40.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro13" style:family="table-row">
   <style:table-row-properties style:row-height="94.77mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro14" style:family="table-row">
   <style:table-row-properties style:row-height="25.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro15" style:family="table-row">
   <style:table-row-properties style:row-height="95.55mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro16" style:family="table-row">
   <style:table-row-properties style:row-height="10.53mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro17" style:family="table-row">
   <style:table-row-properties style:row-height="98.46mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro18" style:family="table-row">
   <style:table-row-properties style:row-height="5.79mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro19" style:family="table-row">
   <style:table-row-properties style:row-height="4.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro20" style:family="table-row">
   <style:table-row-properties style:row-height="20.27mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro21" style:family="table-row">
   <style:table-row-properties style:row-height="8.41mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro22" style:family="table-row">
   <style:table-row-properties style:row-height="12.36mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro23" style:family="table-row">
   <style:table-row-properties style:row-height="11.04mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro24" style:family="table-row">
   <style:table-row-properties style:row-height="16.32mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro25" style:family="table-row">
   <style:table-row-properties style:row-height="5.26mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro26" style:family="table-row">
   <style:table-row-properties style:row-height="6.95mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro27" style:family="table-row">
   <style:table-row-properties style:row-height="5.7mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro28" style:family="table-row">
   <style:table-row-properties style:row-height="12.63mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro29" style:family="table-row">
   <style:table-row-properties style:row-height="37.96mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro30" style:family="table-row">
   <style:table-row-properties style:row-height="6.31mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro31" style:family="table-row">
   <style:table-row-properties style:row-height="4.99mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro32" style:family="table-row">
   <style:table-row-properties style:row-height="4.87mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro33" style:family="table-row">
   <style:table-row-properties style:row-height="10mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro34" style:family="table-row">
   <style:table-row-properties style:row-height="4.71mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro35" style:family="table-row">
   <style:table-row-properties style:row-height="13.02mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro36" style:family="table-row">
   <style:table-row-properties style:row-height="5.8mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro37" style:family="table-row">
   <style:table-row-properties style:row-height="14.68mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro38" style:family="table-row">
   <style:table-row-properties style:row-height="6.09mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro39" style:family="table-row">
   <style:table-row-properties style:row-height="5.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro40" style:family="table-row">
   <style:table-row-properties style:row-height="8.85mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro41" style:family="table-row">
   <style:table-row-properties style:row-height="5.54mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro42" style:family="table-row">
   <style:table-row-properties style:row-height="6.58mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro43" style:family="table-row">
   <style:table-row-properties style:row-height="9.47mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro44" style:family="table-row">
   <style:table-row-properties style:row-height="36.32mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro45" style:family="table-row">
   <style:table-row-properties style:row-height="19.39mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro46" style:family="table-row">
   <style:table-row-properties style:row-height="20.5mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro47" style:family="table-row">
   <style:table-row-properties style:row-height="25.49mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro48" style:family="table-row">
   <style:table-row-properties style:row-height="16.33mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro49" style:family="table-row">
   <style:table-row-properties style:row-height="6.12mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro50" style:family="table-row">
   <style:table-row-properties style:row-height="6.65mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro51" style:family="table-row">
   <style:table-row-properties style:row-height="33.8mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro52" style:family="table-row">
   <style:table-row-properties style:row-height="45.72mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro53" style:family="table-row">
   <style:table-row-properties style:row-height="15.5mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro54" style:family="table-row">
   <style:table-row-properties style:row-height="71.21mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro55" style:family="table-row">
   <style:table-row-properties style:row-height="67.65mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro56" style:family="table-row">
   <style:table-row-properties style:row-height="13.95mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro57" style:family="table-row">
   <style:table-row-properties style:row-height="14.73mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro58" style:family="table-row">
   <style:table-row-properties style:row-height="17.18mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro59" style:family="table-row">
   <style:table-row-properties style:row-height="19.47mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro60" style:family="table-row">
   <style:table-row-properties style:row-height="28.95mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro61" style:family="table-row">
   <style:table-row-properties style:row-height="9.45mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro62" style:family="table-row">
   <style:table-row-properties style:row-height="197.96mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro63" style:family="table-row">
   <style:table-row-properties style:row-height="9.97mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro64" style:family="table-row">
   <style:table-row-properties style:row-height="21.33mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro65" style:family="table-row">
   <style:table-row-properties style:row-height="24.22mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro66" style:family="table-row">
   <style:table-row-properties style:row-height="3.6mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro67" style:family="table-row">
   <style:table-row-properties style:row-height="38.44mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro68" style:family="table-row">
   <style:table-row-properties style:row-height="52.65mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro69" style:family="table-row">
   <style:table-row-properties style:row-height="28.17mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro70" style:family="table-row">
   <style:table-row-properties style:row-height="4.97mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro71" style:family="table-row">
   <style:table-row-properties style:row-height="18.42mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro72" style:family="table-row">
   <style:table-row-properties style:row-height="33.69mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro73" style:family="table-row">
   <style:table-row-properties style:row-height="47.91mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro74" style:family="table-row">
   <style:table-row-properties style:row-height="43.16mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ta1" style:family="table" style:master-page-name="Default">
   <style:table-properties table:display="true" style:writing-mode="lr-tb"/>
  </style:style>
  <number:date-style style:name="N37" number:automatic-order="true">
   <number:day number:style="long"/>
   <number:text>/</number:text>
   <number:month number:style="long"/>
   <number:text>/</number:text>
   <number:year/>
  </number:date-style>
  <number:text-style style:name="N100">
   <number:text-content/>
  </number:text-style>
  <style:style style:name="ce1" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce2" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce3" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff33ff"/>
   <style:text-properties style:use-window-font-color="true" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce4" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce5" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce6" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties style:use-window-font-color="true" style:font-name="Liberation Serif" fo:font-size="12pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:font-name-complex="FreeSans1" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce7" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce8" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce9" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce10" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce11" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce12" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="DejaVu Sans" style:font-size-asian="12pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce13" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce14" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce15" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce16" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce17" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce18" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce19" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce20" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" fo:font-weight="bold" style:font-size-asian="12pt" style:font-weight-asian="bold" style:font-size-complex="12pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce21" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce22" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce23" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce24" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce25" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-name-complex="FreeSans" style:font-size-complex="12pt" style:language-complex="none" style:country-complex="none"/>
  </style:style>
  <style:style style:name="ce26" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-name-complex="FreeSans" style:font-size-complex="12pt" style:language-complex="none" style:country-complex="none"/>
  </style:style>
  <style:style style:name="ce27" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-name-complex="FreeSans" style:font-size-complex="12pt" style:language-complex="none" style:country-complex="none"/>
  </style:style>
  <style:style style:name="ce28" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#cc66ff" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce29" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce30" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#cc66ff" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce31" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce32" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce33" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce34" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce35" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Liberation Serif" fo:font-size="12pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce36" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce37" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff99ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce38" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce39" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce40" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff" fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#0066cc" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce41" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" fo:font-weight="normal" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce42" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="12pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:font-name-complex="FreeSans1" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce43" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce44" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce45" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce46" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce47" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce48" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce49" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce50" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce51" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce52" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="start"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce53" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce54" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Bitstream Charter" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce55" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce56" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce57" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce58" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce59" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce60" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce61" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce62" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce63" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
  </style:style>
  <style:style style:name="ce64" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce65" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce66" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce67" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce68" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N100">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce69" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="center" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce70" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce71" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce72" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce73" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce74" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce75" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce76" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="16pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="16pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="16pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce77" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:font-name="Arial" fo:font-size="13pt" style:font-size-asian="13pt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce78" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Arial" fo:font-size="13pt" style:font-size-asian="13pt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce79" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce80" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#ff00cc" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce81" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce82" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce83" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce84" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce85" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Liberation Serif" fo:font-size="12pt" fo:font-weight="normal" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce86" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce87" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color"/>
  </style:style>
  <style:style style:name="ce88" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="12pt" fo:font-weight="normal" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce89" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce90" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce91" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#365f91" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce92" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce93" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#9b00d3" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce94" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce95" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Times New Roman" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce96" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce97" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce98" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce99" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce100" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce101" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce102" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce103" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce104" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce105" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce106" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce107" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Comic Sans MS" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce108" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Times New Roman" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce109" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce110" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#666666" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce111" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#808080" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Fixedsys" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce112" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce113" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce114" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce115" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce116" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce117" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce118" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#4f81bd" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce119" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria Math" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce120" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria Math" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce121" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria Math" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce122" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria Math" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce123" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce124" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Consolas" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce125" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#0000ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce126" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce127" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce128" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce129" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce130" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce131" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#ff0000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce132" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce133" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#4f81bd" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce134" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#0000ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce135" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="14pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce136" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce137" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Bitstream Charter"/>
  </style:style>
  <style:style style:name="ce138" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce139" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce140" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffffff"/>
  </style:style>
  <style:style style:name="ce141" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffffff"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="14pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce142" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffffff"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce143" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffffff"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="12pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce144" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="14pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce145" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="14pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce146" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="14pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce147" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce148" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce149" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:font-name="Liberation Sans" fo:font-weight="normal" style:font-name-asian="Droid Sans Fallback" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce150" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff66ff"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce151" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" fo:font-weight="bold" style:font-size-asian="12pt" style:font-weight-asian="bold" style:font-size-complex="12pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce152" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce153" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce154" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce155" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce156" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce157" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce158" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce159" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce160" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce161" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffff00"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce162" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce163" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffff00" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce164" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#eeeeee" fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce165" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#365f91" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria1" fo:font-size="14pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="14pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce166" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria1" fo:font-size="14pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce167" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial1" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="9pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce168" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Times New Roman1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce169" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-style="normal" fo:text-shadow="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce170" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce171" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="14pt" fo:font-weight="bold" style:font-size-asian="14pt" style:font-weight-asian="bold" style:font-size-complex="14pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce172" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce173" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce174" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="Monospace" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce175" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce176" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="9pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce177" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="12pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce178" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#ff0000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial1" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="9pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce179" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#888888" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce180" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce181" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#ff00cc"/>
  </style:style>
  <style:style style:name="ce182" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#365f91" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce183" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:font-name="Calibri" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans1"/>
  </style:style>
  <style:style style:name="ce184" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#0000ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Consolas" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce185" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Consolas" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce186" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce187" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff6820" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce188" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ffad5b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce189" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce190" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce191" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce192" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce193" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce194" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce195" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce196" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap" style:vertical-align="top"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce197" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffcc00" fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce198" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce199" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce200" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap" style:vertical-align="top"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce201" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="16pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="16pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="16pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce202" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce203" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent"/>
   <style:text-properties fo:color="#ff99ff"/>
  </style:style>
  <style:style style:name="ce204" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
  </style:style>
  <style:style style:name="ce205" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent" fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#eeeeee" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce206" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent" fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#eeeeee" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce207" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="14pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce208" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="11pt" fo:font-weight="bold" style:font-size-asian="11pt" style:font-weight-asian="bold" style:font-size-complex="11pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce209" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce210" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="22pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="22pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="22pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce211" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Sans" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce212" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N37"/>
  <style:style style:name="ce213" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="end"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce214" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#800000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce215" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce216" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce217" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce218" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:paragraph-properties fo:text-align="start"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce219" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="top"/>
   <style:paragraph-properties fo:text-align="start"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce220" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce221" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce222" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#800000" style:font-name="Arial2" fo:font-size="14pt" fo:font-weight="bold" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="10pt" style:font-name-complex="FreeSans1" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="ce223" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce224" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce225" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000080" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce226" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#eeeeee"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce227" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000080" style:font-name="Arial2" fo:font-size="14pt" fo:font-weight="bold" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="10pt" style:font-name-complex="FreeSans1" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="ce228" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce229" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:paragraph-properties fo:text-align="start"/>
   <style:text-properties fo:color="#800000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce230" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="11pt" fo:font-weight="bold" style:font-size-asian="11pt" style:font-weight-asian="bold" style:font-size-complex="11pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce231" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffcc00" fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce232" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="11pt" fo:font-weight="normal" style:font-size-asian="11pt" style:font-weight-asian="normal" style:font-size-complex="11pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce233" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce234" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#010100" style:font-name="Arial2" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans1"/>
  </style:style>
  <style:style style:name="ce235" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce236" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce237" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Arial" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-name-complex="DejaVu Sans" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce238" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce239" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#00ff66" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce240" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:font-name="Arial3" fo:font-size="11pt" fo:language="en" fo:country="GB" style:font-name-asian="Arial" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce241" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce242" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce243" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri2" fo:font-size="10pt" fo:language="en" fo:country="AU" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce244" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent"/>
   <style:text-properties fo:color="#cc0066" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce245" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:background-color="transparent"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:color="#cc0066" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce246" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#cc0066" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce247" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#eeeeee"/>
   <style:text-properties style:use-window-font-color="true" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce248" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri2" fo:font-size="10pt" fo:language="en" fo:country="AU" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce249" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri2" fo:font-size="10pt" fo:language="en" fo:country="AU" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce250" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#0000ff" fo:font-size="11pt" style:font-size-asian="11pt" style:font-name-complex="DejaVu Sans" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce251" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce252" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="11pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="11pt" style:font-name-complex="FreeSans1" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce253" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce254" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce255" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce256" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce257" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce258" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-size="11pt" fo:font-weight="bold" style:font-size-asian="11pt" style:font-weight-asian="bold" style:font-size-complex="11pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce259" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="11pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="11pt" style:font-name-complex="FreeSans1" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce260" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce261" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#0000ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Consolas" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce262" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce263" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce264" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce265" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce266" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce267" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce268" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce269" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce270" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt"/>
  </style:style>
  <style:style style:name="ce271" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce272" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce273" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#4b0082" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce274" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce275" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce276" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#32cd32" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce277" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce278" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce279" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce280" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce281" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#365f91" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce282" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#17365d" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce283" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Comic Sans MS" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce284" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="gr1" style:family="graphic">
   <style:graphic-properties draw:stroke="none" draw:fill="none" draw:textarea-horizontal-align="center" draw:textarea-vertical-align="middle" draw:color-mode="standard" draw:luminance="0%" draw:contrast="0%" draw:gamma="100%" draw:red="0%" draw:green="0%" draw:blue="0%" fo:clip="rect(0mm, 0mm, 0mm, 0mm)" draw:image-opacity="100%" style:mirror="none"/>
  </style:style>
  <style:page-layout style:name="pm1">
   <style:page-layout-properties style:writing-mode="lr-tb"/>
   <style:header-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-bottom="2.5mm"/>
   </style:header-style>
   <style:footer-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-top="2.5mm"/>
   </style:footer-style>
  </style:page-layout>
  <style:page-layout style:name="pm2">
   <style:page-layout-properties style:writing-mode="lr-tb"/>
   <style:header-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-bottom="2.5mm" fo:border="2.49pt solid #000000" fo:padding="0.18mm" fo:background-color="#c0c0c0">
     <style:background-image/>
    </style:header-footer-properties>
   </style:header-style>
   <style:footer-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-top="2.5mm" fo:border="2.49pt solid #000000" fo:padding="0.18mm" fo:background-color="#c0c0c0">
     <style:background-image/>
    </style:header-footer-properties>
   </style:footer-style>
  </style:page-layout>
  <style:style style:name="P1" style:family="paragraph">
   <loext:graphic-properties draw:fill="none"/>
   <style:paragraph-properties fo:text-align="center"/>
  </style:style>
  <style:style style:name="T1" style:family="text">
   <style:text-properties style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T2" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T3" style:family="text">
   <style:text-properties style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="T4" style:family="text">
   <style:text-properties style:font-name-asian="FreeSans" style:font-name-complex="DejaVu Sans"/>
  </style:style>
  <style:style style:name="T5" style:family="text">
   <style:text-properties style:letter-kerning="true"/>
  </style:style>
  <style:style style:name="T6" style:family="text">
   <style:text-properties style:letter-kerning="true" fo:color="#000000" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T7" style:family="text">
   <style:text-properties fo:color="#0000ff" fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T8" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#2b91af"/>
  </style:style>
  <style:style style:name="T9" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#0000ff"/>
  </style:style>
  <style:style style:name="T10" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#000000" fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T11" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T12" style:family="text">
   <style:text-properties style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T13" style:family="text">
   <style:text-properties fo:font-size="12pt"/>
  </style:style>
  <style:style style:name="T14" style:family="text">
   <style:text-properties style:font-name="Liberation Sans" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T15" style:family="text">
   <style:text-properties fo:color="#0000ff"/>
  </style:style>
  <style:style style:name="T16" style:family="text">
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="T17" style:family="text">
   <style:text-properties fo:color="#3333ff"/>
  </style:style>
  <style:style style:name="T18" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T19" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#2b91af" fo:country="none"/>
  </style:style>
  <style:style style:name="T20" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#0000ff" fo:country="none"/>
  </style:style>
  <style:style style:name="T21" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:country="none" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T22" style:family="text">
   <style:text-properties fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#0000ff" fo:font-size="12pt" style:letter-kerning="true"/>
  </style:style>
  <style:style style:name="T23" style:family="text">
   <style:text-properties fo:font-size="12pt" fo:country="none" style:font-size-asian="12pt" style:font-name-asian="FreeSans" style:letter-kerning="true" fo:color="#2b91af" style:country-asian="none"/>
  </style:style>
  <style:style style:name="T24" style:family="text">
   <style:text-properties fo:font-size="12pt" fo:color="#2b91af" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T25" style:family="text">
   <style:text-properties fo:font-size="12pt" fo:color="#0000ff" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T26" style:family="text">
   <style:text-properties fo:color="#0000ff" fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt"/>
  </style:style>
  <style:style style:name="T27" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt"/>
  </style:style>
  <style:style style:name="T28" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt" fo:color="#2b91af" fo:country="none"/>
  </style:style>
  <style:style style:name="T29" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt" fo:color="#0000ff" fo:country="none"/>
  </style:style>
  <style:style style:name="T30" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt" fo:country="none" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T31" style:family="text">
   <style:text-properties fo:color="#000000" fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt"/>
  </style:style>
  <style:style style:name="T32" style:family="text">
   <style:text-properties style:font-name-asian="FreeSans" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T33" style:family="text">
   <style:text-properties fo:color="#0000cc" fo:font-size="13pt" style:font-size-asian="13pt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="T34" style:family="text">
   <style:text-properties fo:color="#2b91af" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T35" style:family="text">
   <style:text-properties fo:color="#0000ff" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T36" style:family="text">
   <style:text-properties fo:color="#ff99ff" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T37" style:family="text">
   <style:text-properties fo:color="#a31515" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T38" style:family="text">
   <style:text-properties fo:color="#ff3333"/>
  </style:style>
  <style:style style:name="T39" style:family="text">
   <style:text-properties fo:color="#6600ff"/>
  </style:style>
  <style:style style:name="T40" style:family="text">
   <style:text-properties style:font-name="Liberation Serif" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T41" style:family="text">
   <style:text-properties fo:color="#333333"/>
  </style:style>
  <style:style style:name="T42" style:family="text">
   <style:text-properties fo:color="#dddddd"/>
  </style:style>
  <style:style style:name="T43" style:family="text">
   <style:text-properties fo:color="#9900ff"/>
  </style:style>
  <style:style style:name="T44" style:family="text">
   <style:text-properties fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="T45" style:family="text">
   <style:text-properties fo:color="#ff00cc"/>
  </style:style>
  <style:style style:name="T46" style:family="text">
   <style:text-properties fo:font-size="14pt" fo:country="none" style:country-asian="none" style:font-size-asian="14pt"/>
  </style:style>
  <style:style style:name="T47" style:family="text">
   <style:text-properties fo:color="#ff0000" fo:font-size="14pt" fo:country="none" style:country-asian="none" style:font-size-asian="14pt"/>
  </style:style>
  <style:style style:name="T48" style:family="text">
   <style:text-properties style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T49" style:family="text">
   <style:text-properties style:font-name="Liberation Serif" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T50" style:family="text">
   <style:text-properties fo:color="#ff33ff"/>
  </style:style>
  <style:style style:name="T51" style:family="text">
   <style:text-properties style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="T52" style:family="text">
   <style:text-properties fo:color="#009695" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="T53" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#333333"/>
  </style:style>
  <style:style style:name="T54" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#009695"/>
  </style:style>
  <style:style style:name="T55" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" style:font-style-complex="italic" fo:font-style="italic" fo:color="#888888" style:font-style-asian="italic"/>
  </style:style>
  <style:style style:name="T56" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#333333" fo:font-style="normal" style:font-style-asian="normal" style:font-style-complex="normal"/>
  </style:style>
  <style:style style:name="T57" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#888888" fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T58" style:family="text">
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T59" style:family="text">
   <style:text-properties style:font-name="Cambria" fo:font-size="14pt" style:font-name-asian="Cambria" style:font-size-asian="14pt" fo:color="#808000"/>
  </style:style>
  <style:style style:name="T60" style:family="text">
   <style:text-properties style:font-name="Cambria" fo:font-size="14pt" style:font-name-asian="Cambria" style:font-size-asian="14pt" fo:color="#c0c0c0"/>
  </style:style>
  <style:style style:name="T61" style:family="text">
   <style:text-properties style:font-name="Cambria" fo:font-size="14pt" style:font-name-asian="Cambria" style:font-size-asian="14pt" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T62" style:family="text">
   <style:text-properties style:font-name="Cambria" fo:font-size="14pt" style:font-name-asian="Cambria" style:font-size-asian="14pt" fo:color="#800080"/>
  </style:style>
  <style:style style:name="T63" style:family="text">
   <style:text-properties fo:color="#808000" fo:font-size="10pt" style:font-size-asian="10pt"/>
  </style:style>
  <style:style style:name="T64" style:family="text">
   <style:text-properties fo:font-size="10pt" style:font-size-asian="10pt" fo:color="#c0c0c0"/>
  </style:style>
  <style:style style:name="T65" style:family="text">
   <style:text-properties fo:font-size="10pt" style:font-size-asian="10pt" fo:color="#800080"/>
  </style:style>
  <style:style style:name="T66" style:family="text">
   <style:text-properties fo:font-size="10pt" style:font-size-asian="10pt" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T67" style:family="text">
   <style:text-properties fo:color="#800080" style:font-name="Cambria" fo:font-size="14pt" style:font-name-asian="Cambria" style:font-size-asian="14pt"/>
  </style:style>
  <style:style style:name="T68" style:family="text">
   <style:text-properties fo:color="#000000" style:font-name="Cambria" fo:font-size="10pt" style:font-name-asian="Cambria" style:font-size-asian="14pt"/>
  </style:style>
  <style:style style:name="T69" style:family="text">
   <style:text-properties fo:color="#000000" style:font-name="Cambria" style:font-name-asian="Cambria" style:font-size-asian="14pt" fo:font-size="14pt"/>
  </style:style>
  <style:style style:name="T70" style:family="text">
   <style:text-properties fo:color="#eeeeee"/>
  </style:style>
  <style:style style:name="T71" style:family="text">
   <style:text-properties style:font-name="Arial" fo:font-size="9pt" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:country="none" style:country-asian="none" style:font-name-asian="Arial" style:font-size-asian="9pt"/>
  </style:style>
  <style:style style:name="T72" style:family="text">
   <style:text-properties fo:color="#ff0066"/>
  </style:style>
  <style:style style:name="T73" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:color="#333333" style:font-size-complex="10pt" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-name-asian="Monospace" fo:font-size="10pt"/>
  </style:style>
  <style:style style:name="T74" style:family="text">
   <style:text-properties style:font-name="Monospace" style:font-size-complex="10pt" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-name-asian="Monospace" fo:font-size="10pt" fo:color="#009695"/>
  </style:style>
  <style:style style:name="T75" style:family="text">
   <style:text-properties style:font-name="Monospace" style:font-size-complex="10pt" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-name-asian="Monospace" fo:font-size="10pt" fo:color="#333333"/>
  </style:style>
  <style:style style:name="T76" style:family="text">
   <style:text-properties style:font-size-complex="10pt" fo:color="#009695" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt"/>
  </style:style>
  <style:style style:name="T77" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#333333"/>
  </style:style>
  <style:style style:name="T78" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#009695"/>
  </style:style>
  <style:style style:name="T79" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#f57d00"/>
  </style:style>
  <style:style style:name="T80" style:family="text">
   <style:text-properties fo:color="#ff99ff"/>
  </style:style>
  <style:style style:name="T81" style:family="text">
   <style:text-properties fo:color="#ff0000"/>
  </style:style>
  <style:style style:name="T82" style:family="text">
   <style:text-properties fo:color="#000000" style:font-name="Arial" fo:font-size="10pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="Arial" style:font-size-asian="10pt"/>
  </style:style>
  <style:style style:name="T83" style:family="text">
   <style:text-properties style:font-name="Arial" fo:font-size="10pt" fo:font-style="italic" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="Arial" style:font-size-asian="10pt" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T84" style:family="text">
   <style:text-properties fo:font-size="11pt" fo:font-style="italic" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-size-asian="11pt" style:font-size-complex="11pt" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T85" style:family="text">
   <style:text-properties fo:color="#000000" fo:font-size="12pt" fo:country="none" style:country-asian="none"/>
  </style:style>
  <style:style style:name="T86" style:family="text">
   <style:text-properties fo:color="#000000" fo:font-size="9pt" fo:country="none" style:country-asian="none" style:font-size-asian="9pt"/>
  </style:style>
  <style:style style:name="T87" style:family="text">
   <style:text-properties fo:color="#0000ff" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
 </office:automatic-styles>
 <office:master-styles>
  <style:master-page style:name="Default" style:page-layout-name="pm1">
   <style:header>
    <text:p><text:sheet-name>???</text:sheet-name></text:p>
   </style:header>
   <style:header-left style:display="false"/>
   <style:footer>
    <text:p>Page <text:page-number>1</text:page-number></text:p>
   </style:footer>
   <style:footer-left style:display="false"/>
  </style:master-page>
  <style:master-page style:name="Report" style:page-layout-name="pm2">
   <style:header>
    <style:region-left>
     <text:p><text:sheet-name>???</text:sheet-name> (<text:title>???</text:title>)</text:p>
    </style:region-left>
    <style:region-right>
     <text:p><text:date style:data-style-name="N2" text:date-value="2016-04-24">00/00/0000</text:date>, <text:time style:data-style-name="N2" text:time-value="13:34:36.280690611">00:00:00</text:time></text:p>
    </style:region-right>
   </style:header>
   <style:header-left style:display="false"/>
   <style:footer>
    <text:p>Page <text:page-number>1</text:page-number> / <text:page-count>99</text:page-count></text:p>
   </style:footer>
   <style:footer-left style:display="false"/>
  </style:master-page>
 </office:master-styles>
 <office:body>
  <office:spreadsheet>
   <table:calculation-settings table:automatic-find-labels="false"/>
   <table:table table:name="C#" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co2" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co3" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1021" table:default-cell-style-name="ce1"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>.Net</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>any language compiler that targets .NET must emit code in IL, intermediate language, rather than native processor code.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>Programming languages that target .NET emit what we call managed code. As opposed to traditional compilers, the emitted code is not native to the processor that will execute it.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The Common Language Runtime, or CLR, is the .NET runtime environment that loads and manages our .NET programs and provides them with runtime services. We&apos;ll discuss the CLR in much detail in this module.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The Framework Class Library, or FCL, provides us with the essential building blocks we need in order to build our programs.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>In order to develop our programs, we need some building blocks - we can&apos;t start writing everything from scratch every time.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>The FCL is usable by all programming languages, since the vast majority of it is Common Language Specification compliant.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The Common Type System (CTS)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The CTS specified how types in .NET are defined. The CLS is a subset of the CTS that must be supported by any .NET language.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>the .NET type system is type safety ? Example ? can&apos;t assign a small object to a bigger one. the latter would access wrong data in memory.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>// won&apos;t compile:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>LargeType l = (LargeType)s;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>C#</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>C# is a statically typed language. A variable can never change its type once declared. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>If the variable is of a reference type, it can still refer to instances of different types, as long as they derive from the type of the variable. But the actual operations we can perform are always limited to those defined by the variable type, not by the actual type of instance it refers to.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce10" office:value-type="string" calcext:value-type="string">
       <text:p>The dynamic keyword is an exception to this rule. It allows performing operations on a variable based on the actual type of instance it will refer to at runtime. As a consequence, errors are detected at runtime instead of at compile time. This is called dynamic typing or late binding.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="7">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>inheritance</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>If the variable is of a reference type, it can still refer to instances of different types, as long as they derive from the type of the variable. But the actual operations we can perform are always limited to those defined by the variable type, not by the actual type of instance it refers to.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>This is why when we have a reference of type object to an instance of type string, we cannot directly invoke anything that is not defined in object. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>BOXING</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce11" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T2">a value type converted to object or interface</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Every type, including int derives from object</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Up casting (converting up the inheritance hierarchy) is legal by definition</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>What happens when we cast from int to object?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>An object must refer to the heap, but the int is in the stack!</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>The solution is ... BOXING</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>int num1 = 20;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>// boxing:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>object o = num1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>// unboxing:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>int num2 = (int)o;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>num2 is different from num1 //hb: risk of infinite creation of reference type and value type variables</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>int? Num4 = (int?)o; //cast to nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>IConvertible convertibe = num1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>from a struct</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>MyValType v1 = new MyValType();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>v1.Data = 1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Console.WriteLine(&quot;v1 &quot; + v1.ToString());</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>// boxing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>object o1 = v1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce12" office:value-type="string" calcext:value-type="string">
       <text:p>Using a virtual or normal method defined in the base class, explicitly or implicitly (because not overridden)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>advanced - restriction</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>There is some restriction: Unboxing and data conversions are not allowed in a single operation.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>int num1 = 20;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>object o = num1;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>short num2 = (short)o; // runtime exception: throws an InvalidCastException. A boxed int must be unboxed as int.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>data conversions should happen in a different instruction.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>short num2 = (short)(int)o; // Once unboxed, the int can be converted to short</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1023"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>advanced - performance</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>-boxing occuring too many times may actually cause more garbage collections → slower code</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>-In C# boxing is implicit. So review the emitted IL code for the opcode BOX or contrained</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>Q:How to view the IL code</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>The constrained opcode checks if the value type it operates on overrides the method and if it doesn&apos;t, the value type is boxed. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1023"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>namespace</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>method1</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>System.IO.StreamWriter writer;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>method2</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>01using System.IO;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>03...</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>05StreamWriter writer;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>The type System.Console is defined in the assembly mscorlib.dll, whereas the type System.Uri is defined in the assembly System.dll.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>conversion/cast</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro4" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="6" table:number-rows-spanned="1"><text:p><text:span text:style-name="T3">Conversion 1: built-in types</text:span></text:p><text:p><text:span text:style-name="T3">int num1 = 10;</text:span></text:p><text:p><text:span text:style-name="T3">short num2 = (short)num1; // possible loss of data -&gt; explicit conversion needed</text:span></text:p><text:p/><text:p><text:span text:style-name="T3">short num2 = 10;</text:span></text:p><text:p><text:span text:style-name="T3">int num1 = num2; //no loss of data possible -&gt; no need for explicit conversion</text:span></text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="5"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T2">conversion 3 operators.Module 7</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T1">Conversion 2 complexe: class &quot;Convert&quot; is offered also, for more advanced conversion options that C# doesn&apos;t provide directly</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce7"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>enum</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce7"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro5" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p>enum Department : byte</text:p><text:p>{</text:p><text:p>    Sales = 10,</text:p><text:p>    IT = 20,</text:p><text:p>    RnD = 30,</text:p><text:p>    Management = 40</text:p><text:p>}</text:p><text:p>…</text:p><text:p>Department dep = Department.Sales;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>Note:the type byte, the values set</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>Use extenssion methods to enrich an enum</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce16" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="9" table:number-rows-spanned="1">
       <text:p>strongly typed. An int can&apos;t be used where enum is expected. But cast is possible : Department dep2 = (Department)10;</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="8"/>
      <table:table-cell table:number-columns-repeated="1014"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro6" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce17" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="8" table:number-rows-spanned="1"><text:p>operators are supported (comparison, …)</text:p><text:p>enum Priority</text:p><text:p>{</text:p><text:p>    Low,</text:p><text:p>    Normal,</text:p><text:p>    High,</text:p><text:p>}</text:p><text:p/><text:p>public void Process(</text:p><text:p>    Priority prio1,</text:p><text:p>    Priority prio2)</text:p><text:p>{</text:p><text:p>    if (prio1 &gt; prio2)</text:p><text:p>    {</text:p><text:p>        ...</text:p><text:p>    }</text:p><text:p>}</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>Enum derives System.Enum which derives from System.ValueType</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro7" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce18" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T4">the compiler emits sth like</text:span></text:p><text:p><text:span text:style-name="T4">struct Department : System.Enum</text:span></text:p><text:p><text:span text:style-name="T4">{</text:span></text:p><text:p><text:span text:style-name="T4">    public int value__;</text:span></text:p><text:p/><text:p><text:span text:style-name="T4">    public const Department Sales = (Department)0;</text:span></text:p><text:p><text:span text:style-name="T4">    public const Department IT = (Department)1;</text:span></text:p><text:p><text:span text:style-name="T4">    public const Department RnD = (Department)2;</text:span></text:p><text:p><text:span text:style-name="T4">    public const Department Management = (Department)3;</text:span></text:p><text:p><text:span text:style-name="T4">}</text:span></text:p><text:p><text:span text:style-name="T4">The only instance field it has is value__ which contains the actual numeric value of the current enum instance.</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro8" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p>System.Enum offers</text:p><text:p>    Non-static methods:</text:p><text:p>        ToString returns the name that corresponds to the current enum value</text:p><text:p>        GetHashCode returns the numeric value of the current instance</text:p><text:p>    Static methods:</text:p><text:p>        GetValues returns an array of all numeric values</text:p><text:p>        GetNames return an array of all names</text:p><text:p>        GetName returns the name that corresponds to the specified numeric value</text:p><text:p>        Parse / TryParse return an instance of the specified enum with the specified name</text:p><text:p>        IsDefined returns whether the specified value or name exists</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>flag</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro9" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce7"/>
       <table:table-cell table:style-name="ce17" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="10" table:number-rows-spanned="1"><text:p>[Flags]</text:p><text:p>02enum Mood</text:p><text:p>{</text:p><text:p>    None    = 0,</text:p><text:p>    Happy   = 0x01,</text:p><text:p>    Relaxed = 0x02,</text:p><text:p>    Good    = Happy | Relaxed,</text:p><text:p>    Sad     = 0x04,</text:p><text:p>    Grumpy  = 0x08,</text:p><text:p>    Bad = Sad | Grumpy</text:p><text:p>}</text:p><text:p/><text:p>Mood myMood = Mood.Happy | Mood.Relaxed;</text:p><text:p>if ((myMood &amp; Mood.Relaxed) == Mood.Relaxed)</text:p><text:p>{</text:p><text:p>}</text:p><text:p/><text:p>Using System.Enum.HasFlags </text:p><text:p>Mood myMood = Mood.Happy | Mood.Relaxed;</text:p><text:p>if (myMood.HasFlag(Mood.Relaxed))</text:p><text:p>{</text:p><text:p>}</text:p>
       </table:table-cell>
       <table:covered-table-cell table:number-columns-repeated="9"/>
       <table:table-cell table:number-columns-repeated="1012"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro10">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>visibility:</text:p><text:p>    Internal (default) - accessible by members of any types in the same assembly</text:p><text:p>    public - accessible by all</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Members Accessibility</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>private (default) - accessible by members of the containing class</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>protected - accessible by members of the containing class and derived classes even they are in other assemblies</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>internal - accessible by members of any types in the same assembly</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>protected internal -  accessible by members of any types in the same assembly or derived types</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>public - accessible by all</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>A member is affected by its accessibility modifier and by the visibility of the containing class - the more restrictive modifier prevails</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:number-rows-repeated="6">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>constructor</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>static constructor</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="Default"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro8" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce16" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="25" table:number-rows-spanned="1"><text:p><text:span text:style-name="T5">-</text:span><text:span text:style-name="T6">Allows initialization of the type</text:span></text:p><text:p><text:span text:style-name="T5">-Invoked automatically by the CLR before first use of the type</text:span></text:p><text:p><text:span text:style-name="T5">-Guaranteed to execute only once and is thread-safe. If one is running it, others will wait it to finish, and will not run it again.</text:span></text:p><text:p><text:span text:style-name="T2">-If static constructor throws an exception, TypeLoadException is thrown and the type becomes unusable</text:span></text:p><text:p><text:span text:style-name="T2">-Static constructors of structures are not guaranteed to run! if we use a structure without the new keyword, no constructor is getting called and the static constructor will not get called either.</text:span></text:p><text:p/><text:p><text:span text:style-name="T7">class</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">SomeClass</text:span><text:span text:style-name="T2">{    </text:span><text:span text:style-name="T9">private</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">static</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">Logger</text:span><text:span text:style-name="T2"> logger;    </text:span><text:span text:style-name="T9">static</text:span><text:span text:style-name="T2"> SomeClass()    {        logger = </text:span><text:span text:style-name="T9">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">Logger</text:span><text:span text:style-name="T2">();        logger.Init();    }}</text:span></text:p><text:p><text:span text:style-name="T2">-</text:span><text:span text:style-name="T10">beforefieldinit</text:span><text:span text:style-name="T11"> flag allows the JIT to call the static constructor at an optimal point of time (to avoid checking at the middle of a loop).  </text:span></text:p><text:p><text:span text:style-name="T2">C# compiler automatically determines when to specify the flag</text:span></text:p><text:p><text:span text:style-name="T2">        NOT specified when an explicit static constructor is defined. Specified when static field initializers are used</text:span></text:p>
       </table:table-cell>
       <table:covered-table-cell table:style-name="Default"/>
       <table:covered-table-cell table:number-columns-repeated="23"/>
       <table:table-cell table:number-columns-repeated="998"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>destructor</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>object initializer</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>static members</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>fields</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro12">
       <table:table-cell/>
       <table:table-cell table:style-name="ce17" office:value-type="string" calcext:value-type="string"><text:p>-Fields may be initialized at their declaration</text:p><text:p><text:span text:style-name="T12">Public int f=1;</text:span></text:p><text:p>-The compiler inserts the initialization to the beginning of every constructor</text:p><text:p>-</text:p><text:p>-Field initialization in structures:</text:p><text:p>--Not allowed for instance fields</text:p><text:p>--Allowed for static fields, but should not be used. because <text:a xlink:href="http://mottishaked.com/training/dot-net-tutorial/107/defining-types/static-constructors" xlink:type="simple">static constructors</text:a> are not guaranteed to be executed.</text:p><text:p><text:span text:style-name="T13">-Initialization occurs before calling the base class&apos; constructor</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:style-name="Default"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro13">
       <table:table-cell/>
       <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string"><text:p>Modifiers:</text:p><text:p/><text:p>    static – initialization is inserted to the static constructor. And are stored within the type object. If also readonly, its value can set only in the static constructor </text:p><text:p>    readonly - can be set only within the constructor or in the declaration line. Note that we can still call methods that change its state.</text:p><text:p>    const - defines a constant value. Impllicitly static. Only with primitives. Its value is embedded in code wich is efficient but dependency/verionning-problematic. Use internal access qualifier. But Overcome, by using readonly static qualifiers. </text:p><text:p>Class hoho</text:p><text:p>{</text:p><text:p>Readonly StringBuilder str = new StringBuilder(&quot;Hello&quot;);</text:p><text:p>    void SomeMethod()</text:p><text:p>    {</text:p><text:p>        // error</text:p><text:p>        str = new StringBuilder(&quot;Bye&quot;);</text:p><text:p/><text:p>        // ok</text:p><text:p>        str.Clear();</text:p><text:p>        str.Append(&quot;Bye&quot;);</text:p><text:p>    }</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="Default"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>methods</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro11">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>the most common method modifiers are static, virtual, abstract, override, sealed and new. Here is a discussion of each modifier.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>static</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>virtual - the method may be overridden in a derived class</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>abstract - the method has no implementation. Containing class cannot be instanciated. Derived classes must override it. or be abstract</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>without override ?</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>override - overrides a virtual or abstract method defined in a base class.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>sealed - prevents a method from being overridden</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>new - hides a method with the same signature defined in the base class. Without new keyword, compiler emits warning</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>other overload rules ?</text:p>
       </table:table-cell>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>we can&apos;t overload a method that differs only by out and ref because They qre the same for the CLR</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>parameters</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>By default parameters are passed by value</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>When passing a value type the actual instance is copied</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>When passing a reference type the reference is copied</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    Use <text:span text:style-name="T15">ref</text:span> to pass by reference</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>The address of the variable, value type or reference, is copied</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>Changed to the parameter inside the method affect the original</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro14" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>        Method2(<text:span text:style-name="T39">ref</text:span> r);</text:p><text:p>        static void Method2(<text:span text:style-name="T39">ref</text:span> MyRefType r)</text:p><text:p>        {</text:p><text:p>            r = new MyRefType();</text:p><text:p>        }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    Use <text:span text:style-name="T15">out</text:span> to define an output parameter</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>The caller does not have to initialize the passed variable</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>The callee must assign a value before it returns</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>Array and variable number of parameters</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row-group table:display="false">
        <table:table-row table:style-name="ro1" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell office:value-type="string" calcext:value-type="string">
          <text:p>an array is a ref type</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>double Average(double[] nums)</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>{</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    if (nums == null || nums.Length == 0)</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>        return 0;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="float" office:value="5" calcext:value-type="float">
          <text:p>5</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    double sum = 0;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    foreach (double num in nums)</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    {</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>        sum += num;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    }</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="float" office:value="11" calcext:value-type="float">
          <text:p>11</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    return sum / nums.Length;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>}</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>…</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>double avg = Average(new double [] { 2, 4, 6, 8});</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    </text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro11" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>double Average(params double[] nums) { … }</text:p><text:p><text:span text:style-name="T40">double avg = Average( 2, 4, 6, 8);</text:span></text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14"/>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro10" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>A call to a method with variable number of parameters is less efficient than a call to a method with fixed number of parameters, because before the method can be invoked an array must be created and initialized. Also, the array must later be garbage collected, which is even more work.</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>provide multiple overloaded versions of the method that accept different number of parameters.</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro3" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>double Average(double num1, double num2) { ... }</text:p><text:p>double Average(double num1, double num2, double num3) { ... }</text:p><text:p>double Average(double num1, double num2, double num3, double num4) { ... }</text:p><text:p>Double Average(params double[] nums) { ... }</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="1024"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>The last parameter to a method may be marked with the params keyword</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>It must be an array and can be of any type</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>When the compiler emits code for a call to a method with params, it creates an array and assigns values</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>Use of params is less efficient because an array is used</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>Use multiple overloaded versions to reduce calls to method with params</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>To pass an unknown number of parameters of any type use an array of object</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>When passing null, the array is never created</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="1024"/>
        </table:table-row>
        <table:table-row table:style-name="ro3" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>void Method(params object[] objs) { … }</text:p><text:p>Method(null); //array never created</text:p><text:p>Method(null, null, null); //array created with three null ref</text:p><text:p>Method(new object[] { null }); //array created with one null ref</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
         <table:table-cell table:number-columns-repeated="1024"/>
        </table:table-row>
       </table:table-row-group>
      </table:table-row-group>
      <table:table-row table:style-name="ro1">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Optional, named params</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
         <text:p>It&apos;s possible to provide parameters by name</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro4" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>void Method(int p1, int p2, int p3)</text:p><text:p>{</text:p><text:p>}</text:p><text:p/><text:p>Method(p3: 3, p2: 2, p1: 1);</text:p><text:p/>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>void Method(ref int p1, out int p2)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>int num1 = 1;</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>int num2;</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce40" office:value-type="string" calcext:value-type="string"><text:p>Method(p1: ref num1, p2: out num2); <text:span text:style-name="T41">//note the systaxe when naming ref and out param</text:span></text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
         <text:p>Q:How about naming by-value params ?</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
         <text:p>Default param values:</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce41"/>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
         <text:p>order of appearance: required (non optional + ref + out), optional, params parameters</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>the default values are resolved when the caller is compiled, rather than at runtime. This means that if the default values change, the caller will still use the old defaults until it recompiles. </text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
         <text:p>You should also avoid renaming parameters, because the caller will need to be modified accordingly if it resides in a different assembly</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>When adding a new optional parameter to a method, you should add it after existing optional parameters. Otherwise existing code may provide values to the wrong parameters.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro3" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>watch out for inheritance scenarios because the default values might not be what you expect them to be. More specifically, you should remember that it&apos;s the compiler that resolves the default of optional parameters, not the runtime. So the default is assigned based on the type known at compile time, even if at runtime the actual object might be of another type.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14"/>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce20"/>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>void Method(int p1 = 1, int p2 = 2, int p3 = 3)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>02{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>03}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>07Method();</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>09Method(10, 20); //p3 will take 3</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>11Method(p2: 20, p3: 30); <text:span text:style-name="T38">//We MUST name params if want to skip some of them</text:span></text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>Optional parameters cannot be used with ref and out.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro10" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>Not any value can be specified as default, only what the compiler considers a compile-time constant. When the compiler encounters a method with optional arguments it must persist the default values, and it can only persist compile-time constants.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Any C# primitive, such as int or string can be a default value.</text:p><text:p>void Method1(int num = 10, string str = &quot;Hello&quot;, bool flag = false) { }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro4" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>if the parameter is a reference type we can always specify null. </text:p><text:p>void Method2(System.IO.FileInfo file = null) { }</text:p><text:p>void Method3(int[] nums = null) { }</text:p><text:p/><text:p>If you have to specify a default array, you can&apos;t use optional parameters. </text:p><text:p>Instead you should create two overloaded versions of the method, one that accepts an array and one without parameters that creates an array and calls the first version.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro10" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>any value type, as long as it&apos;s in its default state where the value of all members is 0. so use default constructor or default keyword</text:p><text:p>void Method4(DateTime date = new DateTime()) { }</text:p><text:p>void Method5(DateTime date = default(DateTime)) { }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro15" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>// won&apos;t compile</text:p><text:p>12void Method6(DateTime date = new DateTime(2010, 1, 1)) { }  //fileds are not 0</text:p><text:p>14// workaround</text:p><text:p>15void Method7(DateTime? date = null)</text:p><text:p>16{</text:p><text:p>17    time = date ?? new DateTime(2010, 1, 1);</text:p><text:p>18}</text:p><text:p>The ?? operator is called the null-coalescing operator. It returns the left-hand operand if the operand is not null; otherwise it returns the right hand operand.</text:p><text:p>int? num = null; // num can have any int value and also null, hence the type int?. In this case num == null. </text:p><text:p/><text:p>// Is the HasValue property true?</text:p><text:p>        if (num.HasValue)</text:p><text:p>        {</text:p><text:p>            System.Console.WriteLine(&quot;num = &quot; + num.Value); <text:span text:style-name="T38">//Q:is num.Value mandatory ?</text:span></text:p><text:p>        }</text:p><text:p>        else</text:p><text:p>        {</text:p><text:p>            System.Console.WriteLine(&quot;num = Null&quot;);</text:p><text:p>        }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>interface I</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>02{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>03    void Method(int num = 10);</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>04}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="float" office:value="5" calcext:value-type="float">
         <text:p>5</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>06class A : I</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>07{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>08    public void Method(int num)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>09    {</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>10        Console.WriteLine(num);</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>11    }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>12}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="float" office:value="13" calcext:value-type="float">
         <text:p>13</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>14...</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="float" office:value="15" calcext:value-type="float">
         <text:p>15</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>16A a = new A();</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>17a.Method(); //error. Because <text:span text:style-name="T42">Method is implemented without a default param.</text:span></text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro1" table:number-rows-repeated="5">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
       <text:p>properties</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro14" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Properties are a .NET feature, not a C# feature</text:p><text:p>Look like methods without parameters.</text:p><text:p>Has get, set or both</text:p><text:p><text:span text:style-name="T14">Can have any code in the ?etter. Watch out:Debugger invokes get accessor of property, So avoid having any side effects in it like incrementing a value when called</text:span></text:p><text:p><text:span text:style-name="T14">Properties are methods, so they can be static, virtual, abstract and can be in interfaces</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>01class Circle</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    private double radius;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>05    public double Radius</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07        get { return this.radius; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>08        set { this.radius = <text:span text:style-name="T15">value</text:span>; } //value is a keyword used only in set accessor of properties. Nowhere else. It represents the value to set.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="10" calcext:value-type="float">
        <text:p>10</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>11    public double Area</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>12    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>13        get { return this.radius * this.radius * 3.14; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>14    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>15}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro10" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Circle c;</text:p><text:p>c.Radius = 3;</text:p><text:p>double d = c.Area;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
        <text:p>automatic properties</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row-group>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>class Circle</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro14" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>     public Circle(double radius)</text:p><text:p>    {</text:p><text:p>        this.Radius = radius;</text:p><text:p>    }</text:p><text:p>     Public double Radius { get; private set; }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro10" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>The compiler automatically generates the field, a get accessor to return its value and a set accessor to set its value.</text:p><text:p>Note, The set accessor is private. So c.Radius = 5; is illegal but the constructor can set it.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>Automatic properties must be both readable and writable.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce21" office:value-type="string" calcext:value-type="string">
         <text:p>overridable property</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>abstract class Shape</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>02{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>03    public abstract string ShapeType { get; }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>04}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="float" office:value="5" calcext:value-type="float">
         <text:p>5</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>06class Circle : Shape</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>07{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>08    public override string ShapeType</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>09    {</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>10        get { return &quot;Circle&quot;; }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>11    }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>12}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14"/>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce21" office:value-type="string" calcext:value-type="string">
         <text:p>benefits/rules</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>If validity check is neded in the ?et accessor, then create the property manually (get, set, field)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>And there&apos;s no way to set its value in the declaration line, only in constructors, ALL</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>cannot pass them to methods as <text:a xlink:href="http://mottishaked.com/training/dot-net-tutorial/128/fields-methods-properties/pass-by-value-pass-by-reference" xlink:type="simple">ref or out</text:a> parameters. </text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>component in the .NET framework and Visual Studio take advantage of properties, which they cannot with simple, disjoint get and set methods.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>Visual Studio also helps while debugging. Debugger invokes get accessor of property, So avoid having any side effects in it like incrementing a value.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro3" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>a user interface control, with properties to get and set your control&apos;s attributes, Visual Studio will allow users to get and set properties values through the user interface designer. This happens automatically and without any effort on your part, because the Visual Studio designer looks for properties by reading the metadata.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>properties accessors should have leightweight code. Imagine the impact when VS debugger uses get accessor, or users calling set every time. Otherwise define methods.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro10" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>Take advantage of inlining: JIT compiler will emit the code that is in the accessor directly into the code that uses it. But if the accessor is long JIT compiler will emit a call to the property&apos;s accessor method</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>inlining happens for any short method. But never happens in debug mode.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14"/>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
       <text:p>indexers</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>public class GradeHolder</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    private int[] counts = new int[100];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    private string[] names = new string[100];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>05    public int this[int grade]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07        get { return this.counts[grade];}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08        set { this.counts[grade] = value; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>05    public int this[string name]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07        get { return this.names[name];}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08        set { this.names[name] = value; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>14GradeHolder holder = new GradeHolder();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce21" office:value-type="string" calcext:value-type="string">
        <text:p>15holder[100] = 10;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce21" office:value-type="string" calcext:value-type="string">
        <text:p>16holder[99] = 33;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce21"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>the parameter can be anything else, such as string or any custom type. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>We can define indexers that accept multiple parameters, which makes them seem like a multidimensional array. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Also, we can define multiple indexers in the same type if their signature is different.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Another limitation of indexers is that they cannot be defined as static. Again, this is a limitation of C#, not a limitation of .NET.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>.NET treats indexers just like regular properties. But C# treats them very differently:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>we cannot give an indexer a name</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="5"/>it is accessed directly on the instance using square brackets.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>.NET sees an indexer is just another property, and the generated IL calls it Item.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>if our component is consumed by other languages, we might want to change the name to something more meaningful. But this has no effect on any usage of this class from C#</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>public class GradeHolder</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    private int[] counts = new int[101];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>05    <text:span text:style-name="T16">[IndexerName(&quot;Count&quot;)]</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    public int this[int grade]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08        get { return this.counts[grade];}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09        set { this.counts[grade] = value; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>10    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>11}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>hassan: in the IL the indexer will be called Count instead of Item</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>operators</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Unary: +, -, !, ~, ++, --, true, false</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Binary: +, -, *, /, %, &amp;, |, ^, &lt;&lt;, &gt;&gt;, ==, !=, &gt;, &lt;, &gt;=, &lt;=</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>Operators are defined with the <text:span text:style-name="T17">operator</text:span> keyword, must be <text:span text:style-name="T17">public</text:span> and <text:span text:style-name="T17">static</text:span> and at least one of the parameters must be of the containing type</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>The compiler emits operators as methods with op_ prefix</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>some operator become automatically available when one is overloaded. We get += for free when + is defined</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>some operators must be overloaded together. When == is defined, != should be also</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>compiler recommends to redefine System.Object.Equals when == is overloaded</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>struct Currency</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    ...</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>05    <text:span text:style-name="T17">public static</text:span> bool <text:span text:style-name="T17">operator</text:span> ==(Currency c1, Currency c2)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07        return c1.Sign == c2.Sign &amp;&amp; c1.Value == c2.Value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="9" calcext:value-type="float">
        <text:p>9</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>10    public static bool operator !=(Currency c1, Currency c2)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>11    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>12        return c1.Sign != c2.Sign || c1.Value != c2.Value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>13    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>public static Currency operator +(Currency c1, decimal d)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07        return new Currency(c1.Sign, c1.Value + d);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>14}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>conversion operators</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>If conversion is not possible, C# tries to cast instead</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro10" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Casting is legal when the type we are casting to is up or down the inheritance hierarchy from the type we are casting from. But casting doesn&apos;t convert anything. It just refers to the same object using a different type of reference.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>struct Currency</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    ...</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>22    public static <text:span text:style-name="T17">implicit</text:span> operator Currency(decimal d) //conversion from decimal to Currency</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>23    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>24        return new Currency(&apos;$&apos;, d);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>25    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="26" calcext:value-type="float">
        <text:p>26</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>27    public static implicit operator decimal(Currency c)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>28    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>29        return c.Value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>30    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>01public static <text:span text:style-name="T17">explicit</text:span> operator int(Currency c) //possible loss of data from decimal to int, hence explicit</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    return (int)c.value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>04}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="5" calcext:value-type="float">
        <text:p>5</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>14}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Currency price = 20; // $20</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>34decimal d = price;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08// compile-time error:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09int n1 = price; <text:s/>//to use the int conversion operator an explicit cast is to be used</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="10" calcext:value-type="float">
        <text:p>10</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>11// explcit conversion - ok</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>12int n2 = (int)price;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro10" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce22" office:value-type="string" calcext:value-type="string">
        <text:p>Converting to non-nullable is only allowed when the nullable has a value. Otherwise it will throw an InvalidOperationException. And when a conversion might fail it should be done explicitly. See Nullable below for more info</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>Find topic about Template in C#. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Nullable&lt;int&gt; num1 = 10; var numsList = new List&lt;int&gt;();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce5" office:value-type="string" calcext:value-type="string">
      <text:p>anonymous methods and lambda expression</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Interface</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T18">    An interface contains no implementations</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T18">    A class or structure may implement one or more interfaces</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="11" table:number-rows-spanned="1">
       <text:p><text:s text:c="4"/>The implementing type must provide implementations to all members defined by the interface and must be public</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="10"/>
      <table:table-cell table:number-columns-repeated="1012"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15" office:value-type="string" calcext:value-type="string">
       <text:p/>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T7">interface</text:span><text:span text:style-name="T18"> </text:span><text:span text:style-name="T19">IVehicle</text:span><text:span text:style-name="T18">{    </text:span><text:span text:style-name="T20">void</text:span><text:span text:style-name="T18"> IncreaseSpeed();    </text:span><text:span text:style-name="T20">void</text:span><text:span text:style-name="T21"> DecreaseSpeed();}</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro16" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T22">interface</text:span><text:span text:style-name="T13"> </text:span><text:span text:style-name="T23">ImotorizedVehicle </text:span><text:span text:style-name="T13">: </text:span><text:span text:style-name="T24">IVehicle</text:span><text:span text:style-name="T13">{    </text:span><text:span text:style-name="T25">void</text:span><text:span text:style-name="T13"> StartEngine();}</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro17" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce25" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="13" table:number-rows-spanned="1"><text:p><text:span text:style-name="T26">class</text:span><text:span text:style-name="T27"> </text:span><text:span text:style-name="T28">MyCar</text:span><text:span text:style-name="T27"> :  someBaseClass, </text:span><text:span text:style-name="T28">ImotorizedVehicle</text:span></text:p><text:p><text:span text:style-name="T27">{    </text:span></text:p><text:p><text:span text:style-name="T26">public</text:span><text:span text:style-name="T27"> </text:span><text:span text:style-name="T29">void</text:span><text:span text:style-name="T27"> IncreaseSpeed()    {    }    </text:span></text:p><text:p><text:span text:style-name="T26">public</text:span><text:span text:style-name="T27"> </text:span><text:span text:style-name="T29">void</text:span><text:span text:style-name="T27"> DecreaseSpeed()    {    }    </text:span></text:p><text:p><text:span text:style-name="T26">public</text:span><text:span text:style-name="T27"> </text:span><text:span text:style-name="T29">void</text:span><text:span text:style-name="T30"> StartEngine()    {    }</text:span></text:p><text:p><text:span text:style-name="T31">}</text:span></text:p><text:p/><text:p><text:span text:style-name="T31">Car myCar = new Car();</text:span></text:p><text:p><text:span text:style-name="T31">Ivehicle myVehicle = myCar;</text:span></text:p><text:p/><text:p><text:span text:style-name="T31">myVehicle.IncreaseSpeed();</text:span></text:p><text:p><text:span text:style-name="T31">myCar.IncreaseSpeed();</text:span></text:p><text:p><text:span text:style-name="T31">myCar.Stop();</text:span></text:p><text:p><text:span text:style-name="T31">// error:</text:span></text:p><text:p><text:span text:style-name="T31">myVehicle.Stop();</text:span></text:p><text:p/><text:p><text:span text:style-name="T31">// error : cannot instantiate interface</text:span></text:p><text:p><text:span text:style-name="T31">IVehicle anotherVehicle = new IVehicle();</text:span></text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="12"/>
      <table:table-cell table:number-columns-repeated="1010"/>
     </table:table-row>
     <table:table-row table:style-name="ro11" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce26" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1"><text:p><text:span text:style-name="T32">a derived class can redefine an interface method inhereted from its base class. Specify the interface name, otherwize the new implementation will not be invoked:</text:span></text:p><text:p><text:span text:style-name="T32">class MyCar2 : MyCar, ImotorizedVehicle { public void IncreaseSpeed() {} }</text:span></text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce25" office:value-type="string" calcext:value-type="string">
       <text:p>explicit implementation</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>interface name appears in implementation</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce42" office:value-type="string" calcext:value-type="string">
        <text:p>implementation does not have “public” access modifier</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>called only through the interface ref</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>interface IVehicle</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    void IncreaseSpeed();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>05    void DecreaseSpeed();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08class Car : IVehicle</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>10    void <text:span text:style-name="T43">Ivehicle</text:span>.IncreaseSpeed() <text:span text:style-name="T43">//note the absence of public access modifier</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>11    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>12        ...</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>13    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>15    public void DecreaseSpeed() { … }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>16}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>to avoid collisions</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Car myCar = new Car();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>myCar.IncreaseSpeed(); //error. IncreaseSpeed is explicitly implemented</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>myCar.DecreaseSpeed(); //OK. implicitly implemented</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Ivehicle myVehicle = myCar;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>myVehicle.IncreaseSpeed();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce27"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>extension methods</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Method 1: static method in a static class</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>static class StringUtils</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>03    public static int WordCount(string str)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>04    {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>05        return str.Split(&apos; &apos;).Length;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>06    }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>07}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>11string str = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce28" office:value-type="string" calcext:value-type="string">
       <text:p>12int count = StringUtils.WordCount(str);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Method 2: extension method:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>static class StringExtensions</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string"><text:p>    public static int WordCount(<text:span text:style-name="T33">this</text:span> string str)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>    {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>        return str.Split(&apos; &apos;).Length;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>    }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>string str = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce30" office:value-type="string" calcext:value-type="string">
       <text:p>int count = str.WordCount();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="7" table:number-rows-spanned="1">
       <text:p>Extension methods are static methods that are defined in a static non-generic class. </text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="6" table:style-name="ce43"/>
      <table:table-cell table:style-name="ce43"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" table:number-columns-spanned="7" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="6" table:style-name="ce43"/>
      <table:table-cell table:style-name="ce43"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="7" table:number-rows-spanned="1">
       <text:p>Extension methods can apply to classes, structures, enums, interfaces and delegates</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="6" table:style-name="ce43"/>
      <table:table-cell table:style-name="ce43"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce32" office:value-type="string" calcext:value-type="string">
       <text:p>Limitations:</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce43" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce32" office:value-type="string" calcext:value-type="string">
       <text:p>Applies to the specified class and all derived classes</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce43" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell table:style-name="ce6" office:value-type="string" calcext:value-type="string">
       <text:p>Example ?</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce32" office:value-type="string" calcext:value-type="string">
       <text:p>To be accessible the class must be in the current namespace scope. </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce43" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="8" table:number-rows-spanned="1">
       <text:p>If there is more than one extension method with the same signature for the same type, neither can be invoked. But we can still invoke the extension method as regular static methods.</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="7" table:style-name="ce43"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="8" table:number-rows-spanned="1">
       <text:p>If there is an extension method with the same signature as a member method, the extension method cannot be invoked. But we can still invoke the extension method as regular static methods.</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="7" table:style-name="ce43"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>RTTI</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Reference has an overhead of 8 or 16 bytes. The first part is the pointer to the heap. The second part is a pointer to the System.Type instance that represents its type.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
      <text:p>How does the CLR know which type to point at when boxing? The compiler provides this information. Check the IL code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T34">XmlSerializer</text:span> serializer = <text:span text:style-name="T35">new</text:span> <text:span text:style-name="T34">XmlSerializer</text:span>(<text:span text:style-name="T35">typeof</text:span>(Employee));</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>XmlSerializer requires an instance of System.Type</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T1">STRUCT</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Structures are value types: always allocated in the stack</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Always derive from System.ValueType</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Cannot be the base for other types.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Defined with the struct keyword.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
       <text:p>Q : what is the difference between struct and class ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May be created with or without the new keyword.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A constructor is only invoked if new is used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="7"/>If new is not used, all fields must be initialized prior to use. Because no constructor is called. Otherwise, no function call, no passing fields to functions.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>A structure may have constructors</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A default constructor may NOT be defined explicitly. It is always automatically available even when other constructors are defined.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A constructor must initialize all fields. Otherwise compile error.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A constructor may not call a base class&apos; constructor (System.ValueType) but may call another constructor of the same struct</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>Initialization of non-static fields at the declaration in a structure is not allowed.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Suitable for lightweight objects such as Point, Rectangle and Color</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>When inheritance is not required</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May not be the best choice when boxing is a concern</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May be more efficient than class is some scenarios thanks of the absence of the overhead</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string"><text:p>    Also used for interoperability with unmanaged code. <text:span text:style-name="T36">Example?</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May be suitable for larger object that are never passed to or returned from methods, or otherwise assigned. Because on assignment the instance is copied.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro10" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T35">struct</text:span> <text:span text:style-name="T34">Point</text:span>{    <text:span text:style-name="T35">public</text:span> <text:span text:style-name="T35">int</text:span> X;    <text:span text:style-name="T35">public</text:span> <text:span text:style-name="T35">int</text:span> Y;    <text:span text:style-name="T35">public</text:span> Point(<text:span text:style-name="T35">int</text:span> x, <text:span text:style-name="T35">int</text:span> y)   {        <text:span text:style-name="T35">this</text:span>.X = x;        <text:span text:style-name="T35">this</text:span>.Y = y;    }    <text:span text:style-name="T35">public</text:span> <text:span text:style-name="T35">void</text:span> PrintValue()    {        <text:span text:style-name="T34">Console</text:span>.WriteLine( <text:span text:style-name="T37">&quot;{0},{1}&quot;</text:span>,  <text:span text:style-name="T35">this</text:span>.X, <text:span text:style-name="T35">this</text:span>.Y);    }}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>System.Object</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Default implementation in System.Object:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>GetHashCode returns an unpredictable hash code</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Equals performs an identity test. which means that two separate instances of a class will not be considered equal, even if their fields have equal values.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Default implementation in System.ValueType:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>GetHashCode returns a value calculated arbitrarily from one or more of its field</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Equals compares the all actual fields, but may be slow due to use of reflection</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>object myVar = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>02myVar = true;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>03myVar = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro10">
      <table:table-cell/>
      <table:table-cell table:style-name="ce34" office:value-type="string" calcext:value-type="string">
       <text:p>everything in .NET derives from object, there is no problem with any of these assignments. It is perfectly valid to cast anything to object and the cast can be implicit, so the assignments work just fine.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>09object [] paramVals = new object [] { &quot;world&quot;, 3 };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>dynamic</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>01object myVar = 10;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>02myVar = true;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>03myVar = &quot;hello world&quot;;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>05// won&apos;t compile: because myVar is object which doesnot define IndexOf</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>06int index = myVar.IndexOf(&quot;world&quot;);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>solution use dynamic</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>dynamic myVar = 10;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>02myVar = true;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>03myVar = &quot;hello world&quot;;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>06int index = myVar.IndexOf(&quot;world&quot;);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>the compiler does not check, the CLR will and will throw exception</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce35" office:value-type="string" calcext:value-type="string">
        <text:p>If the variable is of a reference type, it can still refer to instances of different types, as long as they derive from the type of the variable. But the actual operations we can perform are always limited to those defined by the variable type, not by the actual type of instance it refers to.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce36" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T12">The dynamic keyword is an exception to this rule. It allows performing operations on a variable based on the actual type of instance it will refer to at runtime. </text:span></text:p><text:p><text:span text:style-name="T12">As a consequence, errors are detected at runtime instead of at compile time. This is called dynamic typing or late binding.</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>Q:what is reflection ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>reflection is used by the default implementation of Equals to access the fields of our structure, which is much slower than direct access.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>A techinique to find the method and invoke it.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>05// invoke IndexOf using reflection</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>01object myVar = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>02myVar = true;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>03myVar = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
       <text:p>Type type = myVar.GetType(); //obtain a representation of the object&apos;s runtime type information</text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Type[] paramTypes = new Type[] { typeof(string) };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1"><text:p>MethodInfo method = type.GetMethod(&quot;IndexOf&quot;, paramTypes); <text:span text:style-name="T38">//what if GetMethod returns null ?</text:span> </text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>09object [] paramVals = new object [] { &quot;world&quot; };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
       <text:p>10int index = (int)method.Invoke(myVar, paramVals); //Invoke returns an Object. But casting to int because IndexOf returns int</text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="5">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>System.Nullable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>A nullable value type is represented with the System.Nullable structure.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce39" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="5" table:number-rows-spanned="1">
       <text:p>A nullable is a structure that internally contains two components: a boolean that specifies whether a value exists + the actual value. </text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="4" table:style-name="ce8"/>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>Since System.Nullable is a structure, it&apos;s still a value type.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
       <text:p>The value in System.Nullable can be of any type. </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>01Nullable&lt;int&gt; num1 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>02Nullable&lt;int&gt; num2 = null;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="float" office:value="3" calcext:value-type="float">
       <text:p>3</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>04int? num3 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>05int? num4 = null;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>03if (num1.HasValue)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>04{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>05}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="float" office:value="6" calcext:value-type="float">
       <text:p>6</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>07if (num1 == null)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>08{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>09}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>01// uses conversion operator from non nullable to nullable </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>02int? num1 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="float" office:value="3" calcext:value-type="float">
       <text:p>3</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>04// uses conversion operator non nullable to non nullable </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>05int num2 = (int)num1; <text:s/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>Converting to non-nullable is only allowed when the nullable has a value. Otherwise it will throw an InvalidOperationException. And when a conversion might fail it should be done explicitly.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
      <text:p>BOXING</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>// create a nullable int without a value</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>02Nullable&lt;int&gt; num = new Nullable&lt;int&gt;();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>04// box by casting to object</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>05object obj = num;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>07// check if null</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>08if (obj == null)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>09{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>10    Console.WriteLine(&quot;null&quot;);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>11}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>// create a nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>02int? num1 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>04// box it</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>05object obj = num1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>07// unbox as a nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>08int? num2 = (int?)obj;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>10// unbox as a non-nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>11int num3 = (int)obj;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
       <text:p>boxing a nullable, boxes the underlying value.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="4" table:number-rows-spanned="1">
       <text:p>calling GetType method on a nullable type, it gets invoked on the underlying value instead, which first gets boxed</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Nullable&lt;int&gt; num = new Nullable&lt;int&gt;(10);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>03// prints System.Int32</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro11" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
       <text:p>04Console.WriteLine(num.GetType()); //if you invoke GetType on a nullable that has no value, a NullReferenceException will be thrown. That&apos;s because when boxing a Nullable that has no value the CLR returns null.</text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Implicitly Typed Local Variables</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>A local variable may be declared as var - compiler infers the type</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>01// compiler determines that type is string</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>02var text1 = &quot;hello&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>// List&lt;int&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>11var numsList = new List&lt;int&gt;();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>13// int[]</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>14var numsArray = new[] {1, 2, 3, 4, 5};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>16// can be used in loops</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>17foreach (var oneNum in numsArray)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>18{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>19    Console.WriteLine(oneNum);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>20}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Limitations:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Must be assigned a value at the declaration</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Cannot be assigned null initially</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Only local variables: no parameters, return types or fields</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Cannot be nullable. var? Num1 = 10; //illegal</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Statically typed - cannot change after declaration</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>var someVar = &quot;some string&quot;; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>someVar = 10; // won&apos;t compile</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>01int GetNum()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>02{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>03    var num = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>04    return num; //compiler has determined that it is an int; This method returns int, not a var.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>05}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Guidelines:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Do you need an int?   </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>Use with anonymous types, <text:a xlink:href="http://msdn.microsoft.com/en-us/netframework/aa904594" xlink:type="simple">LINQ</text:a>, cumbersome generic types</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>// use var when LINQ returns anonymous types</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>14var res3 = from n in nums</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>15            where n &gt;= 5</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>16            select new { Num = n, IsEven = (n % 2 == 0) };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="15">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="float" office:value="4" calcext:value-type="float">
      <text:p>4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="float" office:value="5" calcext:value-type="float">
      <text:p>5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="1047795">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="30">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="C# faq" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce48"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.allinoneplace.info/FAQ/Programming/DotNetFaq.aspx</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p>C#.NET FAQ</text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="150">
      <text:p>1.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="150">
      <text:p>What is C#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>C# (pronounced C-Sharp) is a new programming language introduced with the Microsoft .NET framework and is no doubt the language of choice in .NET environment. It was first created in the late 1990&apos;s as part of Microsoft’s whole .NET strategy. It is a whole new language free of backward compatibility curse and a whole bunch of new, exciting and promising features. It is an Object Oriented Programming language, which at its core, has similarities with Java, C++ and VB.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce47" table:number-columns-spanned="2" table:number-rows-spanned="1"/>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>2.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What are Jagged Arrays in C#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>A special type of array is introduced in C#. A Jagged Array is an array of an array in which the length of each array index can differ. Example: A Jagged Array can be used is to create a table in which the lengths of the rows are not same. This Array is declared using square brackets ( [ ] ) to indicate each dimension.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>3.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>How do you prevent the class from being inheritance??</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Simply include the keyword ‘Sealed’ in front of the class keyword.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>4.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What’s the advantage of using System.Text.StringBuilder over System String?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>String Builder is more efficient in cases where there is a large amount of string manipulation. Strings are immutable, so each time a string is changed, a new instance in memory is created.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>5.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the use of abstraction in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Abstraction is used to create a common set of methods that might have different specific implementations by subclasses. Abstract class cannot be instantiated and consists of abstract methods without any implementations. Classes inheriting from abstract class must implement all the methods in abstract class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>6.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the Difference between instance data and class data?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Class data in terms of static class is the data that particular class holds in its structure. Instances can refer to different objects of the same class that hold different values using the same class structure in memory heap.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>7.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the significance of static method?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Static methods are used when we want only one copy of that method to perform action and remain active at a single point in time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>8.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the uses of boxing and unboxing?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Boxing and Unboxing are used to convert value types into reference types and vice versa. Developers often need to make some methods generic and hence create methods that accept objects rather than specific value types. The advantage of reference types is that they don’t create a copy of the object in memory, instead pass the reference of the data in the memory. This uses memory much more efficiently, especially, if the object to be passed is very heavy.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>9.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the Debug class methods?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string"><text:p>a. Assert:This method checks for a condition. It displays a user message if the condition is false.</text:p><text:p>b. Write:used to write information which will be used by Trace Listeners.</text:p><text:p>c. WriteIf:Write information for Trace Listeners only if the condition is true.</text:p><text:p>d. WriteLine: same as write but, every time writes in a new line.</text:p><text:p>e. WriteLineIf:same as WriteIf but everytime writes in a new line. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>10.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is Anchoring a control and Docking a control? </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string"><text:p>Anchoring: used to resize controls dynamically with the form.</text:p><text:p>Docking: to adhere to the edges of its container.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>11.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is Form level validation and Field level Validation?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Form level validation occurs once the user is ready to submit the form. The application checks the complete form at once and validates all the fields in it and informs the user about it. Field level validation occurs only for a specific field. E.g.: As soon as the user looses focus from a name input box, the application validates the data in that particular field and informs the user about it. They are normally used for mandatory fields using javascript.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>12.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is Code-Access security?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Code access security is a mechanism that helps limit the access to the code by protecting the resources. It defines permissions which tell about the rights to access various. It also imposes restrictions on code at run time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>13.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between DataGrid control in Windows Forms and Web Forms?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Windows Forms controls have more functionality than Web Forms. Also, DataGrid in Web Forms has to be bound to the form before it displays any data.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>14.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between Finalize() and Dispose()?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Dispose() is called by as an indication for an object to release any unmanaged resources it has held.Finalize() is used for the same purpose as dispose however finalize doesn’t assure the garbage collection of an object.Dispose() operates determinalistically due to which it is generally preferred.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>15.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>How does the XmlSerializer work? What ACL permissions does a process using it require?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>The XmlSerializer constructor generates a pair of classes derived from XmlSerializationReader and XmlSerializationWriter by analysis of the classes using reflection. Temporary C# files are created and compiled into a temporary assembly and then loaded into a process.The XmlSerializer caches the temporary assemblies on a per-type basis as the code generated like this is expensive. This cached assembly is used after a class is created.Therefore the XmlSerialize requires full permissions on the temporary directory which is a user profile temp directory for windows applications.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>16.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What are circular references?how garbage collection deals with circular references?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string"><text:p>A circular reference is a run-around wherein the 2 or more resources are interdependent on each other rendering the entire chain of references to be unusable.There are quite a few ways of handling the problem of detecting and collecting cyclic references. </text:p><text:p>1. A system may explicitly forbid reference cycles.</text:p><text:p>2. Systems at times ignore cycles when they have short lives and a small amount of cyclic garbage. In this case a methodology of avoiding cyclic data structures is applied at the expense of efficiency.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>17.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between Interface-oriented, Object-oriented and Aspect-oriented programming?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Interface oriented approach compels to develop the software based on the contract. Object oriented approach emphasizes on its aspects like, Abstraction, Encapsulation, Inheritance, Polymorphism. Cross cutting concerns cannot be implemented in object oriented programming. That’s not the case with aspect-oriented. However, there is a risk of system failure in this situation.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>18.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the accessibility modifier &quot;protected internal&quot; in C#.?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string"><text:p>The Protected Internal access modifier can be accessed by:</text:p><text:p>Members of the Assembly</text:p><text:p>The inheriting class</text:p><text:p>The class itself,</text:p><text:p>Its access is limited to the types derived from the defining class in the current assembly or the assembly itself.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>19.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between Debug.Write and Trace.Write? When should each be used?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string"><text:p>Debug.Write: Debug Mode, Release Mode (used while debuging a project).</text:p><text:p>Trace.write: Release Mode (used in Released verion of Applications).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>20.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What are implementation inheritance and interface inheritance?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Implementation inheritance is achieved when a class is derived from another class in such a way that it inherits all its members. Interface inheritance is when a class inherits only the signatures of the functions from another class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>21.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What are generics in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Generic types to maximize code reuse, type safety, and performance. They can be used to create collection classes. Generic collection classes in the System.Collections.Generic namespace should be used instead of classes such as ArrayList in the System.Collections namespace.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>22.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the use of GetCommandLineArgs() method in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>With GetCommandLineArgs() method, the command line arguments can be accessed. The value returned is an array of strings.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>23.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the use of System.Environment class in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>The System.Environment class can be used to retrieve information like command-line arguments, the exit code, environment variable settings, contents of the call stack, time since last system boot, the version of the common language runtime.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>24.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is an Exception in .NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Exceptions are errors that occur during the runtime of a program. The advantage of using exceptions is that the program doesn’t terminate due to the occurrence of the exception. Whenever an exception is occurred the .NET runtime throws an object of specified type of Exception. The class ‘Exception’ is the base class of all the exceptions..</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>25.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What are Custom Exceptions?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Custom Exceptions are user defined exceptions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>26.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is a Constructor?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>It is the first method that are called on instantiation of a type. It provides way to set default values for data before the object is available for use. Performs other necessary functions before the object is available for use.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>27.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Can private virtual methods be overridden in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>No, moreover, you cannot access private methods in inherited classes. They have to be protected in the base class to allow any sort of access.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>28.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Is is possible to force garbage collector to run?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Yes, we can force garbage collector to run using System.GC.Collect().</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>29.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is an Event?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>When an action is performed, this action is noticed by the computer application based on which the output is displayed. These actions are called events. Examples of events are pressing of the keys on the keyboard, clicking of the mouse. Likewise, there are a number of events which capture your actions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>30.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is Delegate?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Delegates are kind of similar to the function pointers. But they are secure and type-safe. A delegate instance encapsulates a static or an instance method. Declaring a delegate defines a reference type which can be used to encapsulate a method having a specific signature.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>31.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>How does object pooling and connection pooling differ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>In Object pooling, you can control the number of connections. In connection pooling, you can control the maximum number reached. When using connection pooling, if there is nothing in the pool, a connection is created since the creation is on the same thread. In object pooling, the pool decides the creation of an object depending on whether the maximum is reached which in case if it is, the next available object is returned. However, this could increase the time complexity if the object is heavy.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>32.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is Language Integrated Query (LINQ)?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>LINQ is a set of extensions to .NET Framework that encapsulate language integrated query, set and other transformation operations. It extends VB, C# with their language syntax for queries. It also provides class libraries which allow a developer to take advantages of these features.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>33.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the purpose of CultureInfo class. What namespace contains it?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>System.Globalization namespace contains CultureInfo class. This class provides information about a specific culture, i.e. datetime format, currency, language etc.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>34.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Which is the class from where everything is derived in .NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>System.Object. Object class is the ultimate base class of all classes in the .NET Framework, it is the root of the type hierarchy. It is often used as a generic argument in class methods - all classes are treatable as Object classes.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>35.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the use of assert() method?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Assert method is in debug compilation. It takes a boolean condition as a parameter. It shows error dialog if the condition is false and if the condition is true, the program proceeds without interruption.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>36.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Difference between the System.Array.CopyTo() and System.Array.Clone()?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>System.Array.CopyTo() performs a deep copy of the array. System.Array.Clone() performs a shallow copy of the array</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>37.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the purpose of Dispose method?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Dispose method is used to destroy the objects from the memory.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>38.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between shadow and override?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>In general when you extend a class you shadow fields with the same name in the base class and override virtual methods with the same name and parameter list in the base class. Overriding makes the base class method invisible. Shadowing a field only hides the field from view. You can still explicitly touch the hidden shadowed field if you wish. You cannot touch an invisible overridden method.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>39.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between const and readonly in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>The read only can be modified by the class it is contained in. However, the const cannot be modified. It needs to be instantiated only at the compile time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>40.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Is there regular expression (regex) support available to C# developers?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Yes. The .NET class libraries provide support for regular expressions. Look at the System.Text.RegularExpressions namespace.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>41.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Is there an equivalent of exit() for quitting a C# .NET application?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Yes, you can use System.Environment.Exit(int exitCode) to exit the application or Application.Exit() if it’s a Windows Forms app. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>42.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Is there a way to force garbage collection?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Yes. Set all references to null and then call System.GC.Collect(). If you need to have some objects destructed, and System.GC.Collect() doesn’t seem to be doing it for you, you can force finalizers to be run by setting all the references to the object to null and then calling System.GC.RunFinalizers().</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>43.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Is it possible to restrict the scope of a field/method of a class to the classes in the same namespace?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>There is no way to restrict to a namespace. Namespaces are never units of protection. But if you’re using assemblies, you can use the ‘internal’ access modifier to restrict access to only within the assembly.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>44.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>How do I implement function pointers in C#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Delegates provide the functionality of function pointers in C#. A delegate is a type that references a method. Once a delegate is assigned a method, it behaves exactly like that method.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>45.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is partial class?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>partial classes mean that your class definition can be split into multiple physical files. Logically, partial classes do not make any difference to the compiler. During compile time, it simply groups all the various partial classes and treats them as a single entity.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>46.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What does the volatile modifier do?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>The volatile modifier is usually used for a field that is accessed by multiple threads without using the lock statement to serialize access. Using the volatile modifier ensures that one thread retrieves the most up-to-date value written by another thread.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>47.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Why do I get a security exception when I try to run my application?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Some security exceptions are thrown if you are working on a network share. There are some parts of the frameworks that run if being run off a share (roaming profile, mapped drives, etc.). To see if this is what&apos;s happening, just move the executable over to your local drive and see if it runs without the exceptions. One of the common exceptions thrown under these conditions is System.Security.SecurityException.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>48.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between directcast and ctype</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>DirectCast requires the run-time type of an object variable to be the same as the specified type.The run-time performance of DirectCast is better than that of CType, if the specified type and the run-time typeof the expression are the same. Ctype works fine if there is a valid conversion defined between the expression and the type.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>49.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>How to create and manage files in c#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>Using System.IO namespace and FileStream and StreamWriter classes.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45" office:value-type="string" calcext:value-type="string">
      <text:p>50.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>What is FormClosed and FormClosing events?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>The FormClosing event occurs as the form is being closed.You can Cancel this event. If you cancel this event, the form remains opened. To cancel the closure of a form, set the Cancel property of the FormClosingEventArgs passed to your event handler to true. The FormClosed event occurs after the form has been closed by the user. When a form is closed, it is disposed, releasing all resources associated with the form</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce47" table:number-columns-spanned="2" table:number-rows-spanned="1"/>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048273">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
   </table:table>
   <table:table table:name="SQL" table:style-name="ta1">
    <table:shapes>
     <draw:frame draw:z-index="0" draw:name="Image 2" draw:style-name="gr1" draw:text-style-name="P1" svg:width="132.08mm" svg:height="86.78mm" svg:x="90.31mm" svg:y="504.39mm">
      <draw:image xlink:href="">
       <office:binary-data>iVBORw0KGgoAAAANSUhEUgAAAnAAAAGaCAYAAACPJH7aAAAAAXNSR0IArs4c6QAAAARnQU1B
        AACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAEvSSURBVHhe7Z0hk+240YaH5YMLAwPD
        sjB1UGAqKDAwIVP7E8ICU2HDAhcGhk3gwoWBARcsXLhw4fmO7WMf2Zatlm21WtIzVbeyudeW
        Wk+/cr8jy/bbnR8IQAACEIAABCAAgaIIvBUVLcFCAAIQgAAEIAABCNwxcIgAAhCAAAQgAAEI
        FEYAA1dYwggXAhCAAAQgAAEIYODQAAQgAAEIQAACECiMAAausIQRLgQgAAEIQAACEMDAoQEI
        QAACEIAABCBQGAEMXGEJI1wIQAACEIAABCCAgUMDEIAABCAAAQhAoDACGLjCEka4EIAABCAA
        AQhAAAOHBiAAAQhAAAIQgEBhBDBwhSWMcCEAAQhAAAIQgAAGDg1AAAIQgAAEIACBwghg4ApL
        GOFCAAIQgAAEIAABDBwagAAEIAABCEAAAoURwMAVljDChQAEIAABCEAAAhg4NAABCEAAAhCA
        AAQKI4CBKyxhhAsBCEAAAhCAAAROG7ivv/76/vb2xh8YHNZApyF+IAABCOQmQD2jlp/1M5r1
        7LSB6wbLDwTOEEBDZ+hxLgQgcBUBrkVXkWy3HU0NnXZfmsG2K4m6R46G6s4vo4NAKQS4FpWS
        KbtxamoIA2dXB81Epin4ZqAyUAhAIJoA16JoZJywIKCpIQwc8stOQFPw2QdLABCAgFkCXIvM
        pqaYwDQ1hIErRhb1Bqop+HopMjIIQOAsAa5FZwlyvqaGMHDoLTsBTcFnHywBQAACZglwLTKb
        mmIC09QQBq4YWdQbqKbg66XIyCAAgbMEuBadJcj5mhrCwKG37AQ0BZ99sAQAAQiYJcC1yGxq
        iglMU0MYuGJkUW+gmoKvlyIjgwAEzhLgWnSWIOdraqgaA/fl4zZ8CeD9EwUVRkBT8IWhIVwI
        QECRQGnXIuqeojiEXWlqCAMnTAqHpSOgKfh0o6BlCECgdAKlXYs0Ddzne/eZrdv940vpWU4b
        v6aG9Azcl4/7bfG90CsXyzSFnDb97bWuKfj26DJiCEBASiB8Lfpy/7j5vxd6ZT2TxqtX9z7v
        7339xsCFchPWUKgF+b+rGLhJZJ4Pvt8usvN6QpbD5UgZAU3ByyLiKAhAoEUC4WvRtoHLsYVH
        r+5h4KTzIawhaUvh49IbOGflzTVrL1P3cvTj3w3HjYLZcP2eFT3/BHLb8bd1rl9+IwnLbP8I
        TcGfjZXzIQCBegmEr0UvA+euuL3q2fujcg0/5+rK2927ohese4H4PI2uFlhuH/fxLune4ou3
        3q7ia68+hjV03fxJbuAmATiiGMJ/GavR2L0E/+lZpn5NjPvn+/DAgu/PfFatbtuO5/gm3+3j
        aL9ObNflppmWNAXfDFQGCgEIRBMIX4v8Bunh1p61xrcgcbSuvN1nd6hEdS/GwG2vJi5rsqje
        bsbXVn0MayhalpsnJDdww8ZH/9Ohy3+bDNz7+2MyPJO+mhjOiprjwnxLyWP7s186RpF5fsu4
        7fb7sJzesXSToC2BXie/oSVNwV8dO+1BAAL1EAhfi/wGaaoNY91yV+CE9cx/h2qsLdK6F2Hg
        HMM1q5GPmvu+2toUvoVKfdSvZyYNXDeJNjeEen7TcZerX68RWd46Xa7YrZe6d/t1JuTw20h7
        S8OpLtPhi2aqnmkXAhCAwItA+Fq0vwfOf1t1p55NJmq5CPCqX32b4ronN3B7iytrTYQN3Px2
        a7v1Mayh62acCQO3Xq7dWdHaEPxqBW5rr8B029Vn4MIraa/ftBxDuLo9fF2CWmhJU/At8GSM
        EIDAMQLha9GWgVvXDt++uFVUnjtCwzELAyete4/da+NTsl4zOf3l6zjZg4RhA9dHPd6lcrc3
        NVYfwxo6pk3fWckNnGQP3Kip7WOd0MVClglutnoXJbT5RJZNgusSV1NLmoKviRtjgQAEriUQ
        vhZt7IHzhHGmnr0M3HMlS1z34g2c7OX38no6oGi3PoY1dJ1mkxu419LvfEPm3lM7b7tGavGb
        yWD7Xw80eH7D2G/v9bRQ6Ljut4v5rV1HpDleAnSdDrK2pCn4rAOlcwhAwDSB8LXoYgPneZhv
        vpK13gM3lZpA3fM+iODbN77csvRod70g4am7i0xSHwcgYQ1dNwXSG7jeX208MboQjug3lkB7
        s98mdp7a8W4YDazAScdxXXraaElT8G0QZZQQgMARAuFr0dUGzllA8LxVwV0X2Ks/bt3bffXH
        /Im+58t51/V5beA2bh077VEfKzVw/YLq+K3SSaTrTY5SA7dcnu1XzsY9b8uVsI29cEcM3Pw3
        o1H07W7WPHKB9J0Tvmhe1RPtQAACENgmEL4WXW/g+mhWiw2+urIwUZt1T3rcwGFlvDYXMjwP
        Bi7q7drEtVcfwxq6bgaqrMBdFy4t1UhAU/A18mNMEIDANQS4Fl3DseVWNDWEgWtZaUbGril4
        I0MmDAhAwCABrkUGk1JYSJoawsAVJo4aw9UUfI38GBMEIHANAa5F13BsuRVNDWHgWlaakbFr
        Ct7IkAkDAhAwSIBrkcGkFBaSpoYwcIWJo8ZwNQVfIz/GBAEIeAhsPdi2A4trEUo6S0BTQxi4
        s9ni/NMENAV/OlgagAAEzBOYPQ0Z8Y5OrkXmU2s+QE0NYeDMy6H+AE8J/sBv2fUTZYQQaJfA
        8Dqq7vUVz9dpYODaFUOGkZ+qZ5HxYuAigXH49QSOCv7ob9nXj4AWIQABewQwcPZyUn9ER+vZ
        ETIYuCPUOOdSAkcEf+a37EuDpzEIQMAoAQyc0cRUHdaRenYUCAbuKDnOu4zAOcHHX6QvC5yG
        IAABwwTirw3nrkWGURCaGgFNDWHg1NJKR1sEzgk+/iJNJiAAgRYIxF8bzl2LWmDKGEMENDWE
        gQtlg39PTuCc4OMv0skHRAcQgIABAvHXhnPXIgNDJoTsBDQ1hIHLnm4COCf4+Is0xCEAgRYI
        xF8bzl2LWmDKGEMENDWEgQtlg39PTuCc4OMv0skHRAcQgIABAvHXhnPXIgNDJoTsBDQ1dMrA
        /fDDD4/37bzd//a3v/EHBoc1cE7w8Rfp7DOcACAAgWQEhifU3zx/unfDbXdLPaOOX+FlztWz
        uGmBgcN4HTZeV4i9a+Oc4DFwcVOeoyEAAR8BDBwG7oqadq6exc3NUwau60oz2LihcXQpBI5o
        6Ohv2aUwIU4IQECfwJFrkX6U9GiZgKaGMHCWldBIbJqCbwQpw4QABA4Q4Fp0ABqnzAhoaggD
        h/iyE9AUfPbBEgAEIGCWANcis6kpJjBNDWHgipFFvYFqCr5eiowMAhA4S4Br0VmCnK+pIQwc
        estOQFPw2QdLABCAgFkCXIvMpqaYwDQ1hIErRhb1BhoS/E8//XTvnhBb/mz9fb2kGBkEICAl
        8N///td76NbfdweHrkXSvjmuXQKaGsLAtaszMyMPCf7bb7+9//nPf17Fu/X3ZgZGIBCAQDYC
        W9eVvetN6FqUbTB0XAwBTQ1h4IqRRb2BhgSPgas394wMAqkIYOBSkaXdPQKhenYlvWoM3PRe
        sPfPK/nQlgKBkOAxcApJoAsIVEagBQNH3bMn2lA9uzJiDNyVNGnrEIGQ4DFwh7ByEgSaJoCB
        uzb9n+/d58n2P0d2bY9lthaqZ1eOCgMXQXMQ8MafceXv833jmPc7a4N+2CHBY+AiRMqhEIBA
        TwADd6UQPu/vfe3bNnDUx4F3qJ5dmRUMXATNcwIdjB93eNfAQ4LHwEWIlEMhAAEM3OUaSG3g
        6qmPoXp2ZWr0DNyXj/ttsXq1NDPj/fzbx5fHGEfBbLh+T3v96tjKIbnt+NuK6rejP/XtWVWb
        VuDcf3NjYCVuKeCQ4DFwV0552oJAGwTSrMB9uX/cxjoy/vfzrszt495VrvEnqq4I6mPfbrDu
        vWJyS+HeXrnVd6WdcWx/c/o5Zt+KROP1MVTPrpx9OgZu87bi230wa8PPS/Cfz0ni3q50jM9O
        ezMDtyX2xUqYuN9XoE8zKjVw84nHKtxcwiHBY+CunPK0BYE2CKQ1cIGtNBfVM7c+3kV1L8bA
        LQyos8Ay9qtj4Oqqj6F6duXsUzBwr9Unn1l7e3uZoMlIvb8/DNLz7ycTNt57d1azHCfk+w1j
        vOU5M0zjJPD8lnHb7Xf2q1W8gXNWFDFwawO3ubdwa8/hhX//9ddfXzmnaAsCEBAS6OZezrnv
        63s/9Lnpma7lnjsvsfVsvz5K616EgXMM4awmPWruu7OwMvAI30J1VmKaro91GTjvLUVXEK99
        Ya7b3zQ5K0M3X717rcAtb50uf2NaG0fxHrXoJeJ+fXFaVZz9ViW80NV8WEjwqVfgQv3XzJ6x
        QSAngZRzL/UK3LxGverN+Peieiatj+K6Jzdw055u0YpCagNXT31MqenlXE2/AudZ8Zo7ep+B
        29kntiH41Qrczu3T4bcun4ET7k87ZODWEzznhdNS3yHBY+AsZYtYIHAdgdDcP9OTHQMnqGeL
        /XPuHvDeX0nrnrNQsL8HLtYwpTZw9dTHlJrOZ+Acw7S1JDuZsJWYnbDFQpYLTtSvS+6Igdv4
        DerMBaqWc0OCx8DVkmnGAYE5gdDcP8NL1cB5ru+iuhJcgXtuHRLXPekKnHMr2MIKXEX1MaWm
        9Q2cs/fLvXX4eiWHZyVsz8D59pK5mzsnMToC3W3v9fDEW+C4CV6sgXNXA6V9nLlyFXZuSPAY
        uMISSrgQEBIIzX1hM97D9Aycuy/ueD3br4+eFapA3fM+iODbN758vdWj3fU2n4gVssbrY0pN
        ZzBwjkHybDz3LvMGTI7ofWzdSCOffg0ZOFG/e08KrVYhz1ye6jk3JHgMXD25ZiQQcAmE5v4Z
        WqkNnO8BiCP1bO9JT7c9Uf15ANt9cnT+RN/z5bzrJ2rXBm7jiVWnPVF8DdTHlJrOYuD6TleJ
        W7/RWbTk3Dfmef/O6PrXL5dbvX+uA+x94ucK47ghUB5c2L4UhwSPgTtTxjgXAnYJhOb+mch1
        Ddx6n5u8nsnqo7zuRdTHvuuFgdusg54HAy8ycDXVx5SazmfgzsxEzq2aQEjwGLiq08/gGiYQ
        mvtn0KQ2cKKtY2cGwLlFEkipaQxckZKoO+iQ4DFwdeef0bVLIDT3z5DBwJ2hx7lHCaTUNAbu
        aFY4LxmBkOAxcMnQ0zAEshIIzf0zwWHgztDj3KMEUmoaA3c0K5yXjEBI8Bi4ZOhpGAJZCYTm
        /pngMHBn6HHuUQIpNY2BO5oVzktGICT4n3766f7f//531f/W38cGGuo/tj2OhwAEZARSzr3v
        vvvOG8TW33cHp4xHRoSjSiegqaH0X2IoPRvEn5yApuB9g8ndf3LAdAABowSszT1r8RhNG2Ht
        ENDUEAYOKWYnoCl4DFz2dBMABCYCuef+MhXW4kEq5RHQ1BAGrjx9VBexpuAxcNXJhwEVTCD3
        3MfAFSweo6FrahoDZ1QELYWlKXgMXEvKYqzWCeSe+xg46wopLz5NTTdg4Ia3R9f0pufyJL0f
        sabgMXC1qYfxlEwg99zHwJWsHpuxa2oaA2dTA7OoZN/K83zmpPv2bODzYBaGryl4DJyFjBMD
        BAYCuec+Bg4lXk1AU9MYuKuzl7S95zfuvN9w8a00jt/EW393NmmYkY1rCh4DF5kcDodAQgK5
        5z4GLmFyG21aU9O6Bm75ofeFERlWmpYfBd66BbpccZqblL1Vqw7w+pbqfnv3Lx/321vXx3jc
        0N/0IeDVStfig8L9uQtF9zwW7XSrZisG43mxBq477xmv4ZU4TcFj4Bq9qjJskwRyz/0jBq6v
        Lf31dF4zvNt0+rrhfix+UQdS1BWTmW4nKE1Nqxm40ejMPNvDwLj/X27gnhNn3tj93WtSBHvg
        nsbSnYCjAZy6eE60262bgIOR6v77rTvAMWKDTNfxDe0tJq9raF8d9W37b30eMXD3h/f09G1o
        PmkKHgNnKPGE0jyB3HP/sIHrTZlzPX9ey+drEo86sKhJQx10zktRV5pXVV4AmprWMXDP30K8
        d/4c1mIDJ2zPNVPbDzFsmaLn348TcPxNqh/EuLr2XC1cTF7/ODz9eIxjF7P//P5fBnMnvoU6
        EFiZ0bz6XvWuKXgMnLHkE07TBHLP/TMGbmXWJA/LPevIVI9S1JWmFZV/8JqaVjFw24ZkDlts
        4Jyl65ApHFfDNg3cckJtGcqZaVyYu5mB2zZZ/W9f7m9k3t/a9gR4zMANK4Rvs9XO/DJ/RaAp
        eAycpcwTS+sEcs/94wZOutVn2cPijlCKutK6qDKPX1PTKgZuZVw2AMsNnLMaNe0v2NqoH7iF
        urOaN7v1KJ5oG0+DjnFmMHCswO3PaM0Jl/naQvcQMEXA2tyTxBNTp7b2Yi9X4IaFiL2FgYi6
        YirD7QUj0dBVVFQM3PUrcIvhTxtFfSburIF7/qYlNnB7q2SLuKNXxo6twA37Lpa/MV4lofPt
        aAqeFbjz+aIFCFxFIPfcT7kC5//F+foVuKtyQTvXENDUtIqBk97C8xq9jX1iK9SbK2khQxXY
        AzfeoxUbuOeTqZKnPjUM3GyPxTUCvboVTcFj4K7OHu1B4DiB3HM/nYFbrKZNHR01cBF15Xg6
        OPMCApqa1jFw06b/9VOYy6dSZ3u1nKc0Z3vYHn+/3NO296Tl6smfZZI8RmrVXoSBG145svWw
        gdN5agM3rUzaXX3raGgKHgN3wRWKJiBwEYHccz+dgRtfMbV84nR4pUj8LdRHpNK6clFuaOYY
        AU1NKxm4AcT0zrRxP5jnCYT5noHOeDxf2bF4idp6b8GeSVm+k83zHrjlO+qWtxxjDNww2v4T
        Xl0y3T+7hnVDL2e+xBB+yOOYSK88S1PwGLgrM0dbEDhHIPfcT2ngXm8rGGtAV6OOr8A9q2i4
        rpxLCWefJKCpaVUDd5ILp1dKQFPwGLhKRcSwiiSQe+4fMXBFgiZoNQKamsbAqaWVjrYIaAoe
        A4cOIWCHQO65j4Gzo4VaItHUNAauFtUUPA5NwWPgChYKoVdHIPfcx8BVJ6nsA9LUNAYue7oJ
        QFPwGDj0BgE7BHLPfQycHS3UEommpjFwtaim4HFoCh4DV7BQCL06ArnnPgauOkllH5CmpjFw
        2dNNAJqCx8ChNwjYIZB77mPg7Gihlkg0NY2Bq0U1BY9DU/AYuIKFQujVEcg99zFw1Ukq+4A0
        NY2By55uAtAUPAYOvUHADoHccx8DZ0cLtUSiqWkMXC2qKXgcmoLHwBUsFEKvjkDuuY+Bq05S
        2Qekqel8Bm7z26XZ+acJwPp4M8anKXgMXBp50yoEjhDIPfcvM3AZr59HuM/OyfXJxVz9nga2
        34Cmpgs2cItPkiROyunmrU/wjPFpCh4Dd1rJNACBywjknvsYuAeBS41URF2+tN/LJHm6IU1N
        Y+CmdC2/Xep8hPh0Sl+TxOy3STFwV2SZNiAAgQgCmsVOEtbheDJePyXj0jsmwsDpBaXa02EN
        HYgSA9dBe37I/vbxZUI4fkD+MsNlfYJnjE9T8KzAHbhKcAoEEhHIPfdZgbs6sRg4TU0rGrjl
        CtfbvRvoyiBNy6rDv7+9zVfCRmM1/Nv6j2vCBml+uX/c3OOWK2vPf/c4tc/37rz3++eo8d7o
        DecP/zb+cY7ZXNHbGG8wvtFgSvsNjXcazP3dw+8ywxpxXdAUPAYuIjEcCoHEBHLP/eMGTljP
        JNf3PoiIO0DPBYep/iwv2tI6tay1t49HtOufvub2/zaP0bfgIarLwn6HSMJcJPEllvGseU1N
        6xi4Z8Jm5sq74vNI1kJEg1Hy3c6UOP1n8h2BDwbQae85GbzGZflv7sSZTngaJjfumPF2Jmov
        vl7DnXF8msW9fkexh9oTx6cje03BY+B0ckovEJAQyD33Dxk48fVTUH9ckzIrQutaOJQCz0LA
        oz7MT5XWi9fo+3b3DNyz/kz9bNZNSV2W9Su9M/Za1BHWdYkwTxyjqWkVA+cVh/SWnW+yOKJf
        r7i9yA+JXa6OzVfc/Mc821jG6LnV2h25bEM6Xkl8w1CHCbkc6/J8aXvS+E5oOOpUTcFj4KJS
        w8EQSEog99w/YuCk10/p9Xh8iCB490NaM4X1wh27xMDN49u6c3WVgdtqf71g4t/uFBfHlSLX
        1LSCgdsAKRXjc1VpbdRCCQrcGn3+tiExcFPfe6t1kwKk45XF5xq4/QkubU8a35WS3m9LU/AY
        OL280hMEQgRyz/14Aye9fkqvx/1v6NN2lr1r/G6tmrsx//aknWSEDdx6m5D/nFBdngex2e/m
        ws16wcTPJS6OkE5j/l1T0+YM3NYet3gD59+jMN2KjDBw4WXj2ezpJ+Mq3pVhlcUnN3DS9qQX
        oBjJnjtWU/AYuHO54mwIXEkg99xPZ+Ck1+MxgvDe5T2TNRuHaKFBaKQeh20ZRw0D5zO0y21Q
        GLgTMzI8AeWGIW4pNOSwt38DWot945UhzmbQWCMVNnDC+Ppf0IZbqEdX4BZTVWgwT4gi8tSw
        hiIbjDw8d/+R4XI4BKohYG3uheOR1rOI6/sym9Mmf98DfL4H5hYNiOpF6QbuxQEDd+JyEBa8
        X8jrzZiehwEG1+Q3HOPTPTuuRvYby3qj6Yhjdb5oYkjH+9yQurFx9MhvVLLxyuM7IYuoU8Ma
        imou+uDc/UcHzAkQqISAtbkXjkd+/ZRdjzcS6dtiJKo/0l/4zxq443XZ7XmbUWAP3OpBvaWx
        DS3wpJtAYQ1d17fCLdRxCfb128Tw2O/tflusKq2eOHUeN/Y9rLD9hOoT0Hh+YHeob+Vv9bRq
        7yUlK2Hy8U5vwA7tXhX2K23PuwTtycd1MttvSVPwvkhy96/FmX4gYI2AtbkniUd8/RTWn66u
        +B9Q23jl1fKtDBtPoYbKisxI+W+hrl6x5TQWrMvLY7cWMTx1z1eXWYE7Maslgh+8j/PetF5Z
        g0P2Ptkye7/anpNe7hvw7D1bvUdm431sy3frrJ5elRs4+Xj7I8PvY5MauD6PgvbE+TghjIhT
        pRqKaDLq0Nz9RwXLwRCoiIC1uSeNR1bP5Nfj9d7v7Vul83eQzl9DNZSAmIWG8PtUvfvSd+8c
        7dflvXe5rhZqBHUZA3figiAV/IkuOLVyArk1lLv/ytPL8CCwScDa3LMWjwXpiJ9+tRCsgRg0
        NaRyC9UAU0IwTEBT8D4Mufs3nBpCg0BSAtbmnrV4ksIXNo6BE4J6HqapIQxcXG44OgEBTcFj
        4BIkkCYhcJBA7rm/DNtaPAexXnoaBi4Op6aGMHBxueHoBAQ0BY+BS5BAmoTAQQK55z4GLpw4
        DFyYkXuEpqYxcHG54egEBDQFj4FLkECahMBBArnnPgbuYOI4bZOApqYxcAgxOwFNwWPgsqeb
        ACAwEcg99zFwiPFqApqaxsBdnT3aiyagKXgMXHR6OAECyQjknvsYuGSpbbZhTU1j4JqVmZ2B
        awoeA2cn70QCgdxzHwOHBq8moKnpfAbO96mQq0nW1t70ZQrB9/BSjT1B3jQFj4FLJQzahUA8
        gdxzHwP3IGChrsRLx+wZmpou2MDl+9ZZNuVYmGgYuGzpp2MI1EZAs9hJ2FmLRxKz/5iI+iiq
        KxHtHQ+6ijM1NYSB638BeXybdfp81/hpkeV36KrQ1vlBYODOM6QFCECgJ6BZ7CTIrcUjifm0
        gRN1goETYVLWNAZuMnDubcnxW26YuJVoMXDSecxxEIBAgIA1w2QtnuMCutpwXd3e8ZFZP1NT
        Q4oGTvaR9df9eP9K2N6HcDtwq4/h3pcf1l2bMu+LCp8f0T3S3iCw8HjFH+GdlrifTLY+JNzH
        PIxv/sFj3565MBfpOM5OKE3B+2LN3f9ZfpwPgVIJWJt78nguvL53yVte45/XcTevfb3or/3z
        vt0aFVUfBXVF3N5mvRxrUcZ928qTQ66h84HpGLinUGZmyLuS8xDmwpwMRsS3Eib5jeAp9PfP
        idQgyHl7ewbOOfVlygLtjZMxNF6xgXPy3PPYNXBPkzfF+DRqs3NkXKTjOCtDTcFj4M5mi/Mh
        cB2B3HN/ORJRPMJ6Jr++y+rey0w59etpnOZ16rWAsF6A8Odut644CxLb7fnqjLOQsQ7wOhEZ
        a0mkoYtiVjFwXnFIb8X5JotIUOPetqXzfwptZcLc48bfcObn+ifkuj3peOUT/JVtiYFbTrJl
        P1eP46wWNQWPgTubLc6HwHUEcs/9IwYu5fXdWWm43xZ3lEYD51tUWBsryQKHsK5E1dvFYotz
        V+g61dhuSVPTCgZuQ0hSA/dcLo4X6NpYjWlfTkDvMvHqNwZpe/LxpjJw+7/sXD+Os9NJU/AY
        uLPZ4nwIXEcg99yPN3Bpr++Opbq/ew3cckFiy6jpGzjfHZvwyt51WrLSkqamzRm4rXvu8QbO
        v0dhetrUuaU4N1JbDzBI20s7wSUrcPsG7vpxnJ04moLHwJ3NFudD4DoCuee+FQMnqXtxv/Bn
        MHAPmPP6NMTQ0N3TXk6amjZl4K5dIt5eaVpO2tXEGDd3zpQnbc+6gbt+HGcv55qCx8CdzRbn
        Q+A6ArnnvgUDJ617JRi4h4N77THv/7udhxdGLWlqWsHA+Q3D+JTkyyPtb4LcfBp0x95Ll299
        E8P38ISsPel4N/bo7TzN0wnk/ApcoI3piiYfx9nLuabgMXBns8X5ELiOQO65H2/g5NdF2dsN
        5HUvzsBJf1EfCIRrm7S94biuXvdttrb8Vt8K3GhUXpsbh8ehb/0mTTe/K9PkPObse/pl+wnV
        57T0rqStLz7eieE7N6q98HiH31YcBs//738dimCibT6RtBjz1eM4eT3PfRHP3f9JfJwOgWIJ
        WJt7kniWbzLYqmfS67u07sUZuPH1HbJ3mYYNnLw979OyxSo0PnCJhuJb9Z+hsALnGI/xawe9
        a/PdH1++m6xbft27l7883vceuKPv69kSbLi96Tcad7wbD23M9z504339BjOmbO9dPDNjKzVw
        w+9c/f6EaU/g87+XvzDN3ie3mbdzctQUPCtw53LF2RC4kkDuuR+/ArdRz05c3x9LHP2q1eta
        7K97sQZu3e68PorrygRJUm8fB48LBFuvu7pSQAbb0tS0moEzyFk3JPFTt7phWehNU/AYOAsZ
        JwYIDARyz/2jBm6VP67vLySbr/5qQ/WamsbAaWmKCb5JWlPwGDgtwdMPBMIEcs99DFw4R7FH
        +FcKY1sp93hNTWPgtHSCgcPAaWmNfiBQCAHNYidBcjgeru8D3qhtPJKMlHfMYQ0dGCoG7gC0
        Q6cwwTFwh4TDSRCol4BmsZNQPBxP49d3dz9dgw+ezqR1WEMSgS6OwcAdgMYp1xLQFLwv8tz9
        X0uT1iBQDgFrc89aPOVkkkhHApoawsChu+wENAWPgcuebgKAwEQg99xfpsJaPEilPAKaGsLA
        laeP6iLWFDwGrjr5MKCCCeSe+xi4gsVjNHRNTWPgjIqgpbA0BY+Ba0lZjNU6gdxzHwNnXSHl
        xaepaQxcefqoLmJNwWPgqpMPAyqYQO65b8rATV8eMvr9UOvxGZkHmpo2aOD2vrxwJENXt3ck
        Bs7ZI6ApeAwcWoSAHQK55355Bi5jPcPAiSaOpqYxcKKUcFBKApqCx8ClzCRtQyCOQO65b8rA
        idCFDdzs84fT5xJl30QVhcBBuwQ0NY2BQ4zZCWgKHgOXPd0EAIGJQO65X62BW3yHdDR1s29n
        o8MkBDQ1rWjglh9Pn/9GsPdh3Q7ISnjTcu74EeDj7cV9JHh/HEkUUXmjmoLHwFUuJoZXFIHc
        c/+IgZPWi/643kjNa0awlnk+Ah9TH3uztmpj/BC9s7+u/2rCUDfnq3aLPXjLWhv6SP3zawxd
        bvs/3jf7jvH463dRIl4Eq6lpJQP3FPAskY+/8wohvET8kNvq3EGAvmXicHvSCdn3uxLk1jhK
        lqBu7JqCx8Dp5pbeILBHIPfcT27gehPj1KXAp6b85suNMlzPttoYauTSwC1N1tNYbZi0UHyj
        EZyX+vf73MOt6+hQg+u4zaupaR0DF/WZkbBAvReEZx/rJeJwe2IDFzUOLtxSApqCx8BJs8Jx
        EEhPIPfc1zBwPvOydSszZJDGRYS9W6G7K3CuMXuayWVbex+j341PWB/97T+NYwXf4dLUtI6B
        c5aQw/kJGy7/ZWXrvHB7YgMXNY70F79aetAUPAauFtUwjhoI5J776Q3c8pUg+/UolYHz3qE6
        8OH5vfj2jN+L87ZRC4+9DMVralrJwHXgpfe8w4arb61fch3vn7/+N+kKXK8f6TjKEJuFKDUF
        j4GzkHFigMBAIPfcr9bALWuj75boxQZOZsCWe8gXNTy0v66AiaOpaUUD55CfNkWe2bP25r2v
        nt7AScdRgNKMhKgpeAyckaQTBgQwcCsNhE1QeIEj3Maz24sN3NkVuFomhGY9y2PghiW0++3x
        W8L6lmroXvjWJsstYYfaG1fzFkvdG/sDViIT3vevRZwpxqEpeAxcigzSJgSOEcg99y9bgfPU
        C/nWnFcUYfMVrmfhNtIYuMejrP2KamiblDi+Y5LKfpampnUM3COx/o2S/qdOtp8oHXKz+nfn
        MWff5s5QeyvhOY9Bz9qLHEd2JRUSgKbgMXCFiIIwmyCQe+4fMXDSepHGwHnq32IQYoMkNFxu
        8/ttj9uLFnX90c/M1I31OuT0Cp0BmprWMXD9gttyz9re996W+8yW74Fb/nvX1t7Scqi9ZXxd
        e8M5fuPp3rc3+t26gsSvKXgMXEHCINTqCeSe+4cM3Kqe+euF1MDtvePN/7Tpfj272sDFxrf6
        EoTXqPn3wtXg6TQ1rWbgqr8SMcDDBDQFj4E7nCZOhMDlBHLP/aMG7nIQNFgNAU1NY+CqkU25
        A9EUPAauXJ0QeX0Ecs99DFx9mso9Ik1NY+ByZ5v+s79KQHPCkW4IQOBFwNrcsxYPWimPgKaG
        MHDl6aO6iDUFzwpcdfJhQAUTyD33WYErWDxGQ9fUNAbOqAhaCktT8Bi4lpTFWK0TyD33MXDW
        FVJefJqaxsCVp4/qItYUPAauOvkwoIIJ5J77GLiCxWM0dE1NY+CMiqClsDQFj4FrSVmM1TqB
        3HMfA2ddIeXFp6lpDFx5+qguYk3BY+Cqkw8DKphA7rmPgStYPEZD19Q0Bs6oCFoKS1PwGLiW
        lMVYrRPIPfcxcNYVUl58mprGwJWnj+oi1hQ8Bq46+TCgggnknvsYuILFYzR0TU1j4IyKoKWw
        NAWPgWtJWYzVOoHccx8DZ10h5cWnqWkMXHn6qC5iTcFj4KqTDwMqmEDuuY+BK1g8RkPX1DQG
        zqgIWgpLU/AYuJaUxVitE8g99zFw1hVSXnyamsbAlaeP6iLWFDwGrjr5MKCCCeSe+xi4gsVj
        NHRNTWPgjIqgpbA0BY+Ba0lZjNU6gdxzHwNnXSHlxaepaQxcefqoLmJNwWPgqpMPAyqYQO65
        j4ErWDxGQ9fUNAbOqAhaCktT8Bi4lpTFWK0TyD33MXDWFVJefJqaxsCVp4/qItYUPAauOvkw
        oIIJ5J77GLiCxWM0dE1NY+CMiqClsDQFj4FrSVmM1TqB3HMfA2ddIeXFp6lpXQP35eN+e3u7
        v7293z/38lLLceVpL0vEmoLHwGVJMZ1CwEsg99w/ZeBqqVPScaBhEQFNTasauC8ft4d56wzc
        2/19x8HVcpwo2xzU6yHnT+7+c46dviGQk4C1uRcTTy11SjqOnDopqe8YDZ0d1+nKGRWs1OnX
        ctzZ7DRyfpSGEjDJ3X+CIdEkBIogYG3uRcVTS52SjqMIReUPMkpDJ8PVNXAng+X0OgloCp5b
        qHVqiFGVSSD33D91C7VM5ESdmICmpjFwiZNJ82ECmoLHwIXzwREQ0CKQe+5j4LQy3U4/mprG
        wLWjK7Mj1RQ8Bs6sDAisQQK55z4GrkHRJR6ypqYxcImTSfNhApqCx8CF88ERENAikHvuY+C0
        Mt1OP5qaxsC1oyuzI9UUPAbOrAwIrEECuec+Bq5B0SUesqamMXCJk0nzYQKagsfAhfPBERDQ
        IpB77mPgtDLdTj+amsbAtaMrsyPVFDwGzqwMCKxBArnnPgauQdElHrKmpjFwiZNJ82ECmoLH
        wIXzwREQ0CKQe+5j4LQy3U4/mprGwLWjK7Mj1RQ8Bs6sDAisQQK55z4GrkHRJR6ypqYxcImT
        SfNhApqCx8CF88ERENAikHvuY+C0Mt1OP5qaxsC1oyuzI9UUPAbOrAwIrEECuec+Bq5B0SUe
        sqamMXCJk0nzYQKagsfAhfPBERDQIpB77mPgtDLdTj+amsbAtaMrsyPVFDwGzqwMCKxBArnn
        PgauQdElHrKmpjFwiZNJ82ECmoLHwIXzwREQ0CKQe+5j4LQy3U4/mprGwLWjK7Mj1RQ8Bs6s
        DAisQQK55z4GrkHRJR6ypqYxcImTSfNhApqCx8CF88ERENAikHvuY+C0Mt1OP5qaxsC1oyuz
        I9UUPAbOrAwIrEECuec+Bq5B0SUesqamMXCJk0nzYQKagsfAhfPBERDQIpB77mPgtDLdTj+a
        msbAtaMrsyPVFDwGzqwMCKxBArnnPgauQdElHrKmpk8buK+++ureBcwfGBzVQKehnD+aEy7n
        OOkbAtYIWJt71DPq2NE6Np6nWc9OGzhrFwTigUAsAWtFJDZ+jodAqQSYe6VmjrgtEMDAWcgC
        MWQlQBHJip/OGybA3Gs4+Qz9NAEM3GmENFA6AYpI6Rkk/lIJMPdKzRxxWyCAgbOQBWLISoAi
        khU/nTdMgLnXcPIZ+mkCGLjTCGmgdAIUkdIzSPylEmDulZo54rZAAANnIQvEkJUARSQrfjpv
        mABzr+HkM/TTBDBwpxHSQOkEKCKlZ5D4SyXA3Cs1c8RtgQAGzkIWiCErAYpIVvx03jAB5l7D
        yWfopwlg4E4jpIHSCVBESs8g8ZdKgLlXauaI2wIBDJyFLBBDVgIUkaz46bxhAsy9hpPP0E8T
        wMCdRkgDpROgiJSeQeIvlQBzr9TMEbcFAhg4C1kghqwEKCJZ8dN5wwSYew0nn6GfJoCBO42Q
        BkonQBEpPYPEXyoB5l6pmSNuCwQwcBayQAxZCVBEsuKn84YJMPcaTj5DP00AA3caIQ2UToAi
        UnoGib9UAsy9UjNH3BYIYOAsZIEYshKgiGTFT+cNE2DuNZx8hn6aAAbuNEIaKJ0ARaT0DBJ/
        qQSYe6VmjrgtEMDAWcgCMWQlQBHJip/OGybA3Gs4+Qz9NAEM3GmENFA6AWtF5Ouvv753MfEH
        Bik10Oks94+1uZebB/1DIIYABi6GFsdWScBaEbEWT5VJZ1D9Lwi5fyzEkJsB/UPgKIH8M/ho
        5JwHgYsIWCsi1uK5CDPNGCNgQWcWYjCWFsKBgJgABk6MigNrJWCtiFiLp9a8tz4uCzqzEEPr
        OmD85RLAwJWbOyK/iIC1ImItnosw04wxAhZ0ZiEGY2khHAiICWDgxKg4sFYC1oqItXhqzXvr
        47KgMwsxtK4Dxl8uAQxcubkj8osIWCsi1uK5CDPNGCNgQWcWYjCWFsKBgJgABk6MigNrJWCt
        iFiLp9a8tz4uCzqzEEPrOmD85RLAwJWbOyK/iIC1ImItnosw04wxAhZ0ZiEGY2khHAiICWDg
        xKg4sFYC1oqItXhqzXvr47KgMwsxtK4Dxl8uAQxcubkj8osIWCsiVuL58nEbvgbx/nkR6Xqb
        mVg5X9Cwjs2CzizEUK8qGVntBDBwtWeY8QUJWCsiVuIp2cB9vnef4brdP74E0y874MvH/fY0
        Zz5jhoGTYVweZUXrx6LnLAjkJYCBy8uf3g0QsFZExPE4pqJfKXv8uXLVJ7mB+3zf+N7r+/3c
        mt/n/b3noWfgXjL+cv+4XZ+LFNNErLMUnT/btBBDwuHRNASSEsDAJcVL4yUQsFZEJPH4VnxG
        E3e7aNkpn4E7a4ASGDixkDFwYlSPAyVaj2mPYyHQEgEMXEvZZqxeAtaKSDAeZ+XNNWsvU/da
        eRr/bjhuNDYbq1OeFT3/Hji3HX9bon6nFTh3xc1te7kSt9/vnqldjWNj9W+5ghl/a1Rg4Fac
        L1wpjJjjQZ1FtHX0UAsxHI2d8yCQmwAGLncG6D87AWtFJBTPZCpuH/f5Fq+XwRmN3ctIfU63
        9saVurc3xyBt3s5cPMSwZfIWt29F/XoN3EMOvv1mgn6vMHDL29CXG7hkt43jp1FIZ/Etxp9h
        IYb4qDkDAjYIYOBs5IEoMhKwVkRC8Qwb9P1Phy7/bTJS7++PTfhPwzaZoXHlx1nZcpagfLdQ
        x/ZnK1WjKXEMpajfLQPnrBSO/Uj7HWR07Bbq/i1jwcpa3/f+cf7cdeec3fcXP4FCOotvMf4M
        CzHER80ZELBBAANnIw9EkZGAtSISiueIgdt9wGFl6IZkrA3N8hbm00hOr854mRB35WrzwYpN
        A/cyQetbv8s+u/+/das1cGtyazXMG/A1Bm6+opfn1uk41UI605iSFmLQGCd9QCAFAQxcCqq0
        WRQBa0UkFI/EwC1voa5NjpOiDSO1MnA7tzGH27I+A7ezsiRdgYvoV7oCNzF03ts23VpOaOD6
        9cFxBdXte3U7PP0UCuksfQQ8xKDBmD7qJYCBqze3jExIwEIhc0MNxSPZAzd6kO1jDxi4iFuT
        Z/p97YFb3uKVrliFbqGu9wr6VxzdrFyzAjeX5KvNLudXPT0slL2JJ0BDWpeOheMg0CIBDFyL
        WWfMMwLWikgwnuBTqJ6VsN0VnpehmRaf3NuL0186hiOwYnTYwLmrbVMf8n7nK3Bb78XzjNft
        N+EKXLf6Nm/eGduVL/ETzPGgzgRtnD3EQgxnx8D5EMhFAAOXizz9miFgrYhI4tm7Bej6AJGR
        emRCfEtx52lV7ytN9oze3pOvy31twn4HUc1Xtta3Rjf+fbyl6TOsvlutPoO5e9w+Z2X/xgqc
        mSsQgUDgGAEM3DFunFURAYlh0hyuNJ71Ky7WtxilBm5lejpzMq5KrV+ONn1W6vVKkvktQFG/
        G6Zs81bixl44//GeBy7mj84+v9bwfCjCO96A0Ttg4Dodrc2y9NbwtSqU6uzaXuetWYgh5fho
        GwIpCWDgUtKl7SIIWCsi1uIpIokEGU3Ags4sxBANjhMgYIQABs5IIggjHwFrRcRaPPkyQ88p
        CVjQmYUYUjKmbQikJICBS0mXtosgYK2IWIuniCQSZDQBCzqzEEM0OE6AgBECGDgjiSCMfASs
        FRFr8eTLDD2nJGBBZxZiSMmYtiGQkgAGLiVd2i6CgLUiYi2eIpJIkNEELOjMQgzR4DgBAkYI
        YOCMJIIw8hGwVkSsxZMvM/SckoAFnVmIISVj2oZASgIYuJR0absIAtaKiLV4ikgiQUYTsKAz
        CzFEg+MECBghgIEzkgjCyEfAWhGxFk++zNBzSgIWdGYhhpSMaRsCKQlg4FLSpe0iCFgrItbi
        KSKJBBlNwILOLMQQDY4TIGCEAAbOSCIIIx8Ba0XEWjz5MkPPKQlY0JmFGFIypm0IpCSAgUtJ
        l7aLIGCtiFiLp4gkEmQ0AQs6sxBDNDhOgIARAhg4I4kgjHwErBURa/Hkyww9pyRgQWcWYkjJ
        mLYhkJIABi4lXdougoC1ImItniKSSJDRBCzozEIM0eA4AQJGCGDgjCSCMPIRsFZErMWTLzP0
        nJKABZ1ZiCElY9qGQEoCGLiUdGm7CAKWisjPP/987+L57rvv+AODpBqwoHsLMRRxkSJICHgI
        YOCQRfMELBWR77//vjdwv/vd7/gDg6QasKB7CzE0fwEEQLEEMHDFpo7AryJgrYhYi+cqzrRj
        i4AFnVmIwVZWiAYCcgIYODkrjqyUgLUiYi2eStPe/LAs6MxCDM0LAQDFEsDAFZs6Ar+KgLUi
        Yi2eqzjTji0CFnRmIQZbWSEaCMgJYODkrDiyUgLWioi1eCpNe/PDsqAzCzE0LwQAFEsAA1ds
        6gj8KgJWisiPP/54/+GHH/qHGPiBQGoCFnRmIYbUnGkfAqkIUClSkaXdYgjkLiL/+c9/7n/6
        05/uv/zlL+/ffvstBq4Y5ZQdaG7dd/QsxFB2Fom+ZQIYuJazz9h7AjmKSLfa9ve///3+q1/9
        6v773//+/q9//WvKRo54kEJ7BCzozEIM7WWeEddCAANXSyYZx2ECmkXEXW3761//2t8yXf5o
        xnMYGicWT8CCzizEUHwiGUCzBDBwzaaegY8EUheRvdU2XxZSxyPN/JePW786+fb+KT2F4woi
        YEFnFmIoKGWECoEZAQwcgmieQKoiIlltw8A1L79sAFLpPmZAFmKIiZdjIWCJAAbOUjaIJQuB
        K4tI7Gpb6wbu8/2xwtet8vn+jCt/n+8bx7zfWRs8PmWu1P3RKCzEcDR2zoNAbgIYuNwZoP/s
        BK4oIt3H58cnSbf2tkkHekU80r72jtO4hXrOwA3Gjzu8x7JtQWcWYjhGj7MgkJ8ABi5/Dogg
        M4GvvvpqexVoa3Uo0d93H7EXF7UvH/fbIo6lmRlN2O3jy4Py5/19Ov527//K/fG0598D57bT
        mah1W1H9djFMfXtW1aYVOPff3BhYiTsyhcQ6O9K48BwLMQhD5TAImCOAgTOXEgIqkcAVt07H
        cYuK2uZtxbf7YNaGn5eR+rx/3Ja3Kh3js9Pe7CGGLZO3WAkT9/sK9GlGpQbONX2swh2ZMyKd
        HWk44hwLMUSEy6EQMEUAA2cqHQRTA4GjDy/IDdxr9cln1t7eXiZoMlLv7w+D9Pz7yYSNK2fO
        apazhOe7hTre8pyt9I3m7/ZxH62jrF8n29ErcN25r7i5jRo/cyyYJwsxxJPjDAjYIICBs5EH
        oqiQgLsq99vf/rb/ysLPP/8cHGmwqHlvKfoNzWTC9vaKrQzdfPXutQK3vHW6vaIn6tclccjA
        fZlWFV0jGwTMAT2BoM4UOFmIQWGYdAGBJAQwcEmw0igE5gS+//77+5///Of+c1nffPPN/X//
        +98momBR86x4DY2tV6ReRmpnn9iGIVytwO3cPh2eIl2v/Ll/t6uJQwaOFbgz8yyoszONC8+1
        EIMwVA6DgDkCGDhzKSGgmgn89NNP93/+85/3X//61/etVblgUQuuwL0eKphMmHN7c8VXauAm
        g+h5AGLRqKhf95wjBm5j5bBm/Vw5tqDOruxsoy0LMSgMky4gkIQABi4JVhqFQJjA1qpcuKj5
        98C9XsnhWQnbM3C+vWTuQw3TBrPXLcu33fZeD0+EjpsoxRo4dzUwEEs4E20eEdZZei4WYkg/
        SnqAQBoCGLg0XGkVAmIC7qrc3/72N9HeJHeP2fIluO6GfulKmOh9bN2IIp9+DRk4Ub97T8g6
        t23FwDmwJ2DBPFmIATlAoFQCGLhSM0fc1RIQF7WVsdl+H1vISD3WzOavGelWtcZVrvXL5Vbv
        n+ti9j4RG1gdO2PgeHDh3BQQ6+xcN7tnW4gh4fBoGgJJCWDgkuKlcQjEE6CoxTPjjHgCFnRm
        IYZ4cpwBARsEMHA28kAUEJgIUNQQgwYBCzqzEIMGa/qAQAoCGLgUVGkTAicIUNROwONUMQEL
        OrMQgxgYB0LAGAEMnLGEEA4EKGpoQIOABZ1ZiEGDNX1AIAUBDFwKqrQJgRMEKGon4HGqmIAF
        nVmIQQyMAyFgjAAGzlhCCCcjga2nLpVDoqgpA2+0Ows6sxBDo+ln2BUQwMBVkESGcJ7A7HUW
        mb+MTlE7n09aCBPodPbVV1/1n3jrXiqd4wet56BOn7UQwMDVkknGcZjA8LLb7h1qz3ehYeAO
        s+TEcgh05unnn3++f/vtt/1n3brPu3WfeeteLK31g4HTIk0/NRLAwNWYVcZ0kMB5A9ev5HUG
        cPaS3eenrWYfg9/+nmhpRW310fuD9DlNl8BSZ//73//u33zzzf2Xv/zl4VW5zgz+7ne/u//f
        //1fbwj/9Kc/3X/88cfNgZWmdd0M0RsE9glg4FAIBCYCFxm4x8rG68sH7hcOxm+UPv9u4ysF
        pRU1TQM33OreNr+IWU5gS2dHVuW6c/74xz/2xu+7777rV/Y6Q/ivf/2rN3L/+c9/vIGVpnU5
        XY6EQHoCGLj0jOmhGAIXGbiFMRsMzusD8z2OfoXOb0RKK2p6Bu7z/t6Z4x0Dd+bTXKscFaPb
        Y4FKdCZdleu+4dv98f10t2Q7E+dbiZPEcGx0nAWB+glg4OrPMSMUE8DAiVE5B9Zj4Dpz+HbP
        vAXySAoOnRNjnvZW5Tpj9qtf/apfddv66W6tdqtzy5+YGA4NkpMgUDEBDFzFyWVosQRKMXDj
        bVnnwYt+Zcq9dTuMfTRXw4ffxxWsjVWs2R69HTPjOa7ve3I+r9vGrhnaM3rTv3nGsfq38Zjx
        f32Oa4pxsfLZQZn2J7r/5rLxnBMrpQKOP2qelqty//jHP/rbp3s/3TndKhwGrgBhEGIxBDBw
        xaSKQNMTKM3APU3bjqF5GbjP+8dtebxjVGYPXcyPG8zf82fnuGMGzt0j6O9Xx8D1bvd+e7Js
        YRWuN90X/fnDH/6wOz2726i/+MUvVv11rzHhBwIQOEYAA3eMG2dVSWDbwPk2z2/+XfI9cHPT
        M5kNz8rSZODe3x/mZPk07LgH77X65Jq1l3EajZ6zSuU4nPXKWsQKnGMIZ6bpYabeXePY6y28
        B26SZfQKnNt+G7dRj67AdaS6hxK6J0y7J1b/8pe/3H/zm9/sXhG643//+99XedVgUBDIRQAD
        l4s8/ZohsL3C83rIwKqBm68UvQzW+Pfu2DZXlby3FD2GZjJF84cvzhi46aED0ZJXagP3Mp6z
        VUczSr02kFgD1+11+/vf/97vd+vMWPeE6fjTvTqke/p066c7futJ1GtHRWsQaIcABq6dXDPS
        QgiEC6t/hcvd47Y2cDv7ukYDt3qtycIQbhi94wYu1jClNnBrA1yIZA6FGdbZ0Gxn1Lo9bt1q
        21//+tf7Dz/8sOqv+zvf60K6W6fdwwvd++X4gQAEriWAgbuWJ61B4DSBcGHdMHCeFbLJXG28
        c64PNrgC91xxS2jgXvvn9vAlNnAbK4ynE2q0gT2ddYasM2udaetulf773/8OjqJboetW2roV
        um5FrvvT7XHrnkDlBwIQuJ4ABu56prQIgVMEjhk43wuDX0+hvl4s7AvNvwfu9U619R649b47
        /1Oo463I2W1q3/655es7HmZxfRszYoUsdg+c+2Ttntk9lVlbJ/t01q22jSasu1269xWFrdF0
        5q+7nbp3S9UWCaKBQJkEMHBl5o2oKyYQY+B8TxF6X90RMCV7T3q67YlelPvIze6To7P9bu7r
        O3aefu3zvfHEqtOeKL69J2mXL1xuQGfL1Tb2qlWcdIZWFQEMXFXpZDA1EDhu4Nb73ES3UEdo
        K2Pj+1LEwkR1xnBcvZo/Rjp/bcnmcUPnK+O1aTg9hu8iA9fCgwvu/Oh01t3m7G55Hl1tq2G+
        MQYIlEoAA1dq5oi7WgIxBk708Ga1pBjYGQKdzr7//vszTXAuBCCQkQAGLiN8uoaAjwAGDl1o
        EAjrTCMK+oAABI4SwMAdJcd5EEhEIFxYt14jkiggmq2SQFhnVQ6bQUGgGgIYuGpSyUBqIRAu
        rBi4WnKdcxxhneWMjr4hAIEQAQxciBD/DgFlAhRWZeCNdofOGk08w66GAAaumlQykFoIUFhr
        yaTtcaAz2/khOgiECGDgQoT4dwgoE6CwKgNvtLuQzlbv8uOR50aVwrCtEsDAWc0McTVLIFRY
        mwXDwC8lsKezwby57wF8vn8PE3dpDmgMAmcIYODO0ONcCCQggIFLAJUmVwS2dTaYtdWLjfsX
        Pfte7gxcCEAgBwEMXA7q9AmBHQJNGri9b5eiliQENnX2zMVqsW3r7wPR9V/Z6Bqbfenj+dUQ
        9xu0mMMkeabReglg4OrNLSMrlEA9Bm5jJceXF5GBi2iv0Nxrhr2ps82VtmP8p8+kTZ9Hcz/H
        Nn7+7fl3gW/2avKhLwhYJ4CBs54h4muOQJMGTpTlYwZC1HSDB6kauIUxG/bYLb7dyy3aBlXI
        kM8QwMCdoce5EEhAAAO3BRUDd6XcMHBX0qQtCOgTwMDpM6dHCOwSkBu455OBjw3n3TnjH3fv
        knel475hhGb7kbr21hvW+/b61ZR53+6G99XrJxbxzTbHL/v03EITt/fcY7XafP+gPdzGW6z4
        NK5D1T1wrMA1rjaGn4IABi4FVdqEwAkCIgP3ND4+M3TMwD0M2aLIDqZnbuJeZsr5+6dxWr9h
        Im7FrO9vdw9UqL2tfVS8AsMnx9inUNevFpGJ3JdXbqHK2HEUBPYIYODQBwSMEZAYOK/Z8Twl
        GLUCt+TgMYmjgZubtS1jFTJc8w7PG7j73Wsy2FvlVfieztbmfW2CfQZ/8+9YgTN2lSGcGghg
        4GrIImOoikDYwO3fAj22AudDuO4nzhDqG7iHg7vfFu8wCxvDquQjHkxIZ9PTo89b4Mtb0xg4
        MWoOhEASAhi4JFhpFALHCYQK62NHl/9FqydX4Lb2mq33ty33ktlZgeuozw3bEBsfEFjrMayz
        4xrmTAhAID0BDFx6xvQAgSgC4cJ6vYGT3ho1vwI3OLjX3r3+v3l4wSfAsM6iZMvBEICAMgEM
        nDJwuoNAiEC4sD436y+WlcZbXsFbqKunNfc3/x9fgfPHuTX+8K1OaXvDcV3c01cAQtAb/Pew
        zhqEwpAhUBABDFxBySLUNghICutys/7weo9bv/9r5uuWT4g6nzNyjdlqP5Pzeo/jBm58fYfs
        +5lhAydvz/u0bBvyEY9SojNxYxwIAQioE8DAqSOnQwjsE5AW1tkm8861bXyrcr63rbud+Fqh
        ekXift5ofGfa2YcYutaX7c4/kr73jjff+9xC7U3jGQ0on2baFJtUZ8xXCEDAJgEMnM28EFXD
        BA4X1oMfG68Ste89eVUO9PigDuvseJecCQEIXEgAA3chTJqCwBUEDhdWDJyzAOf51uYVyamo
        jcM6q4gBQ4FAyQQwcCVnj9irJHC4sGLgBj1sfhmiSrkcHtRhnR3ukRMhAIErCWDgrqRJWxC4
        gMDhwtq4gXP30/Het7AQD+ss3DRHQAACCgQwcAqQ6QICMQQorDG0OPYoAXR2lBznQcAGAQyc
        jTwQBQQmAhRWxKBBAJ1pUKYPCKQjgIFLx5aWIXCIAIX1EDZOiiSAziKBcTgEjBHAwBlLCOFA
        gMKKBjQIoDMNyvQBgXQEMHDp2NIyBA4REBVW50sJ3fFvoRfWTsfX/V1Q/7daD6Wh+pNEOque
        AgOEQLkEMHDl5o7IKyUQW1gln6Aav9JQ+4fdMXDySRGrM3nLHAkBCGgQwMBpUKYPCEQQiC2s
        IgMX0f/5Q4dPcHXjWL7OI3WsGDh59mJ1Jm+ZIyEAAQ0CGDgNyvQBgQgCsYU1tSmKCP156NPA
        3W732+LWbupYMXDybMXqTN4yR0IAAhoEMHAalOkDAhEEYgvrrikS7pXrjU9vtl6rZ10csg/K
        3+4fX9wBPtt4/7h/PEyc+2/LWP2Gazh/6rsfQ9fOGNvQZt/WYv/fq70rxvEYU/9Vh0V//epi
        +XsJY3UWIWEOhQAEFAhg4BQg0wUEYgjEFlbpqtbeca+vGDiGy/tJqtGcfU5DGs51jdrrmP7f
        nPuoZwzcrTeDXx6m8GHuHv/dt+sYrC6gwYg+Vv7c27eHxzEauKdRnMYxxBB8cCQm6RmOjdVZ
        hhDpEgIQ2CGAgUMeEDBGILawXmng5nvWFitho0FarT49Dc10smvyuv9+rVYdN3APw9S3/+xr
        bHNhzkYjOh/H2nD5V/6W43gZuOVKZA23amN1ZmyaEA4EmieAgWteAgCwRiC2sF5n4Ja3BZcG
        zmNwnvDmMcxX6TqzMxqgMwZuMGULM+Y1cOvbm8Pt1vHvpeN4Gbgav60aqzNr84R4INA6AQxc
        6wpg/OYIxBZWPQM331fW7z9z/0wPLCxus/Z72AbzlMvAzVfMpOPAwJmbHAQEAQhMBDBwiAEC
        xgjYNXDbK1dzhOt9cp1xG7aszfeOyR9iGF9JcmIFbjKY0nFg4IxNDcKBAAQcAhg45AABYwTs
        Gri1AfOjWxu4/mGDh4MTGbjnbdH5U6hnDJzfUIoeQvA+AGFMMAfDidXZwW44DQIQSEQAA5cI
        LM1C4CiB2MKqdwv1MaLxtSS7m8I8Bq7fu9a9F27x9ObSID3//+wVJs8+j+6Bm+9/e2ZFNA5W
        4I5qmPMgAIH0BDBw6RnTAwSiCEgM3Ou1H4t9aIt3t8UdF3qIYRyGfw/Zy9P5DNzzFR+e77bO
        Y+xieL4qZHyBXISBe30yzOGy+Z3Y0DgwcFHC5WAIQECVAAZOFTedQSBMQGLgwq1wBAT2CaAz
        FAKBsglg4MrOH9FXSIDCWmFSDQ4JnRlMCiFBIIIABi4CFodCQIMAhVWDMn2gMzQAgbIJYODK
        zh/RV0iAwlphUg0OCZ0ZTAohQSCCAAYuAhaHQkCDAIVVgzJ9oDM0AIGyCWDgys4f0VdIgMJa
        YVINDgmdGUwKIUEgggAGLgIWh0JAgwCFVYMyfaAzNACBsglg4MrOH9FXSIDCWmFSDQ4JnRlM
        CiFBIIIABi4CFodCQIMAhVWDMn2gMzQAgbIJYODKzh/RV0iAwlphUg0OCZ0ZTAohQSCCAAYu
        AhaHQkCDAIVVgzJ9oDM0AIGyCWDgys4f0VdIgMJaYVINDgmdGUwKIUEgggAGLgIWh0JAgwCF
        VYMyfaAzNACBsglg4MrOH9FXSIDCWmFSDQ4JnRlMCiFBIIIABi4CFodCQIMAhVWDMn2gMzQA
        gbIJYODKzh/RV0iAwlphUg0OCZ0ZTAohQSCCAAYuAhaHQkCDAIVVgzJ9oDM0AIGyCWDgys4f
        0VdIgMJaYVINDgmdGUwKIUEgggAGLgIWh0JAgwCFVYMyfaAzNACBsglg4MrOH9FXSCCqsH75
        uN/e3u5vb+/3zz0WtRxXYb5zDSlKZ7mCpF8IQGCTAAYOcUDAGIGYwvrl4/Ywb52Be7u/7zi4
        Wo4zlqqiw4nRWdEDJXgIVEoAA1dpYhlWuQSiCmstK2vScZSbVnORR+nMXPQEBAEIYODQAASM
        EaCwGktIpeGgs0oTy7CaIYCBaybVDLQUAhTWUjJVdpzorOz8ET0EMHBoAALGCFBYjSWk0nDQ
        WaWJZVjNEMDANZNqBloKAQprKZkqO050Vnb+iB4CGDg0AAFjBCisxhJSaTjorNLEMqxmCGDg
        mkk1Ay2FAIW1lEyVHSc6Kzt/RA8BDBwagIAxAhRWYwmpNBx0VmliGVYzBDBwzaSagZZCgMJa
        SqbKjhOdlZ0/oocABg4NQMAYAQqrsYRUGg46qzSxDKsZAhi4ZlLNQEshQGEtJVNlx4nOys4f
        0UMAA4cGIGCMAIXVWEIqDQedVZpYhtUMAQxcM6lmoKUQoLCWkqmy40RnZeeP6CGAgUMDEDBG
        gMJqLCGVhoPOKk0sw2qGAAaumVQz0FIIUFhLyVTZcaKzsvNH9BDAwKEBCBgjQGE1lpBKw0Fn
        lSaWYTVDAAPXTKoZaCkEKKylZKrsONFZ2fkjeghg4NAABIwRoLAaS0il4aCzShPLsJohgIFr
        JtUMtBQCFNZSMlV2nOis7PwRPQQwcGgAAsYIUFiNJaTScNBZpYllWM0QwMA1k2oGWgoBCmsp
        mSo7TnRWdv6IHgIYODQAAWMEKKzGElJpOOis0sQyrGYIYOCaSTUDLYXAV199de+KK39gkFID
        nc74gQAEyiWAgSs3d0QOAQhAAAIQgECjBDBwjSaeYUMAAhCAAAQgUC4BDFy5uSNyCEAAAhCA
        AAQaJYCBazTxDBsCEIAABCAAgXIJYODKzR2RQwACEIAABCDQKAEMXKOJZ9gQgAAEIAABCJRL
        AANXbu6IHAIQgAAEIACBRglg4BpNPMOGAAQgAAEIQKBcAhi4cnNH5BCAAAQgAAEINEoAA9do
        4hk2BCAAAQhAAALlEsDAlZs7IocABCAAAQhAoFECGLhGE8+wIQABCEAAAhAolwAGrtzcETkE
        IAABCEAAAo0SwMA1mniGDQEIQAACEIBAuQQwcOXmjsghAAEIQAACEGiUAAau0cQzbAhAAAIQ
        gAAEyiWAgSs3d0QOAQhAAAIQgECjBDBwjSaeYUMAAhCAAAQgUC4BDFy5uSNyCEAAAhCAAAQa
        JfD/QqFAVN+hNo8AAAAASUVORK5CYII=
       </office:binary-data>
       <text:p/>
      </draw:image>
     </draw:frame>
     <draw:frame draw:z-index="1" draw:name="Image 3" draw:style-name="gr1" draw:text-style-name="P1" svg:width="99.48mm" svg:height="46.34mm" svg:x="67.73mm" svg:y="680.12mm">
      <draw:image xlink:href="">
       <office:binary-data>iVBORw0KGgoAAAANSUhEUgAAAdYAAADbCAYAAADQ87AwAAAAAXNSR0IArs4c6QAAAARnQU1B
        AACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAACPBSURBVHhe7Z0tky61FoXnF1A4LBJ5
        JDUg+AlIzC1QAxIHDolkHBKJxB2LRCIRRyCRSOR73/580+mks9OdnU4nz1RNXe6ZfOy91kqv
        TjrdebrxAwIgAAIgAAIgkAyBp2Qt0RAIgAAIgAAIgMANY0UEIAACIAACIJAQAYw1IZg0BQIg
        AAIgAAIYKxoAARAAARAAgYQIYKwJwaQpEAABEAABEMBY0QAIgAAIgAAIJEQAY00IJk2BAAiA
        AAiAAMaKBkAABEAABEAgIQIYa0IwaQoEQAAEQAAEMFY0AAIgAAIgAAIJEcBYE4JJUyAAAiAA
        AiCAsaIBEACBKATevHlze3p64hcMLquBTsOaPyrGysDjonP0wqstfM1BVXvbHbf8gMCVEdDW
        sMoI0Q76yoQSuwwBNCTD6YxScHMG6vSZEgFtDWOsKdmirWQIaAs/WaANNgQ3DZJeWcraGsZY
        KxNMLeloC78WnM7IA27OQJ0+UyKgrWGMNSVbtJUMAW3hJwu0wYbgpkHSK0tZW8MYa2WCqSUd
        beHXgtMZecDNGajTZ0oEtDWMsaZki7aSIaAt/GSBNtgQ3DRIemUpa2sYY61MMLWkoy38WnA6
        Iw+4OQN1+kyJgLaGMdaUbNFWMgS0hZ8s0AYbuho3716fhw8ZvLxtkC2dlGdMjY9kXAlebQ1j
        rHfdMfB0Bt+RVrWFfyS21utejZuc4/vtS/dxmOfb67u8Kkne77vX2/Nomi7DxFi3+cVYMxtr
        8gGQd/xm6+1qF+9swBTQUZibd7fXZ/fXx86Y1eQz1re3l96MPMb69sXzCcCX27G5dKDfPZoJ
        GOujyQfXZ3C7J7WuTljDe1se6p1krAy83He0x2SSv7a28PNnVE+PYW784/uMJdnyjXW4Cdlv
        TArGKpYrxuqCqjhjbXrgicVcf8Hwxbt+DErNMMyN+2L7WD58zNCmf3vu7zQng/DM+oxZVH+d
        8JmRo9zyuhKIz+Fwq6XP59fbtNrrWhad4lv0O89YzRmqmbM9czX/tsZE3G8nJM9s2U41folX
        YKwrPvIvldtjKazhY6PvdGM1iW1+4E1cFijEYzKLr60t/PiIqDEhEObGc7Gddf24sD6M9a1j
        +dgwGu8y6tNtMOXxZ6PcY/NSjLH6Z99Tv2KDcxrrPW7Xsqvv5sC4mRD3u2Gs9s1JcmNVW/4+
        Nh7DGj7Y/rHq7trhoBl4zjvazQFw9DmMBtN6bYY1pNc3LW8jEObGPb6H/QXdr2PG+vJy3ywz
        /vvKgB8zN9NE1zfixgzPuGNfLwVHGKthDIvZ3T3Gl9XzHOkzVv/MdOpjwmrR5xSLMVsemNq3
        FLy9RC6YifZ9b5ebOV+Cd7+JOvd6FtbwsatAUTPW5gdeN0Smi09hQjwms/ja2sKPj4gae2as
        ixtIx/KtOUPyPmP0zfSMpeO+rmNG3F/6V6/byI3VPR59WthrrI941kvirk1gPmMOLLH6Zo9O
        4NMY63IGfP4SsFzDx8b76cbKwFsSWKoQj8ksvjbGGo9ZrhphbnzLp+tZiuvxzyqP4Ext3Pjj
        MeD9xmobXgjhvcb6mGkvbxB85zrHG+tj0uJoU9FY+/n0vFJh9L2adYewTfv3sIaP9VeYsTY+
        8EYuSxTiMZnF19YWfnxE1JDf7UtnO8ZscutCG5yxjjMhRWOVfVxip7F6l76lM7zQUnBgKV3Z
        WB8jZ3nDtXg2nnl4aV9fTjfW0Bbz+W6zhYG3Elc5Qsyse/X3zHLnU1N/4YtSYmM1lnzNi/H6
        0ZE18xumS493R+eLzXomulgpcj2ftXcg39tdG4Ojf5N4l/Gbm5Tma5wx7kUzu0C/9pL5sD4+
        fwDCfdMg5TD8jHV5jTdyC138FQdNWMPHOq/DWGsZeOOySYlCPCaz+Nrawo+PiBqnzVh7Hxg/
        S2h8Qs/1yo10yXNzR+1yx9D40Yf1EuraWD1L4I8dSZ4PRCw3dPU4S3dB94UD/fr+PmHpuOFw
        PaJ7chm/g49HOc8y8NarUpmGmfb1pRJjrWTgjcbqFPWhF8gzqTVhN9rCTxhqc02FuZHOdoRL
        wRPCK7NxLZVaJtOZwTQ7W20ItJ75OcsNna8M2zuTtN89Nb5R7DFL75Ko55Ubd/mNfocMljcI
        TlwCH/bYYaxO7E745KM9SMMaPjasqzFW913exQbeyOX6rlv6rOWYGEqqrS38knK9WixwczXG
        iLcRY4VoENhGgIt3uQqBm3K5ITIZAtoaPmnGKkueUu0ioC38dpE9njncHMeQFs5FQFvDGOu5
        /NK7BwFt4QP8fgTgZj921CwDAW0NY6xl8EwUFgLawgfw/QjAzX7sqFkGAtoaxljL4Jko9hrr
        xk5OQNVBQPuipBM1rYLAAwFtDWOsqK1IBCTCX+yePvFl8zMAXL2HeTT/iBsUCTdnYEKfICBF
        QFvDGKuUCcplRSAk/MFYuteQxnfvjhpL1uyOdfbIfWpnfEdxJwaxNyghbo5lR20Q0EdAW8MY
        qz6H9LADAbnwWzPWwURXHwnoPz4Q/77znhsUOTc7iKcKCGRAQFvDGGsGEukiHgG58Bsz1nHJ
        djU59f27GHo5jnJuxJ1TEASyIqCtYYw1K510JkVALny5IUj7Lrqcd2bqmcmKk5HjKOdG3DkF
        QSArAtoaxliz0klnUgTkwpcbgrTvosthrEXTQ3DXQEB+fdmXD8a6DzdqKSMgFz7GOlDBjFVZ
        kjRfEQLy68u+pDHWfbhRSxkBufAbM1aesSorj+ZbQEB+fdmHBsa6DzdqKSMgF35jxuqZma5f
        wYklSI6jnJvYGCgPAnkQ0NYwxpqHR3qJRCAkfP9B1fGvnESGdnrx4b1TM8/1e6zrMtOZoj58
        4oz1s88+u/ELBlfVQHd9+eeff9TGcnJj/ffff++D3jhAmP8Gj50aUFN9BQ3bZ/ba77VKjXXP
        DUo3vn///Xd+weCyGgjduB+9RCQ31i4g7aCPJk398hFAQ+VyBDflckNkMgS0NYyxynigVGYE
        tIWfOZ2quoObquhsMhltDWOsTcqq/KS1hV8+AuVGCDflckNkMgS0NYyxynigVGYEtIWfOZ2q
        uoObquhsMhltDWOsTcqq/KR9wv/pp59uv/322yoB37+Xn2neCFPgp31RyosIvbWIgLaGMdYW
        VXWBnH3C/+GHH27dr/3j+/cLpJo1xBT4aV+UsgJCZ00ioK1hjLVJWZWfNMaqwxHGqoMrrV4L
        AYz1WnwRbSIEMNZEQFrNtGis87u6Ow+C12GCVs9EAGPNgD4DLwPIkV1grJGAGcX/+uuv26+/
        /nrrnqd2H3IwfzDW/bhKaro+zCGpR5m8CGCsGfDOaawMPBmhGKsMJ7PUf//9d/v+++9vH330
        0e2LL764ffvtt/1nBz/++ONbZ7bdD8Yaj6u8xvhpycXnJpe17S9mLb5SN82o+6MBXV+ve7l/
        KZqfFAhgrClQDLSRz1gZeFI6MVYpUo9yn3/++e3HH39cVfzjjz9ub9686c0VY43HVV5De3wP
        ZsuKtpwRX0mM9TiGwRbqMdZ6Bh7GGpTtosAvv/xy++qrr7yVOnPtZq55jHX8oH8/c5v+e5yB
        Pb/e3hlRTmNv+NbxZEz2IQNjhfHIPHM25zQZR7m+zlz4EZNZf+s6sPqmspGH/3vLY86uIOcY
        HbPQecZq/s3Ehplr3OhYl67UWBl4ziUgk//GBx7GGnfp6JZ87eepdgvdrPXrr78+/LpS+KJk
        mam9rGkYzcNY395en+3lT8NAvMujT7fFAQQb5fYZqz+Xqd88xnpn07hhYNYaNz7s0mENH2z/
        WHV37XDQDLz0xlrXwOvwcZ2g8uWXX966X/tvvn9v5RSW995779adLLX187///e/2ySefHMYv
        dnzPJuCYic3G+vJye34ajXQ2kOmIu8dszTTRh6FNBmzM6hzmvctYDaNemNk9xpd+lm3+hJeC
        59LRN85dzUd+GOsx5wpr+GD7x6qnMVYGngPHxgdeJ3zXWY8ffvjhrfu1/+b796ueFxkb9wcf
        fHD7888/N4fzp59+euvKHcWv46bbKOX/cS+1uozBnO15zcK5NOowmpUhDxGul3jlS8HzZiOR
        k2kb6yNu+5hAjet4zW1Wb6xLva7vyBh40mcw/SVkXk67+sBjKTjustbtAO5er/H9dLPZzlC/
        ++67rEvB8vG98dxwMlbr+ezKqD0GvN9YY8eTtrEyY40bFf7SGOvr87j1nIE3y0R6B59KhSe0
        g7HGgd4ZZ/eazd9//+2s2L1+021wyrt5ydrB6phRzqa3Mk0jjaDexyVjRWN9LCNv8aJsrJ4Z
        eZxSKN0h0JaxMvAeqt+zFFzRwMNY4y+A3VJwZ67du6zTs+Wff/653w08vYZznrGa+yoeN8ki
        YzWeLZorMY93QtfPWNePl9y7gp0bkFzPZ+3XXO4mvl4ViphRxo5vc6fz1k1IvGyarNGQsTLw
        FgpvfOBhrPuud93MtTPR6RntN998c+tetZl+chur60MHzldcAmaxtfPWbE/0AQbzuavrQwyL
        9WvzNZflruW1sXo2ZRrtieLb2tk8bfDaJw9qjQhUb6wMPPNO+v7U6MX1xRXrfbgGBh7GqnMN
        PNdY149zZDPWEYuV7qddwyZWjvdmp5vU5bbe5es9nbE7yw1tr8al90bAYcSJjPXq+yZ0FL2v
        1caMlYF3xFhrGngY674LRqhWbmMVbaYNBc3fQSAxAtUbKwMvsWIqaQ5j1SESY9XBlVavhQDG
        ei2+iDYRAhhrIiCtZjBWHVxp9VoIYKzX4otoEyHgE/5vv/12637tH9+/JwqnmmZS4Be+KPk+
        EFENjCRycQTCGj6W4NOx6u7a4aAZeBq419RmWEM1ZXutXODmWnwR7RoBbQ2fZKxQDQLbCGgL
        H/z3IwA3+7GjZhkIaGsYYy2DZ6KwENAWPoDvRwBu9mNHzTIQ0NYwxloGz0SBsV5GA9oXpcsA
        QaCXRUBbwxjrZaVRd+Dawq8bPd3s4EYXX1rXR0BbwxirPof0sAMBbeHvCIkqIwJwU6AUtj6B
        qhnuWf0ezElbwxjrQYKoroOAtvB1om6jVbgpkOekBjd8llH0Jbek/ebDVVvDGGs+LukpAgFt
        4UeEQlELgetz4/mwPqfGjExHGOtFR4e2hjHWiwqj9rC1hV87fpr5XZ8bl3FM79a7PuyviWaJ
        bWOsR1nBWI8iSH0VBK5/8VaBpYhGg9z0y4OdQS0P/p4PmFjNDO0ZpMPc+pNthn9fHlSxPrjj
        drOPb7Pb8xnHGMcqvlB7Ey2CPOaiXT7GSVb2R9Ol+ZrntHbteWbd/SlC/d+WMZrLvVtH83Wx
        LpaGhf0O6YZxkcSXUvxBDR/s7DRjjQLSJnEcYHPu0QNZOlAOokv13QhoC393YFTsDWHzZxyP
        z8+doQ1jrfvvp848DMMYrrmDwbgu8MtjUQ0jmv8wjuOFmYwX8dVh5aa5+mdkg7msy/axjz/r
        MoZ52Ge5OoxuujGw89uX74OJvt0tYx2N3D4Efn0QStyMdatfKb8PUzewH7WhcVBLUMMHx/m5
        xtoTHQLyTrIllkGYRr2YgTzdPQUHykFkqX4IAW3hHwqu8cpBbhbnmk43sePMcnGxHP+2unI6
        DNNhwB0NwwX5MWu1//9Ald1PyFifblNIsvb6QO6z9Ec9r0Sk5YT5mv1IjHUJtQ//VMYq53cy
        1mV8cXHEDMughmMac5Q93Vh3ATmKc77LFQ/k9UB0D7yDqFL9MALawj8cYMMNBLlZmIdlkqax
        2uPYwHRlaKLZi+9CPi4fzzfoGxdskfHb7Rkz1oC5uo3aISZRvst6YWNdL5u768QZmrffCH7d
        uMTFETMkgxqOaaw8Y7WJlgJplZMO5NWdq2wZ5SDGVN+BgLbwd4RElRGBIDfS8bgxe1stt4qM
        xrPbd3qWKTDW5cxJ2t4kjfAjps1l0+X0s18ij1kGLdVYXTnY/GKsgstLcOD1KyfLJZyhWbex
        +h6q2zPWgcCNO+TVQ3Rj88DGg39ByhRJjIBEQ4m7pDkhAkFukhmrceMtMlb/jNWa23nf0xwe
        M039SttzADfvC1lunGpxxuo31tASvnSiJRSuUSyo4fgmFzVOXgoOz1hFa+/SgbwxYz2II9UT
        I6At/MThNtVckJvD49FhaCJjdS3RuqjxXLAXj5TGW/2NDUFB0l0zcmEe06Yf3Rmrz7jibij8
        M+XAM9bVPpewHwQxFxYIaljYjq9Y4cbq2vXnmNmKB7J04B1EleqHEdAW/uEAG24gyE3EeHQZ
        iHPXrdSQHOa4psphKL4vCInau/dwj8/+UpF797Dnfdl7fdeuYE1jXc7OrTm9vUF0Q++SXcFm
        Hi5cYlYwUwy9oIYPdlK4sU7vrNk7gIcl3Pil4Dta0oFyEFiqH0NAW/jHomu7dpCbGGPt75Ot
        dzqNXb4z0lJj7Su4n40+Lu6hv9v8ysqvH1m53rE1ZsLB91jDz1i33j0NvqO6+aUp+3mx+5Wo
        xbu4Yz6rTyEK+MVYBdeU4MDr/U36jNUmuBPr3s1LU/CygSJIlSJKCEg0pNQ1zQYQgJvrSUT8
        bPd6qe2KWFvDp81Yd6FBpWYQ0BZ+M0AqJAo3CqAqN4mxLgHW1jDGqixomt+HgLbw90VFrQ4B
        uLmeDjBWjPV6qiXi5Ahw8U4OabIG4SYZlNkawlgx1mxio6NyEeDiDTflIkBkV0dA+/rCUvDV
        FVJp/NrCrxS2LGnBTRaY6UQRAW0NY6yK5NH0fgS0hb8/MmrCDRq4OgLaGsZYr66QSuPXFn6l
        sGVJC26ywEwnighoaxhjVSSPpvcjoC38/ZFRM4ob3xeNgBEETkQgSsM74izLWKVnFe5IVL3K
        WReQs/pVBlRb+MrhV918FDeV6rNqghtILkrDO/DAWHeA5qyS9AIScapD0n5TgXG8HW3hH4+w
        3Rbgpl3ua8lcW8MYa5FKiTDWIuM/HpS28I9H2G4LcNMu97Vkrq1hjLVIpWCs2sIvkvaLBCXi
        Zl5JGc88dn3wvS/THbAxfbt7OGxjOHXl/mvXsdvs6zpAW5Wbzl22y4cPJr8IJYQZiYBIw5Ft
        msVPNlbpx/ClA8BuzzPwOgTsExfs85n6v1sDvT+9wTqxQnIBuXfXf/mkv1AsYwyeQGGcgLE4
        NULY70B2GBdJfAd0Fl1VW/jRAVFhRiCWG++xYqOxPj9342wY491/P3Vj0Rh/s4Ytox0M2Brj
        47h4jJXp2uE+67Pva/xxH/MG8TUiEKvhWAzOM9bVAOjd534Hax+VNJpCcACsy/WG4rhTnu6I
        7fMPXech9nfO8x9858OOQ3/jUGTzeKe5Oe9RWHEzVsl5iC4DX5+RaF2ooo7qipXednlt4aeN
        tq3WYrnZNtZpfFkGKNGe4xri/HSfoy33J/7iDvhui/W6so3VcGz2pxmrc7A5jFU8AKQ7iqXl
        xsHoPrzYfc7ilsFNxrqcGPsGcipj9bW/vkFwxxcXR6z4tsprCz9lrK21FctNyFiHMWFpUmKs
        9vGR3dpMP4u1xudq9us30M2b1NaIrjjfWA3HQnGSsXou2CvTixkAj+VOe1XXBEX8MWrRwF7C
        HTbWtSG768QZWujCtTp4uF8cWJ6HKz8fN1Zi+8prC39fVNTqEIjlJqRPqbH6DvV2PSJZLQUv
        Vq7cj6D61SnXs11orw6BWA3HAlC4scYOgPCzWPEdaUXG6rrRsJ8nYayxQ6fd8rEXpRTGKl5R
        sfdOOI2SJd921TtkHqvhWLwKN9YDA2De3LPc3NDijNVvrI8ZNMYaO3TaLR97UTpurL69DfbK
        jvx6Ib7BbpfmqjOP1XAsGCcZq3sAuDYVHRoAruep0pmotJyBePxSsG/JV36B6Lr39xt4xrra
        EObeOelaSo4VWmx5beHHxkP5BwKx3Bw31unZqXGTbOyKN/Upvl5M9beeG0F6tQjEajgWiJOM
        dXrG9xgow+sez+tdwdIBcDdC90Yj37tr1r/f67t2BceMu1hjdW60GBl0vkrgYVeyK3i9A1gy
        k4971hsrvq3y2sJPGWtrbUm48T0P7erO43Rx4xvavGQ/5uluAl369D8+Wo9l6et+rTFcf74S
        DR9B4TRjnWda04aBXvWD0PcOgPVgdu/eXfW9eKVmdrZ+HT5krKILyL1JZznXS/Mzm/aFxLgg
        +dobsVzNMFfPnda4sBR8ZBi1VVf7orQfzdEova/YbbzXvr9Tal4QAW0Nn2qsF+Rjd8jiZ7u7
        e6irorbw60IrbzbFcuN6N36Eho8/5NVI6b1paxhjzaQAjDUOaG3hx0VDaROBcrnxzFinx0mb
        K0Rw3BIC2hrGWDOpCWONA1pb+HHRUPoaxto/5OkfJ83vpPoej0Bp0whoX18w1kzywljjgNYW
        flw0lL6OscIVCIQR0L6+YKxhDihxAgLawj8hpWq6hJtqqGw2EW0NY6zNSqvsxLWFX3b2ZUcH
        N2XzQ3RhBLQ1jLGGOaDECQhoC/+ElKrpEm6qobLZRLQ1jLE2K62yE9cWftnZlx0d3JTND9GF
        EdDWMMYa5oASJyCgLfwTUqqmS7iphspmE9HWMMaaSlrzt0v9X3tK1VUL7WgLvwUMtXKEGy1k
        aTcXAtoaxlg3mYz4Vq7IWCPay6WwQvvRFn6haV8iLLi5BE0EuYGAtoYx1lTGKpIxxiqC6V5I
        W/jSOCi3RgBuUMXVEdDWMMaKsRY5RrSFX2TSFwkKbi5CFGF6EdDW8MnGGj62KerUFeOMxuGT
        ZuvTLIbj6V5v76xPn5knwmydWNO1uzg9xu7T8T1ScXvjKTSu80+3jpircfxoC79GzHLlBDe5
        kKYfLQS0NXyesbpOonAcTC431rtJW6bmOtP0YXKG6XoPNY9bug0fshxqzzqTclbVeAMSOsNO
        S4UntKst/BNSqqZLuKmGymYT0dbwacbqNKFDxurQiMO8J2NdepTP8EJGuOzzuLGuD4Dve+iN
        v62zJLWF3+wVJUHicJMARJo4FQFtDZ9krB7DSm2s43LvepnXfiWmHGO9n4h+e7aWm8OGfapG
        VTrXFr5K0I00CjeNEF1xmtoarspYfc8yL2Ws/QT1/nx4XtYeTL+hVeB+OGsLv+JrhnpqcKMO
        MR0oI6Ct4WqMVbrEK39m26/B9qbm2kzk4j08sxS2Zy799v/d3kcntIWvPG6rbj6KG9H73Xe4
        ailXNfP1JBel4R1pn2Ss4yYdaxo2bDZazs6cRrjaPbu96Wf/jNUdpw/nsLFK2xvKdXH3bbY2
        XWXGumMo56sSc1EyV5G2ZFxLuXws0NMRBGI0vKefk4x1vUlneA3muX++uBiA9o7d8f/br72s
        dgAbr8HsN9ZxWVa4cShsrPL2nLuX9zB80Trawr8oLEWEHcVNLTNRaR5FMEQQIQSiNBxqzPH3
        04y1X2gdZ6j9O6edmzo2L3Xlls9Ou2XRx4zukdM4G+zfX+1+u3Lrpde4peC+9372OLQ5/Erf
        eXUvIW+3N+czDWTHe7E7eL5cFW3hXw6QggKGm4LIIJRdCGhr+FRjXSHiMdZdyF29kus936vn
        FBG/tvAjQqGohQDcIImrI6CtYYy1UIW4Z9aFBqsQlrbwFUJupkm4aYbqahPV1jDGWqJ0vF+C
        KjFYnZi0ha8TdRutwk0bPNecpbaGMdaC1CPdGVlQyGqhaAtfLfAGGoabBkiuPEVtDZdlrJWT
        SXpyBLSFL4+EkjYCcIMmro6AtoYx1qsrpNL4tYVfKWxZ0oKbLDDTiSIC2hrGWBXJo+n9CGgL
        f39k1IQbNHB1BLQ1jLFeXSGVxq8t/Ephy5IW3GSBmU4UEdDWcH3GWvoXUkqPT1HMMU1rCz8m
        FsouEYAbFHF1BLQ13KixCj+Gr6EejFWEqrbwRUFQyIkA3CCMqyOgreH6jFXEeNhYF59bnD9n
        2NZh4yIolQppC18p7CaahZsmaK46SW0NY6we+bg+qD+ZrfQYuaqVqZyctvCVw6+6ebipmt4m
        ktPW8GnGKv0Y/nDqzev9U/jDLLMDpPtdmZtxmk1fxvHxet9B6K423SfVTB/QN85HNc5OXc5y
        rTNUBfEtFG2c4tPH5zxzy/6gfz0zam3hN3H1UEoSbpSApdlsCGhr+BrG2pupYRqBT/6Fj28T
        LgU7zHkwT9tYR8Ofzc93Puygm1B8rnNp75WWx+lNNxqG4Q43DnWYq7bws43gCjuCmwpJbSwl
        bQ1fxliXE7ZtYwwZ193a+tnv1pLu5ozVNNzVoeuDQrc+or8Zn/CEH3f70oPUyx9F2sIvH4Fy
        I4SbcrkhMhkC2hq+iLFay6oBY9Qy1tVh6sP0s1+adq7Uejjeik92qo3fQMO5y4R3dilt4Z+d
        35X7h5srs0fsHQLaGsZYt8zPeKbre26b2lhlxrh83jw9I57/t4LD0bWFz+VlPwJwsx87apaB
        gLaGMdYds8pFlcJmrGXI9ngU2sI/HmG7LcBNu9zXkrm2hssyVsfzSunuYZPw8Kwv/Cwy3MbY
        Y2Jjlc6AxfFddCRoC/+isBQRNtwUQQNBHEBAW8OnGevKQIzXS8xNRTrGOu7M3dhBKzau1MZ6
        f7Ho9dnaBd0JyN4VPL2+E/Nw94AQc1fVFn7ufGrqD25qYrPNXLQ1fJ6x3vlcvlfabVAaTGWP
        sW69o+re/Wu/A7rsN7Wxxsa3+vKT00Ddz1pr8Fpt4bd5OUmTNdykwZFWzkNAW8OnGut5sNJz
        6QhoC7/0/EuOD25KZofYJAhoaxhjlbBAmewIaAs/e0IVdQg3FZHZaCraGsZYGxVW6WlrC7/0
        /EuOD25KZofYJAhoaxhjlbBAmewIaAs/e0IVdQg3FZHZaCraGsZYGxVW6WlrC7/0/EuOD25K
        ZofYJAhoaxhjlbBAmewIaAs/e0IVdQg3FZHZaCraGsZYGxVW6WlrC7/0/EuOD25KZofYJAho
        axhjlbBAmewIaAs/e0IVdQg3FZHZaCraGsZYGxVW6WlrC7/0/EuOD25KZofYJAhoaxhjlbBA
        mewIaAs/e0IVdQg3FZHZaCraGsZYGxVW6WlrC7/0/EuOD25KZofYJAhoaxhjlbBAmewIaAs/
        e0IVdQg3FZHZaCraGsZYGxVW6WlrC7/0/EuOD25KZofYJAhoaxhjlbBAmewIaAs/e0IVdQg3
        FZHZaCraGsZYGxVW6WlrC7/0/EuOD25KZofYJAhoaxhjlbBAmewIaAs/e0IVdQg3FZHZaCra
        GsZYGxVW6WlrC7/0/EuOD25KZofYJAhoaxhjlbBAmewIaAs/e0IVdQg3FZHZaCraGj7fWN+9
        3p6fnm5PTy+3t1sk11KuUSHHpq0t/Nh4KP9AAG5Qw9UR0Nbw6cb67vX5bqqdsT7dXjactZZy
        Vxdkrvi1hZ8rjxr7gZsaWW0rJ20Nn26st1pmotI82tLv7my1hb87MCr2N8H8gMCVEdDWsMoI
        0Q76yoQSuwwBNCTD6YxS77///rzKNK028b/Dqhu/18Cg07DmD8aqiS5t70YAY90NHRVBAARO
        RgBjPZkAuncjgLGiDBAAgasigLFelbnK48ZYKyeY9ECgYgQw1orJvXJqGOuV2SN2EGgbAYy1
        bf6LzR5jLZYaAgMBEAgggLEikSIRwFiLpIWgQAAEBAhgrAKQKJIfAYw1P+b0CAIgkAYBjDUN
        jrSSGAGMNTGgNAcCIJANAYw1G9R0FIMAxhqDFmVBAARKQgBjLYkNYpkRwFgRAwiAwFURwFiv
        ylzlcWOslRNMeiBQMQIYa8XkXjk1jPXK7BE7CLSNAMbaNv/FZo+xFksNgYEACAQQwFiRSJEI
        YKxF0kJQIAACAgQwVgFIFMmPAMaaH3N6BAEQSIMAxpoGR1pJjADGmhhQmgMBEMiGAMaaDWo6
        ikEAY41Bi7IgAAIlIYCxlsQGscwIYKyIAQRA4KoIYKxXZa7yuDHWygkmPRCoGAEVY33//fdv
        3YWRXzDYq4FOQ/yAAAiAwBURUDHWKwJBzCAAAiAAAiCQAgGMNQWKtAECIAACIAACIwIYK1IA
        ARAAARAAgYQIYKwJwaQpEAABEAABEMBY0QAIgAAIgAAIJEQAY00IJk2BAAiAAAiAAMaKBkAA
        BEAABEAgIQIYa0IwaQoEQAAEQAAEMFY0AAIgAAIgAAIJEcBYE4JJUyAAAiAAAiCAsaIBEAAB
        EAABEEiIAMaaEEyaAgEQAAEQAAGMFQ2AAAiAAAiAQEIEMNaEYNIUCIAACIAACGCsaAAEQAAE
        QAAEEiKAsSYEk6ZAAARAAARAAGNFAyAAAiAAAiCQEAGMNSGYNAUCIAACIAACGCsaAAEQAAEQ
        AIGECPwfgBvRRqo9y40AAAAASUVORK5CYII=
       </office:binary-data>
       <text:p/>
      </draw:image>
     </draw:frame></table:shapes>
    <table:table-column table:style-name="co5" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co6" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co7" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co8" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="12" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>select film.name from film where film.actorid</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="14"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>film1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="14"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>film34</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="14"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>film</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>actor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>filmactor (junction table)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>id</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>name</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>id</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>name</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>filmid</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>actorid</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="6" calcext:value-type="float">
      <text:p>6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="18" calcext:value-type="float">
      <text:p>18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="92" calcext:value-type="float">
      <text:p>92</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="34" calcext:value-type="float">
      <text:p>34</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="1" calcext:value-type="float">
      <text:p>1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="34" calcext:value-type="float">
      <text:p>34</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="6" calcext:value-type="float">
      <text:p>6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="34" calcext:value-type="float">
      <text:p>34</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="18" calcext:value-type="float">
      <text:p>18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="35" calcext:value-type="float">
      <text:p>35</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>From film.id → list of actor.names</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>From actor.id → list of film.names</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="16" table:number-rows-spanned="1">
      <text:p>select actor.name WHERE id=filmactor.filmid &amp;&amp; filmactor.actorid=actor.id</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="16" table:number-rows-spanned="1"><text:p>Exercice todo on <text:a xlink:href="http://www.w3schools.com/sql/trysql.asp?filename=trysql_func_count" xlink:type="simple">http://www.w3schools.com/sql/trysql.asp?filename=trysql_func_count</text:a></text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>1-get the names of customers who bought a product</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>1.1-get list of orders where the product appeared</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>1.2-for each order in the list, get the customer&apos;s id</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>1.3-from customers table get name given the id</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>1.1-get the names of customers who bought a product</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT * FROM OrderDetails where ProductID=11;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>OrderDetailID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>OrderID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>ProductID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Quantity</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="1" calcext:value-type="float">
      <text:p>1</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="10248" calcext:value-type="float">
      <text:p>10248</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="130" calcext:value-type="float">
      <text:p>130</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="10296" calcext:value-type="float">
      <text:p>10296</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="211" calcext:value-type="float">
      <text:p>211</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="10327" calcext:value-type="float">
      <text:p>10327</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="50" calcext:value-type="float">
      <text:p>50</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="281" calcext:value-type="float">
      <text:p>281</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="10353" calcext:value-type="float">
      <text:p>10353</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="314" calcext:value-type="float">
      <text:p>314</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="10365" calcext:value-type="float">
      <text:p>10365</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="24" calcext:value-type="float">
      <text:p>24</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="426" calcext:value-type="float">
      <text:p>426</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="10407" calcext:value-type="float">
      <text:p>10407</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="30" calcext:value-type="float">
      <text:p>30</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="492" calcext:value-type="float">
      <text:p>492</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="10434" calcext:value-type="float">
      <text:p>10434</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="6" calcext:value-type="float">
      <text:p>6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="514" calcext:value-type="float">
      <text:p>514</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="10442" calcext:value-type="float">
      <text:p>10442</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="30" calcext:value-type="float">
      <text:p>30</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="517" calcext:value-type="float">
      <text:p>517</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="10443" calcext:value-type="float">
      <text:p>10443</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="6" calcext:value-type="float">
      <text:p>6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>1.2-for each order in the list, get the customer&apos;s id</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT CustomerID FROM Orders where OrderID in (SELECT OrderID FROM OrderDetails where ProductID=11;);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>CustomerID</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="90" calcext:value-type="float">
      <text:p>90</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="46" calcext:value-type="float">
      <text:p>46</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="24" calcext:value-type="float">
      <text:p>24</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="59" calcext:value-type="float">
      <text:p>59</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="3" calcext:value-type="float">
      <text:p>3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="56" calcext:value-type="float">
      <text:p>56</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="24" calcext:value-type="float">
      <text:p>24</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="20" calcext:value-type="float">
      <text:p>20</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="float" office:value="66" calcext:value-type="float">
      <text:p>66</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>1.3-from customers table get name given the id</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT CustomerName FROM Customers where CustomerID in (SELECT CustomerID FROM Orders where OrderID in (SELECT OrderID FROM OrderDetails where ProductID=11;););</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>CustomerName</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Antonio Moreno Taquería </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Ernst Handel </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Folk och fä HB </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>LILA-Supermercado </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Ottilies Käseladen </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Piccolo und mehr </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Reggiani Caseifici </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p>Wilman Kala </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:style-name="ce51"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://www.ntu.edu.sg/home/ehchua/programming/sql/relational_database_design.html" xlink:type="simple">http://www.ntu.edu.sg/home/ehchua/programming/sql/relational_database_design.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>To ensure uniqueness, each table should have a column (or a set of columns), called primary key, that uniquely identifies every records of the table. </text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>A primary key is called a simple key if it is a single column; it is called a composite key if it is made up of several columns.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>the primary key shall have these properties:</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>no duplicate value). For example, customerName may not be appropriate to be used as the primary key for the Customers table, as there could be two customers with the same name.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The primary key shall always have a value. In other words, it shall not contain NULL</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>Let&apos;s illustrate with an example: a table customers contains columns lastName, firstName, phoneNumber, address, city, state, zipCode. The candidates for primary key are name=(lastName, firstName), phoneNumber, Address1=(address, city, state), Address1=(address, zipCode). Name may not be unique. Phone number and address may change. Hence, it is better to create a fact-less auto-increment number, say customerID, as the primary key.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
      <text:p>Relationships among Tables</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>The most crucial aspect in designing a relational database is to identify the relationships among tables. The types of relationship include:</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
      <text:p>one-to-many</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>many-to-many</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
      <text:p>one-to-one</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>One-to-Many</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>To support a one-to-many relationship, we need to design two tables: a table Classes to store information about the classes with classID as the primary key; </text:p><text:p>and a table Teachers to store information about teachers with teacherID as the primary key. We can then create the one-to-many relationship by storing the </text:p><text:p>Primary key of the table Teacher (i.e., teacherID) (the &quot;one&quot;-end or the parent table) in the table classes (the &quot;many&quot;-end or the child table), as illustrated below.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>The column teacherID in the child table Classes is known as the <text:span text:style-name="T16">foreign key</text:span>.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
      <text:p>Many-to-Many</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro24">
      <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>Let&apos;s illustrate with a &quot;product sales&quot; database. We begin with two tables: Products and Orders. The table products contains information about the products (such as name, </text:p><text:p>description and quantityInStock) with productID as its primary key. The table orders contains customer&apos;s orders (customerID, dateOrdered, dateRequired and status). </text:p><text:p>Again, we cannot store the items ordered inside the Orders table, as we do not know how many columns to reserve for the items. We also cannot store the order information in the Products table.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="13"/>
     </table:table-row>
     <table:table-row table:style-name="ro24">
      <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p>To support many-to-many relationship, we need to create a third table (known as a junction table), say OrderDetails (or OrderLines), where each row represents an item of a particular order. </text:p><text:p>For the OrderDetails table, the primary key consists of two columns: orderID and productID, that uniquely identify each row. The columns orderID and productID in OrderDetails table </text:p><text:p>Are used to reference Orders and Products tables, hence, they are also the foreign keys in the OrderDetails table.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="13"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>The many-to-many relationship is, in fact, implemented as two one-to-many relationships, with the introduction of the junction table.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce54" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="13"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="19">
      <table:table-cell table:style-name="ce54" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="13"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="8">
     <table:table-cell table:style-name="ce54" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="22">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce60" office:value-type="string" calcext:value-type="string">
      <text:p>One-to-One</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>In a &quot;product sales&quot; database, a product may have optional supplementary information such as image, moreDescription and comment. </text:p><text:p>Keeping them inside the Products table results in many empty spaces (in those records without these optional data). Furthermore, these large data may degrade the performance of the database.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>Some databases limit the number of columns that can be created inside a table. You could use a one-to-one relationship to split the data into two tables. </text:p><text:p>One-to-one relationship is also useful for storing certain sensitive data in a secure table, while the non-sensitive ones in the main table.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>The same column productID should be used as the primary key for both tables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="13">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>Apply the so-called <text:span text:style-name="T16">normalization </text:span>rules to check whether your database is structurally correct and optimal.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">First Normal Form (1NF)</text:span>: A table is 1NF if every cell contains a single value, not a list of values. This properties is known as atomic. </text:p><text:p>1NF also prohibits repeating group of columns such as item1, item2,.., itemN. Instead, you should create another table using one-to-many relationship.</text:p><text:p> (<text:span text:style-name="T16">hb:an orders table containing a column for each product id. Is this what 1NF prevents. Do research on internet</text:span>)</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce63" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:style-name="ce63" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Second Normal Form (2NF)</text:span>: A table is 2NF, if it is 1NF and every non-key column is fully dependent on the primary key. Furthermore, if the primary key is made up of several columns, every non-key column shall depend on the entire set and not part of it.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce63" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the primary key of the OrderDetails table comprising orderID and productID. If unitPrice is dependent only on productID, it shall not be kept in the OrderDetails table (but in the Products table). On the other hand, if the unitPrice is dependent on the product as well as the particular order, then it shall be kept in the OrderDetails table.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce63" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:style-name="ce63" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Third Normal Form (3NF)</text:span>: A table is 3NF, if it is 2NF and the non-key columns are independent of each others. In other words, the non-key columns are dependent on primary key, only on the primary key and nothing else. </text:p><text:p>For example, suppose that we have a Products table with columns productID (primary key), name and unitPrice. The column discountRate shall not belong to Products table if it is also dependent on the unitPrice, which is not part of the primary key.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce63" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:style-name="ce63" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Higher Normal Form</text:span>: 3NF has its inadequacies, which leads to higher Normal form, such as Boyce/Codd Normal form, Fourth Normal Form (4NF) and Fifth Normal Form (5NF), which is beyond the scope of this tutorial.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce63" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>At times, you may decide to break some of the normalization rules, for performance reason (e.g., create a column called totalPrice in Orders table which can be derived from the orderDetails records); or because the end-user requested for it. Make sure that you fully aware of it, develop programming logic to handle it, and properly document the decision.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce63" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Integrity Rules</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>You should also apply the integrity rules to check the integrity of your design:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>Entity Integrity Rule: The primary key cannot contain NULL. Otherwise, it cannot uniquely identify the row. For composite key made up of several columns, none of the column can contain NULL. Most of the RDBMS check and enforce this rule.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>Referential Integrity Rule: Each foreign key value must be matched to a primary key value in the table referenced (or parent table).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>You can insert a row with a foreign key in the child table only if the value exists in the parent table.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>If the value of the key changes in the parent table (e.g., the row updated or deleted), all rows with this foreign key in the child table(s) must be handled accordingly. You could either (a) disallow the changes; (b) cascade the change (or delete the records) in the child tables accordingly; (c) set the key value in the child tables to NULL.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Most RDBMS can be setup to perform the check and ensure the referential integrity, in the specified manner.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>Business logic Integrity: Beside the above two general integrity rules, there could be integrity (validation) pertaining to the business logic, e.g., zip code shall be 5-digit within a certain ranges, delivery date and time shall fall in the business hours; quantity ordered shall be equal or less than quantity in stock, etc. These could be carried out in validation rule (for the specific column) or programming logic.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce62"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Column Indexing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>You could create index on selected column(s) to facilitate data searching and retrieval. An index is a structured file that speeds up data access for SELECT, but may slow down INSERT, UPDATE, and DELETE. Without an index structure, to process a SELECT query with a matching criterion (e.g., SELECT * FROM Customers WHERE name=&apos;Tan Ah Teck&apos;), the database engine needs to compare every records in the table. A specialized index (e.g., in BTREE structure) could reach the record without comparing every records. However, the index needs to be rebuilt whenever a record is changed, which results in overhead associated with using indexes.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Index can be defined on a single column, a set of columns (called concatenated index), or part of a column (e.g., first 10 characters of a VARCHAR(100)) (called partial index) . You could built more than one index in a table. For example, if you often search for a customer using either customerName or phoneNumber, you could speed up the search by building an index on column customerName, as well as phoneNumber. Most RDBMS builds index on the primary key automatically.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
      <text:p>http://databasemanagement.wikia.com/wiki/Relational_Database_Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>In the relational database model, there are five, very important rules.  When followed, these rules help to ensure data integrity. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>1.     The order of tuples and attributes is not important.  (Ex. Attribute order not important…if you have name before address, is the same as address before name). </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>2.     Every tuple is unique.  This means that for every record in a table there is something that uniquely identifies it from any other tuple. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>3.     Cells contain single values.  This means that each cell in a table can contain only one value. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>4.     All values within an attribute are from the same domain.  This means that however the attribute is defined, the values for each tuple fall into that definition.  For example, if the attribute is labeled as Date, you would not enter a dollar amount, shirt size, or model number in that column, only dates. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>5.     Table names in the database must be unique and attribute names in tables must be unique.  No two tables can have the same name in a database.  Attributes (columns) cannot have the same name in a table.  You can have two different tables that have similar attribute names.  </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:style-name="ce63"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Update</text:span> is used to update a field(s) in a table. Note the use of WHERE. If you omit the WHERE clause, all records will be updated!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
      <text:p>if we wish to update the customer &quot;Alfreds Futterkiste&quot; with a new contact person and city :</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>UPDATE Customers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>SET ContactName=&apos;Alfred Schmidt&apos;, City=&apos;Hamburg&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>WHERE CustomerName=&apos;Alfreds Futterkiste&apos;; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>ALTER</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>To add/delete a column in a table, (notice that some database systems don&apos;t allow deleting a column)::</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>ALTER TABLE table_name ADD column_name datatype </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ALTER TABLE table_name DROP COLUMN column_name</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce63"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Select</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT column_name,column_name FROM table_name WHERE field=value;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT TOP 2 * FROM Customers; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>MySQL : SELECT column_name(s) FROM table_name LIMIT number;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Delete </text:span>a row from a table. If you omit the WHERE clause, all records will be deleted!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>DELETE FROM table_name WHERE some_column=some_value;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>INNER JOIN</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="15" table:number-rows-spanned="1">
      <text:p>The most common type of join is: SQL INNER JOIN (simple join). An SQL INNER JOIN returns all rows from multiple tables where the join condition is met.</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="14"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="15" table:number-rows-spanned="1">
      <text:p>Let&apos;s look at a selection from the &quot;Orders&quot; table:</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="14"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>OrderID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>CustomerID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>OrderDate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce67" office:value-type="float" office:value="10308" calcext:value-type="float">
      <text:p>10308</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce68" office:value-type="string" calcext:value-type="string">
      <text:p>1996-09-18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce67" office:value-type="float" office:value="10309" calcext:value-type="float">
      <text:p>10309</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="float" office:value="37" calcext:value-type="float">
      <text:p>37</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce68" office:value-type="string" calcext:value-type="string">
      <text:p>1996-09-19</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce67" office:value-type="float" office:value="10310" calcext:value-type="float">
      <text:p>10310</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="float" office:value="77" calcext:value-type="float">
      <text:p>77</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce68" office:value-type="string" calcext:value-type="string">
      <text:p>1996-09-20</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="15" table:number-rows-spanned="1">
      <text:p>Then, have a look at a selection from the &quot;Customers&quot; table:</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="14"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce44"/>
     <table:table-cell table:number-columns-repeated="11"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>CustomerID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>CustomerName</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>ContactName</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>Country</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce67" office:value-type="float" office:value="1" calcext:value-type="float">
      <text:p>1</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>Alfreds Futterkiste</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>Maria Anders</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>Germany</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce67" office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>Ana Trujillo Emparedados y helados</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>Ana Trujillo</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>Mexico</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce67" office:value-type="float" office:value="3" calcext:value-type="float">
      <text:p>3</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>Antonio Moreno Taquería</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>Antonio Moreno</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>Mexico</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce44"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce69"/>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce44"/>
     <table:table-cell table:number-columns-repeated="11"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="15" table:number-rows-spanned="1"><text:p>Notice that the &quot;CustomerID&quot; column in the &quot;Orders&quot; table refers to the &quot;CustomerID&quot; in the &quot;Customers&quot; table. The relationship between the two tables above is the &quot;CustomerID&quot; column. </text:p><text:p>(hb:that might explain why INNER JOIN is used for Customers table)</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="14"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>FROM Orders</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>INNER JOIN Customers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>ON Orders.CustomerID=Customers.CustomerID;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
   </table:table>
   <table:table table:name="Feuille4" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co9" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44"/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p>You&apos;ve gotten answers that mention ensuring that the ctor can&apos;t change what&apos;s being copied -- and they&apos;re right, putting the const there does have that effect.</text:p><text:p>More important, however, is that a temporary object cannot bind to a non-const reference. The copy ctor must take a reference to a const object to be able to make copies of temporary objects.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string"><text:p>class Foo {</text:p><text:p>  Foo( const Foo&amp; f ) :</text:p><text:p>      mem1( f.mem1 ), mem2( f.mem2 ) /* etc */</text:p><text:p>  {}</text:p><text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce72"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p>where mem1 and mem2 are data members of Foo, which can be const</text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p>members, non-const members, const references or non-const references.</text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
   </table:table>
   <table:table table:name="ios" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="6" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Party * pi;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pi = [Party alloc]; <text:s text:c="2"/>can a pointer be set this way ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(ip == nil) </text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(!ip)</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ip=nil; the obj pointed to by ip is desctucted.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[ip method1]; doesn&apos;t crash or does anything if ip is nil; unlike in C</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>get ip;</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>get ip;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>single inheritance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NSObject is the root class of the entire hierarchy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>overriding a method only needs to be implemented. No need to declare it in the overriding class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>every object has an instance variable called isa. It is a pointer to the class that created it. At run time, when a message is sent to the object, it uses its isa variable to find the class and run the method</text:p><text:p>It is not a compile time type determination. It is run time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>self == this in C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Self = [super init]</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[self setItemName:name];</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>super start the search for the method from the base class, not from the current one.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>@interface BNRItem:NSObject</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>NSString *name;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int <text:s text:c="11"/>id; <text:s text:c="3"/>//this only lives within the BNRItem instance. Pointers do not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>NSMutableArray <text:s text:c="2"/>*ar; <text:s text:c="2"/>//arrays&apos; elements do not live within the array. Array can hold any mix of objects</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- (NSString *)itemName</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return itemName;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>- (void)setItemName:<text:span text:style-name="T44">(</text:span>NSString *<text:span text:style-name="T44">)</text:span>str</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>itemName=str;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>BNRItem *p = [[BNRItem alloc] init];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[p setItem:@”red sosssssa”];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NSString *str=[p itemName];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NSMutableArray array = [[NSMutableArray alloc] init];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[array addObject:[NSNull null]];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[array addObject:@”this is a string”];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int len = [array count];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>can&apos;t have two methods with different return types</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>init</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>initializer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>for each class, no matter how many initializers it has, one is chosen as designated initializer. Typically is has parameters for the most important and frequently used instance variables.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>designated </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Default init calls the designated init</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>- (id) init</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>return [self initWithField1:@”item”</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="17"/>field2:0];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>init</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="ios faq" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce63"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.faqs.org/faqs/computer-lang/Objective-C/faq/</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>Contents</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* Contents</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 1. About this FAQ</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 1.1 Where can I find the latest version of the FAQ ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 2. Objective-C Compiler Commands</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.1 What&apos;s the file suffix for Objective-C source ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.2 How do I compile .m files with the Stepstone compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.3 How do I compile .m files with the Apple compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.4 How do I compile .m files with the GNU C compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.5 How do I compile .m files with the POC ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 3. Objective-C preprocessor issues</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.1 What&apos;s the syntax for comments ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.2 How do I include the root class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.3 What is #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.4 Why am I lectured about using #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 4. Object datatype (id)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 4.1 What is id ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 4.2 What is the difference between self and super ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 4.3 What is @defs() ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 5. Message selectors (SEL)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 5.1 What is a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 5.2 What is perform: doing ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 5.3 How do I know the SEL of a given method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 6. Implementation pointers (IMP)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.1 What is an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.2 How do I get an IMP given a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.3 How do I send a message given an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.4 How can I use IMP for methods returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.5 Can I use perform: for a message returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 7. Copying objects</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 7.1 What&apos;s the difference between copy and deepCopy ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 8. Objective-C and C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 8.1 How can I link a C++ library into an Objective-C program</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 9. Messages</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 9.1 How do I make a static method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 9.2 How do I prevent an object from sending a given message ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 9.3 Do I have to recompile everything if I change the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>implementation of a method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 10. Instance and Class Variables</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 10.1 Do I have to recompile everything if I change instance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>variables of a class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 11. Objective-C and X-Windows</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 11.1 How do I include X Intrinsics headers into an</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C file ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 12. Stepstone Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 12.1 How do I allocate an object on the stack ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 13. GNU Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 13.1 Why do I get a &apos;floating point exception&apos; ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 14. Apple Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 14.1 What&apos;s the class of a constant string ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 14.2 How can I link a C++ library into an Objective-C program</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 15. Portable Object Compiler Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 15.1 What&apos;s the syntax for class variables ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 15.2 How do I forward messages ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 15.3 How can I link a C++ library into an Objective-C program</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 16. Books and further reading</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.1 Object-Oriented Programming : An Evolutionary Approach,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.2 An Introduction To Object-Oriented Programming, 2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.3 Objective-C : Object-Oriented Programming Techniques</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.4 Applications of Object-Oriented Programming; C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>SmallTalk Actor Objective-C Object PASCAL</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="7"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="31"/>1. About this FAQ</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>1.1 Where can I find the latest version of the FAQ ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>   It&apos;s posted once a month to <text:a xlink:href="http://groups.google.com/group/comp.lang.objective-c" xlink:type="simple">comp.lang.objective-c</text:a>, <text:a xlink:href="http://groups.google.com/group/comp.answers" xlink:type="simple">comp.answers</text:a> and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>   <text:a xlink:href="http://groups.google.com/group/news.answers" xlink:type="simple">news.answers</text:a>. It is archived at</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>   <text:a xlink:href="ftp://rtfm.mit.edu/pub/faqs/computer-lang/Objective-C/faq" xlink:type="simple">ftp://rtfm.mit.edu/pub/faqs/computer-lang/Objective-C/faq</text:a>.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>2. Objective-C Compiler Commands</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>2.1 What&apos;s the file suffix for Objective-C source ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s .m for implementation files, and .h for header files. Objective-C</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>compilers usually also accept .c as a suffix, but compile those files</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>in plain C mode.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>2.2 How do I compile .m files with the Stepstone compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>objcc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>objcc -o class class.o</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>2.3 How do I compile .m files with the Apple compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>cc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>cc -o class class.o</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>   See <text:a xlink:href="http://www.apple.com/" xlink:type="simple">http://www.apple.com</text:a> for more information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>2.4 How do I compile .m files with the GNU C compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>gcc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>gcc -o class class.o -lobjc -lpthread</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>   See <text:a xlink:href="http://www.gnu.org/" xlink:type="simple">http://www.gnu.org</text:a> for more information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>2.5 How do I compile .m files with the POC ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>objc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>objc -o class class.o</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>   See <text:a xlink:href="http://metalab.unc.edu/pub/Linux/devel/lang/objc/" xlink:type="simple">http://metalab.unc.edu/pub/Linux/devel/lang/objc/</text:a> for more</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="22"/>3. Objective-C preprocessor issues</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>3.1 What&apos;s the syntax for comments ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The Objective-C preprocessor usually supports two styles of comments :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>// this is a BCPL-style comment (extends to end of line)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>/* this is a C-style comment */</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>3.2 How do I include the root class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>On Stepstone and the POC, the header file to include is :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>On GNU cc and Apple cc, it&apos;s :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;objc/Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The root class is located in a directory called runtime for the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Stepstone compiler, and in a directory called objcrt for the POC, but</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>because of implicit -I options passed on to the preprocessor, these</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>locations are automatically searched.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>3.3 What is #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s a C preprocessor construct to avoid multiple inclusions of the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>same file.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>#import &lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>is an alternative to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>where the .h file is protected itself against multiple inclusions :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>#ifndef _OBJECT_H_</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>#define _OBJECT_H_</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>#endif</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>3.4 Why am I lectured about using #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The GNU Objective-C compiler emits a warning when you use #import</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>because some people find using #import poor style. You can turn off</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>the warning by using the -Wno-import option, you could modify the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>compiler source code and set the variable warn_import (in the file</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>cccp.c) or you could convert your code to use pairs of #ifndef and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>#endif, as shown above, which makes your code work with all compilers.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>4. Object datatype (id)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>4.1 What is id ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s a generic C type that Objective-C uses for an arbitrary object.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>For example, a static function that takes one object as argument and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>returns an object, could be declared as :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>static id myfunction(id argument) { ... }</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>4.2 What is the difference between self and super ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>self is a variable that refers to the object that received a message</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>in a method implementation. super refers to the same variable, but</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>directs the compiler to use a method implementation from the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>superclass.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Using pseudo-code, where copy (from super) is the syntax for the copy</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>implementation of the superclass, the following are equivalent :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>myObject = [super copy];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>and,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>myObject = [self copy (from super)]; // pseudo-code</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>4.3 What is @defs() ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s a compiler directive to get access to the internal memory layout</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of instances of a particular class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>typedef struct { @defs(MyClass) } *TMyClass;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>defines a C-type TMyClass with a memory layout that is the same as</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>that of MyClass instances.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="26"/>5. Message selectors (SEL)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>5.1 What is a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s the C type of a message selector; it&apos;s often defined as a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>(uniqued) string of characters (the name of the method, including</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>colons), but not all compilers define the type as such.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>5.2 What is perform: doing ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>perform: is a message to send a message, identified by its message</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>selector (SEL), to an object.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>5.3 How do I know the SEL of a given method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>If the name of the method is known at compile time, use @selector :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>[myObject perform:@selector(close)];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>At runtime, you can lookup the selector by a runtime function that</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>takes the name of the message as argument, as in :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = selUid(name); // for Stepstone</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = sel_getUid(name); // for Apple</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = sel_get_any_uid(name); // for GNU Objective C</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = selUid(name); // for POC</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>6. Implementation pointers (IMP)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>6.1 What is an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s the C type of a method implementation pointer, a function pointer</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>to the function that implements an Objective-C method. It is defined</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>to return id and takes two hidden arguments, self and _cmd :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>typedef id (*IMP)(id self,SEL _cmd,...);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>6.2 How do I get an IMP given a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>This can be done by sending a methodFor: message :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>IMP myImp = [myObject methodFor:mySel];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>6.3 How do I send a message given an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>By dereferencing the function pointer. The following are all</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>equivalent :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>[myObject myMessage];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>or</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>IMP myImp = [myObject methodFor:@selector(myMessage)];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>myImp(myObject,@selector(myMessage));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>or</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>[myObject perform:@selector(myMessage)];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>6.4 How can I use IMP for methods returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>For methods that return a C type such as double instead of id, the IMP</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>function pointer is casted from pointer to a function returning id to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>pointer to a function returning double :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>double aDouble = ((double (*) (id,SEL))myImp)(self,_cmd);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>6.5 Can I use perform: for a message returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>No. The method perform: is for sending messages returning id without</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>any other argument. Use perform:with: if the message returns id and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>takes one argument. Use methodFor: for the general case of any number</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of arguments and any return type.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="30"/>7. Copying objects</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>7.1 What&apos;s the difference between copy and deepCopy ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>copy is intented to make a bytecopy of the object, sharing pointers</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>with the original, and can be overridden to copy additional memory.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>deepCopy is intented to make a copy that doesn&apos;t share pointers with</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>the original. A deep copy of an object contains copies of its instance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>variables, while a plain copy is normally just a copy at the first</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>level.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>8. Objective-C and C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>8.1 How can I link a C++ library into an Objective-C program ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You have two options : either use the Apple compiler or use the POC.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The former accepts a mix of C++ and Objective-C syntax (called</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Objective-C++), the latter compiles Objective-C into C and then</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>compiles the intermediate code with a C++ compiler. See the compiler</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>specific questions for more information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="34"/>9. Messages</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>9.1 How do I make a static method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Methods are always implemented in Objective-C as static functions. The</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>only way to obtain the IMP (implementation pointer) of a method is</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>through the runtime (via methodFor: and friends), because the function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>itself is static to the file that implements the method.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>9.2 How do I prevent an object from sending a given message ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You can&apos;t. If your object responds to a message, any other class can</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>send this message. You could add an extra argument sender and check,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>as in :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>- mymethod:sender</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if ([sender isKindOf:..]) ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>But this still requires cooperation of the sender, to use a correct</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>argument :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>[anObject mymethod:self];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>9.3 Do I have to recompile everything if I change the implementation of a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>No, you only have to recompile the implementation of the method</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>itself. Files that only send that particular messages do not have to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>be recompiled because Objective-C has dynamic binding.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>10. Instance and Class Variables</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>10.1 Do I have to recompile everything if I change instance variables of a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You have to recompile that class, all of its subclasses, and those</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>files that use @defs() or use direct access to the instance variables</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of that class. In short, using @defs() to access instance variables,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>or accessing instance variables through subclassing, breaks the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>encapsulation that the Objective-C runtime normally provides for all</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>other files (the files that you do not have to recompile).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="25"/>11. Objective-C and X-Windows</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>11.1 How do I include X Intrinsics headers into an Objective-C file ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>To avoid a conflict between Objective-C&apos;s Object and the X11/Object,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>do the following :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>#define Object XtObject</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;X11/Intrinsic.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;X11/IntrinsicP.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>#undef Object</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>12. Stepstone Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>12.1 How do I allocate an object on the stack ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>To allocate an instance of &apos;MyClass&apos; on the stack :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>MyClass aClass = [MyClass new];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="20"/>13. GNU Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>13.1 Why do I get a &apos;floating point exception&apos; ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>This used to happen on some platforms and is described at</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>   <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387</text:a>. A solution</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>was to add -lieee to the command line, so that an invalid floating</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>point operation in the runtime did not send a signal. DJGPP users can</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>consult http://www.delorie.com/djgpp/v2faq/. AIX users may want to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>consult http://world.std.com/~gsk/oc-rs6000-problems.html. In some</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>cases, you can fix the problem by upgrading to a more recent version</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of the GNU Objective-C runtime and/or compiler.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="19"/>14. Apple Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>14.1 What&apos;s the class of a constant string ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s an NXConstantString.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>NXConstantString *myString = @&quot;my string&quot;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>14.2 How can I link a C++ library into an Objective-C program ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>c++ -c file.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>c++ file.o -lcpluslib -o myprogram</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>15. Portable Object Compiler Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>15.1 What&apos;s the syntax for class variables ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>List the class variables after the instance variables, and group them</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>together in the same way as instance variables, as follows :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>@implementation MyClass : Object { id ivar1; int ivar2; } : { id cvar1; }</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>@end</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>15.2 How do I forward messages ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You have to implement doesNotUnderstand: to send a sentTo: message.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>- doesNotUnderstand:aMsg</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return [aMsg sentTo:aProxy];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>15.3 How can I link a C++ library into an Objective-C program ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>objc -c -cplus file.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>objc -cplus file.o -lcpluslib -o myprogram</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="25"/>16. Books and further reading</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>16.1 Object-Oriented Programming : An Evolutionary Approach, 2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Brad Cox &amp; Andy Novobilski, ISBN 0201548348.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>16.2 An Introduction To Object-Oriented Programming, 2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Timothy Budd, ISBN 0201824191</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>16.3 Objective-C : Object-Oriented Programming Techniques</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Pinson, Lewis J. / Wiener, Richard S., ISBN 0201508281</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>16.4 Applications of Object-Oriented Programming; C++ SmallTalk Actor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>Objective-C Object PASCAL</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048219">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
   </table:table>
   <table:table table:name="ios faq2" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="1024" table:default-cell-style-name="ce63"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://faqs.cs.uu.nl/na-dir/Objective-C/answers.html</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://www.cs.uu.nl/" xlink:type="simple"> </text:a> Note from archiver&lt;at&gt;cs.uu.nl: This page is part of a big <text:a xlink:href="http://faqs.cs.uu.nl/" xlink:type="simple">collection</text:a> of Usenet postings, archived here for your convenience. For matters concerning the content of this page, please contact its author(s); use the <text:a xlink:href="ftp://ftp.cs.uu.nl/pub/NEWS.ANSWERS/Objective-C/answers" xlink:type="simple">source</text:a>, if all else fails. For matters concerning the archive as a whole, please refer to the <text:a xlink:href="http://faqs.cs.uu.nl/na-msc/descr.html" xlink:type="simple">archive description</text:a> or contact the archiver. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
      <text:p>Subject: comp.lang.objective-c FAQ, part 1/3: Answers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>This article was archived around: 17 Sep 1998 12:52:00 GMT </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>All FAQs in Directory: <text:a xlink:href="http://faqs.cs.uu.nl/na-dir/Objective-C/idx.html" xlink:type="simple">Objective-C</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>All FAQs posted in: <text:a xlink:href="http://faqs.cs.uu.nl/na-bng/comp.lang.objective-c.html" xlink:type="simple">comp.lang.objective-c</text:a>, <text:a xlink:href="http://faqs.cs.uu.nl/na-bng/comp.sys.mac.programmer.info.html" xlink:type="simple">comp.sys.mac.programmer.info</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>Source: <text:a xlink:href="ftp://ftp.cs.uu.nl/pub/NEWS.ANSWERS/Objective-C/answers" xlink:type="simple">Usenet Version</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>Archive-name: Objective-C/answers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>Version: $Id: answers,v 3.64 1998/09/17 12:51:31 tiggr Exp $</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="33"/>Answers to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="25"/>FREQUENTLY ASKED QUESTIONS</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="27"/>concerning Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>This is the first in a series of three informational postings concerning</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>comp.lang.objective-c. <text:s/>This first part answers FAQs; the second part lists</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>available class libraries and the third part is a simple sample Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>program.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>This document answers the following questions:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>1 <text:s text:c="2"/>What is Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>2 <text:s text:c="2"/>What exactly is it that makes Objective-C have `classes similar to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>Smalltalk&apos;, and what are the resulting capabilities of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>3 <text:s text:c="2"/>What are the differences between Objective-C and C++?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>4 <text:s text:c="2"/>What are the differences between Objective-C and Java?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>5 <text:s text:c="2"/>What are the `nice features&apos; of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>6 <text:s text:c="2"/>What are some problems of the language and how can I work around them?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>7 <text:s text:c="2"/>What object encapsulation does Objective-C provide?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>8 <text:s text:c="2"/>What are protocols?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>9 <text:s text:c="2"/>Does Objective-C employ garbage collection?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>10 <text:s/>How do I debug Objective-C using an unaware gdb?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>11 <text:s/>I get this `Floating exception&apos;...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>12 <text:s/>Why am I lectured by gcc about `#import&apos;?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>13 <text:s/>What written information concerning Objective-C is available?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>14 <text:s/>History <text:s text:c="3"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>15 <text:s/>Major compilers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>16 <text:s/>Compiler differences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>17 <text:s/>Objective-C support per platform</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>18 <text:s/>What are the newsgroups or mailing lists to read?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>19 <text:s/>Are there any FTP sites with Objective C code? <text:s/>Where?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>20 <text:s/>Is there any information on the Net concerning Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>21 <text:s/>For more information...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>(To find a question search on the question number starting a line.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>1 <text:s text:c="2"/>What is Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C is an object oriented computer programming language. <text:s/>It is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a superset of ANSI C and provides classes and message passing similar to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C includes, when compared to C, a few more keywords and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>constructs, a short description of which follows. <text:s/>For a complete</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>example see part 3 of this FAQ.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`@interface&apos; declares a new class. <text:s/>It indicates the name of the class,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the name of its superclass, the protocols adhered to (see Q7), the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>layout of the instance variables (similar to the definition of a struct,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>but including encapsulation information (see Q6)) and declares the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>methods implemented by this class. <text:s/>A class&apos; interface usually resides</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>in a file called `&lt;classname&gt;.h&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`@implementation&apos; defines a class. <text:s/>The implementation is no more than a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>collection of method definitions. <text:s/>Without an implementation, a class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>does not exist at run time. <text:s/>The implementation of a class usually</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>resides in a file called `&lt;classname&gt;.m&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>A category is a named collection of method definitions which are added</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to an existing class, possibly at run time. <text:s/>Thus, you use a category</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to add methods to a class. <text:s/>Some Objective-C implementations allow a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>category to even replace methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C includes the predefined type `id&apos; which stands for a pointer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to some object. <text:s/>Thus, `id obj;&apos; declares a pointer to an object. <text:s/>The</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>actual class of the object being pointed to is almost irrelevant, since</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C does run-time binding.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`-message;&apos; declares a method called `message&apos;. <text:s/>The `-&apos; indicates that</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the message can be sent to objects. <text:s/>A `+&apos; instead indicates the message</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>can be sent to class objects. <text:s/>A method is similar to a function in that</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it has arguments and a return value. <text:s/>The default return type is `id&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>If a method has nothing useful to return, it returns `self&apos;, which is a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>pointer to the object to which the message was sent (similar to `this&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>in C++).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>[obj message], [obj message: arg1] and [obj message: arg1 with: arg2]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>are examples of sending a message to the object OBJ with 0, 1 and 2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>arguments respectively. <text:s/>The name of the message is called the selector.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In this example, the selectors are: `message&apos;, `message:&apos; and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`message:with:&apos;, respectively.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>2 <text:s text:c="2"/>What exactly is it that makes Objective-C have `classes similar to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Smalltalk&apos;, and what are the resulting capabilities of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C is as close to Smalltalk as a compiled language allows:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Much of the syntax, i.e. both Smalltalk and Objective-C use method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>names like `a:method:name:&apos;. <text:s/>In Objective-C, the message sending</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>construct is enclosed in square brackets, like this:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[anObject aMessage: arg]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>whereas Smalltalk uses something like</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>anObject aMessage: arg</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* The basic class hierarchy: single inheritance with the `Object&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>class as the root of the tree.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Most method names in the Object class are the same like, for example,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`respondsTo:&apos;. <text:s/>What is called `doesNotUnderstand:&apos; in Smalltalk</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>is unchanged in the POC, but it is called `doesNotRecognize:&apos; in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU and Apple Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Smalltalk normally uses `doesNotUnderstand:&apos; to implement</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>forwarding, delegation, proxies, etc. <text:s/>In [GNU, Apple] Objective-C,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>such functionality is implemented by `forward::&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Objective-C has class objects and meta classes mostly like Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* You can add or delete methods and classes at runtime. <text:s/>A subclass</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>can pose as its superclass.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Objective-C does not have class variables like Smalltalk, but pool</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>variables and globals are easily emulated via static variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Objective-C is compiled---Smalltalk is only partially compiled. <text:s/>The</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>current Objective-C implementations are all *much* faster than any</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Smalltalk. <text:s/>For example ParcPlace Smalltalk-80/4 is at least 3 times</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>slower than both the GNU and NeXT Objective-C&apos;s. <text:s/>(This was measured</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>using the Self/Smalltalk benchmark suite available by FTP from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`self.stanford.edu:pub/Self-2.0.1&apos;.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The big difference of course is that Objective-C is a hybrid between</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Smalltalk and C. <text:s/>One can choose to represent a string as a `char *&apos; or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>as an object, whereas in Smalltalk everything is an object. <text:s/>This is one</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reason for Objective-C being faster. <text:s/>On the other hand, if every bit of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>information in an Objective-C program would be represented by an object,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the program would probably run at a speed comparable to Smalltalk and it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>would suffer from not having optimizations performed on the basic</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>classes, like Smalltalk can do.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>3 <text:s text:c="2"/>What are the differences between Objective-C and C++?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>C++ is a multi-paradigm language; Objective-C is object orientation on</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>top of C. <text:s/>In this answer, only the OO aspects of both languages will be</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>discussed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In Objective-C, the value of a variable denoting an object is always a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reference to the object. <text:s/>In C++ it is, in addition, possible for the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>variable&apos;s value to be the actual object.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In Objective-C, all method invocations are dynamically bound. <text:s/>In C++,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>invocations of virtual member functions are dynamically bound. <text:s/>Other</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>(non-virtual) member functions are more like scoped normal functions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>with a different syntax. <text:s/>In Objective-C, the dynamic binding is safe:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it will be signaled if an object does not implement the requested</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>method; in C++, the results will be unpredictable. <text:s/>In Objective-C, the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>safe dynamic binding mechanism underlies method forwarding and easy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>delegation. <text:s/>The selector type and perform: methods further increase the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>usefulness of dynamic binding.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C only allows single inheritance, with the Object class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>residing at the root of the inheritance tree. <text:s/>C++ allows multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance where direct superclasses must be distinct and conspicuous</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>use of `virtual&apos; defines whether a repeatedly inherited superclass is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>shared or repeated in the subclass.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In Objective-C, static typing is optional, though commonly used; in C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>static typing is mandatory.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In C++ (member) functions can be overloaded on argument types.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Operators can be overloaded too. <text:s/>Both are not possible in Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Other differences include C++&apos; implicit invocation of constructor and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>destructor functions when objects enter and exit scope, respectively;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and the concept of `friend&apos; classes and functions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C protocols resemble C++ signatures. <text:s/>In Objective-C, a class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>is an object like any other; C++ classes do not exist at run time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>4 <text:s text:c="2"/>What is the difference between Objective-C and Java?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The most obvious difference is syntax: Java&apos;s syntax is based on C++&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>whereas Objective-C employs the C syntax (and semantics) with the syntax</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of object declaration and manipulation based on Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The Java object model comes straight from Objective-C. <text:s/>Nested classes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>do not change that since they are retrofitted, in Java 1.1, onto the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>original Java 1.0 object model for compatibility with 1.0 tools.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Features that Java adds include mandatory typing, exception and thread</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>support in the language, security managers, name spaces, predefined</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class libraries (java.lang, awt), etc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Features that Java misses include categories and the selector type. <text:s/>No</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>categories means that a class can not be amended to suit your needs (a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>problem suffered by more OO languages, including C++). <text:s/>No selector type</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>means that `forward::&apos; and `perform:&apos; methods do not exist, and that the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>possibilities of dynamic binding are limited; e.g. you can&apos;t tell an</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>array to say `@selector (hello)&apos; to all its elements, and the buttons in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>your GUI won&apos;t be able to use the target/action paradigm employed by the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>OPENSTEP AppKit (and which is why inner classes were invented in Java</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>1.1).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Java currently enjoys a lot of `compile-once run-anywhere&apos; hype. <text:s/>Even</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>though Objective-C in this respect suffers the portability problems of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>C, OPENSTEP provides a foundation that could be described as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`compile-once-for-each-platform run-on-each-platform&apos;: OPENSTEP enables</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>application deployment on platforms ranging from MS Windows to Solaris.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>This is without modifications to the source, which is what</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`compile-once&apos; is all about.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>5 <text:s text:c="2"/>What are the `nice features&apos; of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The possibility to load class definitions at run time. <text:s/>The possibility</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to extend a class at compile, link, or run time, through a category or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class posing.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objects are dynamically typed: full type information (name and type of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>instance variables; name, argument and return types of methods, etc) is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>available at run time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Every method invocation is dynamically bound. <text:s/>Add to this the selector</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>type, forward:: and perform: methods, and you get flexibility not easily</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>matched by other OO languages. <text:s/>Object archiving and distributed objects</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>(`remote method invocation&apos; in Java speak) are easy, not just to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>implement but also to use.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>6 <text:s text:c="2"/>What are some problems of the language and how can I work around them?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The underlying language is C: use Objective-C and you get all of C&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>problems for free.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There are some `common problems&apos;:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>There is no innate multiple inheritance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Protocols address the absence of multiple inheritance (MI) to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>some extent: Technically, protocols are equivalent to MI for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>purely &quot;abstract&quot; classes (see the answer on `Protocols&apos; below).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>To get around the absence of MI, you can create a compound</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>class, i.e. a class with instance variables that are references</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>to other objects. <text:s/>Instances can specifically redirect messages</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>to any combination of the objects they are compounded of. <text:s/>(It</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>isn&apos;t that much of a hassle and you have direct control over the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>inheritance logistics.) <text:s/>Of course, this is not `getting around</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>the problem of not having multiple inheritance&apos;, but just</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>modeling the world slightly different in such a way that you</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>don&apos;t need multiple inheritance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>There are no class variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>You can get around this by defining a static variable in the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>implementation file, and defining access methods for it. <text:s/>This</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>is actually a more desirable way of designing a class hierarchy,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>because subclasses shouldn&apos;t access superclass storage (this</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>would cause the subclass to break if the superclass was</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>reimplemented), and allows the subclass to override the storage</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>(if the classes access all their own variables via methods).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>To get the effect of class variables for which each subclass has</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>a distinct value, more elaborate schemes are needed. <text:s/>An often</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>used solution is to use a hash table to store the value of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>`variable&apos;, keyed on the class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>7 <text:s text:c="2"/>What object encapsulation does Objective-C provide?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Object encapsulation can be discerned at two levels: encapsulation of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>instance variables and of methods. <text:s/>In Objective-C, the two are quite</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>different.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Instance variables:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The keywords @public, @private and @protected are provided to secure</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>instance variables from prying eyes to some extent.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>@public <text:s text:c="8"/>anyone can access any instance variable.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>@protected <text:s text:c="5"/>only methods belonging to this object&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>class or a subclass thereof have access to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>the instance variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>@private <text:s text:c="7"/>only methods of this class may access the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>instance variables. <text:s/>This excludes methods</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>of a subclass.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>If not explicitly set, all instance variables are @protected. <text:s/>Some</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>people advocate that only @private should be used. <text:s/>It is generally</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>agreed upon that @public if prohibited.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Note: Instance variable encapsulation is enforced at compile-time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>At run-time, full typing information on all instance variables is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>available, which sort-of makes all variables @public again.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Methods:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>To the Objective-C runtime, all methods are @public. <text:s/>The programmer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>can only show his/her intention of making specific methods not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>public by not advertising them in the class&apos; interface. <text:s/>In</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>addition, so-called private methods can be put in a category with a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>special name, like `secret&apos; or `private&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>However, these tricks do not help much if the method is declared</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>elsewhere, unless one employs static typing. <text:s/>And the runtime</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>doesn&apos;t care about all this and any programmer can easily circumvent</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>the tricks described. <text:s/>Thus, all methods really are always @public.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>8 <text:s text:c="2"/>What are Protocols?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols are an addition to Objective-C that allows you to organize</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>related methods into groups that form high-level behaviors. <text:s/>Protocols</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>are currently available in NeXTSTEP (since 3.0) and derivatives, and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU CC (since 2.4).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In short, a protocol is a set of method declarations. <text:s/>A protocol can</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inherit from multiple other protocols, and a class can inherit multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>protocols. <text:s/>The protocol hierarchy is unrelated to the class hierarchy.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The type of a variable can be `id &lt;P&gt;&apos; to denote that the class of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>object pointed to does not matter, as long as the class implements all</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>methods prescribed by the protocol P. <text:s/>Protocols provide `multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance of interface&apos;. <text:s/>They are matched by Java interfaces and C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>signatures.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols address the MI issue. <text:s/>When you design an object with multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance, you usually don&apos;t want *all* the features of both A and B,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>you want feature set X from A and feature set Y from B. <text:s/>If those</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>features are methods, then encapsulating X and Y in protocols allows you</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to say exactly what you want in your new object. <text:s/>Furthermore, if</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>someone changes objects A or B, that doesn&apos;t break your protocols or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>your new object. <text:s/>This does not address the question of new instance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>variables from A or B, only methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols allow you to get type-checking features without sacrificing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>dynamic binding. <text:s/>You can say &quot;any object which implements the messages</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>in Protocol Foo is OK for this use&quot;, which is usually what you want -</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>you&apos;re constraining the functionality, not the implementation or the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols give library builders a tool to identify sets of standard</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>protocols, independent of the class hierarchy. <text:s/>Protocols provide</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>language support for the reuse of design, whereas classes support the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reuse of code. <text:s/>Well designed protocols can help users of an application</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>framework when learning or designing new classes. <text:s/>Here is a simple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>protocol definition for archiving objects:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@protocol Archiving</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>-read: (Stream *) stream;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>-write: (Stream *) stream;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@end</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Once defined, protocols can be referenced in a class interface as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>follows:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>/* MyClass inherits from Object and conforms to the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="11"/>Archiving protocol. <text:s/>*/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@interface MyClass: Object &lt;Archiving&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@end</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Unlike copying methods to/from other class interfaces, any incompatible</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>change made to the protocol will immediately be recognized by the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>compiler (the next time the class is compiled). <text:s/>Protocols also provide</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>better type checking without compromising the flexibility of untyped,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>dynamically bound objects.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>MyClass *obj1 = [MyClass new];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>// OK: obj1 conforms to the Archiving protocol.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>id &lt;Archiving&gt; obj2 = obj1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>// Error: obj1 does not conform to the TargetAction protocol.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>id &lt;TargetAction&gt; obj3 = obj1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>9 <text:s text:c="2"/>Does Objective-C employ garbage collection?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>No. <text:s/>Some libraries conventionally use a reference counting scheme, but</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>since such a scheme is implemented outside the language, it needs a lot</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of extra typing (by the programmer, on the keyboard) with all the usual</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>consequences: errors caused by not properly maintaining an object&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reference count.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Hans Boehm&apos;s garbage collector can be used with Objective-C. <text:s/>Depending</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>on the Objective-C compiler and library you use, integration is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>automatic or needs some work.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Garbage Collection in an Uncooperative Environment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Garbage collection of chunks of memory obtained through (its</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>replacement of) malloc(3). <text:s/>Works for C, C++, Objective-C, etc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>@article{bw88,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>title=&quot;Garbage Collection in an Uncooperative Environment&quot;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>author=&quot;Hans J\&quot;urgen Boehm and Mark Weiser&quot;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>journal=&quot;Software Practice and Experience&quot;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>pages=807-820,volume=18,number=9,month=sep,year=1988}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>            Available as `<text:a xlink:href="ftp://parcftp.xerox.com/pub/gc/gc4.10.tar.gz" xlink:type="simple">ftp://parcftp.xerox.com/pub/gc/gc4.10.tar.gz</text:a>&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>(check the directory for a newer version).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>10 <text:s/>How do I debug Objective-C using an unaware gdb.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>On August 20 1996, Michael Snyder of NeXT posted patches to GDB 4.16</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to make it Objective-C aware for GNU Objective-C code. <text:s/>This was</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>tested on HP-UX, Solaris and MS Windows. <text:s/>As he did not supply an URL</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>for these patches, I&apos;ve made the postings available as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.diff.gz.uue" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.diff.gz.uue</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    and <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.README" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.README</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Debugging Objective-C using a non-Objective-C aware gdb has been</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>documented by Martin Cracauer &lt;cracauer@wavehh.hanse.de&gt; on</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.cons.org/cracauer/objc-hint-gdb.html" xlink:type="simple">http://www.cons.org/cracauer/objc-hint-gdb.html</text:a>.  It comes down to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>understanding that you can very well look at Objective-C from the C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>perspective, a language very well understood by gdb.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>11 <text:s/>I get this `Floating exception&apos;...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>This answer describes possible solutions for the floating exception</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>problem when using GNU Objective-C on i386 machines. <text:s/>[This problem</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>existed some time ago; it should not exist any more with recent</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>versions of the libraries/software.] <text:s/>If the problem you&apos;re having</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>does not fit either description, try applying the hack described in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387</text:a>, which has</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>been reported to work for Linux, FreeBSD, and DJGPP (2.7.2). <text:s/>If it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>does not solve the problem, ask.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>If you&apos;re running Linux, adding `-lieee&apos; to the linker invocation could</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>help. <text:s/>Thomas March &lt;amadeus@bga.com&gt; reported that on several</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>occasions, on systems running Linux ELF, with libc.so.5.0.9 and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>libm.so.5.?.?, the problem was reproducible and adding `-lieee&apos; did not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>solve the problem. <text:s/>However, switching to a newer libc (libc.so.5.2.18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and libm.so.5.0.5) both solved the problem and removed the need for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`-lieee&apos; (i.e. a back to normal situation).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>If you&apos;re using DJGPP, you might want to take a look at the DJGPP FAQ,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    especially <text:a xlink:href="http://www.delorie.com/djgpp/v2faq/faq082.html" xlink:type="simple">http://www.delorie.com/djgpp/v2faq/faq082.html</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>12 <text:s/>Why am I lectured by gcc about `#import&apos;?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU CC issues the following multi-line warning about the how the use</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of `#import&apos; is discouraged (output from GNU CC 2.7.0):</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>foo.m:1: warning: using `#import&apos; is not recommended</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The fact that a certain header file need not be processed more than once</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>should be indicated in the header file, not where it is used.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The best way to do this is with a conditional of this form:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>#ifndef _FOO_H_INCLUDED</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>#define _FOO_H_INCLUDED</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>... &lt;real contents of file&gt; ...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>#endif /* Not _FOO_H_INCLUDED */</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Then users can use `#include&apos; any number of times.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU C automatically avoids processing the file more than once</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>when it is equipped with such a conditional.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In short, use `-Wno-import&apos; as an argument to gcc to stop it from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>producing this. <text:s/>Another possibility is to compile gcc after having</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>changed the line reading `static int warn_import = 1&apos; into `static</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int warn_import = 0&apos; in `cccp.c&apos; (line 467 in GNU CC 2.7.1); this way,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`-Wno-import&apos; is the default setting.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Whether or not using `#import&apos; is desirable (obviously) has to do with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>how to prevent multiple inclusions of the same file. <text:s/>Most include</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>files, when included multiple times, either do nothing new (possibly</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>due to guards being used) or (without the guards) cause the emission</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of C code on which the compiler will choke (due to, for instance,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>repeated typedefs). <text:s/>Thus, if everybody were to use `#import&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>everybody would be happy, since it does not seem to matter. <text:s/>However,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a notable exception to this rule is `assert.h&apos;, which changes the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>definition of the `assert&apos; macro depending on the setting of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NDEBUG macro.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There is one point to be made in favor of the warning: if the _user_</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of an include file uses `#include&apos; instead of `#import&apos;, the guards</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>will be necessary. <text:s/>Thus, actually, the warning should be issued when</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a file is imported that appears not to be guarded.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Apart from the more-or-less religious (and thus useless) debate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>whether `#import&apos; or `#include&apos;-with-guards is better, it has been</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>observed that `#import&apos; does not catch re-reading a linked and/or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>duplicated file, whereas the guards do. <text:s/>However, this is, of course,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a highly unlikely and probably undesirable situation for which neither</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>was designed to catch.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The reason for the existence of `#import&apos; probably is historical: the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>first implementation of Objective-C (by Stepstone) was as a preprocessor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to C, run after a modified cpp. <text:s/>`#import&apos; was the include-once</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>directive to that cpp. <text:s/>Since it is part of the Objective-C language, it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>has made it into GNU CC&apos;s cpp.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>13 <text:s/>What written information concerning Objective-C is available?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Books on Objective-C, or object oriented programming in general:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Brad J. Cox, Andrew J. Novobilski: `Object Oriented Programming:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>An Evolutionary Approach&apos;, Addison-Wesley Publishing Company,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Reading, Massachusetts, 1991. <text:s/>ISBN: 0-201-54834-8 (Japanese:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>4-8101-8046-8).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This is the original book on Objective-C, which actually is a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>book on object oriented system development using Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Object-Oriented Programming and the Objective-C Language.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Originally published as `Nextstep Object-Oriented Programming and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>the Objective-C Language&apos; by Addison-Wesley in 1993 with ISBN</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>0-201-63251-9 (Japanese: 4-7952-9636-7). <text:s/>In its current [Tue Aug</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>26 1997] incarnation it is available on-line from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="http://devworld.apple.com/dev/SWTechPubs/Documents/OPENSTEP/ObjectiveC/objctoc.htm" xlink:type="simple">http://devworld.apple.com/dev/SWTechPubs/Documents/OPENSTEP/ObjectiveC/objctoc.htm</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This is a good book on OO programming in general, which focuses</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>on Objective-C as the implementation language. <text:s/>It is also the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>definitive source of information for the Objective-C language as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>implemented by NeXT (and GNU).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Lewis J. Pinson, Richard S. Wiener: Objective-C: Object Oriented</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Programming Techniques. <text:s/>Addison-Wesley Publishing Company, Reading,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Massachusetts, 1991. ISBN 0-201-50828-1 (Japanese: 4-8101-8054-9).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Includes many examples, discusses Stepstone&apos;s and NeXT&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>versions of Objective-C, and their differences.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Timothy Budd: An Introduction to Object-Oriented Programming.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Addison-Wesley Publishing Company, Reading, Massachusetts.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ISBN 0-201-54709-0 (Japanese: 4-8101-8048-4).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>An intro to the topic of OOP, as well as a comparison of C++,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C, Smalltalk, and Object Pascal</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Simson L. Garfinkel, Michael K. Mahoney: NeXTSTEP Programming Step</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ONE: Object-Oriented Applications. <text:s/>TELOS/Springer-Verlag, 1993</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>(tel: (800)SPR-INGE).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>It&apos;s updated to discuss NeXTSTEP 3.0 features (Project Builder,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>new development environment) but doesn&apos;t discuss 3DKit or DBKit.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Articles</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Why I need Objective-C&apos;, by Christopher Lozinski.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Journal of Object-Oriented Programming (JOOP) September 1991.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Contact info@bpg.com for a copy and subscription to the BPG</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>newsletter.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This article discusses the differences between C++ and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C in great detail and explains that Objective-C is a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>better object oriented language.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Concurrent Object-Oriented C (cooC)&apos;, by Rajiv Trehan et. al.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ACM SIGPLAN Notices, Vol. 28, No 2, February 1993.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This article discusses cooC, a language based on the premise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>that an object not only provides an encapsulation boundary but</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>should also form a process boundary. <text:s/>cooC is a superset of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Porting NEXTSTEP Applications to Microsoft Windows&apos;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>by Christopher Lozinski. <text:s/>NEXTWORLD EXPO Conference Proceedings,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>San Francisco, CA, May 25-27, 1993. <text:s/>Updated version of the article</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>available from the author. <text:s/>Contact info@bpg.com.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This article describes how to develop Objective-C applications</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for both Microsoft Windows and NEXTSTEP.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU Documentation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The GNU project needs a free manual describing the Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>language features. <text:s/>Because of its cause, GNU cannot include the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>non-free books in the GNU system, but the system needs to come with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>documentation.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Anyone who can write good documentation, please think about giving</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>it to the GNU project. <text:s/>Contact rms@gnu.ai.mit.edu.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>14 <text:s/>History</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C was developed by Brad Cox, who founded the Stepstone</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>corporation in 1983 to develop and support the language, a compiler,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and supporting libraries. <text:s/>Stepstone never really made it big,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>fostering Objective-C in a niche similar to that of Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In 1985, Steve Jobs left Apple and started NeXT, a company that</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>developed m68k machines and the NeXTSTEP operating system. <text:s/>The user</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>interface of these machines was provided by Display PostScript and the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>AppKit, which, written in Objective-C, made Objective-C the language of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>choice on NeXT computers.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Brad Cox and Andrew Novobilski write `Object Oriented Programming: An</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Evolutionary Approach&apos; in 1986, the first book on Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NEXTSTEP 1.0a was released in 1989. <text:s/>The Objective-C compiler is based</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>on gcc 1.34.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In 1991, the Objective-C related modifications by NeXT to gcc find</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>their way back into the FSF GNU CC distribution. <text:s/>By version 1.99, gcc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>(the compiler) supports Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NEXTSTEP 3.0 is released in 1992. <text:s/>The compiler supports Objective-C++,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and the Objective-C language has been extended with `@protocol&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In the same year, gcc 2.0 comes supplied with an Objective-C runtime</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>library.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In 1993, gcc supports protocols by version 2.4. <text:s/>NeXT stops the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>production of hardware. <text:s/>With NEXTSTEP 3.1 they include support for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>PC&apos;s. <text:s/>NeXT starts creating other products not bound to a particular</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>operating system, such as Portable Distributed Objects (PDO), which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>comes with its own Objective-C compiler and debugger.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>OPENSTEP, an Objective-C API, is made public in 1994.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NEXTSTEP 3.3 is released in 1995; it adds support for HP hppa and Sun</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>sparc machines. <text:s/>Also in this year, NeXT acquires all rights to the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C programming language and trademark from Stepstone.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Sun includes support for Objective-C++ in their SparcCompiler in 1996.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>They release OPENSTEP for Solaris. <text:s/>NeXT releases OPENSTEP 4.0 for PC</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>hardware. <text:s/>Support for hppa and sparc has vanished. <text:s/>OPENSTEP for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Windows NT is released.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Early 1997, Apple acquires NeXT and starts work on the next Macintosh</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>operating system, code named Rhapsody, based on the technology they got</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>from NeXT. <text:s/>In the same year, Sun fosters the success of Java and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>subsequently kills OPENSTEP for Solaris.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>[Entry updated Tue Feb 17 1998. <text:s/>Credits to Norihiro Ito, Hajime Murao,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>KATO Tsuguru, and Hironobu Suzuki.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>15 <text:s/>Major compilers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There are 4 major Objective-C compilers, provided by Apple, GNU,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Stepstone, and Portable Object Compiler. <text:s/>The Stepstone and POC are</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>preprocessors that emit vanilla C code, which makes them very</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>portable. <text:s/>The GNU compiler compiles directly to assembly, as does</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Apple&apos;s, which is based on the GNU compiler.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Apple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Apple (formerly NeXT) Objective-C compiler comes bundled with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OpenStep Developer, current Rhapsody seeds, and various other</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>products like Portable Distributed Objects (PDO) and WebObjects.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Bundled with the operating systems is the FoundationKit general</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>class library and the AppKit GUI library.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OpenStep is available for NeXT hardware and PC compatible Intel</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>machines. <text:s/>Rhapsody is the current name for the next-generation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Apple Macintosh operating system; it is based on OpenStep. <text:s/>Rhapsody</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>will be available for PowerPC-based Macintoshes and Intel-based PC</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>compatibles.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Apple Computer, Inc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>1 Infinite Loop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Cupertino, CA 95014</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>voice: 408-996-1010</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>        www: <text:a xlink:href="http://www.apple.com/" xlink:type="simple">http://www.apple.com/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Sep 21 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU CC, since version 2, comes with an Objective-C compiler. <text:s/>The</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>current distribution of GNU CC (version 2.8.0) includes an</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Objective-C compiler and runtime library. <text:s/>The latter includes the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Object&apos; and `NXConstantString&apos; classes. <text:s/>Some people are working</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>on GNU libraries, see part 2 of this FAQ (The ClassWare Listing)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>        for details or visit <text:a xlink:href="http://www.gnustep.org/" xlink:type="simple">http://www.gnustep.org/</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Free Software Foundation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>59 Temple Place -- Suite 330</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Boston, MA <text:s text:c="2"/>02111</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>+1-617-542-5942</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>General questions about the GNU Project can be asked to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>gnu@prep.ai.mit.edu.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>For information on how to order GNU software on tape or cd-rom,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>and printed GNU manuals, check the file etc/ORDERS in the GNU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Emacs distribution, ftp the file /pub/gnu/GNUinfo/ORDERS on prep,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>or e-mail a request to: gnu@prep.ai.mit.edu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>By ordering your GNU software from the FSF, you help us continue</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>to develop more free software. <text:s/>Media revenues are our primary</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>source of support. <text:s/>Donations to FSF are deductible on US tax</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>returns.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The above software will soon be at these ftp sites as well.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Please try them before prep.ai.mit.edu as prep is very busy!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>thanx -gnu@prep.ai.mit.edu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ASIA: ftp.cs.titech.ac.jp, tron.um.u-tokyo.ac.jp/pub/GNU/prep</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>cair-archive.kaist.ac.kr/pub/gnu, ftp.nectec.or.th/pub/mirrors/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>AUSTRALIA: archie.au/gnu (archie.oz or archie.oz.au for ACSnet)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>AFRICA: ftp.sun.ac.za/pub/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>MIDDLE-EAST: ftp.technion.ac.il/pub/unsupported/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>EUROPE: irisa.irisa.fr/pub/gnu, ftp.univ-lyon1.fr:pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.mcc.ac.uk, unix.hensa.ac.uk/mirrors/uunet/systems/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>src.doc.ic.ac.uk/gnu, ftp.ieunet.ie:pub/gnu, ftp.eunet.ch,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>nic.sunsite.cnlab-switch.ch/mirror/gnu, ftp.win.tue.nl/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.nl.net, ftp.informatik.rwth-aachen.de/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.informatik.tu-muenchen.de, ftp.etsimo.uniovi.es/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.funet.fi/pub/gnu, ftp.denet.dk, ftp.stacken.kth.se,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>isy..se, ftp.luth.se/pub/unix/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.sunet.se/pub/gnu, archive.eu.net</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>SOUTH AMERICA: ftp.inf.utfsm.cl/pub/gnu, ftp.unicamp.br/pub/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>WESTERN CANADA: ftp.cs.ubc.ca/mirror2/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>USA: wuarchive.wustl.edu/systems/gnu, labrea.stanford.edu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.digex.net/pub/gnu, ftp.kpc.com/pub/mirror/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>f.ms.uky.edu/pub3/gnu, jaguar.utah.edu/gnustuff,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.hawaii.edu/mirrors/gnu, uiarchive.cso.uiuc.edu/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.cs.columbia.edu/archives/gnu/prep,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>archive.cis.ohio-state.edu/pub/gnu, gatekeeper.dec.com/pub/GNU,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.uu.net/systems/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Sep 21 1997. <text:s/>GNU FTP mirror site list</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>up to date as of Tue Jan 13 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU/EGCS</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>        EGCS (at <text:a xlink:href="http://www.cygnus.com/egcs/" xlink:type="simple">http://www.cygnus.com/egcs/</text:a>) is a variation of GCC.  From</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>the EGCS FAQ:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>In brief, the three biggest differences between egcs and gcc2 are</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>these:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>More rexamination of basic architectual decisions of gcc and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>an interest in adding new optimizations;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>working with the groups who have fractured out from gcc2 (like</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>the Linux folks, the Intel optimizations folks, Fortran folks)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>including more front-ends; and finally</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>An open development model (see below) for the development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>process.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Like GCC, EGCS supports Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Stepstone</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Steptone provides Objective-C compilers and runtime for: Apple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Macintosh (running Mac Programmers Workshop), DEC (Open VMS,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OSF/1, ULTRIX), HP9000/700, 800 (HPUX), IBM RISC System/6000</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>(AIX), MIPS, NeXT, PC (MS-DOS, OS/2, MS Windows 3.1/95/NT, SCO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Unix), Sun 3/4/SPARC (SunOS, Solaris), Silicon Graphics INDIGO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>(IRIS). <text:s/>Other ports available by market demands or consulting</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>services.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The ICpak101 Foundation Class Library is available on all the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>above. <text:s/>The ICpak201 GUI Class Library is available on platforms</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>that support XWindows, Motif, OpenWindows and SunView.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Stepstone Corporation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>75 Glen Road</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Sandy Hook, CT 06482</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>voice: 203 426 1875</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>voice: 800 BUY OBJEct</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>fax: <text:s text:c="2"/>203 270 0106</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>        www: <text:a xlink:href="http://www.stepstn.com/" xlink:type="simple">http://www.stepstn.com/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Aug 31 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Portable Object Compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Portable Object Compiler is available on Windows 95, Windows</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>NT, OS/2, Macintosh MPW, Amiga, BeOS, Linux, Linux/Alpha, MkLinux,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>FreeBSD, NetBSD, AIX, SunOS, Solaris, NeXTstep, HP-UX, SGI IRIX,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OSF/1 Digital UNIX, Apple Rhapsody, and CRAY Unicos.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>It&apos;s an Objective C compiler, developed under the GNU Library</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>General Public License, compatible with several C compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>environments, including GNU cc, lcc, SGI cc, MIPSpro cc, HP-UX cc,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>AIX cc, DEC cc, SUN acc, DJGPP gcc, Cray cc, pgcc, WATCOM wcc,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Microsoft Visual C, Metrowerks MWCPPC, Metrowerks/BeOS mwcc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>and IBM Visual Age icc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Portable Object Compiler supports C and C++ as base languages,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>and comes with an extensive set of collection class objects,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>including objects for arbitrary precision arithmetic. <text:s/>Most of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>collection class objects compile on, and work with, Stepstone</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Objective C, GNU Objective C and NeXT Objective C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Additional interesting features of the compiler are support for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Objective-C blocks, an option for garbage collection and an inline</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>cache, pure C messenger.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Portable Object Compiler is obtainable from a few sites,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>         <text:a xlink:href="http://www.can.nl/%7Estes/compiler.html" xlink:type="simple">http://www.can.nl/~stes/compiler.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>         <text:a xlink:href="http://cage.rug.ac.be/%7Estes/compiler.html" xlink:type="simple">http://cage.rug.ac.be/~stes/compiler.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>         <text:a xlink:href="http://hydrogen.ch.ntu.edu.tw:8080/%7Edavid/OBJC/software.html" xlink:type="simple">http://hydrogen.ch.ntu.edu.tw:8080/~david/OBJC/software.html</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Jan 25 1998.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>16 <text:s/>Compiler differences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>This section lists differences between the various Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>compilers that are available. <text:s/>The following compilers are compared:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Compiler <text:s text:c="3"/>Description</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>gcc <text:s text:c="8"/>GNU CC, version 2.8.0 or later</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>apple <text:s text:c="6"/>The (GNU CC based) compiler supplied with Rhapsody (previously</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>known as the NeXT compiler supplied with NextStep/OpenStep).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>stepstone <text:s text:c="2"/>Stepstone Objective-C compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>objc <text:s text:c="7"/>Portable Object Compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The following table lists features of only the compiler and runtime</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>library. <text:s/>Any other libraries normally supplied or associated with the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>compiler are not taken into account.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Feature <text:s text:c="28"/>gcc <text:s text:c="4"/>apple <text:s text:c="2"/>stepstn objc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>supports</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>blocks (1) <text:s text:c="23"/>no <text:s text:c="5"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>categories <text:s text:c="23"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>replacing methods <text:s text:c="14"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>garbage collection <text:s text:c="15"/>no (3) <text:s/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes (2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Objective-C++ <text:s text:c="20"/>no <text:s text:c="5"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>protocols <text:s text:c="24"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>no</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>static method binding <text:s text:c="12"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes <text:s text:c="4"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>static/automatic allocation <text:s text:c="6"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes <text:s text:c="4"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>supports =-style class defs <text:s text:c="6"/>no <text:s text:c="5"/>no <text:s text:c="5"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>method decls in implementation <text:s text:c="3"/>no <text:s text:c="5"/>no <text:s text:c="5"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>multithreading <text:s text:c="19"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>+initialize method <text:s text:c="15"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>+load method <text:s text:c="21"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>@&quot;string objects&quot; <text:s text:c="16"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>no</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>@class forward declarations <text:s text:c="6"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>source available <text:s text:c="19"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>method binding mechanism <text:s text:c="11"/>sparse <text:s/>class <text:s text:c="2"/>? <text:s text:c="6"/>inline</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="40"/>array <text:s text:c="2"/>cache <text:s text:c="10"/>cache</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>exception handling mechanism <text:s text:c="7"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>notes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>1: Described as `Action Expressions&apos; in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>       <text:a xlink:href="http://www.virtualschool.edu/cox/CoxTaskMaster.html" xlink:type="simple">http://www.virtualschool.edu/cox/CoxTaskMaster.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>2: Using Hans Boehm&apos;s garbage collector (see question 9).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>3: Work in progress; some next release of gcc/ecgs will</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="7"/>have support for using Boehm&apos;s garbage collector.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>17 <text:s/>Objective-C support per platform</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Below is a list of compilers supporting Objective-C, and which are not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NeXT&apos;s, Stepstone&apos;s or plain GCC.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>DOS, Windows, OS/2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>BPG</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG provides the Borland Extensions to Objective-C which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>allows the Objective-C translator to be used with the Borland</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Compiler, and makes it easy to develop Objective-C application</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for Microsoft Windows.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG provides the Smalltalk Interface to Objective-C which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>makes Objective-C objects look like Smalltalk Objects. <text:s/>It can</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>be used to build Graphical User Interface on portable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C objects, or to sell Objective-C libraries to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Smalltalk developers.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG provides the Objective-C Message Bus which sends</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C messages across heterogeneous computer platforms.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG has a library of objects for modeling Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>programs. <text:s/>A browser application has been built on this</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>library. <text:s/>Other potential applications include adding class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>variables to Objective-C, adding runtime information about</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>instance variables, and method argument types, generating</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>object versions, and eventually building a browser/translator.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Christopher Lozinski</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>BPG</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>35032 Maidstone Court</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Newark, CA 94560</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Tel: +1 510 795-6086</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>fax: +1 510 795-8077</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>email: info@bpg.com</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>DJGPP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>DJGPP includes Objective-C support [though I do not know to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>which extent].</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>            From the DJGGP homepage at <text:a xlink:href="http://www.delorie.com/" xlink:type="simple">http://www.delorie.com</text:a>:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>DJGPP is a complete 32-bit C/C++ development system for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Intel 80386 (and higher) PCs running DOS. It includes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>ports of many GNU development utilities. The development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>tools require a 80386 or newer computer to run, as do the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>programs they produce. In most cases, the programs it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>produces can be sold commercially without license or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>royalties.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GCC/EMX</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>The EMX port of GCC implements Objective-C, and with RSX (or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>RSXNT) it runs on DOS/DPMI boxes (or NT) too.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>EMX is available for anonymous ftp on at following locations:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://ftp.uni-stuttgart.de/pub/systems/os2/leo/devtools/emx+gcc/" xlink:type="simple">ftp://ftp.uni-stuttgart.de/pub/systems/os2/leo/devtools/emx+gcc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://ftp-os2.cdrom.com/pub/os2/lang/emxtools/" xlink:type="simple">ftp://ftp-os2.cdrom.com/pub/os2/lang/emxtools/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://ftp.leo.org/pub/comp/os/os2/devtools/emx+gcc/" xlink:type="simple">ftp://ftp.leo.org/pub/comp/os/os2/devtools/emx+gcc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://src.doc.ic.ac.uk/packages/os2/ftp.cdrom.com/lang/emxtools/" xlink:type="simple">ftp://src.doc.ic.ac.uk/packages/os2/ftp.cdrom.com/lang/emxtools/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>RSX is available from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>            <text:a xlink:href="ftp://ftp.uni-bielefeld.de/pub/systems/msdos/misc/" xlink:type="simple">ftp://ftp.uni-bielefeld.de/pub/systems/msdos/misc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Without RSX EMX is limited to DOS/VCPI and OS/2 &gt;=2.0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>[Thanks to &lt;huug@poboxes.com&gt; for this information.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GCC for Win32</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Hyungjip Kim &lt;hjkim@namo.co.kr&gt; provides GCC 2.7.2 binaries</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for Win32. <text:s/>This GCC is modified to generate CodeView</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>compatible debug information, to enable the use of existing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>            Windows debuggers.  Visit <text:a xlink:href="http://www.darkland.co.kr/%7Ehjkim/objc/" xlink:type="simple">http://www.darkland.co.kr/~hjkim/objc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for more information, and the binaries.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU-Win32</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>The GNU-Win32 project aims at providing the GNU tools</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>(including GCC) for Windows NT/95. <text:s/>[I do not know to which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>extent Objective-C is supported.] <text:s/>Below is a description of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>            the project, taken from <text:a xlink:href="http://www.cygnus.com/misc/gnu-win32" xlink:type="simple">http://www.cygnus.com/misc/gnu-win32</text:a>:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>The GNU-Win32 tools are ports of the popular GNU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>development tools to Windows NT/95 for the x86 and powerpc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>processors. Applications built with these tools have</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>access to the Microsoft Win32 API as well as the Cygwin32</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>API which provides additional UNIX-like functionality</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>including UNIX sockets, process control with a working</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>fork and select, etc...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>With these tools installed, it is now possible to:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>write Win32 console or GUI applications that make use of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>the standard Microsoft Win32 API and/or the Cygwin32 API.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>easily configure and build many GNU tools from source</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>(including rebuilding the gnu-win32 development tools</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>themselves under x86 NT).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>port many other significant UNIX programs to Windows NT/95</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>without making significant changes to the source code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>have a fairly full UNIX-like environment to work in, with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>access to many of the common Unix utilities (from both the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>bash shell and command.com).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>The GNU-Win32 project is run by Cygnus; for more information</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>            see <text:a xlink:href="http://www.cygnus.com/" xlink:type="simple">http://www.cygnus.com</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Macintosh</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Metrowerks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Preliminary Objective-C support for the MacOS will be included</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>in CodeWarrior Professional 1, to be released at the end of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>May 1997. <text:s/>[Entry written Thu May 15 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Metrowerks Corporation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>2201 Donley Drive</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Austin, TX 78758</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>            <text:a xlink:href="http://www.metrowerks.com/" xlink:type="simple">http://www.metrowerks.com/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>phone: 1-800-377-5416, +1 512 873 8313</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>email: info@metrowerks.com</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Tenon</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Tenon CodeBuilder supports Objective-C. <text:s/>This product is based</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>on GNU CC and targeted at the Power Macintosh.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>            <text:a xlink:href="http://www.tenon.com/products/codebuilder/" xlink:type="simple">http://www.tenon.com/products/codebuilder/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Sun SPARC</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Sun</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Sun&apos;s SPARCcompiler C++ 4.1 understands Objective-C, though it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>does not come with the relevant include files and libraries.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>At one time, Sun provided OpenStep on Solaris; it now seems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>that they are trying very hard to forget that: Sun&apos;s WWW site</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>no longer provides any relevant information on either OpenStep</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>or Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>18 <text:s/>What are the newsgroups or mailing lists to read?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Read comp.lang.objective-c, which is bound to discuss current events.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Also, threads on comp.sys.next.programmer are Objective-C specific on</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>occasion.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There is a mailing list on GNU Objective-C: gnu-objc@gnu.ai.mit.edu.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>To subscribe to this list, send a mail with your request to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`gnu-objc-request@gnu.ai.mit.edu.&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There&apos;s a mailing list for Portable Object Compiler users. Send email to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>&apos;objc-users-request@peti.gmd.de&apos; to subscribe.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNUstep has several newsgroups devoted to it: gnu.gnustep.announce and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>gnu.gnustep.discuss to name but a few.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Furthermore, the various kits that are being developed each come with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>their own mailing list. <text:s/>See part 2 of this FAQ for more information.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>19 <text:s/>Are there any FTP sites with Objective C code? <text:s/>Where?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>All Rhapsody/NextStep/OpenStep sites carry Objective-C material.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>To name a few:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://next-ftp.peak.org/pub/next/" xlink:type="simple">ftp://next-ftp.peak.org/pub/next/</text:a>       (NEXTSTEP)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ftp.leo.org/pub/comp/platforms/next/" xlink:type="simple">ftp://ftp.leo.org/pub/comp/platforms/next/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ftp.informatik.uni-muenchen.de/" xlink:type="simple">ftp://ftp.informatik.uni-muenchen.de</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ftp.gnustep.org/pub/" xlink:type="simple">ftp://ftp.gnustep.org/pub/</text:a>              (GNUStep)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ccrma-ftp.stanford.edu/pub/NeXT/" xlink:type="simple">ftp://ccrma-ftp.stanford.edu/pub/NeXT/</text:a>  (MusicKit a.o.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>See also part 2 of this FAQ.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>20 <text:s/>Is there any information on the Net concerning Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Basic and related Objective-C (and/or NeXTSTEP) information is available</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>at the following places:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    Apple Enterprise Group at <text:a xlink:href="http://www.enterprise.apple.com/" xlink:type="simple">http://www.enterprise.apple.com/</text:a> with the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    book at <text:a xlink:href="http://gemma.apple.com/techinfo/techdocs/rhapsody/apple.html" xlink:type="simple">http://gemma.apple.com/techinfo/techdocs/rhapsody/apple.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Steve deKorte&apos;s Objective-C page at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.slip.net/%7Edekorte/Objective-C/" xlink:type="simple">http://www.slip.net/~dekorte/Objective-C/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Brad Cox&apos;s Objective-C page at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.virtualschool.edu/mon/Cox/ObjectiveC.html" xlink:type="simple">http://www.virtualschool.edu/mon/Cox/ObjectiveC.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    the GNUStep project at <text:a xlink:href="http://www.gnustep.org/" xlink:type="simple">http://www.gnustep.org/</text:a>, with a mirror at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.nmr.embl-heidelberg.de/GNUstep" xlink:type="simple">http://www.nmr.embl-heidelberg.de/GNUstep</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the libobjects FAQ at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="ftp://ftp.cs.rochester.edu/pub/u/mccallum/libobjects/Gnustep-FAQ.html" xlink:type="simple">ftp://ftp.cs.rochester.edu/pub/u/mccallum/libobjects/Gnustep-FAQ.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    the NEXTSTEP/OpenStep Information Service at <text:a xlink:href="http://www.stepwise.com/" xlink:type="simple">http://www.stepwise.com/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    the eduStep initiative at <text:a xlink:href="http://www.nmr.embl-heidelberg.de/eduStep/" xlink:type="simple">http://www.nmr.embl-heidelberg.de/eduStep/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    Cetus Links (<text:a xlink:href="http://www.rhein-neckar.de/%7Ecetus/" xlink:type="simple">http://www.rhein-neckar.de/~cetus/</text:a>) has many links on OO;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    Objective-C is on <text:a xlink:href="http://www.rhein-neckar.de/%7Ecetus/oo_objective_c.html" xlink:type="simple">http://www.rhein-neckar.de/~cetus/oo_objective_c.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Nelson Minar&apos;s Objective-C page at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.santafe.edu/projects/swarm/ObjC/objective-c.html" xlink:type="simple">http://www.santafe.edu/projects/swarm/ObjC/objective-c.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    Tiggr&apos;s Objective-C page at <text:a xlink:href="http://www.ics.ele.tue.nl/%7Etiggr/objc/" xlink:type="simple">http://www.ics.ele.tue.nl/~tiggr/objc/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    Portable Object Compiler homepage at <text:a xlink:href="http://www.can.nl/%7Estes/compiler.html" xlink:type="simple">http://www.can.nl/~stes/compiler.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    Norihiro Itoh&apos;s page at <text:a xlink:href="http://www.fsinet.or.jp/%7Enito/index-j.html" xlink:type="simple">http://www.fsinet.or.jp/~nito/index-j.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and of course the HTML versions of this FAQ and associated information</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>at the addresses listed below.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>21 For more information...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Visit one of the places mentioned in #20, or see part 2 of this FAQ,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C/classes a.k.a. the ClassWare Listing, for an [incomplete!]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>overview of available Objective-C classes and libraries. <text:s/>See part 3 of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>this FAQ, Objective-C/sample a.k.a. the Simple Sample Program, for an</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>example Objective-C program.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>A World Wide Web hypertext version of this FAQ is maintained by Steve Dekorte</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>&lt;dekorte@suite.com&gt; at <text:a xlink:href="http://www.slip.net/%7Edekorte/Objective-C/" xlink:type="simple">http://www.slip.net/~dekorte/Objective-C/</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>A Japanese language version of this FAQ, maintained by Norihiro Itoh</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>&lt;nito@fsinet.or.jp&gt;, resides at <text:a xlink:href="http://www.fsinet.or.jp/%7Enito/index-j.html" xlink:type="simple">http://www.fsinet.or.jp/~nito/index-j.html</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>The early version of this FAQ was compiled by Bill Shirley, with the aid of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>many people. <text:s/>The current version is being maintained by Pieter Schoenmakers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;tiggr@gerbil.org&gt;, aided by input from a lot of people, including: Per</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>Abrahamsen, Paul Burchard, Brad Cox, Christopher Lozinski, Mike Mahoney, Jon</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>F. Rosen, Paul Sanchez, Lee Sailer, David Stes, Paul Sanchez, Bill Shirley,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>Subrata Sircar, Ted Slupesky, Richard Stallman, and Kersten Krab Thorup.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>Send your suggestions, additions, bug reports, comments and fixes to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>tiggr@gerbil.org.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The information in this file comes AS IS, WITHOUT ANY WARRANTY. <text:s/>You may</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>use the information contained in this file or distribute this file, as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>long as you do not modify it, make money out of it or take the credits.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1047739">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="Feuille10" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="1024" table:default-cell-style-name="ce63"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Base classes and general description How the event handling happens? Difference between UIWindow and UIView Can we have more UIWindows in iOS?Yes, but rare – UIAlertView is a separate window Difference between bounds, frame of a view What&apos;s very important designing UIs (views)? Difference between points and pixels What is the responder chain? What is IBOutlet and IBAction? How do you use them? Basic tableview how to: datasource and delegate implementation Drawbacks of UITableViews Collection views Benefits of collections views What is very important updating the UI in a multithreaded application? How can you do that? what to do when the keyboard appears and hides some parts of the UI that are important - logic implementation Why should we release the outlets in viewDidUnload in MRC? What about ARC? Difference in Xib/storyboard vs nib? Animations? view transitions? how can we present new view controllers? tabbar vs toolbar vs navigationbar: when to use which, can you combine them? [expand tag=”div”  title=”UI customization (possible ways to set color etc)”]use public properties, use appearance[/expand] UIAppearance basics, difference between setting through appearance proxy and instance </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell/>
     <table:table-cell table:style-name="ce76" office:value-type="string" calcext:value-type="string">
      <text:p>CoreData</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>what is CoreData and what do we use it for is CoreData == sqlite or some wrapper? what types of stores does core data support What is the minimum necessary classes and relationship between them? Can the NSPersistentStoreCoordinator have more persistent stores? What is a managed object context What about multi-threading and core data usage What is an NSManagedObjectId What is lazy loading, how does this relate to core data, situations when this can be handy How to read only a few attributes of an entity What is a fetchedresultcontroller How to synchronize contexts How could one simulate an NSManagedObject (dynamic properties) </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell/>
     <table:table-cell table:style-name="ce76" office:value-type="string" calcext:value-type="string">
      <text:p>Tricky questions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>What is an actual class in ObjectiveC What is the isa member How to make a static library optional? How to correctly implement a retaining setter property How to declare the properties to work the same in MRC and ARC? What happens if you add your just created object to a mutable array, and you release your object What happens with the objects if the array is released What happens if you remove the object from the array/dict, and you try to use it Garbage collection on iPhone The circular reference problem with delegates What happens when we invoke a method on a nil pointer? What happens when we call a method on an object which doesn&apos;t exists? Does KVO works with iVars? Does KVC works with iVars? When it is mandatory to synthesize properties What to do in a situation when a class not necessarily implement a method from a protocol Difference between nil and Nil and NULL??? How does proxy-ing work ??? How to call a method on an &apos;unknown&apos; typed object? How to call a selector with more than 2 parameters? How to cancel a block? How NSOperation cancellation works? Can we/should we invoke (public) instance methods in an initializer and the dealloc? what about properties? NSCoding, NSKeyedArchiving Can we use our own objects as key in a dictionary? The difference between a shallow and a deep copy What can&apos;t we put into an array or dictionary? How can we put nil it into dictionary/array? How to get the current language of the device? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
      <text:p>Post navigation </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://andras.palfi.hu/robert-c-martin-clean-architecture-and-design/" xlink:type="simple">←Robert C. Martin: Clean Architecture and Design</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://andras.palfi.hu/select-items-from-a-list-without-repetition/" xlink:type="simple">Select items from a list without repetition →</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048563">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="C++ faq" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce77"/>
    <table:table-column table:style-name="co10" table:default-cell-style-name="ce78"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1022" table:default-cell-style-name="ce77"/>
    <table:table-row table:style-name="ro27">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how to get the effect of To get the effect of a virtual friend ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell/>
     <table:table-cell table:style-name="ce79" office:value-type="string" calcext:value-type="string">
      <text:p>Why can’t my derived class access private things from my base class?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell table:style-name="ce78"/>
     <table:table-cell table:style-name="ce80" office:value-type="string" calcext:value-type="string">
      <text:p>protected inline access functions</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro27" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro27" table:number-rows-repeated="183">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27" table:number-rows-repeated="1048386">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="c++ ref" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co11" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>sizeof an empty class is ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Size of class is 1</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
      <text:p>What is a “virtual constructor”?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>An idiom that allows you to do something that C++ doesn’t directly support.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
      <text:p>Example 1 using the idiom of virtual contructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Shape {</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual ~Shape() { } <text:s text:c="16"/>// A virtual destructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual void draw() = 0; <text:s text:c="12"/>// A pure virtual function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual void move() = 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>// ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>      virtual <text:span text:style-name="T45">Shape</text:span>* clone()  const = 0;   // Uses the copy constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual Shape* create() const = 0; <text:s text:c="2"/>// Uses the default constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Circle : public Shape {</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Circle* clone() <text:s/>const; <text:s text:c="2"/>// Covariant Return Types; see below</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Circle* create() const; <text:s text:c="2"/>// Covariant Return Types; see below</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>// ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T45">Circle</text:span>* Circle::clone()  const { return new Circle(*this); }</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Circle* Circle::create() const { return new Circle(); <text:s text:c="5"/>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>with the code above, calling clone using Shape, creates Circle.</text:p><text:p>Note the covariant return type of clone and create functions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
      <text:p>Example 2 using the idiom of virtual constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>A variant of factory method using virtual constructor idiom:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct F { <text:s/>// interface to object creation functions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>virtual A* make_an_A() const = 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>virtual B* make_a_B() const = 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>void user(const F&amp; fac)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>A* p = fac.make_an_A(); // make an A of the appropriate type</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>B* q = fac.make_a_B(); <text:s/>// make a B of the appropriate type</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>// ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>user function can use any class derived from F, even if it is completely isolated from it.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>Arrays and inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>casting or passing as function argument :</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Derived * <text:s/>→ Base * <text:s/>: legal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Derived ** <text:s/>→ Base ** : illegal, pass a vector of Dogs to a function expecting a vector of Pets</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>array of Derived <text:s/>→ array of Base : legal but run-time error see code 13 <text:s text:c="4"/>use std::array&lt;T, N&gt; is better </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Std::container of Derived * <text:s/>→ Std::container of Base * : illegal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Code 13</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>void userCode(Base* arrayOfBase)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>arrayOfBase[2].f(); <text:s/>//this points to the position arrayOfBase+sizeof(Base)*2. If sizeof(Derived) &gt; sizeof(Base) → catastrophy </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>Derived arrayOfDerived[10]; <text:s text:c="2"/>// 4</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>userCode(arrayOfDerived); <text:s text:c="4"/>// 5</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>std::map vs std::unordered_map</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>the first uses tree-based lookedup, the second uses hash based lookedup</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Array, collection, typle, shared_ptr, unique_ptr</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>std::vector vs std::Array</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>the first uses the heap, the second uses the stack</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
        <text:p>Arrays are fixed-size sequence containers: they hold a specific number of elements ordered in a strict linear sequence.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;array&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>int main ()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::array&lt;int,10&gt; myarray;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>unsigned int i;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>// assign some values:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>for (i=0; i&lt;10; i++) myarray[i]=i;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>// print content</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;myarray contains:&quot;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>for (i=0; i&lt;10; i++)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>std::cout &lt;&lt; &apos; &apos; &lt;&lt; myarray[i];</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
        <text:p>A tuple is an object capable to hold a collection of elements. Each element can be of a different type.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;tuple&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>int main ()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::tuple&lt;int,char&gt; mytuple (10,&apos;a&apos;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::get&lt;0&gt;(mytuple) = 20;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;mytuple contains: &quot;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::get&lt;0&gt;(mytuple) &lt;&lt; &quot; and &quot; &lt;&lt; std::get&lt;1&gt;(mytuple);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>Std::get function is specialized for pair and array too.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;utility&gt; <text:s text:c="5"/>// std::pair, std::get</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt; <text:s text:c="4"/>// std::cout</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>int main () {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::pair &lt;int,char&gt; foo (10,&apos;x&apos;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::get&lt;0&gt;(foo) = 50;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;foo contains: &quot;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::get&lt;0&gt;(foo) &lt;&lt; &quot; and &quot; &lt;&lt; std::get&lt;1&gt;(foo) &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
        <text:p>Is an array of Derived a kind-of an array of Base?</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>void userCode(Base* arrayOfBase)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>arrayOfBase[1].f(); <text:s text:c="10"/>// 3</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>int main()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>Derived arrayOfDerived[10]; <text:s text:c="2"/>// 4</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>userCode(arrayOfDerived); <text:s text:c="4"/>// 5</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>// ...</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>the compiler does not know the arg. To userCode is an array and does not detect the run time catastrophy.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
        <text:p>a container of derived can&apos;t be cast to container of base</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>void chug(list&lt;Base*&gt;&amp; alist)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>for (list&lt;Base*&gt;::iterator i = alist.begin(), z = alist.end(); i != z; ++i)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>(*i)-&gt;chug();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>int main() </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>list&lt;Base*&gt; baselist;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>list&lt;Derived*&gt; derlist;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>baselist.push_back(new Base);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>baselist.push_back(new Base);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>derlist.push_back(new Derived);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>derlist.push_back(new Derived);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>chug(baselist);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>// chug(derlist); <text:s/>// How do I make this work?</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>} </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;typename C, typename T&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>void chug(const C&lt;T&gt;&amp; container)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>typedef typename C&lt;T&gt;::iterator iter;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>for(iter i = container.begin(); i &lt; container.end(); ++i)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>(*i)-&gt;chug();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;typename T&gt; void chug(list&lt;T*&gt;&amp; alist) { for (list&lt;T*&gt;::iterator i = alist.begin(), z = alist.end(); i != z; ++i) (*i)-&gt;chug(); }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>soltuion</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
        <text:p>Either store them by pointer (boost::shared_ptr is a popular option), or use Boost ptr_containers that store pointers internally,</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;boost/ptr_container/ptr_vector.hpp&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>boost::ptr_vector&lt;FooBase&gt; foos;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>foos.push_back(new FooDerived(...));</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>foos[0].memberFunc();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>possible solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>`boost::any`</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>class IBase {};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>class Derived : virtual public IBase {};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>std::vector&lt;std::unique_ptr&lt;IBase&gt;&gt; v;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>v.push_back(std::unique_ptr&lt;IBase&gt;(new Derived())); </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro22">
       <table:table-cell/>
       <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p>a unique_ptr, has the ownership of the pointee and delets it when it gets deleted. Ownership can be &quot;moved&quot; from one unique_ptr to another, but there can never be more than one owner. </text:p><text:p>With shared_ptr, there can be an arbitrary number of owners, and the last one to die deletes the pointee. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>kind of = if A can do something B can’t, then B can’t be a kind of A. when your derived class overrides a function as private, you violate the substitutability principle</text:p><text:p>B is a kind of A if you can do to a B object whatever you can do to A, and it will work correctly (not just compile). </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>Design – inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce85" office:value-type="string" calcext:value-type="string">
      <text:p>- Composition is for code reuse, inheritance is mainly for dynamic binding (flexibility). Don&apos;t inherit to reuse code. inherit for interface substitutability (https://isocpp.org/wiki/faq/multiple-inheritance#mi-disciplines)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>- the derived class objects must be substitutable for the base class objects. That means objects of the derived class must behave in a manner consistent with the promises made in the base class’ contract. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string"><text:p>you can make anything inherit from anything provided the methods in the derived class abide by the promises made in the base class. </text:p><text:p>But you ought not to use inheritance just because you feel like it, or just because you want to get code reuse. </text:p><text:p>You should use inheritance (a) only if </text:p><text:p>–--- the derived class’s methods can abide by all the promises made in the base class, </text:p><text:p>–--- and you don’t think you’ll confuse your users, </text:p><text:p>–--- and there’s something to be gained by using the inheritance — some real, measurable improvement in time, money or risk.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce86" office:value-type="string" calcext:value-type="string">
      <text:p>Bad inheritances always have a base class with an extra capability (often an extra member function or two; sometimes an extra promise made by one or a combination of member functions) that a derived class can’t satisfy. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string"><text:p>interfaces are so valuable, they should be protected from being tarnished by data structures and other implementation artifacts. Thus you should separate interface from implementation.</text:p><text:p>And to seperate them, use an ABC</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>Design – access</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>C++ access control is for clarity: you want to make it clear which parts of the class are supposed to be used and which are just implementation details or the bits that you might want to change later. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>prevent my class from being inhirited from:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce87" office:value-type="string" calcext:value-type="string">
       <text:p>solution1</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>It has no public constructor. To create instances of it, have a static creator or a friend one. See code 14</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce87" office:value-type="string" calcext:value-type="string">
       <text:p>solution2</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>declare it as final</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro22">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>class Point final</text:p><text:p>{</text:p><text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>code 14</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>class Point</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>private:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>int x, y;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>private:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Point(int xx=0, int yy=0):x(xx), y(yy){}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>static Point* create(int xx=0, int yy=0) { return new Point(xx,yy);}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>friend Point* create(int xx=0, int yy=0);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Point* create(int xx, int yy) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{ </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>return new Point(xx,yy);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>class Pointcol:public Point</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>int main()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Point* p=Point::create(3,14);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>cout &lt;&lt; *p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>delete p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>p=create(13,4);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>cout &lt;&lt; *p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>delete p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Pointcol pc; //←--------compile time error</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="6"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>prevent a member function from being overriden</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>solution1: set as non-virutal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>solution2: use final</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>solution3: use a comment to discourage from overriding</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>hiding</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Function f is hidden leads to static binding. Because B::f is called if B pointer is used</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>D *d=new D;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b→f(); //B::f is called. And can&apos;t see D&apos;s version</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>d→f(); //D::f is called. And can&apos;t see B&apos;s version. Unless <text:span text:style-name="T15">using B::f;</text:span> is used or call using <text:span text:style-name="T15">d.B::f();</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>private inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p> a member function or friend of a privately derived class, the relationship to the base class is known, and the upward conversion from PrivatelyDer* to Base* (or PrivatelyDer&amp; to Base&amp;) is safe; no cast is needed</text:p><text:p>However, users of PrivatelyDer should avoid this unsafe conversion, since it is based on a private decision of PrivatelyDer, and is subject to change without notice.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>C++ ref/Design:-<text:span text:style-name="T46">Private inheritance is employed almost exclusively to inherit an implementation. hbf the code. so that the derived class takes advantage of it, while providing a new interface.</text:span></text:p><text:p><text:span text:style-name="T47">  </text:span><text:span text:style-name="T46">The necessity of using a cast to convert the derived class pointer to a base class pointer is a strong indicator of a bad design practice.gotcha 91</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public: using Base::f; //this makes f public symblol accessible through Derived even if derived privately from Base </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>multiple inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce65"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>There are two kinds of problems with multiple inheritance - &quot;static&quot; and &quot;dynamic&quot;. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Static:If you override name in the class C, did you override A::name, B::name or both? What happens if the two name functions accept arguments of the same type? What happens if they don&apos;t? </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro10" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce88" office:value-type="string" calcext:value-type="string">
        <text:p>dynamic: C derive from A and B. get an A* from a C*. then get a B* from A*. WRONG. No passing from B* to A* or vice-versa. Always start from C*. Because without knowing the definition of C, there&apos;s no way to figure out the location of the B sub-object given the location of the A sub-object. </text:p>
       </table:table-cell>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce65"/>
     </table:table-row>
     <table:table-row table:style-name="ro11" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string"><text:p>to pro<text:span text:style-name="T48">perly multi inherit, the base classes and the join class should be ABCs.</text:span></text:p><text:p><text:span text:style-name="T49">this discipline helps you avoid situations where you need to inherit data or code along two paths, plus it encourages you to use inheritance properly.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce65"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce65"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>loop with array</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::thread threads[3];</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>for (auto&amp; th : threads) th.join();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::mutex mtx; std::unique_lock&lt;std::mutex&gt; lck(mtx);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unique_lock locks the mutex passed by parameter. The mutex is unlocked at destruction (at the end of the scope or in case an exception is thrown)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>at construction, it can defer locking, if passed the right second argument.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Modern C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>1- no new/delete. <text:s/>Circle* p = new Circle(42); <text:s/>Auto p = make_shared&lt;circle&gt;(42); Auto p = make_unique&lt;circle&gt;(42);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>2- Range-for : for (auto &amp;element : v)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro24">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>11- loops and algo </text:p><text:p>for_each(begin(v), end(v), [](){ … });  instead of for (auto i=v.begin(); I != v.end(); ++i) { … }</text:p><text:p/><text:p>Auto I = find_if(begin(v), end(v), []() { return … }); instead of auto i=v.begin(); for(…) { if (condition(i)) break;}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>3- automatic return type deduction</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro29">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T50">auto</text:span> mean(auto <text:span text:style-name="T50">Sequence</text:span> &amp;s)  //any Sequence</text:p><text:p>{</text:p><text:p>  Auto n=0.0;</text:p><text:p>  For (auto x:s)</text:p><text:p>  {</text:p><text:p>   n+=x;</text:p><text:p>  }</text:p><text:p>  Return n/s.size(); //what if s is empty ?</text:p><text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>4- boost::any for any type. Boost::any so = “a string”; so=10;</text:p>
       </table:table-cell>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce89" office:value-type="string" calcext:value-type="string">
       <text:p>5- boost::optional&lt;int&gt; I = 10;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>6- void someclass(const someclass&amp;)=delete;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>7-void bar() override {;}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>9-value type by default. Need more explanation and example</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>10-detrminism</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Concurrency</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Fractional arithmetic</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Clocks and Timers</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Random numbers and distributions</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>New smart pointers</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Regular expressions</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>New STL containers, such as arrays, forward lists, and unordered containers</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>New STL algorithms</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Tuples</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Type traits and type utilities</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Lambdas</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Range-based for loops</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Move semantics</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Variadic templates.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro24">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>auto iterator_th = find_if(begin(v_threads), end(v_threads),[&amp;first_message_done](auto &amp; th) { … });</text:p><text:p>while find_if return an iterator, it passes to the lamda the element (a thread object in this case).</text:p><text:p>Note “auto &amp; th” is used, to pass a reference. “auto th” is rejected at compilation because it uses copy constructor which is deleted in std::thread class.</text:p><text:p><text:span text:style-name="T14">“use of deleted function ‘std::thread::thread(std::thread&amp;)”</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>todo</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>experiment few thing in arrays and inheritance(some shared_ptr, container_ptr, function &lt;T&lt;C&gt; &amp; array)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>What is copy assignment, move assignment ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>protected and private inheretance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what are the drawbacks of using OOP ? In embedded ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce90" office:value-type="string" calcext:value-type="string">
      <text:p>the prohibition against converting Foo**to const Foo**.)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>complexity of operations on map, ordered_map, list, vector</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Built-in / Intrinsic / Primitive Data Types/ restrict?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>how much C++ support OO ? (see <text:a xlink:href="http://yosefk.com/c++fqa/class.html#fqa-7.1" xlink:type="simple">http://yosefk.com/c++fqa/class.html#fqa-7.1</text:a>)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is forbiden to do with move reference ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce47"/>
    </table:table-row>
    <table:table-row table:style-name="ro30">
     <table:table-cell/>
     <table:table-cell table:style-name="ce91" office:value-type="string" calcext:value-type="string">
      <text:p>18.5 decltype</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>Auto lets you declare a variable with a particular type; if you need a type for a variable you are going to initialize, use auto. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>decltype lets you extract the type from a variable (or any other expression), including to express the type for a return value from a method.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>decltype is better used when you need the type for something that is not a variable, like a return type.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>int x = 3;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>decltype(x) y = x; // same thing as auto y = x;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>decltype lets you extract the type from a variable (or any other expression), including to express the type for a return value from a method.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;typename Builder&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>auto</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>makeAndProcessObject (const Builder&amp; builder) -&gt; decltype( builder.makeObject() )</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>auto val = builder.makeObject();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>// do stuff with val</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>return val;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>The decltype can be used to determine the type of an expression at compile-type.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>decltype(5) x; // x will be type int because 5 is an int</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>decltype(x) y = 6; // y will be type int because x is an int</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>auto z = x; // z will type type int</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>Although it may seem like auto and decltype will always deduce the same type, that isn’t the case, as shown by the following example:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>const std::vector&lt;int&gt; v(5); // declare a vector v</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>auto a = v[0]; // a will be type int because v[0] is an int</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>decltype(v[0]) b = 1; // b will be type const int&amp;, which is the return type of std::vector&lt;int&gt;::operator[](size_type) const</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>STL</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce94"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94"/>
     </table:table-row>
     <table:table-row table:style-name="ro33" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string"><text:p>Iterators are a generalization of pointers that allow a programmer to work with different data structures (containers) in a uniform manner</text:p><text:p>Since iterators are a generalization of pointers it is assumed that every template function that takes iterators as arguments also works with regular pointers </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
       <text:p>To travers/process a collection for begining to end, we use the iterator defined for the collection.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro33" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
       <text:p>To travers/process a collection in the reverse order, we use the reverse iterator defined for the collection. there is a trick when going from a &apos;rit&apos; to an &apos;it&apos; (see iterators/adaptors)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro33" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string"><text:p>To insert an element into a collection either in the front, back or middle, we use an iterator inserter (iterator adaptor) (<text:span text:style-name="T38">example for each ?</text:span>)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce97"/>
     </table:table-row>
     <table:table-row table:style-name="ro33" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string"><text:p>back inserter() causes the container’s push back() operator to be invoked in place of the assignment operator. </text:p><text:p>Hbf:so &apos;i&apos; in the previous code called the assignement operator ? isn&apos;t it correcte provided it incremented ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce98"/>
     </table:table-row>
     <table:table-row table:style-name="ro33" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>-iterators have different abilities. These abilities are important because some algorithms require special iterator abilities. For example, sorting algorithms require iterators that can perform random access because otherwise the runtime would be poor.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce98"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>For each iterator category, the C++ standard library provides an iterator tag that can be used as a &quot;label&quot; for iterators:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>namespace std {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>struct output_iterator_tag </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>struct input_iterator_tag </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>struct forward_iterator_tag : public input_iterator_tag</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>struct bidirectional_iterator_tag : public forward_iterator_tag</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>struct random_access_iterator_tag : public bidirectional_iterator_tag</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T51">std::list::iterator</text:span> is std::_List_iterator&lt;int&gt; iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T51">std::vector&lt;int&gt;::iterator</text:span> is of type __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int&gt; &gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>error: cannot convert &apos;std::_List_iterator&lt;int&gt;*&apos; to &apos;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int&gt; &gt;*&apos; in assignment</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="5"/>a=b;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>^</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">std::list::iterator::category</text:span> is std::bidirectional_iterator_tag</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">std::vector&lt;int&gt;::iterator</text:span> is std::random_access_iterator_tag</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>error: invalid conversion from &apos;std::bidirectional_iterator_tag*&apos; to &apos;std::random_access_iterator_tag*&apos; [-fpermissive]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="5"/>a=b;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>^</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce102"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce103" office:value-type="string" calcext:value-type="string">
       <text:p>// std::iterator example</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt; <text:s text:c="4"/>// std::cout</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iterator&gt; <text:s text:c="4"/>// std::iterator, std::input_iterator_tag</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>class MyIterator : public std::iterator&lt;std::input_iterator_tag, int&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>int* p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator(int* x) :p(x) {}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator(const MyIterator&amp; mit) : p(mit.p) {}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator&amp; operator++() {++p;return *this;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator operator++(int) {MyIterator tmp(*this); operator++(); return tmp;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>bool operator==(const MyIterator&amp; rhs) {return p==rhs.p;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>bool operator!=(const MyIterator&amp; rhs) {return p!=rhs.p;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>int&amp; operator*() {return *p;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>int main () {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>int numbers[]={10,20,30,40,50};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator from(numbers);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator until(numbers+5);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>for (MyIterator it=from; it!=until; it++)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>std::cout &lt;&lt; *it &lt;&lt; &apos; &apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>back_insert_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>front_insert_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>insert_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>istreambuf_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>istream_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>move_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>ostreambuf_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>ostream_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>reverse_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string">
       <text:p>output iterator example</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p>All <text:a xlink:href="http://www.cplusplus.com/ForwardIterator" xlink:type="simple">forward</text:a>, <text:a xlink:href="http://www.cplusplus.com/BidirectionalIterator" xlink:type="simple">bidirectional</text:a> and <text:a xlink:href="http://www.cplusplus.com/RandomAccessIterator" xlink:type="simple">random-access</text:a> iterators that are not constant iterators are also valid output iterators.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
        <text:p>it automatically advances after assignment</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce73"/>
      </table:table-row>
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">ostream_iterator</text:span> can output to ostringstream, ofsteam and cout</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
        <text:p>this is the output of the code below. It writes to a file. To output to cout use ostream_iterator&lt;char&gt; out_it (std::cout);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="5"/>#</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>##</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="3"/>###</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>####</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>#####</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
        <text:p>######</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>int n=6;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>ofstream fout(&quot;output.txt&quot;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    std::ostream_iterator&lt;char&gt; out_it (fout); </text:p><text:p>  //ostringstream oss2(ios_base::out | ios_base::ate | ios_base::app|ios_base::binary) ;    std::ostream_iterator&lt;char&gt; out_it (oss2);</text:p><text:p>  //ostream_iterator&lt;char&gt; out_it (std::cout);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>for(int i=1; i&lt;n; ++i)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>//std::cout &lt;&lt; std::setw(n-i);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>for(int j=0; j&lt;n-i; ++j)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="12"/>*out_it = &apos; &apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>for(int j=0; j&lt;i; ++j)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="12"/>*out_it = &apos;#&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>*out_it = &apos;\n&apos;; <text:s/>// == fout&lt;&lt;endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>fout.close();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce105" office:value-type="string" calcext:value-type="string">
        <text:p>output to a file:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>ofstream fout(&quot;output.txt&quot;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>auto it = copy(line.begin(), line.end(), std::ostream_iterator&lt;char&gt;(fout, &quot;,&quot; ));</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>fout.close();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="7">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce106"/>
     </table:table-row>
     <table:table-row table:style-name="ro36" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>4.4.1 Iterator Adaptors</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro36" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>Reverse Iterators</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro36" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>Insert Iterators</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro36" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>Raw Storage Iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro36" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>no stream iterator ? like said in iterators/adaptors node</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce106"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce108" office:value-type="string" calcext:value-type="string">
       <text:p>insert iterators </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>insert iterators are implemented so that they call the collection&apos;s push_back, push_front or insert</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>All insert iterators are in the output iterator category. Thus, they provide only the ability to assign new values.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Name : Back inserter</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Class : back_insert_iterator</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Called Function : push_back (value)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro37" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string"><text:p>Creation : template &lt;class Container&gt;  back_insert_iterator&lt;Container&gt; <text:span text:style-name="T16">back_inserter</text:span> (Container&amp; x);</text:p><text:p>Using the assignment operator on the returned iterator (either dereferenced or not), causes the container to expand by one element, which is initialized to the value assigned. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Name : Front inserter </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Class : front_insert_iterator </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Called Function : push_front (value) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Creation : front_inserter (coll) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Name : General inserter </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Class : insert_iterator </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Called Function : insert (pos, value) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p>Creation : inserter (coll, pos) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109"/>
      </table:table-row>
      <table:table-row table:style-name="ro37" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string"><text:p>1.0- </text:p><text:p>We can also insert using the random access iterator for a vector, but position pointed to by iterator is valid (size of vector is 7 and we&apos;re never going beyond that, otherwise use back_inserter)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>int myints[]={10,20,30,40,50,60,70};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (7);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::copy ( myints, myints+7, myvector.begin() );</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>1.1 - std::back_inserter</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce47"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p>std::vector&lt;An8PointKey&gt; vPointKeys;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p>std::copy(t.vPointKeys.begin(),t.vPointKeys.end(),vPointKeys.begin());</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
         <text:p>la deuxième ligne produit un plantage. la cause serait que pas d&apos;espace alloué par vPointKeys .</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce47"/>
       </table:table-row>
       <table:table-row table:style-name="ro31" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce111" office:value-type="string" calcext:value-type="string">
         <text:p>std::back_inserter was the solution :</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p>std::vector&lt;An8PointKey&gt; vPointKeys;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p>std::copy(t.vPointKeys.begin(),t.vPointKeys.end(),std::back_inserter(vPointKeys));</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110"/>
       </table:table-row>
       <table:table-row table:style-name="ro34" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>auto it = back_inserter(vi);</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro34" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=1;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro34" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=4;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro34" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=7;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro34" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=2;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>copy(begin(vi), end(vi), ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); <text:s/>//1,4,7,2</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce47"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>1.2 - std::front_inserter</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce107"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>list&lt;int&gt; li;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>auto it = front_inserter(li);</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=1;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=4;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=7;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=2;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>copy(begin(li), end(li), ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); <text:s/>//2,7,4,1</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell/>
        <table:table-cell table:style-name="ce107"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>1.3 - std::inserter</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce47"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>#include &lt;iostream&gt;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>#include &lt;set&gt;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>#include &lt;list&gt;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>#include &lt;algorithm&gt;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>#include &quot;print.hpp&quot;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>using namespace std;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell/>
        <table:table-cell table:style-name="ce47"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>int main() </text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>{</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>set&lt;int&gt; coll;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce47"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>//create insert iterator for coll</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>insert_iterator&lt;set&lt;int&gt; &gt; iter(coll,coll.begin());</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce47"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>//insert elements with the usual iterator interface</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>*iter = 1;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>iter++;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>*iter = 2;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce47"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>//inserter using inserter function</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>inserter(coll,coll.end()) = 44;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
         <text:p>inserter(coll,prev(coll.end())) = 43;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce71"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
         <text:p>//Coll = 1,2,43,44</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce47"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>//use inserter to insert all elements into a list</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>list&lt;int&gt; coll2;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>copy (coll.begin(), coll.end(), inserter(coll2,coll2.begin())); </text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce47"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>//use inserter to reinsert all elements into the list before the second element</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>copy (coll.begin(), coll.end(), inserter(coll2,++coll2.begin())); </text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
         <text:p>}</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell/>
        <table:table-cell table:style-name="ce112"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce112"/>
     </table:table-row>
     <table:table-row table:style-name="ro38" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce113" office:value-type="string" calcext:value-type="string">
       <text:p>Reverse Iterators</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro39" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce114" office:value-type="string" calcext:value-type="string">
        <text:p>constructors</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell table:style-name="ce81"/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>reverse_iterator();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell table:style-name="ce82"/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>explicit reverse_iterator (iterator_type it);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro40" table:visibility="collapse">
       <table:table-cell table:style-name="ce82"/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class Iter&gt;</text:p><text:p>  reverse_iterator (const reverse_iterator&lt;Iter&gt;&amp; rev_it);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro39" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce114" office:value-type="string" calcext:value-type="string">
        <text:p>example of use</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro41" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>reverse_iterator&lt;vector&lt;int&gt;::iterator&gt; begin_r(vi.end());</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro39" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>reverse_iterator&lt;vector&lt;int&gt;::iterator&gt; end_r(begin(vi));</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro39" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>copy(begin_r, end_r, ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); <text:s text:c="21"/>//5,4,3,2,1</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro39" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string"><text:p>    copy(end_r.<text:span text:style-name="T16">base</text:span>(), begin_r.<text:span text:style-name="T16">base</text:span>(), ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); //1,2,3,4,5</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="4">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce116"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce117"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce105" office:value-type="string" calcext:value-type="string">
      <text:p>stream</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
      <text:p>ofstream fout(getenv(&quot;OUTPUT_PATH&quot;));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
      <text:p>fout &lt;&lt; res;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
      <text:p>fout.close()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
      <text:p>output to a file:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>ofstream fout(&quot;output.txt&quot;);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>auto it = copy(line.begin(), line.end(), std::ostream_iterator&lt;char&gt;(fout, &quot;,&quot; ));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>fout.close();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::string input;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;color? &quot;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>getline (std::cin,input);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bool b = true;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::boolalpha &lt;&lt; b &lt;&lt; &apos;\n&apos;; <text:s/>//true</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::noboolalpha &lt;&lt; b &lt;&lt; &apos;\n&apos;; <text:s/>//1</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce47"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Adaptors</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
       <text:p>21.4.3.1 binder</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce119" office:value-type="float" office:value="4.1" calcext:value-type="float">
        <text:p>4.1</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string">
        <text:p>you can handle the class std::binder2nd directly. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string">
        <text:p>but you can also use the helper function bind2nd wich specification is:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce121" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;typename _Operation, typename _Tp&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce121" office:value-type="string" calcext:value-type="string">
        <text:p>inline binder2nd&lt;_Operation&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce121" office:value-type="string" calcext:value-type="string">
        <text:p>bind2nd(const _Operation&amp; __fn, const _Tp&amp; __x);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>see:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce121" office:value-type="string" calcext:value-type="string">
        <text:p>C:\cygwin64\lib\gcc\x86_64-pc-cygwin\4.8.1\include\c++\backward\binders.h</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>//transform all elements into coll2 by multiplying 10 </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>transform (coll1 .begin(), coll1 .end(), //source </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>back_inserter(coll2), //destination </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>bind2nd(multiplies&lt;int&gt;() ,10)); //operation </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>The way bind2nd operates is as follows: transform() is expecting as its fourth argument an </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>operation that takes one argument; namely, the actual element. However, we would like to </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>multiply that argument by ten. So, we have to combine an operation that takes two arguments </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>and the value that always should be used as a second argument to get an operation for one </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>argument. bind2nd does that job. It stores the operation and the second argument as internal </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>values. When the algorithm calls bind2nd with the actual element as the argument, bind2nd </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>calls its operation with the element from the algorithm as the first argument and the internal value </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>as the second argument, and returns the result of the operation.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>bind2nd takes a binary object function and a parameter, and when called, it behaves as a unary object function. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce123" office:value-type="float" office:value="2" calcext:value-type="float">
        <text:p>2</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce124" office:value-type="string" calcext:value-type="string">
        <text:p>hbf-bind2nd is a template function, that receives a binary function object class and a value V. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce124" office:value-type="string" calcext:value-type="string">
        <text:p>using binder2nd template class, it constructs and returns a unary function object instance that is ready to apply the value V to any parameter it receives.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce124" office:value-type="string" calcext:value-type="string">
        <text:p>in the code below, &apos;b&apos; is an instance of the binder2nd class, with the important function call operator operator() that is expecting one parameter.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>binder2nd&lt;greater&lt;int&gt; &gt; b=bind2nd&lt;greater&lt;int&gt;,int&gt;(greater&lt;int&gt;(),3);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>assert(b(9)==true); //greater&lt;int&gt;(9,3)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>assert(b(1)==false);//greater&lt;int&gt;(1,3)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce124" office:value-type="string" calcext:value-type="string">
        <text:p>experience:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce124" office:value-type="string" calcext:value-type="string">
        <text:p>it was a little tough writing the declaration of the &apos;b&apos; variable, this required to clearly make the difference between what is a type and what is an instance of greater function object.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce124" office:value-type="string" calcext:value-type="string">
        <text:p>But looking at the code of the different classes definitions was the key to constructing the declaration line. I even had no compile errors from the first compilation !</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>4-the following code does not compile :</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>std::binder2nd&lt;MyFun1&gt; bfi1;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>where </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>struct MyFun1</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>bool operator()(int a,int b)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>return (a&lt;b);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>because first_argument_type and second_argument_type are not defined in MyFun1.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>std::binder2nd needs a binary_function object</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="string" calcext:value-type="string">
        <text:p>Unlike for_each, std::binder2nd can not be used with simple functions</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
       <text:p>21.4.3.2 mem_fun</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce126"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>class C12</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>bool f()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>return (3&lt;2);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce126"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>we can create a function object wrapping the function C12::f in two ways:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce128" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;functional&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce128" office:value-type="string" calcext:value-type="string">
        <text:p>std::mem_fun_t&lt;bool,C12&gt; mf1(&amp;C12::f);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>or</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce128" office:value-type="string" calcext:value-type="string">
        <text:p>std::mem_fun_t&lt;bool,C12&gt; mf2=std::mem_fun(&amp;C12::f);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce126"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>std::mem_fun_t creates a function object for a member function that has no params.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce126"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>to use function object :</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce128" office:value-type="string" calcext:value-type="string">
        <text:p>C12 ic12;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce128" office:value-type="string" calcext:value-type="string">
        <text:p>bool r4=mf2(&amp;ic12);//calls ic12.f() and set r4 to its return value</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce126"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>see declaration at C:\cygwin64\lib\gcc\x86_64-pc-cygwin\4.8.1\include\c++\bits\stl_function.h</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce126"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
       <text:p>21.4.3.3 function</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>http://www.cplusplus.com/reference/functional/function/</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>// function::operator= example</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt; // std::cout</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;functional&gt; // std::function, std::negate</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>int main () </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce129" office:value-type="string" calcext:value-type="string">
        <text:p>std::function&lt;int(int)&gt; foo,bar;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>foo = std::negate&lt;int&gt;(); // target</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>bar = foo; // copy</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>foo = std::function&lt;int(int)&gt;([](int x){return x+1;}); // move</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>bar = nullptr; // clear</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>std::cout &lt;&lt; &quot;foo: &quot; &lt;&lt; foo(100) &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string"><text:p>An object of std::function class instantiation can wrap any of the following kinds of callable objects: a function, a function pointer, a pointer to member, or any kind of function object (i.e., an object whose class defines operator(), including <text:span text:style-name="T45">closures</text:span>). <text:span text:style-name="T45">Hb: Q: what is closure ?</text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string"><text:p>A decay copy (<text:span text:style-name="T45">Hb: Q: what is that ?</text:span>) of the wrapped callable object is stored internally by the object, which becomes the function&apos;s target.</text:p><text:p>The specific type of this target callable object is not needed in order to instantiate the function wrapper class; only its call signature.  (hb: Q: !!!!!!)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>The function object can be copied and moved around, and can be used to directly invoke the callable object with the specified call signature (see member operator()).</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>function objects can also be in a state with no target callable object. In this case they are known as empty functions, and calling them throws a bad_function_call exception.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce47"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="121">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="8">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Requirements for a standard container:</text:p><text:p>Has Front and back  member functions</text:p><text:p>Has iterators, in order to be used with standard algorithms</text:p><text:p>can return a pointer to an element of the container</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>Vector &amp; array</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>vector&lt;int&gt; v; <text:s/>&amp;v[0] == v.data() if v contains data. However, &amp;v[0] is undefined if no data</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>v.begin() is not garenteed to be &amp; of int. it is primarly an iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Same for Array class. It supports begin,end</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>double mydoubles[] = {3.14, 1.41, 2.72, 4.67, 1.73, 1.32, 1.62, 2.58};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;double&gt; myvector;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string"><text:p>  myvector.<text:span text:style-name="T16">assign</text:span>(mydoubles,mydoubles+8);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>containers</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>set</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>displaying the content of a set shows they are ordered</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>// set::insert (C++98)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;iostream&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;set&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>int main ()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::set&lt;int&gt; myset;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::set&lt;int&gt;::iterator it;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::pair&lt;std::set&lt;int&gt;::iterator,bool&gt; ret;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>// set some initial values:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (int i=1; i&lt;=5; ++i) myset.insert(i*10); <text:s text:c="3"/>// set: 10 20 30 40 50</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>ret = myset.insert(20); <text:s text:c="14"/>// no new element inserted</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if (ret.second==false) it=ret.first; <text:s/>// &quot;it&quot; now points to element 20</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>myset.insert (it,25); <text:s text:c="16"/>// max efficiency inserting</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>myset.insert (it,24); <text:s text:c="16"/>// max efficiency inserting</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>myset.insert (it,26); <text:s text:c="16"/>// no max efficiency inserting</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[]= {5,10,15}; <text:s text:c="13"/>// 10 already in set, not inserted</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>myset.insert (myints,myints+3);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;myset contains:&quot;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (it=myset.begin(); it!=myset.end(); ++it)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; &apos; &apos; &lt;&lt; *it;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>Output:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>myset contains: 5 10 15 20 24 25 26 30 40 50</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>vector&lt;bool&gt; vs map,set</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string"><text:p>The functional struct hash &lt;vector&lt;bool,Alloc&gt;&gt; returns a hash value based on the entire vector. This allows the use of <text:a xlink:href="http://www.cplusplus.com/vector%3Cbool%3E" xlink:type="simple">vector&lt;bool&gt;</text:a> objects as keys for unordered containers (like <text:a xlink:href="http://www.cplusplus.com/unordered_set" xlink:type="simple">unordered_set</text:a> or <text:a xlink:href="http://www.cplusplus.com/unordered_map" xlink:type="simple">unordered_map</text:a>).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="16">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>If you need to know the exact type of the object in the container you can use dynamic_cast&lt;&gt; or typeid()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="7">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>fonction pointer</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57"/>
     </table:table-row>
     <table:table-row table:style-name="ro23" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>-Si un pointeur sur les fonctions de la classe dérivée prend la valeur d’un pointeur sur les fonctions de la classe de base, cela veut dire qu’on voudras appliquer une fonction de la classe de base à un objet de la classe dérivée.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>//.h</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>class Pointcol : public Point { . . . }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>// .cpp</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>void (Pointcol::*pfpc)(void);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>void (Point::*pfp)(void);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pfpc = &amp;Pointcol::Affiche;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pfp = &amp;Point::Affiche;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pfp = (void (Point::*)(void)) pfpc;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pfp = static_cast&lt;void (Point::*)(void)&gt;(pfpc);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pfp = reinterpret_cast&lt;void (Point::*)(void)&gt;(pfpc);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro23" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>C++ n’accèpte pas une affectation d’un pointeur sur une fonction membre de la classe dérivé à un pointeur sur une fonction membre de la classe de base. Il faut passer par un cast explicite.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>(p.*pfp)(); //what happens here ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pfp = &amp;Point::Affiche;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pfpc = pfp ;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>(pc.*pfpc)(); //what happens here ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>Il y a un cast implicite d’un pointeur sur une fonction membre de la classe de base en un pointeur sur une fonction de la classe dérivée.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce131" office:value-type="string" calcext:value-type="string">
       <text:p>hbf: how to declare a pointer to function as a member?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>class Pointcol : public Point</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>int col;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>void (*m_pfpc)(void) ;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>public :</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>Pointcol(int=0, int=0, int=0);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>void Affiche() ;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>void operator=(const Pointcol &amp;);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pointer to a member of a class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57"/>
     </table:table-row>
     <table:table-row table:style-name="ro44" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce132" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T52">int</text:span><text:span text:style-name="T53"> main(){Point point(1,2);cout &lt;&lt; point;</text:span><text:span text:style-name="T54">int</text:span><text:span text:style-name="T53"> Point::*px = &amp;Point::x; </text:span><text:span text:style-name="T55">//Point::x is public outputs 1</text:span><text:span text:style-name="T56">cout &lt;&lt; point.*px; </text:span><text:span text:style-name="T57">//outputs 1</text:span><text:span text:style-name="T56">} </text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>//declare the symbol p2m_c as a pointer to member col of the class Pointcol.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>int Pointcol::*p2m_c=&amp;Pointcol::col;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>//then use it for the objects pc1, pc2</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pc1.*p2m_c=45;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pc2.*p2m_c=30;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>pointer to a member of an object</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>int *p2m_c3=&amp;pc.col;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>*p2m_c3=44;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce54"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>new delete</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro45" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string"><text:p>7-memory allocations can be done by any overload of operator new.</text:p><text:p>But when it comes to freeing it, there is only are delete operator (delete p;) that is used, no matter which version of operator new was used. </text:p><text:p>BUT all overloaded operators new should obtain the storage from the standard global operator new.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce133" office:value-type="string" calcext:value-type="string">
       <text:p>13.14.1 in a nutshell</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>new keyword (1) allocates mem* and (2) calls constructor if applicable</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>delete keyword (1) calls destructor if applicable and (2) frees mem **</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134" office:value-type="string" calcext:value-type="string">
       <text:p>*in fact it just calls the operator new that has this signature : void * operator new(size_t size);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro23" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>it is not recommened to replace the operator with this signature (many libraries and STL rely on it). if you do, don&apos;t call it within the operator new function, it will call it self recursively/indefinately. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134" office:value-type="string" calcext:value-type="string">
       <text:p>void * operator new(size_t size)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>//allocate mem somehow but on&apos;t use ::operator new(size); it will call itself</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>rather, overload the operator with different arguments. ex: </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134" office:value-type="string" calcext:value-type="string">
       <text:p>void * operator new(size_t size, char *filename, int line);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>an implication of defining the operator new, is to define its corresponding operator delete, like :</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134" office:value-type="string" calcext:value-type="string">
       <text:p>void operator delete(void *p, char *filename, int line)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>this is never called by us. it is called by the system only in case the constructor of a newly created object throws an exception.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134" office:value-type="string" calcext:value-type="string">
       <text:p>**in fact it just calls the operator delete which has this signature: void operator delete(void * p);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>this operator can be overloaded with the same signature. it will then be calle by the operator delete instead of the system&apos;s. ex:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134" office:value-type="string" calcext:value-type="string">
       <text:p>void operator delete(void *p)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134" office:value-type="string" calcext:value-type="string">
       <text:p>if ( RemoveTrack((long)p) )</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>free(p);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce130"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
       <text:p>one way of allocating 2-dimensional array is the following :</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>my_class = new Myclass* [size1]; <text:s text:c="15"/>//note that the type is a Myclass pointer</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>for(int i=0; i&lt;size1; i++)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>my_class[i] = new Myclass [size2];</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>freeing it is done in the reverse way</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>for(int i=0; i&lt;size; i++)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>delete [] my_class[i];</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>delete[] my_class;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string">
       <text:p>allocating mem for a function pointer</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>allocating mem for a function pointer (this is now legacy. C++11 offers std::function object)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>int (**f)(int,int) = new (int (*) (int,int));</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71"/>
     </table:table-row>
     <table:table-row table:style-name="ro46" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string"><text:p>Every application running on your operating system has its unique address space, which it sees as a continuous block of memory. In fact the memory is not physically continuous (it is fragmented), this is just the impression the operating system gives to every program and it&apos;s called virtual memory. The size of the virtual memory is the maximum size of the maximum size your computer can address using <text:a xlink:href="http://www.cprogramming.com/tutorial/lesson6.html" xlink:type="simple">pointers</text:a> (usually on a 32-bit processor each process can address 4 GB of memory).</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>the virtual memory is divided in pages of fixed size (usually 4096 bytes) the os allocates some pages to the application</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
       <text:p>accessing more than what the mem has</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro47" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>what happens when a process wants to access more memory than your machine physically has available as RAM? Due to having a virtual address space, parts of the hard disk can be mapped together with real memory and the process doesn&apos;t have to know anything about whether the address is physically stored in RAM or on the hard disk. The operating system maintains a table, where virtual addresses are mapped with their correspondent physical addresses, which is used whenever a request is made to read or write to a memory address. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce117" office:value-type="string" calcext:value-type="string"><text:p>in each process, the virtual memory available to that process is called its <text:span text:style-name="T16">address space</text:span>.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string"><text:p>Process&apos;s <text:span text:style-name="T51">address space</text:span> organization</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro46" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string"><text:p>process&apos;s address space is typically organized in 6 sections that are illustrated in the next picture: environment section - used to store environment variables and <text:a xlink:href="http://www.cprogramming.com/tutorial/lesson14.html" xlink:type="simple">command line arguments</text:a>; the stack, used to store memory for function arguments, return values, and automatic variables; the heap (free store) used for dynamic allocation, two data sections (for initialized and uninitialized <text:a xlink:href="http://www.cprogramming.com/tutorial/statickeyword.html" xlink:type="simple">static</text:a> and global variables) and a text section where the actual code is kept.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro48" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
       <text:p>Even though every application has its own 4 GB (on 32-bit systems) of virtual memory, that does not necessarily mean that your program can actually use all of that memory. For example, on Windows, the upper 2 GB of that memory are allocated to the operating system kernel, and are unavailable to the process.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro49" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce135" office:value-type="string" calcext:value-type="string">
       <text:p>Address Space Fragmentation</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string"><text:p>Caching <text:span text:style-name="T58">according to </text:span><text:span text:style-name="T58"><text:a xlink:href="http://www.cprogramming.com/tutorial/operator_new.html" xlink:type="simple">http://www.cprogramming.com/tutorial/operator_new.html</text:a></text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro40" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>When a new node is needed, a deleted one is going to be used. Delete will simply add the node to the deleted nodes. This way instead of allocating new memory from the heap (which is pretty time consuming) we will use the already allocated space. The technique is usually called caching.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string">
       <text:p>using more memory than expected doesn&apos;t mean a memory leak </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>When new is used to gain a block of memory the size reserved by the operating system may be bigger than your request, but never smaller. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>Because of this and the fact that delete doesn&apos;t immediately return the memory to the operating system, when you inspect the whole memory that your program is using you may be made to believe that your application has serious memory leaks. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>So inspecting the number of bytes the whole program is using should not be used as a way of detecting memory errors. Only if the memory manager indicates a large and continuous growth of memory used should you suspect memory leaks. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>A good approach to protect from memory leaks is to use a garbage collector and replace new with its allocator.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>A half way to garbage collection is to use private heaps, that is, you first allocate a big chunk of memory and manage it in a Heap class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>smart pointers is the easiest way to avoid mem leak</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string">
       <text:p>smart pointers</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce136" office:value-type="string" calcext:value-type="string">
       <text:p>owner group</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce117" office:value-type="string" calcext:value-type="string">
       <text:p>it is the group of smart pointers pointing at an object</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce117" office:value-type="string" calcext:value-type="string">
       <text:p>only strong pointers (shared_ptr) increase the count. Weak pointers, although in the owner group, do not increase the count</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce117"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce117" office:value-type="string" calcext:value-type="string">
       <text:p>weak pointer is used only for caching purposes. When it is to be used, lock() should be used first andmake sure the returned value is != null</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>assignment operator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>no solution in stack over flow for assignment operator for a class with const or ref.</text:p><text:p>The idea is if you assign the objects why should they have const fields ?</text:p><text:p>But not technical solution  </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>copy constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>Derived&amp; operator=(const Derived&amp; d)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Base::operator=(d);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>additional_ = d.additional_;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>return *this;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>static member</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>A pointer can access static members , an object not.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct B: A {</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>static const char* static_type;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>B() { dynamic_type = static_type; }</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>main</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>B b1;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>B *b1p=&amp;b1;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>cout &lt;&lt; b1.B::static_type&lt;&lt;endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>cout &lt;&lt; b1p-&gt;static_type&lt;&lt;endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>cout &lt;&lt; b1.static_type&lt;&lt;endl; <text:s text:c="4"/>&lt; - ------------------- <text:s/>ERROR! Not a pointer</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>data type</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce137" office:value-type="string" calcext:value-type="string">
       <text:p>If v is negative sign == -1. if v is positive sign == 1 </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>int sign = (v &gt; 0) - (v &lt; 0);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>turn a sign to positive</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>number = (number &lt; 0 ? -number : number);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>read the following discussion to learn more about int, overflows, architerture dependent code, ... </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>http://stackoverflow.com/questions/1489830/efficient-way-to-determine-number-of-digits-in-an-integer</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
       <text:p>float</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>better doc:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>http://www.toves.org/books/float/</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>taken from <text:a xlink:href="http://www.cprogramming.com/tutorial/floating_point/understanding_floating_point_representation.html" xlink:type="simple">http://www.cprogramming.com/tutorial/floating_point/understanding_floating_point_representation.html</text:a></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>seeeeeeeemmmmmmmmmmmmmmmmmmmmmmm <text:s text:c="3"/>meaning</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>31 <text:s text:c="29"/>0 <text:s text:c="3"/>bit #</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>value = (sign ? -1:1) * 2^(exponent) * 1.(mantissa bits)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>0 <text:s text:c="5"/>0x00000000</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>1.0 <text:s text:c="3"/>0x3f800000</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>0.5 <text:s text:c="3"/>0x3f000000</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>3 <text:s text:c="5"/>0x40400000</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>+inf <text:s text:c="2"/>0x7f800000 (A number is infinite if every bit of the exponent is set)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>-inf <text:s text:c="2"/>0xff800000</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>+NaN <text:s text:c="2"/>0x7fc00000 or 0x7ff00000 <text:s/>(NaN == every bit of the exponent is set plus any mantissa bits are set)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>confirm:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>if( Math.abs(a-b) &lt; 0.00001) // wrong - don&apos;t do this</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro24" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
        <text:p>This is a bad way to do it because a fixed epsilon chosen because it “looks small” could actually be way too large when the numbers being compared are very small as well. The comparison would return “true” for numbers that are quite different. And when the numbers are very large, the epsilon could end up being smaller than the smallest rounding error, so that the comparison always returns “false”. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce71"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
        <text:p>comparing two floats</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>float ret = abs(f1 - f2);</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>float epsilon = .0000000001f;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>if(ret &lt; epsilon) return true;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>return false</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>bit pattern comparison is not necessary when comparing native types of the same type. f1 == f2 is the same as bit pattern comparison </text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro21" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
        <text:p>Floatint point properties: exponent biasing, <text:s/>NaNs, infinities, normalizing, gradual underflow, signed zeroes, represents vastly more discrete values between 0 and 1 than you can between 1,000,000 and 1,000,001.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="8">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
      <text:p>template</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce140"/>
     </table:table-row>
     <table:table-row table:style-name="ro49" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
       <text:p>PARAMETRE PAR DEFAUT</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
        <text:p>- on peut spécifier des paramètres type par défaut dans un patron de classe comme suite :</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class T, class U = float&gt; class A { ... }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class T, int n = 5&gt; class B { ... }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141"/>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
        <text:p>A&lt;char&gt; _a ;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
        <text:p>B&lt;long&gt; _b ;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
        <text:p>Sont équivalantes à </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
        <text:p>A&lt;char, float&gt; _a ;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
        <text:p>B&lt;long, 5&gt; _b ;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce140"/>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141"/>
      </table:table-row>
      <table:table-row table:style-name="ro50" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T59">template</text:span><text:span text:style-name="T60"> </text:span><text:span text:style-name="T61">&lt;</text:span><text:span text:style-name="T59">class</text:span><text:span text:style-name="T60"> </text:span><text:span text:style-name="T62">T</text:span><text:span text:style-name="T61">=</text:span><text:span text:style-name="T59">int</text:span><text:span text:style-name="T61">&gt; </text:span><text:span text:style-name="T63">struct</text:span><text:span text:style-name="T64"> </text:span><text:span text:style-name="T65">S</text:span><text:span text:style-name="T64"> </text:span><text:span text:style-name="T66">{ } ;</text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141"/>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
        <text:p>et alors les déclarations suivantes </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce145" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T67">S</text:span><text:span text:style-name="T60"> </text:span><text:span text:style-name="T61">s; </text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146" office:value-type="string" calcext:value-type="string">
        <text:p>error: missing template arguments before &apos;s&apos;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce147" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T68">     </text:span><text:span text:style-name="T69">S s = {1, 2, 3, 4, 5}; // copy list-initialization</text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce147" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T68">       </text:span><text:span text:style-name="T69">^</text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce145" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T67">S</text:span><text:span text:style-name="T61">&lt;&gt;</text:span><text:span text:style-name="T60"> </text:span><text:span text:style-name="T61">s;  //correct. int type is implied </text:span><text:span text:style-name="T60"> </text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce141"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>A class member expression (. or -&gt; operator) that names an instance of a member</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>function template with template arguments must use the template keyword before</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>the member name.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro51" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string"><text:p>class bigfloat {     </text:p><text:p>int y; </text:p><text:p>public:     </text:p><text:p>  bigfloat()    {        y=0;    }         </text:p><text:p>  template&lt;class T&gt;           bigfloat(T y)    {        y=0;    }         </text:p><text:p>  template&lt;unsigned N&gt; double round( );     </text:p><text:p>  template&lt;unsigned N&gt; static double round(double); </text:p><text:p>}; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;unsigned N&gt; double bigfloat::round( )</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>cout &lt;&lt; &quot;round( ), N =&quot;&lt;&lt; N &lt;&lt; endl;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return 1.0;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;unsigned N&gt; double bigfloat::round(double d)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>cout &lt;&lt; &quot;round(d), N =&quot;&lt;&lt; N &lt;&lt; endl;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return d+1.0;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>bigfloat f;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>std::cout &lt;&lt; f.template round&lt;2&gt;( ) &lt;&lt; &apos;\n&apos;;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>std::cout &lt;&lt; bigfloat::template round&lt;8&gt;(3.14) &lt;&lt; &apos;\n&apos;;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>bigfloat fw(4);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>partial specialization</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce148" office:value-type="string" calcext:value-type="string">
       <text:p>The following example shows several instances of the demo class template.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T, typename U, int N&gt; class demo {};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T, int N&gt; class demo&lt;T, int, N&gt; {};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; class demo&lt;T, T, 0&gt; {};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; class demo&lt;T*, T, 1&gt; {};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;int, char, 1&gt; w;                                                                                                                    <text:span text:style-name="T70">// Primary template</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char, int, 10&gt; x;                                          <text:span text:style-name="T70">// First specialization</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char, char, 0&gt; y;                                                                                 <text:span text:style-name="T70">// Second specialization</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char, char, 1&gt; z;                                         <text:span text:style-name="T70">// Primary template</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char*,char, 1&gt; p;                                                                                                            <text:span text:style-name="T70">// Third template</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char*,char, 0&gt; q;                                         <text:span text:style-name="T70">// Primary template</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char*,char*, 0&gt; r;                                        <text:span text:style-name="T70">// Second template</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;int*, int, 1&gt; s;                                             <text:span text:style-name="T70">// Error: ambiguous</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>explicite instanciation of class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce148" office:value-type="string" calcext:value-type="string">
       <text:p>1-One instance of usage is when the template definition is in a file different from the one containing the declaration</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce149" office:value-type="string" calcext:value-type="string">
       <text:p>2-Another instance of usage is with friend functions</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>3-solution to error:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>/home/hassan4/data3/git/c/p1/template17.cpp:8: error: &apos;Point&apos; does not name a type</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>template&lt;typename T&gt; Point&lt;T&gt; operator+ (const Point&lt;T&gt;&amp; lhs, const Point&lt;T&gt;&amp; rhs);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="22"/>^</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>solution is instanciate the class : template&lt;typename T&gt; class Point;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="5">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce150" office:value-type="string" calcext:value-type="string">
       <text:p>//////// in sqr.cpp</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>#include &quot;sqr.h&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>Template int sqr&lt;int&gt;(int);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; T sqr(T x)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return x * x;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>template double sqr&lt;&gt;(double); <text:span text:style-name="T16">// Explicit instantiation</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce150" office:value-type="string" calcext:value-type="string">
       <text:p>//////// in sqr.h</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; extern T sqr(T x);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce150" office:value-type="string" calcext:value-type="string">
       <text:p>//////// in main.cpp</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>#include &quot;sqr.h&quot; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>int main( ) { <text:s text:c="4"/>double g = sqr(4.4);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="4">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>friend and template</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce148" office:value-type="string" calcext:value-type="string">
       <text:p>to make a friend successfully either define the friend function in the class or</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro40" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce148" office:value-type="string" calcext:value-type="string"><text:p>instanciate the class itself + convince the compiler that  while it is examining the class body proper that the operator+ and operator&lt;&lt; functions are </text:p><text:p>themselves templates + add the &lt;&gt; at the friend line in the class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; class Point;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; Point&lt;T&gt; operator+ (const Point&lt;T&gt;&amp; lhs, const Point&lt;T&gt;&amp; rhs);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; std::ostream&amp; operator&lt;&lt; (std::ostream&amp; o, const Point&lt;T&gt;&amp; x);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>class Point</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>Point(const T u = T(),const T v = T()):x(u),y(v) {}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>friend Point&lt;T&gt; operator+ &lt;&gt;(const Point&lt;T&gt;&amp; lhs, const Point&lt;T&gt;&amp; rhs);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>friend std::ostream&amp; operator&lt;&lt; &lt;&gt;(std::ostream&amp; o, const Point&lt;T&gt;&amp; x);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>private:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>T x;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>T y;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; Point&lt;T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>operator+ (const Point&lt;T&gt;&amp; l, const Point&lt;T&gt;&amp; r)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return Point&lt;T&gt;(l.x+r.x, l.y+r.y);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; std::ostream&amp;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>operator&lt;&lt; (std::ostream&amp; o, const Point&lt;T&gt;&amp; p)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>o&lt;&lt;&quot;Point(&quot;&lt;&lt;p.x&lt;&lt;&quot;,&quot;&lt;&lt;p.x&lt;&lt;&quot;)&quot;;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return o;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>template for a specific type only</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;class T&gt; class mytype; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;&gt; class mytype&lt;int&gt; { }; <text:s/>//// int is a valid type</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>mytype&lt;&gt; r; //error</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>mytype&lt;float&gt; r; <text:s/>//error</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>mytype&lt;int&gt; r; //ok</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce151" office:value-type="string" calcext:value-type="string">
       <text:p>Constraints</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>make sure that a class D derives from a class B</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>the idea is to have a function/constructor that does the conversion/assignment from D to B with no cast, and call the function, constructor</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>1- solution 1</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;class D, class B&gt; void derivedfrom_fn()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>D* d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>B* b = d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template void derivedfrom_fn&lt;D,B&gt;(); <text:s/>///the compiler will issue an error if D not derive from B</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>Solution 2</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;class D, class B&gt; void derivedfrom_fn()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>D* d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>B* b = d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string"><text:p>derivedfrom_fn&lt;D,A&gt;(); //error: cannot convert &apos;D*&apos; to &apos;A*&apos; in initialization</text:p><text:p>     B* b = d;</text:p><text:p>            ^</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>Solution 3</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class D, class B&gt; struct Derived_from</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>D* d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>B* b = d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Derived_from&lt;D,B&gt; f;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>Solution 4</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class D, class B&gt; struct Derived_from</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>static void constraints(D* p)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>B* pb = p;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>void(*p)(D*) = constraints;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Derived_from&lt;D,A&gt; f;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="4">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>make sure that a class derives from another one, that it is copiable, multipliable</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class T, class B&gt; struct Derived_from {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>static void constraints(T* p) { B* pb = p; } <text:s/>//doesn’t check derivation, but conversion, but that’s often a better constraint.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from() { void(*p)(T*) = constraints; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;class T1, class T2&gt; struct Can_copy {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>static void constraints(T1 a, T2 b) { T2 c = a; b = a; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_copy() { void(*p)(T1,T2) = constraints; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;class T1, class T2 = T1&gt; struct Can_compare {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>static void constraints(T1 a, T2 b) { a==b; a!=b; a&lt;b; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_compare() { void(*p)(T1,T2) = constraints; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;class T1, class T2, class T3 = T1&gt; struct Can_multiply {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>static void constraints(T1 a, T2 b, T3 c) { c = a*b; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_multiply() { void(*p)(T1,T2,T3) = constraints; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>struct B { };</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>struct D : B { };</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>struct DD : D { };</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>struct X { };</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from&lt;D,B&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from&lt;DD,B&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from&lt;X,B&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from&lt;int,B&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from&lt;X,int&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_compare&lt;int,float&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_compare&lt;X,B&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_multiply&lt;int,float&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_multiply&lt;int,float,double&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_multiply&lt;B,X&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_copy&lt;D*,B*&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_copy&lt;D,B*&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_copy&lt;int,B*&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>// the classical &quot;elements must derived from Mybase*&quot; constraint:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;class T&gt; class Container : Derived_from&lt;T,Mybase&gt; {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="5">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>template-derived-class using a nested type it inherits from its template-base-class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
       <text:p>class Xyz { /*...*/ }; <text:s/>// Global (&quot;namespace scope&quot;) typevoid </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>f() { } <text:s text:c="11"/>// Global (&quot;namespace scope&quot;) function</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class B {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>class Xyz { /*...*/ }; <text:s/>// Type nested in class B&lt;T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>typedef int Pqr; <text:s text:c="7"/>// Type nested in class B&lt;T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class D : public B&lt;T&gt; {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>void g()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>        Xyz x;  <text:span text:style-name="T45">// it is not using the B nested Xyz, but the global one.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>        Pqr y;  <text:span text:style-name="T45">// it is not using the B nested Pqr, but the global one.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>the correct way is</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class D : public B&lt;T&gt; {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>void g()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>        typename B&lt;T&gt;::Xyz x;  // <text:span text:style-name="T45">solution</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>typename B&lt;T&gt;::Pqr y; <text:s/>// Good</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>template-derived-class using a function member it inherits from its template-base-class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class B {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>void f() { } <text:s/>// Member of class B&lt;T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class D : public B&lt;T&gt; {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>void g()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>        f();  <text:span text:style-name="T45">// error: there are no arguments to &apos;f&apos; that depend on a template parameter, so a declaration of &apos;f&apos; must be available</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>the correct way is</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class D : public B&lt;T&gt; {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string"><text:p>    using B&lt;T&gt;::f; <text:span text:style-name="T45">// solution 1</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>void g()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string"><text:p>         this-&gt;f();  <text:span text:style-name="T45">// solution 2. Since this is always implicitly dependent in a template, this-&gt;f is dependent and the lookup is therefore deferred until the template is actually instantiated, at which point all base classes are considered.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>Question ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
       <text:p>what is this two templates ? How is this instanciated ? And used ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; template&lt;typename U&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>sp&lt;T&gt;::sp(U* other) : m_ptr(other)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>if (other) ((T*)other)-&gt;incStrong(this);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce139"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce139"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce139"/>
    </table:table-row>
   </table:table>
   <table:table table:name="STL algo" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co12" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce8"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1021" table:default-cell-style-name="ce1"/>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce154" office:value-type="string" calcext:value-type="string">
      <text:p>Returns true if pred returns true for all the elements in the range [first,last) or if the range is empty</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class UnaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bool all_of (InputIterator first, InputIterator last, UnaryPredicate pred)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (!pred(*first)) return false;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return true;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p>std::array&lt;int,8&gt; foo = {3,5,7,11,13,17,19,23};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if ( std::all_of(foo.begin(), foo.end(), [](int i){return i%2;}) )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; &quot;All the elements are odd numbers.\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>Returns true if pred returns true for any of the elements in the range [first,last)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class UnaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bool any_of (InputIterator first, InputIterator last, UnaryPredicate pred)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (pred(*first)) return true;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return false;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p>std::array&lt;int,7&gt; foo = {0,1,-1,3,-3,5,-5};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if ( std::any_of(foo.begin(), foo.end(), [](int i){return i&lt;0;}) )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; &quot;There are negative elements in the range.\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>Returns true if pred returns false for all the elements in the range [first,last) or if the range is empty</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class UnaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>  bool <text:span text:style-name="T16">none_of</text:span> (InputIterator first, InputIterator last, UnaryPredicate pred)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (pred(*first)) return false;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return true;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::array&lt;int,8&gt; foo = {1,2,4,8,16,32,64,128};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>  if ( std::<text:span text:style-name="T16">none_of</text:span>(foo.begin(), foo.end(), [](int i){return i&lt;0;}) )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; &quot;There are no negative elements in the range.\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class Function&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>  Function <text:span text:style-name="T16">for_each</text:span>(InputIterator first, InputIterator last, Function fn)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>fn (*first);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return fn; <text:s text:c="5"/>// or, since C++11: return move(fn);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro36">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">find</text:span> Returns an iterator to the first element in the range [first,last) that compares equal to val. If no such element is found, the function returns last.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>same as search_n(,,1,val)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro52">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>template&lt;class InputIterator, class T&gt;</text:p><text:p>  InputIterator <text:span text:style-name="T16">find</text:span> (InputIterator first, InputIterator last, const T&amp; val)</text:p><text:p>{</text:p><text:p>  while (first!=last) {</text:p><text:p>    if (*first==val) return first;</text:p><text:p>    ++first;</text:p><text:p>  }</text:p><text:p>  return last;</text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro36">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">search_n</text:span> Searches the range [first,last) for a sequence of count elements, each comparing equal to val (or for which pred returns true).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>search_n(,,1,val) == find</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro53">
     <table:table-cell table:style-name="ce152"/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator, class Size, class T&gt;</text:p><text:p>   ForwardIterator <text:span text:style-name="T16">search_n</text:span> (ForwardIterator first, ForwardIterator last,</text:p><text:p>                             Size count, const T&amp; val);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro46">
     <table:table-cell table:style-name="ce153"/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator, class Size, class T, class BinaryPredicate&gt;</text:p><text:p>   ForwardIterator <text:span text:style-name="T16">search_n </text:span>( ForwardIterator first, ForwardIterator last,</text:p><text:p>                              Size count, const T&amp; val, BinaryPredicate pred );</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce153"/>
     <table:table-cell table:style-name="ce158"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
      <text:p>Returns an iterator to the first element in the range [first,last) for which pred returns true. If no such element is found, the function returns last.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class UnaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string"><text:p>  InputIterator <text:span text:style-name="T16">find_if </text:span>(InputIterator first, InputIterator last, UnaryPredicate pred)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (pred(*first)) return first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return last;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
      <text:p>Returns an iterator to the first element in the range [first,last) for which pred returns false. If no such element is found, the function returns last.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class UnaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string"><text:p>  InputIterator <text:span text:style-name="T16">find_if_not</text:span> (InputIterator first, InputIterator last, UnaryPredicate pred)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (!pred(*first)) return first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return last;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">search</text:span> Searches the range [first1,last1) for the first occurrence of the sequence defined by [first2,last2), and returns an iterator to its first element, or last1 if no occurrences are found.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class ForwardIterator1, class ForwardIterator2&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>  ForwardIterator1 <text:span text:style-name="T16">search</text:span> ( ForwardIterator1 first1, ForwardIterator1 last1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>ForwardIterator2 first2, ForwardIterator2 last2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>BinaryPredicate pred);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if (first2==last2) return first1; <text:s/>// specified in C++11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first1!=last1)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>ForwardIterator1 it1 = first1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>ForwardIterator2 it2 = first2;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>while (*it1==*it2) { <text:s text:c="3"/>// or: while (pred(*it1,*it2)) for version 2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>++it1; ++it2;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>if (it2==last2) return first1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>if (it1==last1) return last1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return last1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Searches the range [first1,last1) for the last occurrence of the sequence defined by [first2,last2), and returns an iterator to its first element, or last1 if no occurrences are found.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro53">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator1, class ForwardIterator2&gt;</text:p><text:p>   ForwardIterator1 <text:span text:style-name="T16">find_end</text:span> (ForwardIterator1 first1, ForwardIterator1 last1,</text:p><text:p>                              ForwardIterator2 first2, ForwardIterator2 last2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro46">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator1, class ForwardIterator2, class BinaryPredicate&gt;</text:p><text:p>   ForwardIterator1 <text:span text:style-name="T16">find_end</text:span> (ForwardIterator1 first1, ForwardIterator1 last1,</text:p><text:p>                              ForwardIterator2 first2, ForwardIterator2 last2,</text:p><text:p>                              BinaryPredicate pred);</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce1"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Returns an iterator to the first element in the range [first1,last1) that matches any of the elements in [first2,last2). If no such element is found, the function returns last1.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator, class ForwardIterator&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string"><text:p>   InputIterator <text:span text:style-name="T16">find_first_of</text:span> (InputIterator first1, InputIterator last1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="35"/>ForwardIterator first2, ForwardIterator last2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator, class ForwardIterator, class BinaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>   InputIterator <text:span text:style-name="T16">find_first_of</text:span> (InputIterator first1, InputIterator last1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="35"/>ForwardIterator first2, ForwardIterator last2,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="35"/>BinaryPredicate pred);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Searches the range [first,last) for the first occurrence of two consecutive elements that match, and returns an iterator to the first of these two elements, or last if no such pair is found.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class ForwardIterator&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string"><text:p>   ForwardIterator <text:span text:style-name="T16">adjacent_find</text:span> (ForwardIterator first, ForwardIterator last)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if (first != last)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>ForwardIterator next=first; ++next;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>while (next != last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>if (*first == *next) <text:s text:c="4"/>// or: if (pred(*first,*next)), for version (2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>return first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>++first; ++next;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return last;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Returns the number of elements in the range [first,last) that compare equal to val.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator, class T&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>typename iterator_traits&lt;InputIterator&gt;::difference_type</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T16">count</text:span> (InputIterator first, InputIterator last, const T&amp; val)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>typename iterator_traits&lt;InputIterator&gt;::difference_type ret = 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (*first == val) ++ret;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return ret;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Returns the number of elements in the range [first,last) for which pred is true.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce159" office:value-type="string" calcext:value-type="string">
      <text:p>count_if</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce159"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Compares the elements in the range [first1,last1) with those in the range beginning at first2, and returns the first element of both sequences that does not match.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator1, class InputIterator2&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>pair&lt;InputIterator1, InputIterator2&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T16">mismatch</text:span> (InputIterator1 first1, InputIterator1 last1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="14"/>InputIterator2 first2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator1, class InputIterator2, class BinaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>pair&lt;InputIterator1, InputIterator2&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T16">mismatch</text:span> (InputIterator1 first1, InputIterator1 last1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="14"/>InputIterator2 first2, BinaryPredicate pred);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">equal</text:span> != <text:span text:style-name="T16">mismatch</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[] = {10,20,80,320,1024};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::pair&lt;std::vector&lt;int&gt;::iterator,int*&gt; mypair;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>mypair = std::mismatch (myvector.begin(), myvector.end(), myints);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;First mismatching elements: &quot; &lt;&lt; *mypair.first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot; and &quot; &lt;&lt; *mypair.second &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>First mismatching elements: 30 and 80</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>Constructs a <text:a xlink:href="http://www.cplusplus.com/tuple" xlink:type="simple">tuple</text:a> object whose elements are references to the arguments in args, in the same order.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class... Types&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>constexpr tuple&lt;Types&amp;...&gt; tie (Types&amp;... args) noexcept;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
      <text:p>// packing/unpacking tuples</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce160" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;iostream&gt; <text:s text:c="4"/>// std::cout</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce160" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;tuple&gt; <text:s text:c="7"/>// std::tuple, std::make_tuple, std::tie</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
      <text:p>int main ()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myint;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>char mychar;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::tuple&lt;int,float,char&gt; mytuple;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>mytuple = std::make_tuple (10, 2.6, &apos;a&apos;); <text:s text:c="9"/>// packing values into tuple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::tie (myint, std::ignore, mychar) = mytuple; <text:s text:c="2"/>// unpacking tuple into variables</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;myint contains: &quot; &lt;&lt; myint &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;mychar contains: &quot; &lt;&lt; mychar &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro53">
     <table:table-cell table:style-name="ce152"/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator1, class ForwardIterator2&gt;</text:p><text:p>   bool <text:span text:style-name="T16">is_permutation</text:span> (ForwardIterator1 first1, ForwardIterator1 last1,</text:p><text:p>                        ForwardIterator2 first2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro46">
     <table:table-cell table:style-name="ce153"/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator1, class ForwardIterator2, class BinaryPredicate&gt;</text:p><text:p>   bool <text:span text:style-name="T16">is_permutation</text:span> (ForwardIterator1 first1, ForwardIterator1 last1,</text:p><text:p>                        ForwardIterator2 first2, BinaryPredicate pred);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce161"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Reverse</text:span>s the order of the elements in the range [first,last).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
      <text:p>// set some values:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (int i=1; i&lt;10; ++i) myvector.push_back(i); <text:s text:c="2"/>// 1 2 3 4 5 6 7 8 9</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce162" office:value-type="string" calcext:value-type="string">
      <text:p>// then reverse</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::reverse(myvector.begin(),myvector.end()); <text:s text:c="3"/>// 9 8 7 6 5 4 3 2 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>rotate </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Rotates the order of the elements in the range [first,last), in such a way that the element pointed by middle becomes the new first element.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (int i=1; i&lt;10; ++i) myvector.push_back(i); <text:s text:c="19"/>// 1 2 3 4 5 6 7 8 9</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::rotate(myvector.begin(),myvector.begin()+3,myvector.end()); <text:s text:c="2"/>// 4 5 6 7 8 9 1 2 3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro36">
     <table:table-cell/>
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">random_shuffle</text:span> Rearranges the elements in the range [first,last) randomly, using a user-defined shuffler or system one</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro36">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">generate</text:span> Assigns the value returned by gen function to the elements in the range [first,last). </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro36">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">generate_n</text:span> Assigns the value returned by successive calls to gen to the first n elements of the sequence pointed by first.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class OutputIterator, class Size, class Generator&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>OutputIterator generate_n (OutputIterator first, Size n, Generator gen);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">remove</text:span>  removes all elements comparing equal to val in the range [first,last), and returns an iterator to the new end of that range.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Assigns val to all the elements in the range [first,last).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class ForwardIterator, class T&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>  void <text:span text:style-name="T16">fill </text:span>(ForwardIterator first, ForwardIterator last, const T&amp; val)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first != last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>*first = val;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">fill_n</text:span> Assigns val to the first n elements of the sequence pointed by first.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class OutputIterator, class Size, class T&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>OutputIterator fill_n (OutputIterator first, Size n, const T&amp; val);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce163"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">std::reverse_copy</text:span> Copies the elements in the range [first,last) to the range beginning at result, but in reverse order.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[] ={1,2,3,4,5,6,7,8,9};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>myvector.resize(9); <text:s text:c="3"/>// allocate space</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::reverse_copy (myints, myints+9, myvector.begin());</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>myvector contains: 9 8 7 6 5 4 3 2 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">rotate_copy</text:span> Copies the elements in the range [first,last) to the range beginning at result, but rotating the order of the elements in such a way that the element pointed by middle becomes the first element in the resulting range.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class ForwardIterator, class OutputIterator&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>  OutputIterator <text:span text:style-name="T16">rotate_copy </text:span>(ForwardIterator first, ForwardIterator middle,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="30"/>ForwardIterator last, OutputIterator result)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>result=std::copy (middle,last,result);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return std::copy (first,middle,result);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Copies the elements in the range [first,last) starting from the end into the range terminating at result.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class BidirectionalIterator1, class BidirectionalIterator2&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p>  BidirectionalIterator2 <text:span text:style-name="T16">copy_backward</text:span> ( BidirectionalIterator1 first,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="41"/>BidirectionalIterator1 last,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="41"/>BidirectionalIterator2 result )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (last!=first) *(--result) = *(--last);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return result;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">copy_if</text:span> Copies the elements in the range [first,last) for which pred returns true to the range beginning at result.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>auto it = std::copy_if (foo.begin(), foo.end(), bar.begin(), [](int i){return !(i&lt;0);} );// copy only positive numbers:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bar.resize(std::distance(bar.begin(),it)); <text:s/>// shrink container to new size</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">replace_copy_if</text:span> Copies the elements in the range [first,last) to the range beginning at result, replacing those for which pred returns true by new_value.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce164" office:value-type="string" calcext:value-type="string">
      <text:p>Hb:replaces an element with value if pred is true. Copy otherwise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>// set some values:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (int i=1; i&lt;10; i++) foo.push_back(i); <text:s text:c="9"/>// 1 2 3 4 5 6 7 8 9</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bar.resize(foo.size()); <text:s text:c="2"/>// allocate space</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string"><text:p>  std::<text:span text:style-name="T16">replace_copy_if</text:span> (foo.begin(), foo.end(), bar.begin(), IsOdd, 0);  // 0 2 0 4 0 6 0 8 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>where IsOdd : bool IsOdd (int i) { return ((i%2)==1); }</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
      <text:p>Copies the elements in the range [first,last) to the range beginning at result, except those elements for which pred returns true.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce164" office:value-type="string" calcext:value-type="string">
      <text:p>Hb:skips an element if pred is true. Copy otherwise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[] = {1,2,3,4,5,6,7,8,9};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (9);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string"><text:p>  std::<text:span text:style-name="T16">remove_copy_if</text:span> (myints,myints+9,myvector.begin(),IsOdd);  //2 4 6 8 0 0 0 0 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p>where IsOdd : bool IsOdd (int i) { return ((i%2)==1); }</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">remove_copy</text:span> Copies the elements in the range [first,last) to the range beginning at result, except those elements that compare equal to val.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce164" office:value-type="string" calcext:value-type="string">
      <text:p>Hb:skips an element if equals to value. Copy otherwise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[] = {10,20,30,30,20,10,10,20}; <text:s text:c="14"/>// 10 20 30 30 20 10 10 20</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (8);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::remove_copy (myints,myints+8,myvector.begin(),20); // 10 30 30 10 10 0 0 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">replace_copy</text:span> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Copies the elements in the range [first,last) to the range beginning at result, replacing the appearances of old_value (20) by new_value (99)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[] = { 10, 20, 30, 30, 20, 10, 10, 20 };</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (8);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::replace_copy (myints, myints+8, myvector.begin(), 20, 99); <text:s/>//10 99 30 30 99 10 10 99</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>technics</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>Traditional array in algos</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>int myints[]={10,20,30,40,50,60,70};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (7);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::copy ( myints, myints+7, myvector.begin() );</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>int myints[] = {10,20,80,320,1024};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::pair&lt;std::vector&lt;int&gt;::iterator,int*&gt; mypair;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce158" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>mypair = std::mismatch (myvector.begin(), myvector.end(), myints);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>Check if we have previously processed an entry by comparing where it is first found and the current position. Code taken </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;class InputIterator1, class InputIterator2&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>bool is_permutation (InputIterator1 first1, InputIterator1 last1,</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="23"/>InputIterator2 first2)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::tie (first1,first2) = std::mismatch (first1,last1,first2);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>if (first1==last1) return true;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>InputIterator2 last2 = first2; std::advance (last2,std::distance(first1,last1));</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>for (InputIterator1 it1=first1; it1!=last1; ++it1) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string"><text:p>    if (<text:span text:style-name="T16">std::find(first1,it1,*it1)==it1</text:span>) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>auto n = std::count (first2,last2,*it1);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>if (n==0 || std::count (it1,last1,*it1)!=n) return false;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>return true;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro39" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="1048189">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="13">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="STL iterator" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co13" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">advance</text:span>s the iterator it by n element positions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator, class Distance&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>void advance (InputIterator&amp; it, Distance n);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">next </text:span>Returns an iterator pointing to the element that it would be pointing to if <text:a xlink:href="http://www.cplusplus.com/advance" xlink:type="simple">advanced</text:a> n positions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">prev </text:span>Returns an iterator pointing to the element that it would be pointing to if <text:a xlink:href="http://www.cplusplus.com/advance" xlink:type="simple">advanced</text:a> -n positions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce63"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>std::advance (it,5);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>it = std::next(it,5); <text:s/>//step forward by 5</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>it = std::prev(it,5); <text:s/>//step backward by 5</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
     <table:table-cell/>
     <table:table-cell table:style-name="ce63"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>typename iterator_traits&lt;InputIterator&gt;::difference_type </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="102"/>std::distance(first,last)</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="c++ ref update" table:style-name="ta1">
    <table:table-column table:style-name="co14" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co15" table:default-cell-style-name="ce139"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="7" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell table:style-name="ce165" office:value-type="string" calcext:value-type="string">
      <text:p>13.29 inheritance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell table:style-name="ce166"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce167"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce168" office:value-type="string" calcext:value-type="string">
      <text:p>If the destructor isn&apos;t virtual, chances are it&apos;s not a base class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T71">elements for inherentance</text:span>:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
      <text:p>abstract function;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
      <text:p>virtual destructor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce167"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce170" office:value-type="string" calcext:value-type="string"><text:p>base class : protected destructor OR pure virtual function (see inheritance/virtual destructor) </text:p><text:p>And what about <text:span text:style-name="T72">virtual destructor.</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>Hiding</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce172" office:value-type="string" calcext:value-type="string"><text:p>for hiding not to happen, the signatures of the functions and the number of the functions should be maintained</text:p><text:p>Inline, const are part of the signature</text:p><text:p/>
     </table:table-cell>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce173" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T73">in visual 2010implemetation was :</text:span><text:span text:style-name="T74">inline</text:span><text:span text:style-name="T75"> </text:span><text:span text:style-name="T74">void</text:span><text:span text:style-name="T75"> * </text:span><text:span text:style-name="T74">operator</text:span><text:span text:style-name="T75"> </text:span><text:span text:style-name="T74">new</text:span><text:span text:style-name="T75">[](size_t size, </text:span><text:span text:style-name="T74">char</text:span><text:span text:style-name="T75"> </text:span><text:span text:style-name="T74">const</text:span><text:span text:style-name="T75"> * filename, </text:span><text:span text:style-name="T74">int</text:span><text:span text:style-name="T75"> line) { ...declaration was:</text:span><text:span text:style-name="T74">void</text:span><text:span text:style-name="T75"> * </text:span><text:span text:style-name="T74">operator</text:span><text:span text:style-name="T75"> </text:span><text:span text:style-name="T74">new</text:span><text:span text:style-name="T75">[](size_t size, </text:span><text:span text:style-name="T74">char</text:span><text:span text:style-name="T75"> </text:span><text:span text:style-name="T74">const</text:span><text:span text:style-name="T75"> * filename, </text:span><text:span text:style-name="T74">int</text:span><text:span text:style-name="T75"> line);linker could not find the function.</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce174" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T76">class</text:span><text:span text:style-name="T77"> Object{</text:span><text:span text:style-name="T78">public</text:span><text:span text:style-name="T77">:</text:span><text:span text:style-name="T78">virtual</text:span><text:span text:style-name="T77"> </text:span><text:span text:style-name="T78">void</text:span><text:span text:style-name="T77"> print() </text:span><text:span text:style-name="T78">const</text:span><text:span text:style-name="T77"> {cout &lt;&lt;</text:span><text:span text:style-name="T79">&quot;this is Object\n&quot;</text:span><text:span text:style-name="T77">;}};</text:span><text:span text:style-name="T78">class</text:span><text:span text:style-name="T77"> Point: </text:span><text:span text:style-name="T78">public</text:span><text:span text:style-name="T77"> Object{</text:span><text:span text:style-name="T78">public</text:span><text:span text:style-name="T77">:</text:span><text:span text:style-name="T78">void</text:span><text:span text:style-name="T77"> print() {cout &lt;&lt;</text:span><text:span text:style-name="T79">&quot;this is Point\n&quot;</text:span><text:span text:style-name="T77">;}};Point::print is hidden because of absence of const</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce172"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce175" office:value-type="string" calcext:value-type="string">
      <text:p>Constructor</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce172" office:value-type="string" calcext:value-type="string">
       <text:p>copy constructor</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce172" office:value-type="string" calcext:value-type="string">
        <text:p>copy constructor from ref of a base class only</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce172"/>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce173" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T76">class</text:span><text:span text:style-name="T77"> Point: </text:span><text:span text:style-name="T78">public</text:span><text:span text:style-name="T77"> Object{};</text:span><text:span text:style-name="T78">class</text:span><text:span text:style-name="T77"> Shape: </text:span><text:span text:style-name="T78">public</text:span><text:span text:style-name="T77"> Object{};</text:span><text:span text:style-name="T78">void</text:span><text:span text:style-name="T77"> cc(</text:span><text:span text:style-name="T78">const</text:span><text:span text:style-name="T77"> Object &amp; o){Point o1=o; o1.print();}</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce172" office:value-type="string" calcext:value-type="string">
        <text:p>copy_constructor.cpp:57:11: error: conversion from ‘const Object’ to non-scalar type ‘Point’ requested</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce172" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>Point o1=o; <text:s/></text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce172" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="11"/>^</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce44" table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="9"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell table:style-name="ce165" office:value-type="string" calcext:value-type="string">
      <text:p>13.12 exceptions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell table:style-name="ce166"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce176"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce176" office:value-type="string" calcext:value-type="string"><text:p>-exception raised in the middle of a bloc, <text:span text:style-name="T80">local objects are destructed</text:span>, the remaining code is not run in the rasing function, including any memory deletion instruction (memory leak)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce176" office:value-type="string" calcext:value-type="string">
      <text:p>control is passed to the catching bloc and execution continues after it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce177" office:value-type="string" calcext:value-type="string"><text:p>This process continues until, at some level, a handler matches the exception. At that point, the exception is considered &quot;caught&quot;, and no further searching occurs. </text:p><text:p><text:span text:style-name="T80">And the execution continues after all catch blocs ?</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
      <text:p>throw;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce178" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>en bas on a dit que throw c&apos;est pour rethrow (the last exception object i believe). what happens in case no exceptions has been thrown, but we encounter throw ? it that correct code after all ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce179" office:value-type="string" calcext:value-type="string">
      <text:p>in a catch bloc it will rethrow the same exception object to the upper level</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inside try or in the code it calls function set for termination </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
      <text:p>throw obj;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in a catch bloc it will create a new object and throw it to the upper level</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro54">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>try </text:p><text:p>{</text:p><text:p>try </text:p><text:p>{</text:p><text:p>MyErrDerived e;</text:p><text:p>     throw e;  ←--  throw MyErrDerived. ok</text:p><text:p>    } </text:p><text:p>    catch (MyErr&amp; err) </text:p><text:p>    {</text:p><text:p>printf(&quot;B Inner catch, &amp;err=%p\n&quot;, &amp;err);</text:p><text:p>throw err; ←-- <text:span text:style-name="T81">throws an MyErr object !!! because the base class ref doens carry info on the underlying object + there could be MyErrDerived1, MyErrDerived2, … </text:span>    </text:p><text:p>    }</text:p><text:p>} </text:p><text:p>catch (MyErr&amp; err) </text:p><text:p>{</text:p><text:p>printf(&quot;B Outer catch, &amp;err=%p\n&quot;, &amp;err);</text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>QUIZ</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1-what does throw. Does in code, try and catch bloc ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro55">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>2-try </text:p><text:p>{</text:p><text:p>try </text:p><text:p>{</text:p><text:p>MyErrDerived e;</text:p><text:p>     throw e;  ←-- safe/correct ?</text:p><text:p>    } </text:p><text:p>    catch (MyErr&amp; err) </text:p><text:p>    {</text:p><text:p>printf(&quot;B Inner catch, &amp;err=%p\n&quot;, &amp;err);</text:p><text:p>throw err; ←-- safe/correct ?  </text:p><text:p>    }</text:p><text:p>} </text:p><text:p>catch (MyErr&amp; err) </text:p><text:p>{</text:p><text:p>printf(&quot;B Outer catch, &amp;err=%p\n&quot;, &amp;err);</text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell table:style-name="ce165" office:value-type="string" calcext:value-type="string">
      <text:p>18.1 lambda</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce180" office:value-type="string" calcext:value-type="string">
      <text:p>int multi=2;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce180" office:value-type="string" calcext:value-type="string">
      <text:p>c=count_if(col.begin(),col.end(),[multi /*to capture the local variable multi*/](int x){return !(x%multi)});</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce181" office:value-type="string" calcext:value-type="string"><text:p>multi is read only. Its modification throws compiling error </text:p><text:p>If it needs to be modified, use [&amp;multi]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell table:style-name="ce182" office:value-type="string" calcext:value-type="string">
      <text:p>21.2 iterators</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro56">
     <table:table-cell/>
     <table:table-cell table:style-name="ce183" office:value-type="string" calcext:value-type="string"><text:p>back inserter() causes the container’s push back() operator to be invoked in place of the assignment operator. </text:p><text:p>Hbf:so &apos;i&apos; in the previous code called the assignement operator ? isn&apos;t it correcte provided it incremented ?</text:p><text:p><text:span text:style-name="T38">←No. the assignment operator needs a container to assign it to the this container. back_inserter calling the push_back function is to add a new element to the container</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce184" office:value-type="string" calcext:value-type="string">
      <text:p>void std::queue::_Assign_rv(_Myt&amp;&amp; _Right)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
      <text:p>{ // assign by moving _Right</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce184" office:value-type="string" calcext:value-type="string">
      <text:p>if (this == &amp;_Right)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
      <text:p>;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce184" office:value-type="string" calcext:value-type="string">
      <text:p>else if (get_allocator() != _Right.get_allocator())</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
      <text:p>{ // move construct a copy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
      <text:p>clear();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce184" office:value-type="string" calcext:value-type="string">
      <text:p>for (iterator _Next = _Right.begin(); _Next != _Right.end(); &lt;-----------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
      <text:p>++_Next)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro31">
     <table:table-cell/>
     <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string"><text:p>push_back(<text:span text:style-name="T38">_STD forward</text:span>&lt;_Ty&gt;(*_Next));  <text:span text:style-name="T38">//What is this</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce172"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048500">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
   </table:table>
   <table:table table:name="interview_tests" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co16" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="6" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>hamilton jet</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
       <text:p>optimization</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p>cache friendly code</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p>LHS</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
        <text:p>bitwise operations</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce188" office:value-type="string" calcext:value-type="string">
        <text:p>loop unrolling</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p>prefetching</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p>CPU</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p>frame</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p>sp,bp</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce189" office:value-type="string" calcext:value-type="string">
        <text:p>assembly</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186"/>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>c++ faq</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>mem management: overloading of new for a class and globally. Placement new </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>pointer functin on memebers</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>cast</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>const, ref members and copy constructor, assignment. How to write assignement for ref and/or const containing class</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>OOP + OOD + GRASP</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
       <text:p>design/design patterns</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p>visitor</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
        <text:p>adaptor</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="3"/>STL</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
       <text:p>STL, boost, meta programming</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
       <text:p>multi-threading, inter process communication, pipes, </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
       <text:p>syntaxe, template</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
       <text:p>data types</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce188" office:value-type="string" calcext:value-type="string">
        <text:p>how to express an decimal number into hex ?</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce188" office:value-type="string" calcext:value-type="string">
        <text:p>how to express fixed point float ?</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p>narrow conversion</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186"/>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
       <text:p>cross-platform programming</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
       <text:p>algorithms</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p>data structures</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>AVL. auto-balancing</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>heap</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
        <text:p>calculating complexity of algorithms</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186"/>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce189" office:value-type="string" calcext:value-type="string">
       <text:p>testing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce189" office:value-type="string" calcext:value-type="string">
       <text:p>how to test a complex system</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce189" office:value-type="string" calcext:value-type="string">
       <text:p>how to test quickly </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce189" office:value-type="string" calcext:value-type="string">
       <text:p>Testing interview questions</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce189"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce189" office:value-type="string" calcext:value-type="string">
      <text:p>testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>what is usability testing?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce191" office:value-type="string" calcext:value-type="string">
       <text:p>used to make sure we don&apos;t miss anything from the user point perspective</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce191" office:value-type="string" calcext:value-type="string">
       <text:p>the user is given a mock-up or prototype of the final app.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce191" office:value-type="string" calcext:value-type="string">
       <text:p>what is a mock-up/prototype ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>What are the categories of defects?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
       <text:p>Wrong: The requirements have been implemented incorrectly. This defect is a variance from the given specification. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
       <text:p>Missing: There was a requirement given by the customer and it was not done. This is a variance from the specifications, an indication that a specification was not implemented, or a requirement of the customer was not noted properly. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
       <text:p>Extra: A requirement incorporated into the product that was not given by the end customer. This is always a variance from the specification, but may be an attribute desired by the user of the product. However, it is considered a defect because it&apos;s a variance from the existing requirements. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce192"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>defect vs failure ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>When detected internally, it is a defect, if it reaches the end customer it is called a failure</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between latent and masked defects?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
       <text:p>A latent defect is an existing defect that has not yet caused a failure because the sets of conditions were never met.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
       <text:p>A masked defect is an existing defect that hasn&apos;t yet caused a failure just because another defect has prevented that part of the code from being executed.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce190"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>On what basis is the acceptance plan prepared?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>Testing should occur in conjunction with each phase of the software development.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string"><text:p>In the <text:span text:style-name="T45">requirement phase</text:span> we can verify if the requirements are met according to the customer needs.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro10" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce193" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T45">During design</text:span> we can check whether the design document covers all the requirements. </text:p><text:p>In this stage we can also generate rough functional data. </text:p><text:p>We can also review the design document from the architecture and the correctness perspectives.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string"><text:p>In the <text:span text:style-name="T45">build and execution phase</text:span> we can execute unit test cases and generate structural and functional data. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
       <text:p>And finally comes the testing phase done in the traditional way. i.e., run the system test cases and see if the system works according to the requirements. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
       <text:p>During installation we need to see if the system is compatible with the software. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
       <text:p>Finally, during the maintenance phase when any fixes are made we can retest the fixes and follow the regression testing.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Are there more defects in the design phase or in the coding phase?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>A defect in The design phase is more costy than in the execution phase.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
      <text:p>Does an increase in testing always improve the project?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro14">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string"><text:p>No an increase in testing does not always mean improvement of the product, company, or project. </text:p><text:p>In real test scenarios only 20% of test plans are critical from a business angle. </text:p><text:p>Running those critical test plans will assure that the testing is properly done. </text:p><text:p>No under testing so defects do not go up.</text:p><text:p>No over testing so cost do not go up</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
      <text:p>Explain Unit Testing, Integration Tests, System Testing and Acceptance Testing?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>Unit testing - Testing performed on a single, stand-alone module or unit of code.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>Integration Tests - Testing performed on groups of modules to ensure that data and control are passed properly between modules.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>System testing - Testing a predetermined combination of tests that, when executed successfully meets requirements.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>Acceptance testing - Testing to ensure that the system meets the needs of the organization and the end user or customer (i.e., validates that the right system was built).</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
      <text:p>black box testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string"><text:p>In order to write black box test cases we need the requirement document and, design or project plan.</text:p><text:p><text:span text:style-name="T45">Why is the design or project plan needed ?</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce38"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Les tests de vérification du logiciel sont des tests systèmes et unitaires exécutés avec l&apos;outil RTRT (Rational Test Real Time) sur SUN et PC-Lynx</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>embedded avionics systems (requires registration)</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>name the test</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>test on which is depends. They are run one after the other as set in a script</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>list all objectives of the test</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>each objective shows the requirement it is <text:span text:style-name="T82">Traceable to In </text:span>the SLS. le texte de l&apos;objectif fait la qualité du test.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Exigences couvertes</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Environnement du test</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- les zones de RAM utilisées par ARF_MGR,</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- les canaux de communication : pipes et files de messages,</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>pipes needed. Printer pipe, pipe mcdu, …</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- les databases,</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- les interfaces simulées avec les autres sous-ensemble de l’ATSU.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Passage du test et résultats attendus</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>In DO-178B, testing emphasises requirements coverage. Each requirement has one or more tests to prove that it has been implemented correctly.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-code coverage</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Benefit : Code coverage analysis Avoids delivering code that is executed for the first time by the user or the target system running the Application. (RTRT spec)</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how is the code/structural coverage is done ? What tool is involved ? RTRT, does memory, performance profiling, … and code coverage analysis</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>If you don’t get 100% structural coverage, it means one of four things and each requires action on your part:</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There’s a requirement missing. The code that hasn’t been covered is performing an essential activity, but no requirement indicates that this should be done.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Action: need to add a new requirement (and associated tests).</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There’s a test missing. The code that hasn’t been covered relates to an existing requirement, but no test was implemented for it.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Action: add a new test.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Extraneous/dead code. The code that hasn’t been covered is not traceable to any requirement and isn’t needed by the application.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Action: remove the code.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Deactivated code. The code that hasn’t been covered isn’t traceable to any requirements for the current system, but is intended to be executed in certain configurations.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Action: show that a configuration exists in which the code will execute.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-unit tests</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>pour vérifier des exigences de bas niveau (les fonctions)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>pour compléter la couverture structurelle des instructions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>O1 : Dans le cas où la database WorldMap est invalide, ARF_MGR doit envoyer un LightOn afin d’afficher un &lt;REQ&gt;.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>severity, priority</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>severity is the degree of impact of a bug on the application. Crash, hang, …</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>priority is how soon whould the bug be fixed. This is set by the manager who bases it on user&apos;s perspective. Making customer needs the primary focus</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="6" table:number-rows-spanned="1">
      <text:p>severity</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="1">
      <text:p>critical</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="2">
      <text:p>urgent</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="2"><text:p>fey feature does not work</text:p><text:p>Frequent bug (even minor)</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell/>
     <table:covered-table-cell table:style-name="ce94"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="2">
      <text:p>low</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="2">
      <text:p>feature does not work but rarely used</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell/>
     <table:covered-table-cell table:style-name="ce94"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tests stem from requirements</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>test cases problem</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>Talk about and think of requirements. From requirements → test cases</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>isolating defect</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>find data the produce the bug</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unit tests</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>pour vérifier des exigences de bas niveau ou</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>pour compléter la couverture structurelle des instructions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Retesting Vs Regression Testing</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>Retesting is done only for failed test cases</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>Re-testing is carried out to confirm the test cases that failed in the final execution are passing after the defects are fixed</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>Regression testing is carried out to confirm whether a recent program or code change has not adversely affected existing features</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>Defect verification is the part of re-testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Cannot Reproduce avoidance</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
      <text:p>note down each step and the environment information. Tester verifies the validity of details</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>verification VS validation</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce195" office:value-type="string" calcext:value-type="string">
       <text:p>Criteria</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce195" office:value-type="string" calcext:value-type="string">
       <text:p>Verification</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce196" office:value-type="string" calcext:value-type="string">
       <text:p>Definition</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce200" office:value-type="string" calcext:value-type="string">
       <text:p>The process of evaluating work-products (not the actual final product) of a development phase to determine whether they meet the specified requirements for that phase.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce196" office:value-type="string" calcext:value-type="string">
       <text:p>Objective</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce200" office:value-type="string" calcext:value-type="string">
       <text:p>To ensure that the product is being built according to the requirements and design specifications. In other words, to ensure that work products meet their specified requirements.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce196" office:value-type="string" calcext:value-type="string">
       <text:p>Question</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce200" office:value-type="string" calcext:value-type="string">
       <text:p>Are we building the product right?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce196" office:value-type="string" calcext:value-type="string">
       <text:p>Evaluation Items</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce200" office:value-type="string" calcext:value-type="string">
       <text:p>Plans, Requirement Specs, Design Specs, Code, Test Cases</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro57">
      <table:table-cell/>
      <table:table-cell table:style-name="ce196" office:value-type="string" calcext:value-type="string">
       <text:p>Activities</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce200" office:value-type="string" calcext:value-type="string"><text:p>Reviews</text:p><text:p>Walkthroughs</text:p><text:p>Inspections</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce196" office:value-type="string" calcext:value-type="string">
       <text:p>code review and syntax check is verification while actually running the product and checking the results is validation.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce200"/>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce196"/>
      <table:table-cell table:style-name="ce200"/>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce197" office:value-type="string" calcext:value-type="string">
      <text:p>If it&apos;s a pure testing project, then the V model is the best.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce198"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce94"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>opengl concepts</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>graphics concepts</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>dithering</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>frustrum culling</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>3d concepts</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>math</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>-matrix, vector, quaternion, interpolation of points/vector/quaternion,trigonometry, arc distance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>-homogenous coordinates vs normal coordinates. especially, RHW c&apos;est quoi ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>intersections</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>plane, line, sphere, triangle </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>engine concepts, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>fill rate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>frame rate, dropping of a frame</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>optimization</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>cache friendly code</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>LHS</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>bitwise operations</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce188" office:value-type="string" calcext:value-type="string">
      <text:p>loop unrolling</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>multi-threading, inter process communication, pipes, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>c++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>syntaxe, template</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>OOP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce188" office:value-type="string" calcext:value-type="string">
      <text:p>how to express an decimal number into hex ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce188" office:value-type="string" calcext:value-type="string">
      <text:p>how to express fixed point float ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>CPU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>frame</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>sp,bp</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string">
      <text:p>cross-platform programming</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>STL, boost</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>design/design patterns</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>visitor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>know</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>assembly</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="5">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce199" office:value-type="string" calcext:value-type="string">
      <text:p>amazon</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>data structures</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>AVL. auto-balancing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>heap</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>calculating complexity of algorithms</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce199" office:value-type="string" calcext:value-type="string">
      <text:p>QA consultants</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>OOP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>Code example</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>algorithms</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>STL</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>how would you overload new ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>DB</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
   </table:table>
   <table:table table:name="c++ idioms" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Virtual Friend Function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class Base {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>friend std::ostream&amp; operator&lt;&lt; (std::ostream&amp; o, const Base&amp; b);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>protected:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>virtual void printOn(std::ostream&amp; o) const = 0; <text:s/>// Or plain virtual; see below</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>inline std::ostream&amp; operator&lt;&lt; (std::ostream&amp; o, const Base&amp; b)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>b.printOn(o);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>return o;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class Derived : public Base {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>protected:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>virtual void printOn(std::ostream&amp; o) const;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>void Derived::printOn(std::ostream&amp; o) const</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="Feuille14" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void f(double x)</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Base::f(double x)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>virtual ~Base(){}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Derived : public Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>void f(char c)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Derived::f(char c)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int main()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Derived* d = new Derived();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Base* b = d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>b-&gt;f(65.3); <text:s/>f defined in B&apos;s interface. And not virtual. So static binding</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>d-&gt;f(65.3); <text:s/>f defined in D&apos;s interface with a cast to char. And not virtual. So static binding</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>delete d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Virtual void f(double x)</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Base::f(double x)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>virtual ~Base(){}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Derived : public Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>void f(char c)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Derived::f(char c)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int main()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Derived* d = new Derived();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Base* b = d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>b-&gt;f(65.3); <text:s/>f defined in B&apos;s interface. And hidden virtual. So no access to the drived because different. So dynamic binding but Derived does not define it. So B&apos;s version is used</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>d-&gt;f(65.3); <text:s/>// error; can&apos;t convert float to Point and It can&apos;t see B&apos;s interface. i thought both version will be accessible. with Point one staticly. double one through the vtabe; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>delete d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
   </table:table>
   <table:table table:name="optim" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>prefetching</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>insertion deletion in array is faster than linked list. Complexity analysis is a rough estimate only (Bjarne). Thanks to prefetch</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>an array of AI, physic, graphics. Pointed by heterogeneous objects</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="embedded" table:style-name="ta1">
    <table:shapes>
     <draw:frame draw:z-index="0" draw:name="http://www.embedded.com/content/images/icons/flag-small.png" draw:style-name="gr1" draw:text-style-name="P1" svg:width="2.64mm" svg:height="2.37mm" svg:x="22.57mm" svg:y="13.54mm">
      <draw:image xlink:href="http://www.embedded.com/content/images/icons/flag-small.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad">
       <text:p/>
      </draw:image>
     </draw:frame></table:shapes>
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co17" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="3" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell/>
     <table:table-cell table:style-name="ce201" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://www.embedded.com/design/programming-languages-and-tools/4396331/A-Finite-State-Machine-Decision-Algorithm-" xlink:type="simple">A Finite State Machine Decision Algorithm</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p>24 September 1991 <text:a xlink:href="http://www.embedded.com/collections/4396972/4/Algorithms#" xlink:type="simple">Save &amp; Follow</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p>This paper will focus on the decision algorithm and its use as opposed to finite state machine design... <text:a xlink:href="http://www.embedded.com/design/programming-languages-and-tools/4396331/A-Finite-State-Machine-Decision-Algorithm-" xlink:type="simple">Read More</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="15">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce202" office:value-type="string" calcext:value-type="string">
      <text:p>Will have an understanding of the impact of hardware on the design and implementation of code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce202"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>interrupts programming in embedded</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>JIRA</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>understanding of embedded systems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce203" office:value-type="string" calcext:value-type="string">
      <text:p>gui programming using Digia QT. Understand the messages, handling, controls children and their containers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Few insructions in gdb, make. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Find the call stack using registers.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>review registers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>object oriented principles</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ui in atsu. Find some code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Git </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>take notes of what I learned</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>document knowledge</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>I mean don&apos;t use , use inline functions instead of macros, and use const variables instead of #defines.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Don&apos;t use</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>new/delete, </text:p><text:p>avoid exceptions, </text:p><text:p>avoid virtual classes with inheritance, </text:p><text:p>possibly avoid inheritance all together, </text:p><text:p>Be very careful with templates</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>endianness</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>unsigned int t= 1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char *c = (char *)&amp;t;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if(*c)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>cout &lt;&lt; &quot;little endian&quot; &lt;&lt; endl; <text:s/>//least significat byte stored first (intel processors, …)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>else</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>cout &lt;&lt; &quot;big endian&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>count the number of bits in a number</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="12">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Q: How does, taking the address of local variable result in unoptimized code?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro58">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>A: The most powerful optimization for compliler is register allocation. That isit operates the variable from register, than memory. Generally local variables are allocated in registers. However if we take the address of a local variable, compiler will not allocate the variable to register.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Q: What is loop unrolling?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>A: Small loops can be unrolled for higher performance, with the disadvantage of increased code size. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>When a loop is unrolled, a loop counter needs to be updated less oftenandfewer branches are executed. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>If the loop iterates only a few times, it can be fully unrolled,so that the loop overhead completely disappears.eg:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int countbit1(uint n)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{ </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int bits = 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>while (n != 0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{if (n &amp; 1) bits++;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>n &gt;&gt;= 1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return bits;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int countbit2(uint n)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{ </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int bits = 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>while (n != 0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if (n &amp; 1) bits++;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if (n &amp; 2) bits++;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if (n &amp; 4) bits++;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if (n &amp; 8) bits++;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>n &gt;&gt;= 4;}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return bits;}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>Q: How does global variable result in unoptimized code?A: For the same reason as getting address of local variable, compiler will never put the global variable into register. So its bad.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>Q: So how to overcome this problem?A: When it is necessary to take the address of variables, (for example if they are passed as areference parameter to a function). Make a copy of the variable, and pass the address of that copy.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro29">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>Q: Which is better a char, short or int type for optimization?A: Where possible, it is best to avoid using char and short as local variables.For the types  char and short the compiler needs to reduce the size of the local variable to 8or 16 bitsafter each assignment. This is called sign-extending for signed variables and zeroextendingfor unsigned variables. It is implemented by shifting the register left by 24 or16bits, followed by a signed or unsigned shift right by the same amount, taking twoinstructions (zero-extension of an unsigned char takes one instruction).These shifts can be avoided by using int and unsigned int for local variables. Thisis particularly important for calculations which first load data into local variables and thenprocess the data inside the local variables. Even if data is input and output as8- or 16-bitquantities, it is worth considering processing them as 32-bit quantities.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.rmbconsulting.us/a-c-test-the-0x10-best-questions-for-would-be-embedded-programmers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>1. Using the #define statement, how would you declare a manifest constant that returns the number of seconds in a year? Disregard leap years in your answer.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>#define SECONDS_PER_YEAR (60UL * 60UL * 24UL * 365UL)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>I’m looking for several things here:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce206" office:value-type="string" calcext:value-type="string">
      <text:p>(a)    Basic knowledge of the #define syntax (i.e. no semi-colon at the end, the need to parenthesize etc.).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>(b)    A good choice of name, with capitalization and underscores.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>(c)    An understanding that the pre-processor will evaluate constant expressions for you. Thus, it is clearer, and penalty free to spell out how you are calculating the number of seconds in a year, rather than actually doing the calculation yourself.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>(d)    A realization that the expression will overflow an integer argument on a 16 bit machine – hence the need for the L, telling the compiler to treat the expression as a Long.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>(e)    As a bonus, if you modified the expression with a UL (indicating unsigned long), then you are off to a great start because you are showing that you are mindful of the perils of signed and unsigned types – and remember, first impressions count!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>Memory accesses, CPU, GPU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>grabbing a piece of VRAM for sth, the bits have to be sent across the bus to system RAM </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for this, an depending on the architecture, the CPU and the GPU must argue for a moment about timing, then they stream the bits. All the while, the game has come to a complete halt.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this problem was back in the days of fixed function pipelines, when anything not supported by the video card had to be done by the CPU, such as the first attempts at motion blur.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>with programmable pipelines, you can create shaders that can run directly on the bits stored in VRAM.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>but still, communication between the CPU and the video card should be limited. If we send anything, it is best to send it in batches.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>The GPU in you video card is simply painting the screen using the components in VRAM. It it ever has to stop and ask system RAM for sth, your game won&apos;t run as fast as it could</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">optimizing memory access</text:span> (from game coding complete) aka prefetching</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Make your code/data do as much work as possible on data that is already in the cache</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>example given is array accesses: cmp column order access vs row order access</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>packing data in memory saves memory and optimizes CPU (due to less cache misses)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>Alignment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the compiler will align fields on an optimale byte boundry: N-byte data is memory aligned if the starting address is evenly divisible by N.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the cpu reads and writes memory-aligned data much faster than other data</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>#pragma <text:span text:style-name="T16">pack</text:span>(push, 1)   //the compiler is forced to place member variables on 1 byte boundry</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct ReallySlowStruct <text:s/>//this is packed, but accesses to unaligned fields kills the CPU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="7"/>c:6;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>__int64 <text:s/>d:64;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int <text:s text:c="10"/>b:32;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="7"/>a:8;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct SlowStruct <text:s/>//this is packed, but accesses to unaligned fields kills the CPU. I don&apos;t see any difference between this and ReallySlowStruct</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="10"/>c;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>__int64 <text:s text:c="4"/>d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int <text:s text:c="13"/>b;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="10"/>a;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct SlowStruct <text:s/>//this is packed, and accesses to fields are aligned so CPU friendly</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>__int64 <text:s text:c="4"/>d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int <text:s text:c="13"/>b;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="10"/>c;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="10"/>a;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="10"/>unsed[2];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>#pragma <text:span text:style-name="T16">pack</text:span>(pop)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="55">
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Fixed-point floats</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>describe function call. In risc and cisc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
   </table:table>
   <table:table table:name="oodesign" table:style-name="ta1">
    <table:shapes>
     <draw:frame draw:z-index="0" draw:name="Image 1" draw:style-name="gr1" draw:text-style-name="P1" svg:width="120.05mm" svg:height="63.45mm" svg:x="22.57mm" svg:y="631.71mm">
      <draw:image xlink:href="">
       <office:binary-data>R0lGODlhtAHrAMQAAP7+4vr69YyMiru7vvCXiFhYV/X03O7tAt0nIyoqI9PTy5ed346OAva3
        o1paAezs2MHAAs/S4unp5mVu4dra0+Jza+50AfnQufvjy///5v394szMxv//5f//A///////
        4yH5BAAAAAAALAAAAAC0AesAAAX/4CeOIvdQGamOJrquppK+ZDzT5SPjrLHzIt+NJwQGN0Oc
        Bmn8LJO0Z3PJaQI21Sa2ydkau1kgmLtpfroAsqaZ2ayN7Tcwzt4Y2Io7PG/OucQnUDA6gio2
        X4RfRUaLQI1EP0BSRpOSTJReQFdhQJk8Y1+eOKBiZWRpoXI8dHBudao4bXpzfHuzXIGIf5+J
        gJGjvZ+POMM0xS8Gl5aFKpU8zkqiNJtm0i+kn9Yw2oamoailsDSsc66t4i8ZtbS3seu4u8Dx
        NIe+zCzBo8cr+yr9JP9GQIui7FnBaJxwUNOSkB63Gg9ZRCzhrRS4bOhWkFtlrlxGFbLwtBv3
        Ttc9PyfP/+Sjt/JaSxgBg/wiNtPYQYIpndx8MZDnxA8LjfzENmqoUTNo1Lxaek6kU1t9VM5z
        OXVQTasp6wm7yo+rP68AwQrcuaJnWbLNfgbt1PCa0bbb4HZDuuFi0Y8kNsbqyBHviJBQAyPN
        BaiqoZeHxapUzCHmB8eQ0ZIwmzYn5clqf354S0YuRM8S6dp16FeE3nF895b+oG5kupIkXcvL
        SpgXY8Q1cPdQ/Jg3ZN6Xx1qWPBa0iLU8OIcyfuboKaVNo3usIxsk7NfVqdI2nPu296y/c0Ye
        Tn4KcRFUrGhWXoo5UYeioU+X3vcpO/vwttP+johx+Cb/YVKegOYxhxwO7GXjnv9z38hXH32q
        UYefO9kNwh0+F+bAnz2K+OaheOfpNOAyBarH3GYLptgZGfGlwtR8MK5ynUYzWiebBjjmiOMH
        J3Cg44858qiAj0D+KCSRRQapA5JJagDAkk3m+OSQUeIIQDJMJnklFlXiiGWXGnzZpZhdcgmm
        mWVm2SSaUV7hRJebvVnlZgCA2QWYGtxppxt74tmFAXsC2uWfgdZZJQd5GPrjBow26uijkEYq
        6aSUVmoppAs8OsCljG7KqaeXgipppp1yuoGolaJK6aYDoNqqppC+GmujpE6qqq2m3iqprpHy
        OuunuQYL7LChTsrBscgemwEhyTaL7LIyOOsstBlI2yz/tdYmO0EEMkiwALILfDsBBcoKke2z
        5p57bLrqsutsBBMc+4S68iJhrQERIDsvvU+E26y/yF5RbbIAJ5vMwPE2S4EEytpLbxsDqwsx
        vRy0QXHFdVHcBgAau9Fxng8rALLEeWhccsgGRJwsSxlKtd/LRoQrwwITjDDuBwtEUEKAjviG
        VgQLoBeiWfgKV2C4KiA9AnJKk+CvCDWrIAEFFKm4HIvPuQghaqudlo4dE8YWVQv69QczEPDK
        MMEEEnwgQdTb4mtAERFQLUIEBkw9wiJ186NzBJfg2/Zjd8zN40EUIA3vBxRQcIkEeIswwAcR
        DL4E5K4N7nbTAFUu0ABv63x3/+gjUAB4GJVv2znNkdcM+d56cDAA5w5ZXUqL4bz4YIx7VWha
        jXkBb2HZHBb/zAQKvK367FDTvLYPyq/d/NqT95YBBWtPEDQJ8GafQvfa4xw00uEOQX3N2Gc/
        QArOsw3+zQa0L3rpUdNMs90jDJC9zumvzX/2qvsAAO/QvwCKIHpsE6Dztqe0813tgbfLWu62
        9rWupUZsgpGR73LTMrKZ7YNimMDsZhe0BOJsAndAoQLCpQGaQW1bi7OeCMWnAngtwACq25a3
        ggY0AdZMhDeAl87aBq/JlU9/KXTb8oL2NsjNkHvbEyHopJZDnYULC6proM6Ypz8rRnF+I3ia
        DylXv//JFTEAmiuK7bKBO4zoLkIU1AjYMkihsdVmNiC0TVbCNYEAAO1tNhMdCjegPe0NLnzY
        k0kMmcc9FOKwboVcABG3RTMcKkMD2aNaDMsXQLjdrWbyW8EmqZc0BupsAlTIYSAVuLZvCXCV
        pcwCCinHwKDhcG34U+OKQtHGu7yRa7/ETtiE2QcPFuZsevyCDZW4gOoJUJASUIAhCYezv23P
        B5vc3ggW98gitu2QzdRepqCguPotIAOdhNrdxhfANJJxby502hcFKAEsUs2EN6MZwxTwAHpC
        LZciEGPUNlm9NtDOLWssSi9JE0w5WtCCG2zNMPF4zDwCgzHYs9vzYLmtDYT/KwJFfOY7ZTgA
        oGlTBInE5Clzpr979pFmmwpizhS3Pf1loItdFGBJZ/i2ksZzm0ycadRGELplwpR1JwTa8mAY
        PtYhNZZKPKA5aUlCCCoIaw3SGu+AGUcbTdSrxbwjy5B5UfBMYAacixzlKJA8+1VPkpuTyfWc
        KjVbwtVb2hNdDxMXzRvEb5qv2xz7wpUzHzYTPXyEa+cCiktR5rWm4hSd/j76Se3pYbKFraEr
        cZa/A7btr4q9qlUVKkE3djUvF6yghOiIwcF0UKwu2RAPrqSYMH0IQEMb2lWGKrScAAA4mTnR
        T7wWl11GMKsT3KpqT/sX4f0uos7lIPGSabyydkg8/7dlBHAFwVsRmWc4BlpPQmtnXDaW1pfM
        NU1qHbra+7CWF699rWytKwaeQQJEI3JaZb5bIiMciAYJ0uVo4XNehqaXNesFSYKDB90G2zG+
        ZGXJVUKrFRp4qxEnDahcAfSDDH8lv2EcXPzqORwMVAAIFcBAcM0wgBMvJ8UfIAABPnCBE9d4
        cwEmMHJNq1z2Hhgw7g1yfkxiUQlzd34VfgH2FgFIFUQtQN31R26PHNAb5rYBCOBHA0aAgAZk
        wsTT2EIDtswDAmR5OV2OsY2zfIEza2+8blmoWx7aUAV3LboSfa+cjNQjOEFpTn+O0pGKlDMp
        BTpJQPszvICEyi2pCUiOxv8RKptEpihVOkfb0sCiL72mCiAASFjOEQIuwCYMrMlHGDB1lMwM
        Jjd1WQMVqIAGQh3qME3gAWCiU592PSg+9dpPdgiUsHttAEU1CVHFLpKpls3sT1GPkM1sZqNI
        SCtGkYpmp/IoHyElwnCBitqx8jajJqBtR4Hb29K2drpPJW51YxvapYo1ARhVgQEQoN6dinWs
        HxVrBFRg3giQMb5PNW96IwAB02YUATx1b39rKuD/dpS8GyVvBGxq32beQMbHXatUCatYxLKU
        r2AVco+XfFXGkha2JMYslkfL5dVy6gA4kD2aZcAAk30zvI41Lg4sWZp8TJi2IhnzSDqrkAlr
        5Zv/OWA/EXpU6Y0Rp86hznSk85xcSzi4mS/AgYP7uwIcwMDX/d2shleA61739LGwfCx/t5nr
        AuNArDmAZQI0AOzJMrO/u9yYg3ua6572NAKONXe2s71iBTvXxB6GhY5xjPGPl5jHGD8yxYvM
        ZAbAPOZVhqyxErm6Rlbg/MInQBMgDZA9rCbjUKi/T65glg9IoPtIv00VzgCRNYNXCrmF1Jox
        cobN1F/NcLiG2KvzMbEWwZkPjgEsfyDWOE++CpwvAk9j4cxtVv7Zl7aFez8/4BhYgZlF4Hzp
        Z1nsyRC7CLyf/eyfofUDjnOB51xn1NK5FQ7Ws+crCvrYpgCv9SNIc5NO/zGkOommNKlHAk/G
        VP6zAjmzCAM1Pl+0QlEkUiK1P653fFGjAWn2Acs3Y843aksgfSRAfR5Ial1Hfmemdy5GDcln
        AIIXfiQwfsrngWSWZWxXF2eWfM5HfUznYQiFVRbhIHDUY3bWXhr0VdrxedTVhBcogDg0OYCU
        SCKlewgYZVHTRNgzOGoFNXjzAwPle6ZEgepUWEL0TEjQOG9zB02WQBkQcMp3B2mWff+mAQpA
        giPgfjZ4fXeghx+gfkDRfS5WfYMoOWdWfjPmgQbQZumHfVvWfH9IZgBwUEHIS/O3DfdnhPan
        hM2Vf641XfSVTFLXNjfzTA+Qc0MkdX8zSFKHhf9EZ1j6RALY4zyPsYDMZD8eVT25h3RtYz9I
        1XT5NDkaYGb9NmOj9gHO12aCV4gqyGUomGbOJ3b9dhxbkHz61oEjQIyeBoJjN2OBd3AX8Hzh
        2AAgmIg0FH/bIGeYWH9/sWDtCFGc+FwPBoqhxyHxo1iaIwE3pwBAMz/9OACFgzcbEACzEwHO
        lD8FeQlAM0V1dUN3Q1QH1EwSMADJI1nrRIW0FFoLGTmtlwx3RwAXMI7hN2sicAH3NmZlQWY0
        RgUy+Ifk9296QA2GgwEnuQL2Fmvh+JIgmZMfSQB9GI6QCIk8YkLtIYTZMBr092PuqF535olJ
        GFYQVmT+J5UwkV09kxP/AUAWTfYYxFFJU9ZfmiBe5lEaOOSQ6DgXl9gNmbg7bNk78cga0YUh
        9DiV/VeV4GGV94VbSRBKvWUEAgliBBFewiWYRkCQOSZ/O4ZemviO7CiP+sdg88iEoTiZ9bgV
        2HWZHJYE+EIBtxAcRwCYPkGYDFFee5ET74GYQ6hVbclVi6leTllHUDmXWEGViXGXmKld+MVf
        BLKbliCaQrFGABCcdmExpKljqZlcq7lcrQmXr9laQ8Z/TliZlHkN9kUTt0kivGkQ4GUi1aAi
        weklUiIRcJaOaQkRa1mEySlHzUlMnyiZ0vmedGmZmTmfjPCV2RkN2+lfYnk1OJJq/gkoqHCa
        /8VliYlpYMtJXEf4mJ34lnLpnvE5nbNZX3hpnfSJnRaqnWA5W/vZHnWCARcwZg1wARgwN2kg
        oN2wIOqolo2JYOeJGutJIxvUoNAJobVJmzVQncbgM6B5FjuaFr7JFp0RJh8qY3YXoiPqJIdJ
        ngWalAe6lCz6lnkmZJNRJDyCdYBGJVf6aHyGpW1yaFripUUSaVUiplXCaUVipkCCpkDCJlHC
        pqeGJ24apmWgAR5KjkRapCKaDHvWJLr2a7x2KL4GqMAmKIBKqFFCKMRmbEmCbIqKI832qJAa
        qSL3cZN6crhiqbtCqSYHciDXKvr2qfK2cJqKcpjaK6N6qZxaqam6qf+QYi0rp3gtB6svJ6uc
        p3Lu4qq3aquzei65Ki296iz7oi7Bei7Dmi3Fai1xRzEOI3kZIKR2eqdESo4jGnmuuqyK13iQ
        53gfs60hU3nZ0hqahzK1ChfGBF8R9qDwaZcVmpf12aOY4a7FwZ2juRwdOqTQSqQVEKKAIlrH
        dZw8lp4J2qQvClbtOaPpWqN1aQg4igwTihO6eaEIIa+/uSJhUqf3KnB2J6IfYaIQkaLmuaII
        uon4B6VxiRIOGqHRia7U2bAMm5v36bAvG5oSC6QPVLFjdrH/JmMNMKLkRaD+qpgAK7IHimdE
        G6Mma7Aqi7I0eqMs2xXXiaExy6MZqhAbyq//Nouzd2qk4sCxoVGeEtGiyhm07TiwkBmbJ4uw
        Kau09LCwTquXDwu1EBuYM5scCUWnz4qv95qnJ2qURYGU66iUYAujJGu0LnO23XGuaruyT0uh
        uPm2+Om4cqufg1mcBtB80Jqz0Kqv4MC1FOGxXwuyThqyYzu4kYm0iXu6aKsPTfthbhu1++W6
        mPGjdFucV+Khd4q5mauxVcO3DuG3Kgq4IFu0DHq05mqj+DBfa7u6YbG4MBu3PpGfYTm56Ein
        9oq7eWtqzYGiXksRgRuwYuuapGu2ppu6B3u417WujOsI9um8UosJsosg4wkUFmu996q5DPKz
        Bvq9T/pjwqughxGV/wlrvgG8G8zbsujbvHCbwBErud1ZnP7wofRbvyJ6v0dJhKypv6ILvv7L
        nKVbvAOsIYirsMq7NzoKuc9rwmfxvgAWv3tDkxd7sRcwAKvRBceBv0yKwaEbuv0rpeMrXcYL
        wj98BmzLuo0Lu0ZjxEKjwi+QpM0wACb5wvfKs7OlJ8FZwaqJnlh8wW65wVH6nB6ctuSbtCJc
        wG3brij8uuzro3MLvw68AldgsVAscJo7DTgCkHNjJb1rwWGbxXvsnLDJw+hBpX2WpX7GpXwK
        ppCGyD8yJVqqI2TaJI9MaXGappP8I2q6KI2MyXCayTpSyY48p3BSBot4t1g7Zqp2pjgXkv+p
        Zqg/oid++sqFOmyxnKiDkijKJqm4nMuQOnLmdqqZWqq/sqqkKsyoqqqqepOgmszyxiv2dqey
        YqrATHLE/MvTDM3V7Kqx+q3ZjM27ys3jei2/miz7+M3iHM4G0833gs7ScqzrbK3G6s7Wws7O
        kqz0As8qZ8/T4jDUS8p4G60XUGzJQr2Ya6SAks/U+q0ZQ3ncSjLe6qonQzKZJ67Ssn9fvLTH
        G8JMS8ZErL7w2pdIrBNKvAJM/BkCMcpYm7W6CxTUm7k7C6AQ4bsfC7xKSbYLKr4VXb4XHcSN
        McIbVsRp/K5nHLtrvMJtvLeTYbmXe7EtfRyLKMGmdhFJccVaPNX/ffw1NO2YBXvTYizAYJzR
        B2zAZvzRnuld7jvUS8zC4lkWcIyxSv3PaUCnA0DK+qoKUY2cfOxjQ3vVHGzTFNXVOf3BQszT
        1vPV7fvTR9ybZi3SaL27bmzSbN3WT53Kd6u1L63HeI3D8MjFJVu4PfzXfg3EEqrRy9u6hu3R
        pQ3Sia0CI53WxoDUEXynGqsBA9B8kz2tEgHTnyvTeR2+Wd3XFg3anx3YzBsmc1PcD+AGxZ3c
        ym0Ax03cy63cx/3czx3d0r3cMlzdyn3d2F3c2l3cGbHajB0FdfraKJ0MlTvZIrq5dWHZ3nvX
        7e2ivO3Fvo3TwP3bwr2u6pAA+r3f/N3f//793wAe4AI+4ARe4Ab+364B3tmrCbYbx/4MkLSd
        tU9NEbjNvaDbvWULyILL1xRt30m21QSM3xuQAB5Q4iZ+4iie4iq+4ize4i7+4jAe4yieAP2k
        2EVN0owQ1w6uswTgn7WNAQG63lJd1Zft3qil111suDIa3B+Oul7t0whWADI+5VRe5VZ+5TNe
        46q92AtOCbP9xA6eryFJynlaokJu11Rd5GlOsE+p4R3+5iBe3/R931DeBlKO5R4QAAFw5Xt+
        4n2e4noe6Ciu5yX+53je4gmQ4FzOuc0BAGv9wv8GougNoHX9r0bOmDMd30pOvB6uG3KuuPit
        ACR+5RRQAPs9AP9ULgAJIAEmLgEJcOcnPgD8LQAzTuKm7gESYOiHnuVnfeOsXZSODenRytLT
        WulAe+lMGbxIvtnlOt9xvhgYHeJ1vgGwTuUB8Op5LgC0PuWqrgAmHgAFgOooPuLbnuL67QED
        UACuLu67bu6K7uvhLVp2C8XknbGmZuz5i+z7K7Ca3tmcPudNHsbqOu3Vzu0JsAEonu7aju4F
        EO4eUAACkO6sruoKX+IO7wECAPEEmQDsXuISEO7nru37zeoUkPHinvECgPBWTuO9fpY4XpTo
        8ej9DMUtfQUV3hwYjum7rdk3IshWKmiKrCODRshjGvSGZshaUmldMOpVruoUkOd9rur/AkAB
        6b4Bqj7iCaDqUq71FO8B2C71r471+r3tpq7qtp712A7uaI/wY8/qK8/KjsrJVgLKc0L3glYX
        lmyvt3u7+ubPI2rH2w0ogL/dsh34d7wBD2D4S5D4gb/4io/4yp0nQMKot6zLln/5w2zMnVLw
        Mm7qG3/upu721K7fsn72D58AVM/xXk/r517isk7ruY7r2A76HK/65O71Ut76V87x1qz5mc+q
        5nZvygyqCYAAxX/gyJ/8yr/8zL/fUx/Mrapy2yz96nwt0z8t1w/O1V/O248u3TziVy7r4h7y
        CRAB6J714k/7GI/6r4/7Xs/0t//ts3/27X/784/niS4t+Hwt//sPApzIZVs2oim5aQb2YkaL
        XYRNVLddVYj1WyCHQ6doPCKTyiWz6XxCnZBEYnAaZRSGa+rj/Xo5D0oGbP6KyeezWFFeg9tv
        ePjhpqMNd7xXP/+UFHgMEhYaGgZQeSQmeBQkSDhCClRRUShSSgxUeSQIPgYICGwOFEp4big+
        knpEJIy+djYe0tYmPKxtcPCF6fJ+cPjyamwYXFw0NFy8uGA03OTo4PgAWQxFYWdrb3MbMTg4
        VAV8ZRn8oo39waWpr8nxvvPF43H4/dqTbwjW8hNKPFIR4IESBQ+XPFVCGGFgAgqpBHry8I/K
        gE1UYnnYBFDSKUgZqexT1G9kAnNnhP/JQ0lPJR0AG2jYSKaMBrJnPKTlSEAtiBAi3X4CDRoF
        goMO4QYAA6TlXB018tLBs9OOjdSoe+jh45NV6ayR/QIEIBQgktixshYNMgs2bdmwYyWMDctW
        rlm0aeWy9crvVq5d8FiuA7wGwABnOmQ+08Fj8eKdP4QIjSx5MtEiR8uUYwoM6lOn9Ko+vUpn
        3uitdLYG0quaZNfVrl/D7mTSjGA2tc0E84sHgEuY0n7jYNzY8RCfk48jx1bZcpUTS5myi+p5
        NOjPotdVL30dDmp9sWOP+i5+PC2+J3WvRD/6NhhiNBIDhxacsY+dkJPjz79kOfNSz89F19lU
        uGWH3XZUHYj/m2nciVZCI2BBGKGEE1JY4VqLWJihhhtyyKFsff2SW4jsfeGSCzXFt8MOPCDQ
        g33X6BdjjJVdc8BRFMwWImefTWfggHEU6E6QbCy4BmoKXJSkkksy2aSTT0IZpZRTPpnjFyT2
        ol5gWrrDggbvwXdDYtHMh0AC1dwno5rJTcFkAQ9YKaB0P6KTIJB21klnGEWe0V1r5AEaqKC2
        4HLeiFzahihuGwCgwQzJiKlMMmTqsFNxa2KqJgRvxsmjnpv1KCSedYy6Wan1lPpBd/sM2qqr
        gJpHm6JxYAlMrSK2cOIxx8BwwQCIJXYmBD0ZUVQHDEBgxLA/MaBms8tqWoAEnVIX/ypV1hJ4
        6pDZforqp6o26N2r45LrWkkg/jUrGrcK0+gMzBgQrwGF0bTMBQkUB2MHyTrAgE82/rsNvjEy
        kEAHAEc7rWYBempVt9ve2S2fZhz5Z7kXY0xIrGCwq26Wh37hqMiO8tZCMbnKi6++BzvQpjfP
        huOAcQx80zI4xh2bQMvPNmtzsgd8k2wRwxJ9ANHQFkGzwcc2K+OmCkO3Y7UPa1u1xKmumrHW
        Wp9raLogf20GALZ9oAFvjWawNBIHGJyA0EYR0e++b8tN877GGqGyzMgaxe9yeNd8MzjgNH3E
        0jYmTC122ALJeJ4OQy7PxGBkvbXl5G58pce2bi5i2Cmdkf+2Emz3nTcRQPNdbLJ281fEwC0v
        /foU4AwscN6JwzHyyB+MwYHuv2vAuwK+A7+7HcQX76jwyCcPwPHJi+z88NCTbIAuIwdj8eXb
        k1cS8NdTb/YGZYf/wfjhB88o+sH8LnoSpLd8exFDxG/Z6jAjMTDNTcvuNtLhXIRtF8Gb/Dqg
        Nv08zQDu0t0GGujAB0IwghKcIAUraMELXnAAGGygBiE4AFZxL4TjqYIEO4hBE2ZwgxtAoQVZ
        uAEkjc5g9SsdzYjiL/sx7W5IiJ+NhNYyCPjLX0QJ2OkOVsQkLK11+dmUAiioAhFkQCpPTEEU
        3TBFFFSRC1fM4hWx4IcuQvGLYMz/gBhHkAoRolE8JXmiCcAIxTa6sQRa3CIcx6gLKh7QCEA7
        lnGW842eJY0Iy9rjEYDoOp/s7HRAxFk2mjZDBEprC09c3MMcRyqqYRIek/tC5dLoydVkzgsd
        A1tKOjc+M7gvCo+UwuBulrTC1Y4yMsNd1CwJqkyGBpdYwVq4QPjJX+6lU6P8XHpGFLo8OmFl
        yTzaffTFyMgoc4mRXJjUKBk56+hSO9+qGDC7uZdCyYqUxSTmeo6ZqXNiKoHUtCXDqGO1a2rz
        Hr30Jj0N0bVwknNL4iwnKpF5nDRFAXXIeiZlmDAsgiJBnbWsZDZ9BM91bLIP86wnRUNpPlNi
        dJ+BMad+/1b5hILt74ZOKFw2/MmybzxBoQCqppDYCbHH5VKTvPyDgyhaUWFmNJ9dMiVH8+NR
        hL5SdU84IFDztwS7zbIJKtWRS136zphKbqZgSI1N6WnRYZZSo13q6XFQ1zIbBZEKzWJdUcCK
        t/gBMakCjdnddEa/gv0spAZ8ZeHih1SELnVOeoUqNh/qjoiCi6biqmo378mxnGZVp2TrJ37i
        99Wl8Y9lQPshshIQUvqxDIeVDWTfSDdXu9nNYHwzJOIyq9RpLnSvfeWrO6+2zQYhibDevCpi
        x5lY0DE2ObJbjtGG2Ld+fQNolgXH0HQWjkMWcFhfNZYMV1cU0epMZwc7nEmVhf/alTa1oaLS
        LpGkmg9BdCi84h0vectroQ957ba2XS8/p1pdoOzWWP3yLc12VhS79XC6RLOMcSCLrMe6Loeh
        NQqyIONZzxr0ukxlqF8RxF0FedcLDqIShSts4QtjeEk41WqiOLwork6mhj+Ur9EGRhQh1M1Y
        QwSa0Zo2UNjFTblCiN2+kDXgg+J3ljRKMNSwy2DWOhTIf40wIM4oW2DS1sO0qm17yfFeoAzL
        X4QEmiE5O9q33RB1fRxts6g8UBcPrb7HCjOWV+e3/ShYtVNrMLfYHAfAdvLInkyyYhfF5I3m
        Fp16nlsODSqzWYo0CXkNGfB4RwHmFW955Xse9RRNPen/IRp4kA4fAKzHvGD4Us4i9N7vwPfo
        85UP1I1WX/jYp7tU7vmcRJFbEybbNKAmcIEjUyGta23rW3tQhSxUgAAyrWnukTCCLqTgsCdY
        7BLqOoKXSDWz/1mAJk5wilwcoxSpbUVrz/GJZLx2F7edbRV4G4sK8LUhBkCW11CgInJJNz9K
        QQsKNPHcemE3IczdPQOw8dvgrmO3+U1HfVPxjlh88tCKWsifAdRozQ7ofgGa0Eh+25pyErKD
        3ZwHImdBe4YogLtdM4BRiCIsCuj4IbQXgGd/0DX0HgTHuwfOwyp5XXfeap6bYDcoLKtfOLs5
        s2TUwxMjTAmDbtjEV2v01sr0/7WCzbQvW24XDPGDAgXYwCKcjha8yKUreBFXAQqCl7yAfeMk
        j41hNRfzj9WZViA+6quhgOD5qTWZSyA4E05XIyMeTI9wL53Q01z0NVO8zYF/M8YHq7FBSEAU
        HP+HAKhOiSp83APe+UfKyy0KUUjk8olYxMcFEJbwZEQgXR+3QfZBAVGUIuWn77UCXI4u9a5n
        5ot1735qKGCxHgyIga6vZY+QY529La07c1sS2OrYE9dP931UElGSRMChFUWJ1u3xgtUc5KNf
        P5688BMhVv+KXg/g5ObeR+IHAQlpsf7jlS/EB50eHgFcYiCpFz1ZSI94+GPeEa3veso5fnKq
        j9CGpf+dzJ2draxdZiHOXY0Z6xTOgB2BXZVVA0afzLyd/NAMizlWi+kQs/gQmlGf9bXUg0WM
        xe1J4bGK1FGCKHjE4nWFJqTcKBSA4qUbq0hAJHxc15lfQZgfQzyCILRga8AgWSRAWPCfDxLh
        2MEGncGePg1gLxwg29BODtkQERQMWwVVHtXP/vge/swVEsFdZdBYFUpXcQ0OvrQSqykLLHmg
        4oQgCFbc4MHULindVBneDuqfIwyA1CEex52R4kVArwXAuEVCKKReAeCgI3hdJwwEykXCD7Jf
        rx2eI6yQEeLhvb0eezHhEtIc7b2P/9xP3lVG0KSJAwqVEfEcWQWYF1qGA8r/zImlSW8VDTO9
        TY0Zzhqu049h33aRIDDAGWxZzD6IgtSZ2yz8wwyWXvjF4CCIwgYAYugd4ij8wxlVROKJng56
        hwKEBeMRwjJ63gvCXwK03gi9nNk1IecUYDAcIB+FYs8o19ygzst0ITye2AVSYVnRGBL5RHD1
        jSEtEs9lAzjsV2kJmt8RXUEiHRxeUtLJ09L1Q0XAX/kNAq9F3kAUBOgtoucNAjMKwLmp30Bk
        JOjl3/vpIPw9YkGc3iA4pLyRnQBqYoeVIzrW3BFoGZ+tmtAA0SwuC0lt4KodS7IMEpgJWtMs
        h9uI1Dtug40Mzljp5PSx4bXg4kHm4hvK4ULSIbkB/9M/sJxKbo8SYuJOneMpceKaJFVk3Bzd
        /YRHDQ1BAp5BZl9b6mJUzWE+aBwwEWL+oVHZiZLs2dlXpiN+SJ9SMd/L+IRZckOV9d0H/p3E
        RaXgLSbhxaWE1WE9fV0acWXsfSVPxeTCvY/e6VlRDd1agqZbSiVUap9WTNSv3SVLdqVLtuSH
        ZeY/GdwS9NbpLGUhyeZBSRNismUbIqSpiODFPSZXeEXjvca4GSJJkkso1MLHhaNqnOQ26mAn
        jGNeXiZfvuZkoOVI2ViXzaIqrk0rPh9lqGWi9c6iTU+jMRr0OBr0TNqjpWfzWBr2ROYhWJ1q
        fNAKfVB08oNV9sMp0MK4ff/QZH6FflodpzFQpEmaqKmngiaP+cha8pjayKBacvxUq81SfjmB
        P/1NbBZmJD2oo+BaiIroiD7QsQkbBPFaprWg+ElEDS5CA7XoIuhg4rFK/gUABZybBODoKYRj
        ug1iDW6AXOioi27ekG6j6JUCjtZFdOqoW5AFXBTosJlorm3QlJZoskHQsiWHV6FYWPUeKvbQ
        81UGcB3M/niWFvKdAoontEmQtFVbt73pFsWpm3LbFpWRndaptN1pFqhoRCreBjDe/h1nym2C
        RHAcq7RcAHRe661er0VE+3XdyfWaQFAjJPpn53mdtIQeRUaAINifRgqEd2jk1GkMvqmAv0kb
        qmr/m6ruG8BhkcBhAWH+o9/4UYABjCiiqbIURf3YFenwjZr+pVAkUMTx5m6OpmgyZmniATdF
        JEIYYgJQHQumhbsNIfpNHep5QgxiZOTp4bNlhH9+60B43hAqIuZZKscJRORhpUS0YOOBHg5O
        nXeQKqma33ReVHW+JFg6GX7E1/woV4wBF3jq0RC0zWD2l1FEV7OoTQVKxmcqZmi+ZWPGobKe
        xmlqQioMAJJEAsfp4f294AfdoCY0BCSi5EV8wkLYYUaA7OaVa7oKAuOZ7CLMAssqY68JIRG+
        kA9ubMfh5b3mq16q3XUGheyU1nwBWtCglG911nMh0sHOF2QsbHhGhsMW/yvEHmvEkiZEmWDJ
        sVy0DuMe5mEj/CkgplwoCERGvGxB4CBczEIwJuMsiK3LGirmEenMtsYNaszOyqva8qy9YtVq
        7uVf9CVQiFg7ws0UCNJyudh27kvBJg2KTYE78k1S7Ziz6abVEohT/WZCwiVVyuUhnK36cSz5
        cVyhsmgykuw/tF7iaWTofRCAiuvKwq1BXB6lQkJFJKqmekcestzZuq7n7S4sNGfP/q1l5uvg
        QtkiTZmNeQMVYpnOlSkfpeHqkFlQ9STfNaxaPuz2Yi2yjmDnbt9p0gIH1WDHaQK92RvvSgAA
        St6MVkT38S67BcAKbUBBuJu7pVvZJqkGHan8hf/r/2akvWkCSjbQuVVmJgLukhmT0GpmUNAI
        oHGocmhv1XLv1VpwsmptcFKVppmr745vAZycVn4H8QItAR4vAzcw4ere/CAH1TqlG2Jw98pw
        d2lwbP1aKNRnLYDfoBywV/7sAodlCgsxzk3wCyfmDMfwBTum50Imf6JmxpAwvrZm0AbxEFux
        LabWESvxxHovcDJxkTnxE19MD7NmApswblXxFasxU94iDH+vxHLuVIavYM3lNiKhV/DaMhoq
        eXyQB3vFyRWCXb5GFP/wCafxGquxC2fuU3ZxHGftkGlwZOpnJbqGPkSC1AFqHXvFP5xcc8KG
        IJuL35Yw2k3xuiAvIjf/sCI3DiMj8Rs/Mg1/8QZHouQBqKKqb8g5hETc7/qpW9dhpOuipCac
        W7qFY+TlXx7er1yMnNfhb+eNsGoabymT8kqcMiovnCqjQ3btImk0Mi9inA0XwiyIbiabm6Qu
        oyBsgo6i3yhgo6HibR+3XBWEnOQ55P5R3brmobR0rPqRZCOI7h3rBRkHrjSbo+CisDVf83gW
        Wnmi53mq53uSp0M3D0RLGkX/TqV5mgZgWr0tyf6NX1ro4PmtXkcq6uXV4Oy6aMqtYOuZqw/O
        svzlX8thXiPItB//cVjcwsjIC6mhjO7s9ALJi0/Hi6gFtU4PtVHLAFJ7iaPEy4Qi9BDH2veQ
        /+hUU3WVYqkDpagpsOwKfu1HQiIM3uCOEoL/za7ZzjTLsfRFQITGbF0MhiOpnnVNv8bjvQK0
        0bUA2LVa53VA7HVdN9Bd93Xj/bXJOtBdFzZhD/ZFPPUaM5ETaducPnaeRrarQhFkg9ud6qlk
        X3ad8inXVuLoIh4kXKpbx6CiImpXxy2NdsLGViSlFgS5KqI/2CzLlUJcl0Iykt0DjIAGhEUJ
        aLTvuAUX8LYHyJEIDHcGCHdvw9Fx/zZwD8KhGXdvN3cGrBsWZN1iJzLETRIFc/cWO3I3e0ss
        g3O9PfehdrVZh8RtC4TZdt5YzG7nYZ55e6xMJykwqq3vNmojZt7ljf+wKP9CCWwOgJ8Du1Qz
        dqMTNjcFK3u3b25zLzIkP9RgDdaFjN4o4mUjWYwFBVCAkz434om1aGMdjqKkIIBeO7uoP4i4
        QXj4iSchNCNwNJuxEx60gR94ES+yG3NxK+c4LM9xVSLZSPzfIW6lfxcyQcPkIdM4syH4LeH4
        d+u4k/O4adIxMNn0ITAjQEOxi/uwkRP4jCd5Otn4Kjc5g/cmN0NyLM+nGHMNkXP5KBugl385
        LfnYmJv5gtc5hEVyGKv5uBBym1snksd5jV9uBd94mb8UlOO5eIMj/WpQBzU6o0O6o0f6pEv6
        o1M6B126pT/6pmd6p3P6ALiClpcxjJM6ngH/eqBnypK3E6G7MngfujcHpxgY4qzPerbS+q3T
        uq3jOq7req3veq/vuq8HO68PO7HjevCkV4wXNJcXOKpD0qB3d6HDMZlPe3j3+FRVyIaDBW9H
        CLeDhR5CiLdve4Roe4Q8AHhJSLmLewCIO1aGu4SIe7mzO7yTu4RkgAfAQfG++L5v4r46u5KH
        eTYreBITfKuf+bVL+S/E3y8Qgzo8QCOYQcP/wsPj+zDUiktsjs/6uSH7+7/vmaqzlBFX+6vf
        +RIj/LKWivNAvMX/gcpXfMiYwD0MIcNffK1ovLJ7DrPDuce3cMAnOJ2TfNCfioN/MR1I3bdI
        PDqsPMx/C8XT/OZg//yAu3nO47y+Spis8rx4QrvIY67B2znJE/3JwwEALDzLg4HLR3zMb9/M
        WzzU27y+b3nVN3vWaz21kOehmSeC6s56NqhF6057sqffjwxG6/3gx2ejxR/6HD7JJL5OZ3Ty
        UDz6EEPhH6jkP37xuAT5jJrmL+iHAk+Eikza2B3e1cjol37enX7qm/7qkz7ps77qu37rw/7s
        s/6+eKhUV3Xu6/6VWnXvZ1BD+L4DbYJDUOnvE38KBX8LXTXyn9DyN9BBZFj0S//0Uz9fOza4
        WTYVZT8WbT8WdH8YaTYVYba2jf8TlT8VxZ8b+Q6/RVEjpEDDq78BuL8bwb8buQRlmxH+r/+A
        /hc3CHDiSIrZlpWqua1eAMceFdc2PN96kO9275PRgkJi0RgwbAwp1ecJfXIelEz0Cp1Wsdip
        wsqNesFh6eNbzhrQ6eeanH63P4BHwjP/aFDR+v26B1dmkBCQt8eRB9CS98E4x/HYFpkIKZkW
        2ZiZF6mRd+I5B/q5Edp2YvCpkCq62mi2NUklyDUGeUbbhQspN9fb9ptGUZCLFShmhxd1PJd8
        eFm2WDkHHUbJWV2b3bWhuQGAbZo2KlpKKl6Gqsp66vqqVYwci7kry0Z/X8YRPJjfHw8FAIU/
        c5g98aMMisE4hZ5NSyOt0bYr1yw91DdRTDds4CyhC0PulLlyH7n/ZHDXjt04lJxm3Zqnrx4+
        gGb81eIXBicXnVgGJkyzcApBhXyaDQWaMWBSKEs/VJzU9CmmjZY6Qi2JJeS4kSKxXlHXSmU6
        li9pOnVpz6yttLxs7nSLhWcfZwWLHqRL1OwHQobqXgwTMU/UwX+1FebmzepUr1G0puO6lTGU
        k2JBkrVcmR5Ma2jxaTAAOrTo0A9KjT4NuvRn1KNVs25t+jXp2LLXHC0TFO+ThYMSZKgdeglw
        0MKHD1gNfMBw0MpPf5SKMXG4c9RJksqc9bJJ7TE31+qsb0CC8eTLmz+PPr369ezbuzdf4Cdu
        u3R066Hf+73+/fz7pxcEnTVUQaUYRpI9/+EYSJA9duAHlK0D4TvgceZdVgPE90KGPGyYoQEU
        eKBhiBx6CCKHJmr4oYgqBpDiiS62uOILMFBwGCD0CSUfb2FoAKOLKJYY44Yf+njikEFmaCSR
        SKroG0WDSedRdV1JuRV2X3F3pZXfVUjRhFxocKF8Jsmkj1wBmQkFmm7AdYUSei2EkI1v4rdj
        U47UeIWdA7axp4NNaoRnFn0KWKCADSZo0oIKHoplY41O9miXXMpjVgYXqkUmZ2yqsWmana6p
        l5r3wYGjnM/MGehBeqbqFGFf/Skoq5tUNZ11tk5ZjpaQ6opgpJSWVVCYt3y6FiaiHvvpXnR+
        SV+cyyxrDLQ2sv8aGDWyutoYrFI8yVGtuH4bWYQpidvSpFl4aSExw2JKLLKhJitqbrfpyCyq
        iqyKzbUXZaBtq9dCeRWVDAqsIK8O+vqghObCYhaY8a0L8STu5nGstM/C4Wxepzp0L6t35gty
        tgByS2uUt4Z78lgGJzzulxq8DLMnVHAQc80wf3AGzTbXbCkxO9eMswI6//xyHUITDbPRQxMN
        gBJL/9x0C0jD7PTUL1edtE81Y2211FYj8jXYX3s99SJ6WO3I2TDzmwHQ33zdCdylyB123FZH
        YoDced+9hN4A3L3K3zZvQHjhhh+OeOKKHy5AARQsDnnkkhs+wOSEV2455pNrLjnnlyf/8Pjh
        nkM++uKlK3564qkjvrroiCuQgAKsW75B65TTbnvhuV+Oe++Z+574ChxkgIvwJBD/hfEj9ByA
        8iYU7/xvyUf/hvPDV2899s5rr3wgxydTgvfWi+88+cov0oT1KFg//PrWn5C+Cb6VAD/7J7Df
        PgD2f7O/Bv3brwD/vW8VADRAAeM3AgphamF6EBZbHmgseEkwVBbTWEDsQ69o2WsO1eKTvkI2
        mX4FSBsAWwzBEnUoRSVqZQjz1bkYCA9RXCpiM2nLu25IsWTJK0cV3E0P70MtfFkEhAgSIckI
        5C2UgWtguSKXyl5xFhiiCxAOrCEEyzTBHFJwThjD4A8zOK2O/0nkg0MUmZP+1S2TLXFRJ8wO
        C98IxRjKgoE9Y5cdbajFPPpChzfyIhc5xkEhQoWMIRwZGksWsJSxUZErdCJm4jjFX7XBYWLS
        BbEydZMs7nGLG7vgvL4IyiB6DFuDfJUhsVFCA7XxKyrMSiuz5MjtGOyFC4zH34Y3Q5rF5JLt
        0iQwfIkUMAjQGbocVScn2ZQOpoGUU6mE//xkhWKOEDFpTOQaUbjKxiwhlm6EpBS5xAHxPICS
        GSjAw77DS7VMbJMUA2Xb7ICCZGRAAH8A48UA2QZlloGZGEmEBhIwgACwzVJNmqaTUmmobE7m
        ldpkFBzD4s1agmQgAqijHSqqqTtKDP+Y/9AjMlNACGLIMwHqsqcFkSnKMRKxn37yDds8UIAE
        eMKgGkGoNlKIU4UiaJsQ7akmIknLdMT0AWGKaQoySkMs4pCdvnDnXsSzhDvQ04DGrMsG8ynI
        ZoJMKALwgFQTwAeaCsqm3MgpI13pUG7CUmESBclFLwSABFT0MMXapTo5mhO81stBIU0GSYXp
        VL+IUTCE1KpTzMk2cz5gW4dEohqVCFkmiuShLfvpNwESgJgOoHH96lI68cjUX3LSqgii5wYK
        QM8HAPaPgg3kKAvLUqeIZ7YABYNYt0VWJ5n1mmhVq6MoW662WoMD5RkAQOqK1I0uVbQeDSaC
        +EUeARigIyb/9eFVIZLV2JbSKeUcj1ErcdtW5VYju43sIifr211FFFhxoOd4HoAn5KLzrsuN
        A7wC+wEPuBesZKhuVVE6WGutVEDTIOh4AhorVFbThGdlZXmf6NOVYOdnXkCObB5nYdbYQa77
        qI1rgPNhDx+tbFxjWompBpsMa7g4oIEuMURTmuUY4DjLobFoiEa2qeUYxaNpjnFGA12Z9ljG
        Pk6Oc3Zmt6klGWl405uT+TZdwEV5cIlTwH79g+Us80d2v+sy5bQM5jCzB3XAM5yYz4zmA3P5
        dl7uXJkjt7vavdlwwpsnhkCE5zzrec987rOf/wxoQIMOgSuQHqFVYOjjwS7QjG60/6Mf3ecE
        wLcE6Du0CtxHgjtAetOc7jSeAeqU4/HvfaX43wAFGD0CDtCAqz40SMLk6VjL+s8BGHRzrREM
        DijgzrPuta8TUBn0qVQMmva1sWVdAPx0QqcOYuhCUwhcCDfCzo2uwbH9zINO15qBe+lUZgtg
        3KM6ZdGzlgGQrv1oYIshAwAQjwD6ssy/FLvc2c4QoOt97WQXaNkNbiizwVJZCUOxZ4yWQHkK
        gO8/S4DTG5CrthMggfpywasxFUAVornrWYvHuwEweFfR3Wh1c3cPMUUtvPd5EeL2WgL7HQBF
        /zxbkCc75c7e6YPPK/AIS/sTAvg4oA0eH9j5/M+NY7jDOf+9bYljwasdr/gXTjJvTgvdAxdS
        QK15DfI/qzsDPXN4z81Sjah3OqYLb5wEwA3zo+d7APuuebNvjs0m6vyRUIQ1oF/+cv2aHES7
        LoCVD6x3tKO2cSnqudnd/YLGDf3etg5tGLy6cA/8vQBUwPqmxVOAyM+ApGYHUePAnVnD4/lC
        AtC8p4F9AnO+2/PvFjCxZ93wxaNd8QrQ+7tjznK093rmuv232xHVzbnLcuBFDzTQqe51uTp8
        IKgF6HhYLoDTxu7AJEW+eykQAYdXXO2BBp2KURNi1vDL9BSgpzllbXCOeyD9mNdv9GM6EOV3
        1d0kTfimwVpx0zeuw7KxsWjEfnn/AJVnx3dgLOd84KZ98rd7bNd7/fZsvhdtdKcJdvdn8edd
        IPJ846FfELd+XnUHAXAh1BcfGhhTGygBiEdS6VdtJJVmz6dnAeBe9gdpmUUeEkCAHxiCB+iB
        MJUAEQB/skYeG7BnV+YfGieAePZyGriDPDBbQJd9lsdpvEdevgd3wRdwOycKPVdw1ZeCHqh6
        GyiEGPhVm6WDJPhVGzB13oVaK7hwSpJtLHJubwgkHDh62+drwwBQV7eD9ESG7WeG5pR5QFh+
        JFV7eKaFRwKHJlJrsMd9NyiGo+dwarh4Y8eAU+iANgeB6dUrswQFFOhnL4eCUjV/ALVr8ceD
        POiHZ0h2/ygYH4cYaEl3a0tHh5gnABqQcbE2DAOwgQPgcTtYgppFUk9oghtQekDIBA9gfoXX
        eh5EEQC4aTEFA42ThppWgj0Xc9XnirEmhYJShQ72by0UgeNQfD9XfTyoAGcHeBuIjQDVcCyY
        iutXcmCVfV3VjmC1gtyGJpAXggOgWlAnazAYXevHhXewccDIgguHjnIlg+mWClyHjPXXcwcS
        disXUwU4kCCSkAOAeBsXOwvYdt3ob5fYbOFohZzgiX6meR1XIjiAZxJQbzgQAy4ZedlGAWUH
        Oh2IZwvZZ7UWcbF4BTQIUACgP+MGhY+2IfgmhyvZcb2oZy7ZayLnIPvgXssYb//NaGxIeW5K
        KSN5ppPPCA38xlveKJIsk3NXeArZmHWBRk/mZ3pI13jMJY4CEEBiQG5pyWd6mHVQORkXUolV
        eQXOaJeBCVN9uS0g+YBjyVNmOXx1V5SCyZWbVYz/+Jb2RRNXkw+61phpCYNhCHJ6eRBfUChc
        8JWA6ZhZt42FSYXfSJJrZQw7Q22lWZrb9jQ7EzWzaTO1GTO6RpqweW3AtjMtIDg6Npu7yZvG
        Bm5tk5tzwzd10zdQ9mRKtgTBSTS6NmU1ozjll5nF6Wu1tmZu1maXk53a+ZSlE2elQ5ziiWxy
        OTvfSTpzZjruSWaKU2doiZ7HlnTvwz3Gk591WZ/oJlP/KoA++INpI3Ce/RmFLUA/oxY9pUZq
        qKY8J+GgxkMZBXRAK2ANJ2mg5QZxSvcWpHKLGXpsnkkH2cUvIJpvyvZ7KWqYO7Wav0V84Wmi
        jgaLjtdRWcCfMWqMWKBPYTCROOqRDRiWIRmkC9Wi6vUKBOejkomPwISZSTprIrqjorkvBeqk
        fnaarbKib6eamngwnOgg9FmlMjqZNQqXUnCjYcqQOppdH0ClaKpn4PaRqYmYRbqJUPQBGOqm
        jNeTNJpXHgqjeapnUEqibQqoMPWVKiqnilmSWHgKHNmCj9ofS1pfHGCBkGqp7xFs2UVcl8qp
        7fENQGpecTekLMqlZAkJGAYc/zwSQMNRGr8BYijAqrAKYnoVFzbxAKfRqrH6fahBG7XRq7Lx
        q5kRpVhQDagBJrs6Gsc6HMo6HCwmG3uAqzeVqKG6qBJYlsHFXuOASVmxrV/RrWKwTmUaB/jl
        XKTVWlj1WtigF5Gwrj80K45lTdQqlqM6kqXqQgyTrXaVVMkVQRxaq6P1UcdUrgDmWsO2XQdr
        WFAxXtw4rZJ1rYy6mJYlXPp6RfyqVD75rxhrKuYasOeKXelaRgirXVOxsKiJmFkKcA9rrfmq
        QPs6Xy7bBeFKme3EWh1rs0iRUoQ1YIaxs9SESAxGr8A3ryobsUTbHRNrsUn7ssqlsVEgs/NR
        swOLs/8Bxowhm7BXGx0Lpkonm4nCV62agbRLa0Vje7F82qE0K7BQm7Z1krOuJ7IE1rMHpbUJ
        xbVjCY7c9DM4QyNokzN8O2JIEzS2WTNKYzWES2I7Rpsn9jOKuzOMazOOOziCG7lhg7g/U7m3
        2Q1fkzaa+zbLSTef67nOKbrQuTekK50UFji/STury7qt67pstjnwqTqyu56xy57vebvxabu7
        6528C2e06zq5O7vCW7uIU2fQ86DIK6HKe7zT86D5WWjQi2jSqwLUWwLWSwLmYzzaKzzcuwLe
        C6ADqjziW2fkW2jmi2jom6D4cwL6Q2ruu6ARWr7yW2gBRKGrVqFOsCVha0n/GkW2uEarbXJf
        Uau2HDu1BauzVjuyCywgJYulDYtzj0GnXbpec+S/FPu/meSvArzB92TABUyw6GqwWAu3CtzA
        cyutdRu0iWm0rImtFgyznnXBANzBngKwUgvCOMy2VOuXb8uzJkxCKFxWECyqLeyiXtuyMFyx
        YovBZSuuZDqzH1wnBLzDCOy2JPzDPuyz8Aq08iqkXkyk9uqlcgS2MYwMn8W0ZpuxTUXFeyXF
        zNK2VavFZxS3NSXEoOqweRzBK8vHRcuy+2vG54LG/dq0NlzI1rW2bhzCHzvCDJzFWLzFUxGa
        Q6zCYEyqSHzEEvvH/RvINUFfh9xtN5zDozzF+MTI+Qk8x4BSx2N1x5a4wih7t5isC5fVyWcx
        yE4cxU/cp4msQbwcRlYsx5BMx0AcyRgxyXi8x0Wsx40ky3XKVpssw7UsXzEbwE47wL7swTc7
        H3Hcw8KsysQstz+7ta+8pc1Mwc+sxBnMyUtMzTUMKqDsX/EcSjyMcqvMWPYsXq3MsJW8zK40
        waaazkcrzd8qyJ+sxhyMtm/cywr9yyKMyt6cYOBsx+JMt+Rst/98r1HEv9HMzhxNyAdtze78
        XzqsyAfs0FfsyNwAWydM0Sls0SuM0WMMVPja0Wc8wxoMyhXTxgutzVV80sGc0sOcyqzc0pT8
        0pZ8zorqwlEQAgA7
       </office:binary-data>
       <text:p/>
      </draw:image>
     </draw:frame></table:shapes>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co18" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1022" table:default-cell-style-name="ce94"/>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.tutorialspoint.com/software_architecture_design/key_principles.htm</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>Architecture design : https://msdn.microsoft.com/en-us/library/ee658117.aspx</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://blog.codinghorror.com/the-ferengi-programmer/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://programmers.stackexchange.com/questions/153410/what-are-the-design-principles-that-promote-testable-code-designing-testable-c</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell table:style-name="ce207" office:value-type="string" calcext:value-type="string">
      <text:p>Liskov&apos;s Substitution Principle(LSP) violated</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro33" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>This principle is just an extension of the Open Close Principle and it means that we must make sure that new derived classes are extending the base classes without changing their behavior.</text:p><text:p>In the example below Square has changed the meaning of SetWidth and SetHeight</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro59" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Let&apos;s assume that the Rectangle object is used somewhere in the application. We extend the application and add the Square class. </text:p><text:p>The square class is returned by a factory pattern, based on some conditions and we don&apos;t know the exact what type of object will be returned. </text:p><text:p>But we know it&apos;s a Rectangle. We get the rectangle object, set the width to 5 and height to 10 and get the area. </text:p><text:p>For a rectangle with width 5 and height 10 the area should be 50. Instead the result will be 100</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro57" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Hb:we are creating a square which is based on rectangle class.</text:p><text:p><text:span text:style-name="T14">rectangle class has setWidth and setHeight functions.</text:span></text:p><text:p><text:span text:style-name="T14">But for square, these don&apos;t mean the same for its base class. VIOLATION</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>// Violation of Likov&apos;s Substitution Principle</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>class Rectangle</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>protected int m_width;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>protected int m_height;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public void setWidth(int width){</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:style-name="Default"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_width = width;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public void setHeight(int height){</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_height = height;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public int getWidth(){</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>return m_width;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public int getHeight(){</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>return m_height;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public int getArea(){</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>return m_width * m_height;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>class Square extends Rectangle </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public void setWidth(int width){</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_width = width;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_height = width;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public void setHeight(int height){</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_width = height;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_height = height;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>class LspTest</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>private static Rectangle getNewRectangle()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>// it can be an object returned by some factory ... </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>return new Square();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public static void main (String args[])</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Rectangle r = LspTest.getNewRectangle();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>r.setWidth(5);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>r.setHeight(10);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>// user knows that r it&apos;s a rectangle. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>// It assumes that he&apos;s able to set the width and height as for the base class</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>System.out.println(r.getArea());</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>// now he&apos;s surprised to see that the area is 100 instead of 50.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="4">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>Open Closed principle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro60" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>“extending the AreaCalculator class to also calculate the area of triangles isn’t very hard, is it?”.</text:p><text:p>Of course in this very basic scenario it isn’t </text:p><text:p>but it does require us to modify the code. That is, AreaCalculator isn’t closed for modification as we need to change it in order to extend it. </text:p><text:p>Or in other words: it isn’t open for extension. </text:p><text:p/><text:p>In a real world scenario where the code base is ten, a hundred or a thousand times larger and modifying the class means redeploying it’s assembly/package to five different servers that can be a pretty big problem. Oh, and in the real world Aldford would have changed the requirements five more times since you read the last sentence :-)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
       <text:p>When to apply the O/C principle</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>when we have the feeling that the customer might want to extend the design to calculate areas for other shapes</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>However, often it’s not a good idea to try to anticipate changes in requirements ahead of time, this can easily lead to overly complex designs. <text:s/>Instead, I would suggest that we focus on writing code that is well written enough so that it’s easy to change if the requirements change.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Once the requirements do change though it’s quite likely that they will change in a similar way again later on. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>The core of what the class does is persisting comments. modify a behavior that isn&apos;t persisting comments, requires the actual class to be changed, so the class <text:s/>isn&apos;t closed for modification.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>it&apos;s not possible to extend the class, that is it isn&apos;t open for extension</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro57" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>the example used by joelabrahamsson.com is similar to FizzBuzz class seperating from the out putting functionality. </text:p><text:p>But I claimed this abiding by the single responsibility principle. True.</text:p><text:p>And it is also abiding to the O/C principle</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>open to extension : EntryController can use other types of IcommentValidators. IcommentValidators can represent other types of validator by deriving from it</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce209" office:value-type="string" calcext:value-type="string">
       <text:p>closed for modification: no need to modify EntryController to use other kind of IcommentValidators</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce209"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>open to extension : FizzBuzz class can use other types of output classes. output can represent other types of outputs (to network, memeory, …) by deriving from it</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce209" office:value-type="string" calcext:value-type="string">
       <text:p>closed for modification: no need to modify FizzBuzz class to use other kinds of outputs</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>Version 111111111111111111111111111111111111</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>public class EntryController</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public void AddComment()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>if(ValidateNotSpam())</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="13"/>//Save the comment to the database</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>private bool ValidateNotSpam(string comment)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>//Check if the IP-address that made the request</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>//is known as a spammer by Project Honey Pot</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>Version 22222222222222222222222222222</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>public interface ICommentValidator</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>bool Validate(string authorIP, string content);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>public class ProjectHoneyPotCommentValidator : ICommentValidator</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public bool Validate(string authorIP, string content)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>//Check if authorIP is blacklisted with </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>//Project Honey Pot</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>public class EntryController : Controller </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>private ICommentValidator[] _commentValidators;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string"><text:p>    public EntryController(<text:span text:style-name="T45">ICommentValidator[] commentValidators</text:span>)//the class will use the services of a zero or more validators</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>_commentValidators = commentValidators;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>private bool ValidateNotSpam(string comment)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>foreach (ICommentValidator validator in _commentValidators)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>if (!validator.Validate(Request.ServerVariables[&quot;REMOTE_ADDR&quot;], comment))</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>return false;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>return true;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce210" office:value-type="string" calcext:value-type="string">
      <text:p>Dependency Inversion Principle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce211" office:value-type="string" calcext:value-type="string">
      <text:p>FizzBuzz uses OutPutStream.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce211" office:value-type="string" calcext:value-type="string">
      <text:p>OutPutStream contains the code for console outputting and file outputting </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce211" office:value-type="string" calcext:value-type="string">
      <text:p>we need to modify it to add Network outputting</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce211" office:value-type="string" calcext:value-type="string">
      <text:p>A design abiding by the DI principle is to make OutPutStream abstract.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce211" office:value-type="string" calcext:value-type="string">
      <text:p>And Each representation (Console, file) is a class of its own deriving from OutPutStream</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>We can add another representation for Network, and it means we only add a new class derived from OutPutStream, and pass it to the constructor of FizzBuzz, for the latter to use it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce210" office:value-type="string" calcext:value-type="string">
      <text:p>Interface Segregation Principle (ISP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>The Interface Segregation Principle states that clients/new derived classes should not be forced to implement interfaces they don&apos;t use. </text:p><text:p>Instead of one fat interface many small interfaces are preferred based on groups of methods, each one serving one submodule.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>SOLID in a nutshel</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>the image above shows that:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>3-Single Responsibility is clearly needed</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>the test on the kind of shape to decide which draw function to call means simply that the class containing this code is doing more than its core functionality.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Because deciding which draw function to call can not be part of the core functionality of a class. That&apos;s the duty of polymorphism</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>And so the class should get rid of this function, by just calling Draw of the object at hand</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>1-Open Closed principle can be used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>The call to drawRectangle, drawCircle means there is need for Rectangle, Circle classes</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Shape is then open for extension ← needing a new shape does not require modification of the Shape or GraphicEditor class. </text:p><text:p>A new shape means a new class used by/added to the GtaphicEditor</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>2-Dependency inversion principle can be used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>instead of GraphiEditor directly using Circle and Rectangle classes. It should rather use an abstract class Shape</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Having an abstract Shape class abides by the Dependency inversion principle. Because GraphicEditor depends no more </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>On rectangle, Circle, … But on one class Shape, only</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>4-Liskov substitution principle can be used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>through the derived classes not changing the meaning of Draw other function. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Changing the meaning of sth would be a catastrophy for GraphicEditor using Shape and accessing shapes as Shape</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string">
       <text:p>5- Interface Segregation Principle. Don&apos;t see how to use this</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>This is already done since Shape, for instance, is not overloaded with methods that are not nedded for shapes. It only has one method.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="16">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="1048360">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="7">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="tester job description" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce63"/>
    <table:table-column table:style-name="co19" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="3" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Experience in Test Automation in a Continuous Integration </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Exposure to various delivery methodologies (Waterfall, Iterative and Agile)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
      <text:p>Trustwave : Senior Software Engineer C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave helps businesses fight cybercrime, protect data and reduce security risk. With cloud and managed security services, integrated technologies and a team of security experts, ethical hackers and researchers, Trustwave enables businesses to transform the way they manage their information security and compliance programs. Trustwave delivers automated, efficient and cost-effective threat, vulnerability and compliance management.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave is a privately held company, headquartered in Chicago, with customers in 96 countries. For more information about Trustwave, visit https://www.trustwave.com .</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Overview</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave ( www.trustwave.com ) helps businesses fights cybercrime by providing services and technologies that allow them to achieve information security and compliance. This includes secure email and Internet management solutions that integrate content filtering, compliance, secure messaging and archiving, to protect businesses against email and Interest-based threats.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Job Purpose</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>You will be responsible for the development and maintenance of our web content analysis product on a daily basis, as well as interaction with other teams with regards to product development. You will also be involved in the technical specifications of future versions, and be a liaison into the QA team.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Key Accountabilities</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Develop and maintain our web content analysis product to internal coding standards</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Develop and maintain our anti-virus add-ons to internal coding standards</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Develop and maintain our filetype and unpacking libraries to internal coding standards</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Liaise with members of the QA team during development and testing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Liaise with our technical support team to resolve customer issues</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Research new technologies to determine their applicability to the product</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Key Performance Criteria</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Development according to product release schedules</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Code quality and commenting</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Production of technical documentation for internal use</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Skills/Knowledge/Expereince Required</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Computer science qualification, or similar</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Solid knowledge of C++ and C++ 11</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Experience in MFC and STL</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>2+ years’ experience in C# development</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Knowledge of TCP/IP and networking, socket programming definitely an advantage</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Understanding of HTTP, SSL and common Internet protocols</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Strong Object-Oriented design skills</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Excellent communications and interpersonal skills</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
       <text:p>Skills/Knowledge/Experience Advantageous </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Strong debugging skills</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Experience in Microsoft SQL / TSQL programming</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Experience with HTTP, TCP/IP and DNS</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Experience with Active directories, LDAP, Microsoft IIS</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Previous experience working in an Agile Development environment</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Interpersonal Characteristics</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Analytical skills with attention to detail</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Excellent verbal and written communication skills with people of varying technical ability</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Ability to prioritize and self-manage tasks, responsibilities and time</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Ability to work as a Team Player, in a cross functional team in an Agile Scrum environment</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Ability to understand the target audience and how the products are used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
       <text:p>Reporting Relationship </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Formally reporting to the Development Lead, but primarily accountable to fellow Scrum Team members in a flat team structured environment.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Environment</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Working from a spacious, comfortable and modern office building conveniently located in the Greenlane business district, with easy parking and multiple public transport options. Trustwave’s Auckland office enjoys the benefits of being part of a large multi-national company, while maintaining a collaborative ‘start-up’ type atmosphere owing to a relatively small number of people at this site, operating within an Agile Software Development Framework.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Education:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>We prefer college-educated applicants, but at minimum, high school diploma or equivalent is required for employment.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave is an Equal Opportunity Employer of Minorities, Females, Protected Veterans, and Individuals with Disabilities.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>To All Agencies:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
       <text:p>Please, no phone calls or emails to any employee of Trustwave outside of the Talent Acquisition team. Trustwave’s policy is to only accept resumes from agencies via the Trustwave Agency Portal. Agencies must have a valid fee agreement in place and they must have been assigned the specific requisition to which they submit resumes, by the Talent Acquisition team. Any resume submitted outside of this process will be deemed the sole property of Trustwave and in the event a candidate is submitted outside of this policy is hired, no fee or payment of any kind will be paid.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>https://www.linkedin.com/company/blitz-studios-entertainment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Aderant : <text:s/>Intermediate Software Developer </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Posted: </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce212" office:value-type="date" office:date-value="2015-09-08" calcext:value-type="date">
       <text:p>08/09/15</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Job Type: </text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Full Time </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Location: </text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>NZ-Auckland </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Category: </text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Development </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Job Description </text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro62" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string"><text:p>About the Company                                          </text:p><text:p> </text:p><text:p>We’re a global company and a leading provider of practice management software products for law firms worldwide. We have a large development team (over 80 in R&amp;D) in Auckland and are a strong adopter of Microsoft technologies and a Microsoft Gold Partner. Although our staff turnover is very low, the size and growth of the office means we have opportunities in many areas popping up all the time.</text:p><text:p> </text:p><text:p>We have over 3,300 clients including:</text:p><text:p>67 of the top 100 global law firms</text:p><text:p>The top 10 US law firms</text:p><text:p>21 out of the top 40 Australian law firms</text:p><text:p> </text:p><text:p>The Auckland office is almost entirely R&amp;D, away from top management. This allows an informal environment. Previous careful recruitment means you’ll be working alongside highly skilled and passionate peers building quality software and good team spirit (keen for a lunch time game of MtG? Soccer? Basketball? Badminton? Walk? Visit JB-HIFI to see the Galaxy S6?)</text:p><text:p> </text:p><text:p>About the Roles</text:p><text:p> </text:p><text:p>Our continuing growth means we are on the hunt for savvy, passionate developers to add to our teams. We’re looking for people that offer passion, quality, delivery focus, leadership and problem solving. Our teams are empowered and fast moving – our belief is that this happens with good collaboration and communication, meaning that we can act on the ideas and thought leadership that you’ll bring to the table.</text:p><text:p> </text:p><text:p>Tired of the harbour bridge? Do you like laughing at the people heading to the CBD?</text:p><text:p> </text:p><text:p>If you’ve got any interest in the following areas we’d love to hear from you.</text:p><text:p> </text:p><text:p> </text:p><text:p>Web Development</text:p><text:p>You’ll be a proven, clearly passionate, full stack web developer with a front-end focus – your core skills will be quality MVVM sites using JavaScript (possibly TypeScript), Less, HTML and MVC. Some Knockout or SQL wouldn’t hurt. You’ll be building a customisable product, not a one-off, and we’re pitching to the largest law firms in the world, meaning we’ll stretch you with some gnarly challenges that you wouldn’t find in normal web development - such as customization, internationalisation, easy deployment, varied network infrastructures, product level quality...</text:p><text:p> </text:p><text:p> </text:p><text:p>Mobile / Web App Development</text:p><text:p>We are putting apps into the Android, IOS and Blackberry app stores so that our global clients have ready access to them. You’ll help us make these complex and intelligent apps communicate with our back ends. Core skills in this area are again JavaScript / TypeScript, Less and MVC, but you’ll also have had exposure to Phonegap.</text:p><text:p> </text:p><text:p> </text:p><text:p>C# / WPF App Development</text:p><text:p>You’ll be building new applications, adding further features and services as we grow our large and technically challenging solutions that are used by the largest law firms in the world. You could choose to focus around the product modules or really test your technical skills and add value working on the framework that underpins the product. In this area you’d be solving some of the most challenging problems…. Core skills here are C#, WPF, SQL.</text:p><text:p> </text:p><text:p> </text:p><text:p>BI Development</text:p><text:p>We are about to start pushing the edge around the latest in BI and dashboard technologies. You’ll be involved in building and re-architecting from the ground up and involved in every phase of the project from conceptualisation to delivery. A key part of strategy that is starting to emerge is to leverage IBM Cognos – a new technology for us. If you’ve got skills with Framework Manager and BI Server 10.2.1 we’d love to hear from you. Oh, and you might have started looking at the newer version released in October – that’s looking very interesting and getting us excited as well….</text:p><text:p> </text:p><text:p> </text:p><text:p> </text:p><text:p>Culture and Benefits</text:p><text:p> </text:p><text:p>Even though we’re a global company the Auckland office feels like a software house – lots of technical people working in different teams and projects.</text:p><text:p> </text:p><text:p>We’ve got a funky, open plan office right across from Albany Westfield. As well as being pretty hard-core about work, we find some time for a Friday drink and some entertaining times out with the Social Club.</text:p><text:p> </text:p><text:p>We value our staff so there’s lots of perks including flexible working arrangements, additional sick leave, certification and tuition reimbursement, Income Protection, Life Insurance, an enhanced KiwiSaver Scheme, Financial Advisor and a Bonus Pool.</text:p><text:p> </text:p><text:p> </text:p><text:p>Want to know more?</text:p><text:p> </text:p><text:p>Check us out on Facebook:  http://www.facebook.com/pages/ADERANT-Asia-Pacific/119627654744243</text:p><text:p>Contact our HR manager, Reid Pittams: P: 09 414 3300, E: reid.pittams@aderant.com   </text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="ce45"/>
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce45"/>
      <table:table-cell table:style-name="ce213"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048490">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
   </table:table>
   <table:table table:name="somecompanies" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>marine industrial design</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>eclipse recruitment</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://stackoverflow.com/jobs/110626/software-engineer-c-plus-plus-30k-crossover?utm_source=stackoverflow.com&amp;utm_medium=ad&amp;utm_campaign=large-sidebar-tag-themed-cpp</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="books" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Pattern-Oriented-Software-Architecture</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>from mud to structure</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>layers </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pipes and filters</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>blackboard</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>distributed system</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>broker</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>interactive systems</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Model view controller</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>presentation abstraction control</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>adaptable systems</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>microkernel</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>reflection</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>design patterns</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>structural decomposition</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Whole-part</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>organization of work</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Master-slave</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="multithreading" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co20" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1020" table:default-cell-style-name="ce94"/>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Question 4 in coding interview is about thread scheduling</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce214" office:value-type="string" calcext:value-type="string">
      <text:p>Boss/Worker Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>The boss creates each worker thread, assigns it tasks, and, if necessary, waits for it to finish. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>It can create its workers dynamically when requests arrive or creates all worker threads up front (thread pool)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce216" office:value-type="string" calcext:value-type="string">
      <text:p>thread pool interface</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string"><text:p>init (nbrOfThreads)</text:p><text:p>startTask(task_function)</text:p><text:p>Const List&amp; GetNotStartedTasksYet() //as we might have more tasks to run than available threads in the pool</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce217" office:value-type="string" calcext:value-type="string">
      <text:p>example of use:ATM </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>We designed our ATM server according to the boss/worker model with a thread pool</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce218" office:value-type="string" calcext:value-type="string"><text:p>Worker threads continually monitor the queue for new work requests;</text:p><text:p>When the boss receives a new request, it places it on a queue. Workers remove requests from the queue and process them. When a worker completes a request, it simply removes another one from the queue.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce220"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce218"/>
     <table:table-cell table:style-name="ce220"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>an element on the request queue contains a function pointer (task), a field for the argument and a pointer to the next task on the queue (hb:maybe not this last field,because this would look rather like a single linked list )</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce220"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce220" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
     <table:covered-table-cell table:number-columns-repeated="2" table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>Because the queue is a shared data structure that may be accessed by all worker threads (as well as any thread that exists outside of the pool and calls tpool_add_work), we&apos;ll need to add some synchronization. We&apos;ll do so by incorporating a mutex (queue_lock) and three condition variables (queue_not_empty, queue_not_full,and queue_empty) in the tpool_t structure.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>A thread pool has some basic characteristics:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>∙ Number of worker threads. This limits the number of requests <text:s/>that can be in progress at the same time.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="1017"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>∙ Request queue size. This limits the number of requests that can be waiting for service.</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1017"/>
    </table:table-row>
    <table:table-row table:style-name="ro45">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
      <text:p>∙ Behavior when all workers are occupied and the request queue is full. Some requesters may want to block until their requests can be queued and only then resume execution. Others may prefer immediate notification that the pool is full. (For instance, network-based applications typically depend on a status value to avoid &quot;dropping requests on the floor&quot; when the server is overloaded.)</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1017"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell table:style-name="ce222" office:value-type="string" calcext:value-type="string">
      <text:p>Peer Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro33">
      <table:table-cell/>
      <table:table-cell table:style-name="ce223" office:value-type="string" calcext:value-type="string">
       <text:p>The peer model is suitable for applications that have a fixed or well-defined set of inputs, such as matrix multipliers, parallel database search engines, and prime number generators.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro57">
      <table:table-cell/>
      <table:table-cell table:style-name="ce224" office:value-type="string" calcext:value-type="string"><text:p>Well-defined input allows programs to adopt what could be construed as a boss/worker model without the boss. </text:p><text:p>Because there is no boss, peers themselves must synchronize their access to any common sources of input. </text:p><text:p>However, like workers in the boss/worker model, Peers can also slow down if they must frequently synchronize to access shared resources.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce224" office:value-type="string" calcext:value-type="string">
       <text:p>all threads must synchronize afterward to exchange and compare each other&apos;s results.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce214" office:value-type="string" calcext:value-type="string">
      <text:p>Pipeline Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pipeline improves throughput because it can accomplish the many different stages of a process on different input units (be they cars or instructions) concurrently</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>a single thread receives input for the entire program, always passing it to the thread that handles the first stage of processing. </text:p><text:p>Similarly a single thread at the end of the pipeline produces all final output for the program. </text:p><text:p>Each thread in between performs its own stage of processing on the input it received from the thread that performed the</text:p><text:p> Previous stage, and passes its output to the thread performing the next. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Applications in which the pipeline might be useful are image processing and text processing or </text:p><text:p>Any application that can be broken down into a series of filter steps on a stream of input.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>We could add multiplexing or demultiplexing to this pipeline, allowing multiple threads to work in parallel on a particular stage. </text:p><text:p>We could also dynamically configure the pipeline at run time, having it create and terminate stages (and the threads to service them) as needed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>the overall throughput of a pipeline is limited by the thread that processes its slowest stage. Threads that follow it in the pipeline cannot perform their stages until it has completed. </text:p><text:p>When designing a multithreaded program according to the pipeline model, you should aim at balancing the work to be performed across all stages; </text:p><text:p>That is, all stages should take about the same amount of time to complete.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>Buffering Data Between Threads</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>one thread produces data, another one consumes it (producer/consumer)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this relationship requires:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce226" office:value-type="string" calcext:value-type="string"><text:p>a buffer: that contains one data item to process. or many items with tracking for new unprocessed ones.</text:p><text:p>Double buffering: io thread reads io and places unprocessed data in b1. Calculating thread processes it and palces it in b2. Io thread writes it in io</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a lock: to synchronize access to buffer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce226" office:value-type="string" calcext:value-type="string"><text:p>a suspend/resume mecanism:  The consumer may suspend itself when the buffer contains no data for it to consume. </text:p><text:p>If so, the producer must be able to resume it when it places a new item in the buffer. </text:p><text:p>With Pthreads, you would arrange this mechanism using a condition variable.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>state information: how much data is in the buffer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro49">
     <table:table-cell/>
     <table:table-cell table:style-name="ce227" office:value-type="string" calcext:value-type="string">
      <text:p>Cost of Threading</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>The memory and CPU cycles required to manage each thread (each thread has its own stack), including the structures the operating system uses to manage them, plus the overhead for the Pthreads library and any special code in the operating system that supports the library.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>The CPU cycles spent for synchronization calls (mutex locks and unlocks, condition variables, ...) that enforce orderly access to shared data. These calls cost in CPU cycles to execute the calls.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
      <text:p>The time during which the application is inactive while one thread is waiting on another thread. This cost results from too many dependencies among threads and can be allayed by improved program design.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="8">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>mutex</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>using mutex We&apos;ve limited access to the entire database to a single thread at a time, thus slowing performance considerably.</text:p><text:p>Other threads needing access to the database need to wait for one thread to finish its whole work</text:p><text:p>Improve Lock granularity by using mutexes for individual account records</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro64">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string"><text:p>which thread is the first to be granted the lock once it&apos;s released? The choice is made according to the scheduling priorities of the individual threads.</text:p><text:p>The thread with the highest priority gets the lock.</text:p><text:p>Many threaded programs, however, don&apos;t assign different priorities to different threads. Most of these programs are designed for real-time applications and allow the choice of which thread gets a lock first to be made randomly.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string"><text:p>using pthread_mutex_trylock represents a kind of polling for a resource≈repeatedly trying and backing off until the resource is obtained. </text:p><text:p>This polling leads to some overhead and, worse, potential resource starvation. If the lock is in high demand, the thread that polls for it may never get it. a thread that is not patient enough to block and wait may never try the lock and find it available≈there is always at least one other thread blocked waiting for the lock.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1019"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce218" office:value-type="string" calcext:value-type="string">
      <text:p>If multiple threads are waiting on a condition variable or mutex, who gets awakened first when another thread issues a pthread_cond_signal call? the waiting threads are released according to their scheduling priority. If all waiting threads are of the same priority, they are released in a first-in first-out order for each pthread_cond_signal call that&apos;s issued.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1019"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="10">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro66">
     <table:table-cell/>
     <table:table-cell table:style-name="ce217" office:value-type="string" calcext:value-type="string">
      <text:p>shortcomings</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro64">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string"><text:p>1-Sometimes you have many threads that read data but only an occasional thread that writes it. There should be a type of lock that allows any number of readers but works like a mutex whenever a writer enters the scene. Mutex does not help. It just locks against everyone. </text:p><text:p>Solution:</text:p><text:p>Reader/writer locks provide this type of access control. Done using using mutexes and condition variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>2- no recursive lock</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce228" office:value-type="string" calcext:value-type="string">
      <text:p>recursive mutex</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
      <text:p>A recursive mutex is useful for a thread that makes a number of nested calls to a routine that locks and manipulates a resource. If the thread already holds the lock, the calls merely increase and decrease the recursive count and don&apos;t deadlock the thread.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">priority can lead to priority inversion problem.</text:span></text:p><text:p>Solution</text:p><text:p>1- minimize the degree to which threads of different priorities share the same locks.</text:p><text:p>2- use mutex attribute as shown in chap 4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro42">
     <table:table-cell/>
     <table:table-cell table:style-name="ce229" office:value-type="string" calcext:value-type="string">
      <text:p>Sharing a Mutex Among Processes</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce220"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce220" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="1">
      <text:p>mutex has 3 attributes. One of them can be set to PTHREAD_PROCESS_SHARED to be shared by many processes.</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2" table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce228" office:value-type="string" calcext:value-type="string">
      <text:p>condition variable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
       <text:p>a common task in thread programming is event synchronization: each thread in a program reaches a certain point, a barrier in your program, and must wait for other threads to get there.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
       <text:p>Your best choice to impose this type of synchronization is a condition variable.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro67">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string"><text:p>std::condition_variable::wait* puts the thread to sleep waiting on a notification and releases the mutex it has locked previously. This allows other threads needing the mutex to run.</text:p><text:p>The notification happens from another thread using std::condition_variable::notify*</text:p><text:p>When the condition variable is notified, the sleeping thread is awaken and is put on the queue to get the mutex</text:p><text:p>But certain implementations may produce spurious wake-up calls without any std::condition_variable::notify* functions being called. Therefore, users of this function shall ensure their condition for resumption is met.</text:p><text:p><text:span text:style-name="T14">users of this function should ensure their condition for resumption is met also because another thread could have changed the condition between the time the sleeping thread was awaken and the time it owned the mutex</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce230" office:value-type="string" calcext:value-type="string">
       <text:p>Thread waiting on CV</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>std::unique_lock&lt;std::mutex&gt; lck(mtx);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>while (count &lt;= WATCH_COUNT) </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;watch_count(): Thread &quot; &lt;&lt; idp &lt;&lt; &quot; might block and Count is &quot; &lt;&lt; count &lt;&lt; endl;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cv.wait(lck);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;watch_count(): Thread &quot; &lt;&lt; idp &lt;&lt; &quot; awoke and Count is &quot; &lt;&lt; count &lt;&lt; endl;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce230" office:value-type="string" calcext:value-type="string">
       <text:p>Thread notifying</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>for (int i =0; i &lt; TCOUNT; i++) </text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>std::unique_lock&lt;std::mutex&gt; lck(mtx);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>count++;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>if (count == WATCH_COUNT)</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="3"/>cv.notify_all();</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
      <text:p>priority inversion</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string"><text:p>In <text:a xlink:href="http://maxim.int.ru/bookshelf/PthreadsProgram/htm/viewer_r.html+bkid=232&amp;destid=676161.html#676161" xlink:type="simple">Chapter 4</text:a>, we&apos;ll show you how to eliminate the risk of priority inversion by using mutex attributes.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce217" office:value-type="string" calcext:value-type="string">
      <text:p>Refrences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>Later in this chapter, as a performance enhancement, we&apos;ll add mutexes for individual account records to our server.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>Later in this chapter, we&apos;ll discuss a more standard solution to locking hierarchy problems that involves defining an order in which any given thread must pursue locks.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string"><text:p>In <text:a xlink:href="http://maxim.int.ru/bookshelf/PthreadsProgram/htm/viewer_r.html+bkid=232&amp;destid=676161.html#676161" xlink:type="simple">Chapter 4</text:a>, we&apos;ll discuss how you can avoid priority inversion problems by using attributes to assign priorities to mutexes.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string"><text:p>Secure non-threadsafe code in <text:a xlink:href="http://maxim.int.ru/bookshelf/PthreadsProgram/htm/viewer_r.html+bkid=232&amp;destid=986815.html#986815" xlink:type="simple">Chapter 5</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>see Chapter 6, Practical Considerations, for performance issues and how to minimize locks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string">
      <text:p>What is priority inversion ? How to avoid it in C++11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Interview questions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Name three thread design patterns </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>1. Thread pool (Boss/Workers)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>2. Peer (Work crew)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>3. Pipeline </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Explain how a thread pool works </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>One thread dispatches other threads to do useful work which are usually part of a worker thread pool. This thread pool is usually pre-allocated before the boss (or master) begins dispatching threads to work. Although threads are lightweight, they still incur overhead when they are created.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>If the boss thread becomes a worker thread once it&apos;s done starting other worker threads then this is a Peer Thread Design Pattern. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: critical section </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>The code between lock and unlock calls to a mutex. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>What are four mutex types? (also, try to explain each one) </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>- Recursive: allows a thread holding the lock to acquire the same lock again which may be necessary for recursive algorithms.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>- Queuing: allows for fairness in lock acquisition by providing FIFO ordering to the arrival of lock requests. Such mutexes may be slower due to increased overhead and the possibility of having to wake threads next in line that may be sleeping.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>- Reader/Writer: allows for multiple readers to acquire the lock simultaneously. If existing readers have the lock, a writer request on the lock will block until all readers have given up the lock. This can lead to writer starvation.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>- Scoped: RAII-style semantics regarding lock acquisition and unlocking. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: deadlock </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p>Two (or more) threads have stopped execution or are spinning permanently. For example, a simple deadlock situation: thread 1 locks lock A, thread 2 locks lock B, thread 1 wants lock B and thread 2 wants lock A. </text:p><text:p>Hb:a deadlock can also happen with a single thread, in recursive function contaning a mutex lock</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>How can you prevent deadlocking from occurring? </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>You can prevent deadlocks from happening by making sure threads acquire locks in an agreed order (i.e. preservation of lock ordering). Deadlock can also happen if threads do not unlock mutexes properly. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: race condition </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>A race condition is when non-deterministic behavior results from threads accessing shared data or resources without following a defined synchronization protocol for serializing such access. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>How can you prevent race conditions from occurring? </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Take steps within your program to enforce serial access to shared file descriptors and other external resources. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: priority inversion </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>A higher priority thread can wait behind a lower priority thread if the lower priority thread holds a lock for which the higher priority thread is waiting.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>As happened on the Mars Pathfinder. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: Condition Variables (what is/are the analogous Java structure(s)?) </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Condition variables allow threads to synchronize to a value of a shared resource. Typically, condition variables are used as a notification system between threads.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>In Java wait() and notify() are used. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: (thread) barriers </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Barriers are a method to synchronize a set of threads at some point in time by having all participating threads in the barrier wait until all threads have called the said barrier function. This, in essence, blocks all threads participating in the barrier until the slowest participating thread reaches the barrier call. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: Semaphores </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro24" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Semaphores are another type of synchronization primitive that come in two flavors: binary and counting. Binary semaphores act much like simple mutexes, while counting semaphores can behave as recursive mutexes. Counting semaphores can be initialized to any arbitrary value which should depend on how many resources you have available for that particular shared data. Many threads can obtain the lock simultaneously until the limit is reached. This is referred to as lock depth. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Semaphores are more common in multiprocess programming (i.e. it&apos;s usually used as a synch primitive between processes). </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: Spinlocks </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro24" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Spinlocks are locks which spin on mutexes. Spinning refers to continuously polling until a condition has been met. In the case of spinlocks, if a thread cannot obtain the mutex, it will keep polling the lock until it is free. The advantage of a spinlock is that the thread is kept active and does not enter a sleep-wait for a mutex to become available, thus can perform better in certain cases than typical blocking-sleep-wait style mutexes. Mutexes which are heavily contended are poor candidates for spinlocks. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Spinlocks should be avoided in uniprocessor contexts. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>List six synchronization primitives. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>1. Mutex</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>2. Join</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>3. Condition variables</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>4. Barriers</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>5. Spin lock</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>6. Semaphore </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: livelock </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>What does the term &apos;lock-free&apos; mean? </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Multithreaded code written such that the threads can never permanently lock up. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: &quot;Busy waiting&quot; and how it can be avoided </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>When one thread is waiting for another thread using an active looping structure that doesn&apos;t do anything. Example: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>Thread task = new TheTask();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>task.start();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>while( task.isAlive() ){</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>; // do nothing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
       <text:p>This can be avoided using mutexes. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>problems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>priority inversion</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>deadlock</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro33" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Thread A may not represent any thread of execution. Default constructor of thread class creates such thread.</text:p><text:p><text:span text:style-name="T14">Thread::thread();</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro33" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>a thread A can be moved to a new thread. Thread A no more represents any thread of execution.</text:p><text:p>Thread::thread (thread&amp;&amp; x) noexcept;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro65" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>a thread can be joinable, if it is :</text:p><text:p>- Represents a thread of execution (Not default constructed, Not moved from)</text:p><text:p>- And join and detach have not been called yet.</text:p><text:p/><text:p>When the thread is joinable, it has a unique id</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro68" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>To reuse an ending thread object to run a new thread of execution, the thread::detach should have been called.</text:p><text:p>Otherwise, thread::joinable returns false even if the thread object does not represent any thread of execution</text:p><text:p/><text:p>See <text:a xlink:href="https://github.com/hbdevelop1/c.git" xlink:type="simple">https://github.com/hbdevelop1/c.git</text:a>, on the branch mttcpip </text:p><text:p>commit 684cbb0caadd42b2bb93fdee6ba85d1cb9ba8773</text:p><text:p>Author: hbdevelop1 &lt;https:<text:a xlink:href="mailto://hbdevelop1@github.com" xlink:type="simple">//hbdevelop1@github.com</text:a>&gt;</text:p><text:p>Date:   Mon Mar 14 16:06:20 2016 +1300</text:p><text:p/><text:p>    create a thread of each client and reuse thread objects that no more represent any thread of execution, thanks to std::thread::detach</text:p><text:p/><text:p/>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>cancelling</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce232" office:value-type="string" calcext:value-type="string">
       <text:p>a thread can set its cancellibility at it pleases following what is currently doing.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce232" office:value-type="string" calcext:value-type="string">
       <text:p>when it holding resources, locking, … it can sets itself to disable being canceled.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce232" office:value-type="string" calcext:value-type="string">
       <text:p>when it frees resources, it switches to cancelibility enabled.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce232" office:value-type="string" calcext:value-type="string">
       <text:p>when its cancelibility enabled, it can decide whther it wants to be stopped immediately or when it gets to a cancellation point </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce218" office:value-type="string" calcext:value-type="string">
       <text:p>The pending cancellations are delivered to a thread at defined locations in its code path. These locations are known as cancellation points, and they come in two flavors: </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce232" office:value-type="string" calcext:value-type="string">
       <text:p>- Automatic cancellation points (pthread_cond_wait,pthread_cond_timedwait, and pthread_join).</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce232" office:value-type="string" calcext:value-type="string">
       <text:p>- Programmer-defined cancellation points (pthread_testcancel).</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce232"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="ce218" office:value-type="string" calcext:value-type="string">
       <text:p>Cancelability State: PTHREAD_ CANCEL_ DISABLE <text:s text:c="10"/></text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="13"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Cancelability Type : ignored</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce47" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce47" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce47" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro58" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string"><text:p>Description : The thread can never be canceled. Calls to pthread_cancel have no effect. The thread can safely acquire locks and resources. </text:p><text:p>  /* We turn off general cancelability here */ </text:p><text:p>  pthread_setcancelstate(PTHREAD_CANCEL_DISABLE, &amp;last_state); //last_state is not used</text:p><text:p/>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="7"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="5"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce233" office:value-type="string" calcext:value-type="string">
       <text:p>PTHREAD_ CANCEL_ ENABLE</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce47" table:number-columns-spanned="2" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="12"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce218" office:value-type="string" calcext:value-type="string">
       <text:p>PTHREAD_ CANCEL_ ASYNCHRONOUS</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce47" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce47" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="ce47" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce234" office:value-type="string" calcext:value-type="string">
       <text:p>Asynchronous cancellation. Cancellation takes effect immediately.*</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="4"/>
      <table:covered-table-cell table:number-columns-repeated="2" table:style-name="Default"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="7"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="5"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce233" office:value-type="string" calcext:value-type="string">
       <text:p>PTHREAD_ CANCEL_ ENABLE</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce47" table:number-columns-spanned="2" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="12"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce234" office:value-type="string" calcext:value-type="string">
       <text:p>PTHREAD_ CANCEL_ DEFERRED</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce47" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce47" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro58" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce234" office:value-type="string" calcext:value-type="string"><text:p>Deferred cancellation (the default). Cancellation takes effect only if and when the thread enters a cancellation point. The thread can hold and release locks but must keep data in some consistent state. If a pending cancellation exists at a cancellation point, the thread can terminate without leaving problems behind for the remaining threads.</text:p><text:p>  pthread_setcancelstate(PTHREAD_CANCEL_ENABLE, &amp;last_state);   //the thread can be stopped when it calls pthread_testcancel or pthread_cond_wait,pthread_cond_timedwait, and pthread_join, </text:p><text:p>  pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &amp;last_type); </text:p><text:p/>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="6"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="8"/>
      <table:table-cell table:style-name="ce47"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>scheduling</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce223" office:value-type="string" calcext:value-type="string">
      <text:p>he operating system continuously selects a single thread to run from a systemwide collection of all threads that are not waiting for the completion of an I/O request or are not blocked by some other activity.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use scheduling to decide how threads use the available processing power</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T45">real time app</text:span> : Used in conjunction with POSIX real-time extensions, such as <text:span text:style-name="T45">memory locking</text:span> and <text:span text:style-name="T45">real-time clocks</text:span>, </text:p><text:p>the Pthreads scheduling feature lets you create real-time applications in which the threads with important tasks can be guaranteed </text:p><text:p>To complete their tasks in a predictable, finite amount of time</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>A sched_yield call places the calling thread at the end of its scheduling priority queue and lets another thread of the same priority take its place. <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>Atomic &amp; memory order</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>Even if you know that your program will only ever run on an x86, you can’t remove the atomics and the ordering constraints from your code. They are still necessary to prevent the compiler from doing the reordering.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p>the x86 guarantees </text:p><text:p>Acquire semantics for loads </text:p><text:p>Release semantics for stores</text:p><text:p>so load(memory_order_acquire) and store(x, memory_order_release) produce no fences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how to resolve task based concurrency with c++11, even i am not so clear about the solution</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:25:00 PM] kokwah li: The hint is to use future and promise as a hack, but its not a clean method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how many ways can a multithreading bad design can cause dead lock</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:29:24 PM] kokwah li: how many ways can you initiate a thread?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is a packaged task?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the most important thing about multithreaded design is , we must be able to design the code in such a way that we have a minimum use of mutex</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>i would say in two ways: one when mutexes are not locked in a defined hierarchy.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro69">
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>what would be the answer for &quot;how many ways bad design can cause dead lock&quot;</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what would be the answer to the number of </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>r</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:22:14 PM] Hassan Boulmarouf: I have revised my knowledge in multi threading and I would like to check if i am good enough for a test</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:22:29 PM] kokwah li: ok</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:22:42 PM] Hassan Boulmarouf: Do you still remember some of the questions in multi threading you had</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:23:15 PM] kokwah li: give me a min.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:23:20 PM] Hassan Boulmarouf: thank you</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:24:22 PM] kokwah li: One of the very important question with multi threading, how to resolve task based concurrency with c++11, even i am not so clear about the solution</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:25:00 PM] kokwah li: The hint is to use future and promise as a hack, but its not a clean method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:25:13 PM] Hassan Boulmarouf: task based ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:25:19 PM] Hassan Boulmarouf: i never heard of that!!!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:26:41 PM] kokwah li: https://bwv1079.wordpress.com/2013/11/20/c11-task-based-concurrency-part-1/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:27:01 PM] Hassan Boulmarouf: Thank you very much</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:27:09 PM] kokwah li: no problem</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:28:12 PM] kokwah li: how many ways can a multithreading bad design can cause dead lock</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:29:24 PM] kokwah li: how many ways can you initiate a thread?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:30:22 PM] kokwah li: what is a packaged task?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:31:03 PM] kokwah li: I can remember only these for now</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:31:27 PM] Hassan Boulmarouf: that&apos;s daunting</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:31:35 PM] Hassan Boulmarouf: i still have a lot to learn</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:31:38 PM] kokwah li: what do you mean ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:32:06 PM] Hassan Boulmarouf: I don&apos;t know what a packaged task is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:32:11 PM] kokwah li: you need to apply it to learn more brother, see some applications</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:33:30 PM] kokwah li: the most important thing about multithreaded design is , we must be able to design the code in such a way that we have a minimum use of mutex</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:33:45 PM] kokwah li: we must avoid mutex as much as possible</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:34:00 PM] Hassan Boulmarouf: ok</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:35:20 PM] kokwah li: but the problem is we cannot avoid it completely because of the common resourses shared by multiple thread</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:35:30 PM] Hassan Boulmarouf: yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:35:56 PM] kokwah li: some thread may just read the information, but some thread changes it, this is where the problem arises</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:36:52 PM] kokwah li: one best solution for this problem is to use a presistant data structure, but I am not able to understand presistant data stucture :(</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:37:10 PM] Hassan Boulmarouf: what would be the answer for &quot;how many ways bad design can cause dead lock&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:37:32 PM] Hassan Boulmarouf: i can only think of two ways</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:38:20 PM] Hassan Boulmarouf: if a thread is running a recursive function in which there is a lock. So it will lock at entry, and then at second time it calls the function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:38:22 PM] kokwah li: yes only two ways</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:38:38 PM] Hassan Boulmarouf: it will have the mutext locked</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:38:57 PM] Hassan Boulmarouf: ok :) i am glad i got the number correct</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:39:14 PM] kokwah li: so what is the bad design in it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:39:24 PM] Hassan Boulmarouf: let me think</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:39:30 PM] kokwah li: and how to resolve it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:39:39 PM] kokwah li: with the recursive example that you gave</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:40:09 PM] Hassan Boulmarouf: maybe we shouldn&apos;t have the lock inside the function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:40:36 PM] kokwah li: the simple answer is, that was a bad design</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:40:57 PM] Hassan Boulmarouf: so what is the right design ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:41:35 PM] kokwah li: that we need to see the problem, but having mutex inside the recurssive funtion for multithread is not a good design</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:41:51 PM] kokwah li: a hack is possible for the recurrsive design</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:41:55 PM] kokwah li: but its cumbersome</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:42:51 PM] kokwah li: every time you try to lock the mutex, we must check whether if its already locked by self</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:43:06 PM] Hassan Boulmarouf: Ok</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:43:53 PM] Hassan Boulmarouf: Thank you very much for your time Li</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:06 PM] Hassan Boulmarouf: If you can remember anything, please let me know</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:08 PM] kokwah li: no problem brother any time</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:14 PM] kokwah li: sure i will</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:37 PM] kokwah li: also goggle multithread interview questions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:49 PM] kokwah li: for c++11 or boost</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:51 PM] Hassan Boulmarouf: OK.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="11">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return a value from a child thread to the parent thread, use asyn + future</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pass a value from a parent thread to a child thread, use promise + future</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>future accesses a shared object with promise </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>when promise sets the value to the shared object, future picks it up</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>void print_int (std::future&lt;int&gt;&amp; fut) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int x = fut.get();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;value: &quot; &lt;&lt; x &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>int main ()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::promise&lt;int&gt; prom; <text:s text:c="21"/>// create promise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::future&lt;int&gt; fut = prom.get_future(); <text:s text:c="3"/>// engagement with future</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::thread th1 (print_int, std::ref(fut)); <text:s/>// send future to new thread</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>prom.set_value (10); <text:s text:c="24"/>// fulfill promise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="47"/>// (synchronizes with getting the future)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>th1.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>future::get returns the value stored in the shared state (or throws its exception) when the shared state is ready.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>If the shared state is not yet ready (i.e., the provider has not yet set its value or exception), the function blocks the calling thread and waits until it is ready.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>calling future::get can only be done once. If called more than one time, the program will crash</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>the future is made set and made ready through: 1) promise.set_value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>ex:prom.set_value (10);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>And 2) through the return value of a thread function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ex:std::future&lt;int&gt; fut = std::async (thread_function_do_stuff);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>promise and future cannot be copied. They can only be moved.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::promise&lt;int&gt; p1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::promise&lt;int&gt; p2=p1; //error</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::promise&lt;int&gt; p2=std::move(p1); //OK</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro70">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">std::async</text:span> may create a thread and returns immediately</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string"><text:p>The function temporarily stores in the shared state either the threading handler used or <text:a xlink:href="http://www.cplusplus.com/decay" xlink:type="simple">decay copies</text:a> of fn and args (as a deferred function) without making it ready. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Once the execution of fn is completed, the shared state contains the value returned by fn and is made ready.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>async(launch::async, is_prime,313222313); creates a new thread where is_prime is executed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::async deferred, will not create a seperate thread but will execute the function in the same thread as the one getting the future/return value of the function.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>std::future&lt;bool&gt; fut = std::async (launch::deferred, is_prime,313222313);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>….; bool ret = fut.get(); //this is where the is_prime is run. Note that the current thread is blocked on future::get </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
      <text:p>it is essential that asyn is assigned to a future. Even when the function returns void. Otherwise, the calling thread blocks on async!!!! and does not continue the following instructions </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>std::packaged_task</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro51">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string"><text:p>contains internally two elements:</text:p><text:p/><text:p>    A stored task, which is some callable object (such as a function pointer, pointer to member or function object) whose call signature shall take arguments of the types in Args... and return a value of type Ret.</text:p><text:p>    A shared state, which is able to store the results of calling the stored task (of type Ret) and be accessed asynchronously through a future.</text:p><text:p/>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>int countdown (int from, int to) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (int i=from; i!=to; --i) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; i &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::this_thread::sleep_for(std::chrono::seconds(1));</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;Lift off!\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return from-to;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>int main ()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string"><text:p>  std::<text:span text:style-name="T16">packaged_task</text:span>&lt;int(int,int)&gt; tsk (countdown);   // set up packaged_task</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::future&lt;int&gt; ret = tsk.get_future(); <text:s text:c="11"/>// get future</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::thread th (std::move(tsk),10,0); <text:s text:c="2"/>// spawn thread to count down from 10 to 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>// ...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string"><text:p>  int value = <text:span text:style-name="T16">ret.get</text:span>();                  // wait for the task to finish and get result</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;The countdown lasted for &quot; &lt;&lt; value &lt;&lt; &quot; seconds.\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>th.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce71" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="1048132">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
   </table:table>
   <table:table table:name="gcc" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="3" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>makefile to compile and to produce preprocessor output</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>FLAG2=-Wall -std=c++11</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>compile:</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>g++ -ggdb $(FLAG2) mt_recursive_lock.cpp -o code</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>pp:</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>g++ -ggdb $(FLAG2) -E mt_recursive_lock.cpp -o code.i</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>produce preprocessor output</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cpp file.cpp &gt; file.i</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>change the language of g++</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>I had to set the three environment variables in .bashrc, not only LANG as stated in gcc/Environment-Variables.html</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>LANG=en_US.UTF-8</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>LANGUAGE=en_US</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>GDM_LANG=en_US</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="TDD BDD" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>create a test for object creation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>then create the class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the test passes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>create a test for object calling a method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the create the method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the test passes or fails following the input to the method </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Rule : write the simplest code just for the test to pass </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hb:but we are not developping with the enitre architecture in mind !!!!!</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>bdd uses natural language in code</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>TDD</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>BDD</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>assert(count == 5);</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>accout.should_be(5);</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="time management" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="1024" table:default-cell-style-name="ce94"/>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when estimating, plan for the bad things/insterruptions/relaxation and pause/surprises</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when estimating, break down the tasks to smaller ones</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>difficult tasks broken down to smaller tasks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>avoid time wasters</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>regularly check the time and progress</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
      <text:p>Regularly update your plans according to reality.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>delegate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Give objectives, not procedures, take responsibility and accountability. Describe a task clearly. Provide a &quot;how to test&quot; example.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>have a todo list. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>updated with every task you get</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>reorder priorities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
      <text:p>Estimate every task, set deadlines yourself. This will help you to avoid doing things in a last minute.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>prioritize them</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce209" office:value-type="string" calcext:value-type="string">
      <text:p>start some tasks ahead of time. So that they are ready when you want them. Not every customer can answer immediately</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inform team leader/manager of the road blocks, suggest priorities adjustments</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>start a task when waiting on sth</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>finish in time not worry about a perfect solution that fits for all. </text:p><text:p>Get the job done and you can add more features later. </text:p><text:p>Do not save on coding conventions and code quality. </text:p><text:p>Pure code usually increases support time later. Consider unit tests, it can improve quality and speedup development. Automated tests reward with a confidence.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>priorities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>urgent</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>not urgent</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>important</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>crying baby</text:p><text:p>Kitchen fire</text:p><text:p>Some calls</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>exercice</text:p><text:p>Vocation</text:p><text:p>Planing</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string"><text:p>someone else is dependent on a specific task then do it first. </text:p><text:p>For equal tasks set priorities using a task difficulty: ugliest tasks first (some prefer interesting tasks first, why not?). </text:p><text:p>Domino Reaction method: This is the idea that there are actions that you invest in once and which produce over time in different channels.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1019"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>not imporatant</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>interruptions</text:p><text:p>Distractions</text:p><text:p>Other calls</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>trivia</text:p><text:p>Busy work</text:p><text:p>Time wasters</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>Important/Urgent quadrant are done immediately and personally<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. crises, deadlines, problems.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>Important/Not Urgent quadrant get an end date and are done personally<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. relationships, planning, recreation.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>Unimportant/Urgent quadrant are delegated<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. interruptions, meetings, activities.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>Unimportant/Not Urgent quadrant are dropped<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. time wasters, pleasant activities, trivia.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce209"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="6">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>1. Planning &amp; prioritizing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce235" office:value-type="string" calcext:value-type="string">
      <text:p>2. Protect your time and avoid needless distractions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce235" office:value-type="string" calcext:value-type="string">
      <text:p>3. Discipline yourself.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>“A time”</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Delivering Value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>“B time”</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44"/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>clarifying requirements</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44"/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>reviewing another’s code</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44"/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>otherwise helping another developer to deliver value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44"/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>improving the deployment process</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44"/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>automating chores</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44"/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>optimizing your environment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>“C time”</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>meetings not related to delivering value or planning to deliver value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>email not related to “A” or “B” time activities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce209" office:value-type="string" calcext:value-type="string">
      <text:p>…</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="1048511">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="interviews" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co21" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co22" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1020" table:default-cell-style-name="ce94"/>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell table:style-name="ce252" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="10"><text:p><text:span text:style-name="T12">retake tests:</text:span></text:p><text:p><text:span text:style-name="T12">GL</text:span></text:p><text:p><text:span text:style-name="T12">Ubisoft</text:span></text:p><text:p><text:span text:style-name="T12">Amazon</text:span></text:p><text:p><text:span text:style-name="T12">Rock star</text:span></text:p><text:p><text:span text:style-name="T12">Codility</text:span></text:p><text:p><text:span text:style-name="T12">Eidos</text:span></text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>multi threading quiz</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:style-name="ce252"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>network programming</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:style-name="ce252"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:style-name="ce194"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>stl</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>boost</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>python</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>oo:SOLID, GRASP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>qt</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>see youtube for how to use treeview</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>embedded</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>book summary + practical c++ tutorial + code sample of how is that different from general s/w app</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Javascript and HTML5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hardware/software integrated systems and/or embedded software Development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>testing, code coverage, regression, unit testing,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3D, basics</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>graphic/game gems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tensor, game engine features in pirates</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>opengl,  modern opengl 4.0+, nehe tutorials are kinda old, and a lot of them use the fixed function pipeline. </text:p><text:p>Completely master the opengl pipeline (vertex/fragment stages), setting the 3d world up with matrix transformations.  </text:p><text:p>Be a MASSIVE bonus if you have computer vision background</text:p><text:p>(got info from an Animation Research Limited wallace Yuen)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>algo</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unity</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>senior</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>optimization: uses locality spatial and temporal instead of oo, profiling, design of your data over the design of your code (Data-Oriented Design)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>links</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://macton.smugmug.com/gallery/8936708_T6zQX#593426709_ZX4pZ" xlink:type="simple">http://macton.smugmug.com/gallery/8936708_T6zQX#593426709_ZX4pZ</text:a>  Cpp is bullshit</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://cellperformance.beyond3d.com/articles/2006/04/performance-and-good-data-design.html" xlink:type="simple">http://cellperformance.beyond3d.com/articles/2006/04/performance-and-good-data-design.html</text:a>  Design around data</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>http://gameprogrammingpatterns.com/data-locality.html</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
       <text:p>Its the 20% that gets executed 80% of the time that you need to worry about.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
       <text:p>http://www.asawicki.info/news_1422_data-oriented_design_-_links_and_thoughts.html</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://lwn.net/Articles/250967/#TOC" xlink:type="simple">http://lwn.net/Articles/250967/#TOC</text:a> What every programmer should know about memory</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
       <text:p>View the prefetch buffer as an infinite cache. What is the prefetch buffer ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>multi threading</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>template and generic</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>modern c++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>https://visualstudiomagazine.com/articles/2013/02/12/future-c-plus-plus.aspx</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://www.stroustrup.com/bs_faq2.html#finally" xlink:type="simple">http://www.stroustrup.com/bs_faq2.html#finally</text:a></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>http://nwcpp.org/may-2013.html</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro33" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>While C++ and C# have borrowed bits of functional programming, they simply don&apos;t foster true high level approaches to problem solving in ways that OCaml, Haskell, F# and similar languages do.</text:p><text:p>What is functional programming ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
       <text:p>Asynchronous Programming ? http://moderncpp.com/asynchronous-programming/</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
       <text:p>What is it?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro33" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>RAII Resource Acquisition Is Initialization (RAII): is a C++ programming technique which binds the life cycle of a resource (allocated memory, thread of execution, open socket, open file, locked mutex, database connection—anything that exists in limited supply) to the lifetime of an object. Constructor holds resource Destructor releases it.</text:p><text:p>RAII wrappers : std::unique_ptr and std::shared_ptr, std::lock_guard, std::unique_lock, std::shared_lock</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>standard library containers and algorithms</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>templates</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>metaprogramming</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>exceptions</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>Boost</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce75"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce75"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>howto pass a code review</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>design patterns + Pattern-Oriented-Software-Architecture</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>Navico</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>difference between c++ and C#</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>knowledge of QT ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>a design needs 6 months, but the boss says 3 months. What to do ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>do not say overtime. He refused this idea</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Priority requirements + implement the core functionalities. He confirmed</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>the boss comes up with a stupide design or idea. What to do ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>can&apos;t say what I did in the past</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>convice them or see what the end user wants. He confirmed</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what to do when performance is bad ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>he:we use free tools like o-profile, valgrin.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>embedded like systems. What is that ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what were you doing in gameloft</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>was it not frustrating that the design kept changing ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>overwritten mem region ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Random crashes are due to heap corruption ( ! only ? I don&apos;t agree. Or I need to learn more), how to solve it ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>I looked it up on internet they use tools. He interrupted yes there are many tools the setting up of which is tricky.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what is a deadlock ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>how to avoid a deadlock ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>Hamilton Jet</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce236" office:value-type="string" calcext:value-type="string">
      <text:p>testing strategy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce237" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T83">Medium to high level of competency in programming in C++ is essential.  Some experience using Python and C# would be preferred.  </text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Experience with automated testing frameworks beneficial</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce238" office:value-type="string" calcext:value-type="string">
      <text:p>Experience and the ability to understand system requirements documentation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce238" office:value-type="string" calcext:value-type="string">
      <text:p>create test methods to verify compliance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce239" office:value-type="string" calcext:value-type="string">
      <text:p>what language is used to create test methods. Unit, system,integration</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Learn unit testing using google framework/ cppunit/ IBM RRTT or other. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce240"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce238" office:value-type="string" calcext:value-type="string">
      <text:p>A track record of working successfully with design &amp; systems engineers in the development of test methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hb would read first the system requirements documentation. And check with design and systems engineers to make sure</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce241" office:value-type="string" calcext:value-type="string">
      <text:p>Strong on mathematics, statistics and reliability for analysis of results and setting test criteria.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce238" office:value-type="string" calcext:value-type="string"><text:p>Skill at problem solving and the use of problem solving tools.!!!! <text:span text:style-name="T38">what problems ?</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce238" office:value-type="string" calcext:value-type="string">
      <text:p>Able to clearly and concisely document test outcomes and test methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce250" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T13">hb would create </text:span><text:span text:style-name="T84">project test plans </text:span><text:span text:style-name="T13">similar to airbus PTV</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce242" office:value-type="string" calcext:value-type="string">
      <text:p>Making customer needs the primary focus</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro71">
     <table:table-cell/>
     <table:table-cell table:style-name="ce243" office:value-type="string" calcext:value-type="string"><text:p>There is a huge body of knowledge available for free online, about interviewing techniques and tips. </text:p><text:p>Please read about interview techniques. </text:p><text:p>Find out about BEI and competency based interviewing. </text:p><text:p>Have a mock job interviews with family and friends, if you haven’t interviewed recently. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce244" office:value-type="string" calcext:value-type="string">
      <text:p>interviewer will give a problem, and ask for test cases.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce245" office:value-type="string" calcext:value-type="string">
      <text:p>understands that different situations and levels may call for different skills and approaches; works to deploy strengths; works on compensating for weakness and limits.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce244" office:value-type="string" calcext:value-type="string">
      <text:p>what is pinpointing ? Isolation ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce244" office:value-type="string" calcext:value-type="string"><text:p>RISKS during interview:</text:p><text:p>Not understading what an activity is ?</text:p><text:p>Not understanding what a key word means ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce244" office:value-type="string" calcext:value-type="string">
      <text:p>how are unit tests and system test related ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce244"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>system test (black box test) verifies that a functionality works</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce244"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>system test corresponds to many unit tests</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce244"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unit test (white test) verifies that the code for a functionality works as expected, non only it delivers the right solution but the way it does so is also right</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce246" office:value-type="string" calcext:value-type="string">
      <text:p>black box testing ,white box testing and non-functional testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is DO167B ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is a senario for ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>How is the partition done ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>do you like the position ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>testing experience improved my programming skills. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>this experience will allow me to work with some highly skilled gyus. </text:p><text:p>      I had the experience in GL NZ. </text:p><text:p>      Testing in another environment where the team has only a requirement doc and a process to follow. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="13">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="9">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="7">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="13">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="13">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="6">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="1">
       <text:p>Non-critical</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="4">
       <text:p>priority</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="2">
       <text:p>company logo in the wrong color</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:covered-table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:covered-table-cell table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:covered-table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="2">
       <text:p>the caption on an image in the wrong font</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:covered-table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:covered-table-cell table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="18">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce195" office:value-type="string" calcext:value-type="string">
       <text:p>Validation</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro65" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce251" office:value-type="string" calcext:value-type="string">
       <text:p>The process of evaluating software during or at the end of the development process to determine whether it satisfies specified business requirements.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro72" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce251" office:value-type="string" calcext:value-type="string">
       <text:p>To ensure that the product actually meets the user’s needs, and that the specifications were correct in the first place. In other words, to demonstrate that the product fulfills its intended use when placed in its intended environment.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce251" office:value-type="string" calcext:value-type="string">
       <text:p>Are we building the right product?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce251" office:value-type="string" calcext:value-type="string">
       <text:p>The actual product/software.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce251" office:value-type="string" calcext:value-type="string">
       <text:p>Testing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Questions to Use to Uncover the Interviewer&apos;s Hidden Needs</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>determination to get the job done when you are faced with resistance or a difficult situation.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>make the manager interven to clarify things, and the team have instructions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>stay late to make sure integration will work</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>influence others</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>there will come a time when they will ask us our progress. Airbus</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>buy books for debugging</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>David will be upset.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>B. laughed at me</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>is there a better solution. No just joking. If you have one please let us know</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>In disagreement</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I get all the arguments. I see some are wrong. The guy could not listen. Ask others/manager</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>failed in estimating</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Look/be nice to others by giving quick estimates and short</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>ethics</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>hiring for 4D when going to Canada. And hiring now. </text:p><text:p>hiring for Airbus, </text:p><text:p>Not taking books from GL when people took devices</text:p><text:p>Confidential documents, </text:p><text:p>don&apos;t talk about it with family </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>commitment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>working when people stopped in GL</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I was eager to stay late in GL. And offering to stay late</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>staying late in 4D.</text:p><text:p>Coming to work on staturday/sunday in QAC</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Ubisoft, </text:p><text:p>work directly with the artist and satisfy their needs and be commited to satisfying their goal</text:p><text:p>Abdelhak didn&apos;t have to bother about the technical issuees.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>free the manager of the task</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>Interpersonal Skills / Charm</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>I need you help. I am struggling with this. Show humility.</text:p><text:p>Not speak in authorative way. Giving commands.</text:p><text:p>When can you come over ? How can you help ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>I would like you to do this. </text:p><text:p>These are the benefits.</text:p><text:p>When can I come and get you strated doing it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>discipline</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>Competitivenss. the drive to improve and encourage others to do so</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I am reading this book/artical it says so and so.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>suggested that programmer read books/topics and present on it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>nlog(n)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>Focused</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>have a list of tasks by priority, when waiting on data for one task/feedback, move on to the next or prepare for it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Big Picture Thinking</text:span>: Demonstrate a tendency toward project closure. And what it takes to get there.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>deliver not the perfect solution</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>leadership</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>qac: qdata discovery. Teaching and sharing the prize</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>seneca: group work with no lead. To help towards going to delivering</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>tell me about yourself</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I like technical challenges</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I get along with people easily</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>asking for help, and show how that was helpful</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I participate in going to the objective</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>by discipline</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>by commitment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>help, offering help</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>suggesting a plan, or getting one and show us the way</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I am commited</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I push toward commitment and completion of tasks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>share knowledge and how to get it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="6">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce247" office:value-type="string" calcext:value-type="string">
      <text:p>faire and nice but can intimidate others and not easily intimidated and show confidence</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce247" office:value-type="string" calcext:value-type="string">
      <text:p>indicate the desire to influence the thinking of others</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce247"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="8">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>waterJet</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>JET anchor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce248" office:value-type="string" calcext:value-type="string">
      <text:p>which language is used for unit testing ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce248" office:value-type="string" calcext:value-type="string">
      <text:p>which tool is used for black box testing / unit testing?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce249" office:value-type="string" calcext:value-type="string">
      <text:p>What is the reason for the position, why is the company expanding? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce249" office:value-type="string" calcext:value-type="string">
      <text:p>How many people are in the team, is it a matrix of different engineering professions? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce249" office:value-type="string" calcext:value-type="string">
      <text:p>What kind of training program is in place, is there a chance to learn new technical skills?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="1048257">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="interview2" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Courage / Persuasion</text:span>: This is your ability to increase your</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>determination to get the job done when you are faced with resistance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>or a difficult situation. Show the ability to move people towards a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>commitment to buy or act. Demonstrate that you are fair and nice, but</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>also show that you are aggressive and may even sometimes intimidate</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>others. Don&apos;t be modest. Demonstrate confidence and the fact that</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>you are not easily intimidated. Indicate the desire to influence the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>thinking of others. Show that you can gain agreement from others via</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>logic, alternatives, and emotional appeals.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Beliefs / Ethics</text:span>: This is your capacity to believe strongly in what you</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>do and emphasize service. Indicate LOYALTY so that the Hiring</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Manager knows that you won&apos;t quit after three months – or leave your</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>clients hanging and out of the loop. This quality is key to the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>development of accounts and customer satisfaction. Show that you will</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>act in terms of what is right. Demonstrate that you follow through and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>actually do what you say you will do.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Commitment</text:span>: This is your capacity for becoming dedicated to your</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>work. You should demonstrate a strong belief in what you do.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Demonstrate that you are willing to make a sacrifice for people when</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>appropriate because you are a COMMITTED person. Show a strong</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>responsibility and commitment to not only the Hiring Manager and the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>company, but even more importantly, to customers and clients.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Work Orientation / Stamina: This is your capacity to handle mental</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>intensity and hard work. Indicate the high tempo and speed at which</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>you work, and your capacity for endurance. Show that you invest the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>TIME and ENERGY necessary to get the job done right the first time –</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>consistently.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Interpersonal Skills / Charm</text:span>: This is your capacity to know how</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>and when to get things done with people. Show that you are outgoing</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>and charming, and that you are especially effective in this regard when</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>you have an objective in mind, or need someone to do something.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Demonstrate that you have an intrinsic need to win the approval of</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>others, fit in, and get along. Show that you have the ability to build</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>quick relationships with people.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Discipline</text:span>: Demonstrate that you have inner standards that make you</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>both predictable and productive. Show that you enjoy the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>responsibility of planning and carrying out your own schedule. Indicate</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>that you can motivate yourself to work on a task until completion.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Competitiveness: This is your drive to be better than others. Show</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>that you like to compete and have the desire to win, and show the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>maturity of knowing how this benefits everyone.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Focus</text:span>: This is your ability to determine what is important, set</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>priorities for tasks, and maintain direction. Show that you understand</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how to set short and long-term objectives, and how to intelligently</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>schedule these objectives so that you hit your goals and complete</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tasks on time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Big Picture Thinking: This is your ability to see the big picture, and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>not get bogged down in the minutia of small tasks. Demonstrate a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tendency toward project closure. Show your ability to see &quot;the real</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>goal&quot; and what it takes to get there.</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="TCP IP" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co23" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Socket is an end point of communication between two systems on a network.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>a socket is a combination of IP address and port on one system.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>A combination of local socket and the socket at the remote system is also known a ‘Four tuple’ or ‘4-tuple’. Each connection between two processes running at different systems can be uniquely identified through their 4-tuple.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>the communication over the network in TCP/IP model takes place in form of a client server architecture. ie, the client begins the communication and server follows up and a connection is established.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>Bandwidth vs latency</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro10">
      <table:table-cell/>
      <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string"><text:p>Bandwidth is the amount of data that passes through a network connection over time as measured in bits per second (bps).</text:p><text:p><text:span text:style-name="T85">the theoretical peak bandwidth of a network connection is fixed according to the technology used, </text:span></text:p><text:p><text:span text:style-name="T85">the actual bandwidth you will obtain varies over time and is affected by high latencies.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro10">
      <table:table-cell/>
      <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T85">In Satellite Internet connections, </text:span>This high latency is due primarily to propagation delay as the request message travels at the speed </text:p><text:p>of light to the distant satellite station and back to the home network. </text:p><text:p>Once the messages arrive on Earth, however, the page loads quickly like on other high-bandwidth Internet connections (DSL or cable).</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro53">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string"><text:p>Very often, latency is measured by the time it takes a given network packet to travel from source to destination and back, </text:p><text:p>The so-called round-trip time.</text:p><text:p>So a packet comes back ? Or is the acknowledgement is what is refered to here.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce199" office:value-type="string" calcext:value-type="string">
      <text:p>packet delivery time or latency</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>The packet delivery time or latency is the time from the first bit leaves the transmitter until the last is received.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce199" office:value-type="string" calcext:value-type="string">
      <text:p>The transmission time vs the propagation delay</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce253" office:value-type="string" calcext:value-type="string"><text:p>(<text:span text:style-name="T86">http://en.wikipedia.org/wiki/Transmission_time</text:span>)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro11">
     <table:table-cell/>
     <table:table-cell table:style-name="ce254" office:value-type="string" calcext:value-type="string"><text:p>The transmission time should not be confused with the propagation delay, which is the time it takes for the first bit to travel from the sender</text:p><text:p> to the receiver (During this time the receiver is unaware that a message is being transmitted).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce255" office:value-type="string" calcext:value-type="string">
      <text:p>For all practical purposes you should view TCP receiving as composed of two independent processes:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce255" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the OS receives the TCP data and ACKs it to the other side, storing it in an internal kernel buffer that&apos;s not accessible to your process</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce255" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>when you recv or any equivalent system call, the OS copies the data from its internal buffers to your userspace buffer</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>Tcp connection establishment</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>client sends SYN (a segment with the SYN bit set but no ACK bit set)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>server sends SYN, ACK</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>client sends ACK</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>connection is established and communication starts</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>for every set of packets received, an ACK is sent with <text:span text:style-name="T85">an acknowledgement number field which identifies the number of the next packet expected</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if server does nt receive it, (it will resend them ?)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>there is <text:span text:style-name="T85">Selective ACK which is used to say &quot;Received bytes 2000-8000, but not 0-2000&quot;</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>The exchanged sequence numbers are used to identify lost packets and enable a retry mechanism, and also to reassemble the entire stream of packets in the correct order.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string">
      <text:p>a message might be split across several packets, and a packet might be split across several datagrams.</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="algo" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co24" table:default-cell-style-name="ce94"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1020" table:default-cell-style-name="ce94"/>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
      <text:p>consider all possible corner cases and handle large input efficiently. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>equi</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
       <text:p>The problem description is very short: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro72" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce256" office:value-type="string" calcext:value-type="string"><text:p>The equilibrium index of a sequence is an index such that the sum of elements at lower indexes is equal to the sum of elements at higher indexes. </text:p><text:p>For example, in a sequence A: A[0]=-7 A[1]=1 A[2]=5 A[3]=2 A[4]=-4 A[5]=3 A[6]=0 </text:p><text:p>3 is an equilibrium index, because: A[0]+A[1]+A[2]=A[4]+A[5]+A[6] </text:p><text:p>6 is also an equilibrium index, because: A[0]+A[1]+A[2]+A[3]+A[4]+A[5]=0 (The sum of zero elements is zero) </text:p><text:p>7 is not an equilibrium index - because it is not a valid index of sequence A. </text:p><text:p>If you still have doubts, here is a precise definition: The integer k is an equilibrium index of a sequence A[0],A[1]..,A[n-1] if and only if 0&lt;= k and sum(A[0..(k-1)])=sum(A[(k+1)..(n-1)]).</text:p><text:p> Assume the sum of zero elements is equal to zero. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce75"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p>Write a function int equi(int A[], int n)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p>that, given a sequence, returns its equilibrium index (any) or -1 if no equilibrium index exists. Assume that the sequence may be very long. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p>The problem can be solved by using various approaches, the most common being simply to follow the equilibrium definition: int equi ( int A[], int n ) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>int k, m, lsum, rsum; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>for(k = 0; k &lt; n; ++k) { </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>lsum = 0; rsum = 0;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>for(m = 0; m &lt; k; ++m) lsum += A[m]; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>for(m = k + 1; m &lt; n; ++m) rsum += A[m]; <text:s/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>if (lsum == rsum) return k;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>} </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return -1; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p>} </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p>Unfortunately, this approach has two disadvantages: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p>it fails on large input data sets, since the time complexity is O(n2)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p>it fails on large input values (for example if the input array contains values like MIN/MAX_INT) due to the arithmetic overflows</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string"><text:p>The solution analysis will detect such problems in submitted code: <text:a xlink:href="http://2.bp.blogspot.com/-WDjJJe0jmPk/TYtNqBYsPuI/AAAAAAAAEXU/I5zXmp4hB9g/s1600/equi-n2-analysis.png" xlink:type="simple"> </text:a> We can fix the first problem with a better algorithm, and the second problem with a better data-type (for example, using long long type instead of int for sum computations). The key observation for better running time is to update the left/right sums in constant time instead of recomputing them from the scratch. int equi(int arr[], int n) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>if (n==0) return -1; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>long long sum = 0;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>int i; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>for(i=0;i&lt;n;i++) sum+=(long long) arr[i]; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>long long sum_left = 0; <text:s text:c="3"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>for(i=0;i&lt;n;i++) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>long long sum_right = sum - sum_left - (long long) arr[i];</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>if (sum_left == sum_right) return i;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>sum_left += (long long) arr[i];</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>} </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return -1; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p>} </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string">
       <text:p>Using this solution, you can obtain a perfect score:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://1.bp.blogspot.com/-aurgu30cezk/TYtP-8IEl_I/AAAAAAAAEXc/2VgowR675iY/s1600/equi-n-analysis.png" xlink:type="simple"> </text:a></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce209"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce209"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce258" office:value-type="string" calcext:value-type="string">
      <text:p>an arithmetic progression :</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce209" office:value-type="string" calcext:value-type="string">
      <text:p>1 3 5 7 9 11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce209" office:value-type="string" calcext:value-type="string">
      <text:p>the step d is constant (2 in the example below)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro72">
     <table:table-cell/>
     <table:table-cell table:style-name="ce209" office:value-type="string" calcext:value-type="string"><text:p>To find the Xn which is the nth element in an AP use the fomula : Xn = a + d(n-1)</text:p><text:p>Where </text:p><text:p>_a : is the first element in the sequence</text:p><text:p>_d: is the constance difference</text:p><text:p>_n is index of the element wanted </text:p><text:p/><text:p>1+2(4-1) = 1 + 2*3 = 7</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>The sum is = a + (a+d) + (a+2d) + (a+3d) + …</text:p><text:p>The sum is = n/2 ( 2a + (n-1)d )</text:p><text:p>Where n is the number of elements</text:p><text:p>Ex:</text:p><text:p>The sum of the serie above is: </text:p><text:p>6/2 ( 2 + (5)2 ) = 36</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>To find the step : <text:s/>(lastnumber – firstnumber) / n-1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>the sum of 0, 1, 2, 3, 4 … n </text:p><text:p>= n*(n-1)/2, which is a special case of the one used for arithmetic progression above</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>double const → int :</text:p><text:p>Int rrr = 1.e6;</text:p><text:p>Cout &lt;&lt; &quot;, 0x&quot; &lt;&lt; hex &lt;&lt; rrr &lt;&lt;&quot;, &quot;&lt;&lt; dec &lt;&lt; rrr &lt;&lt; endl; </text:p><text:p><text:span text:style-name="T14">0xf4240, 1000000</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce259"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>conversion</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro33" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string"><text:p>2- isn&apos;t this an issue? setting a long value into an uint32 var ? what if this code is run in a machine where long is 64 bits ?</text:p><text:p><text:span text:style-name="T87">static const Poco::UInt32 TRANSACTION_REPEATABLE_READ = 0x00000004L;</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce261"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce97"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
       <text:p>No. It&apos;s called a &quot;narrowing conversion&quot;, and it&apos;s perfectly legal. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
       <text:p>If the value (4 in this case) can be represented by the destination type, it&apos;s going to be stored.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro65" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string"><text:p>If it can&apos;t be stored (exceeds the range of the destination type), then the behavior is implementation-defined.</text:p><text:p>G++ issues warning</text:p><text:p><text:span text:style-name="T14">warning: overflow in implicit constant conversion [-Woverflow]</text:span></text:p><text:p><text:span text:style-name="T14">  char tt= 1000;</text:span></text:p><text:p><text:span text:style-name="T14">           ^</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro59" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>&quot;narrowing conversion&quot; is illegal in an array:</text:p><text:p>error: narrowing conversion of ‘-1.0e+6’ from ‘double’ to ‘int’ inside { } [-Wnarrowing]</text:p><text:p>  int array[]={11,9,7,5,3,1,-1.e6};</text:p><text:p>                                      ^</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
       <text:p>(msdn) Narrowing conversions are conversions that cannot be proved to always succeed, conversions that are known to possibly lose information, and conversions across domains of types sufficiently different to merit narrowing notation.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce262" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any type to a more derived type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Numeric type conversions in the following direction: Double, Single, Decimal, Long, Integer, Short, Byte. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce262" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from Boolean to any numeric type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce262" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any numeric type to Boolean.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro33" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce262" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any numeric type to any enumerated type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any enumerated type to any type its underlying type has a narrowing conversion to.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any enumerated type to any other enumerated type. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any class type to any interface type, provided the class type does not implement the interface type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any interface type to any class type. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any interface type to any value type that implements the interface type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any interface type to any other interface type, provided there is no inheritance relationship between the two types.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from an array type S with an element type SE, to a covariant-array type T with an element type TE, provided that all of the following are true: </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>S and T differ only in element type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Both SE and TE are reference types.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>A narrowing reference conversion exists from SE to TE.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from String to Char.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from String to Char().</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from String to Boolean and from Boolean to String.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions between String and Byte, Short, Integer, Long, Decimal, Single, or Double.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from String to Date and from Date to String.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce260"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce264"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
       <text:p>msdn: Widening conversions never overflow but may entail a loss of precision.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce262" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any derived type to one of its base types.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Numeric type conversions in the following direction: Byte, Short, Integer, Long, Decimal, Single, Double. Conversions from Integer to Single, Long to Single or Double, or Decimal to Single or Double may cause a loss of precision, but will never cause a loss of magnitude. The other widening numeric conversions never lose any information.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce262" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from the literal Nothing to any type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce262" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from the literal 0 to any enumerated type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any enumerated type to its underlying type, or to any type that its underlying type has a widening conversion to.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any reference or value type to an interface type that the value or reference type implements.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from an array type S with an element type SE to a covariant-array type T with an element type TE, provided all of the following are true: </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>S and T differ only in element type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Both SE and TE are reference types.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>A widening reference conversion exists from SE to TE.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from Char to String.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from Char() to String.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from a constant expression of type Long, Integer, Short, or Byte to a narrower type, provided the value of the constant expression is within the range of the destination type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce260"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce265" office:value-type="string" calcext:value-type="string">
      <text:p>techniques</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
       <text:p>Question 1: construct a number in the inverse order of another.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
       <text:p>Question 6</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
       <text:p>to find duplicate objects in an array, series, … use </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
        <text:p>Sorting o(nlogn), </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
        <text:p>hashtable o(n) to accommodate the hash table</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
        <text:p>put numbers in the index they correspond to: value 1 goes to array[1], and so on</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce266"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce266"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce267" office:value-type="string" calcext:value-type="string">
       <text:p>Question 7-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
       <text:p>going from a 2d array to an 1d array.(already know it) question 7 goes from 1d to 2d array</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce267"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
       <text:p>Question 8-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
       <text:p>binary search in a diagonal way. complexe way = the common way of doing binary search + in a non-linear array</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce266"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce267" office:value-type="string" calcext:value-type="string">
       <text:p>Question 17-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
       <text:p>get the number of elements in a loop list</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce266"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
       <text:p>Question 83-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
       <text:p>use the binary search algo to find the first and last occurence of an element in a sorted array, then substract the first occurence&apos;s index from the last occurence&apos;s index to get the number of occurences.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
       <text:p>instead of using it just to find the element and linearly search on the left and on the right for the other occurences.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce75"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce268" office:value-type="string" calcext:value-type="string">
       <text:p>Greedy Algorithm (codility lessons)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>For a given set of denominations, you are asked to find the minimum number of coins with which a given amount of money can be paid.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>That problem can be approached by a greedy algorithm that always selects the largest denomination not exceeding the remaining amount of money to be paid.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>As long as the remaining amount is greater than zero, the process is repeated.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>A correct algorithm should always return the minimum number of coins. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce269" office:value-type="string" calcext:value-type="string">
        <text:p>It turns out that the greedy algorithm is correct for only some denomination selections, but not for all.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro33" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>For example, for coins of values 1, 2 and 5 the algorithm returns the optimal number of coins for each amount of money, </text:p><text:p>But for coins of values 1, 3 and 4 the algorithm may return a suboptimal result.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>An amount of 6 will be paid with three coins: 4, 1 and 1 by using the greedy algorithm. The optimal number of coins is actually only two: 3 and 3.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>The greedy algorithm for finding change:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro12" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce270" office:value-type="string" calcext:value-type="string"><text:p>def greedyCoinChanging(M, k):</text:p><text:p>     n = len(M)</text:p><text:p>     result = []</text:p><text:p>     for i in xrange(n - 1, -1, -1):</text:p><text:p>         result += [(M[i], k // M[i])]</text:p><text:p>         K %= M[i]</text:p><text:p>return result</text:p><text:p/>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro21" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string"><text:p>The function returns the list of pairs: denomination, number of coins. </text:p><text:p>The time complexity of the above algorithm is O(n) as the number of coins is added once for every denomination.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
       <text:p>dynamic programming (codility lessons)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
        <text:p>Enumeration of the Fibonacci numbers can be done faster simply by using a basis of dynamic programming. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
        <text:p>We can calculate the values F 0 , F 1 , . . . , F n based on the previously calculated numbers (it is sufficient to remember only the last two values).</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
        <text:p>Faster algorithms for Fibonacci numbers</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string"><text:p>1  1 ^ n</text:p><text:p>1  0</text:p><text:p/><text:p>Or</text:p><text:p>Fibn = ((1+sqrt(5)/2)^n – (1-sqrt(5)/2)^n) / sqrt(5)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="Default"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce268" office:value-type="string" calcext:value-type="string">
       <text:p>counting numbers</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro72" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>A numerical sequence can be stored in an array in various ways. In the standard approach, the consecutive numbers a 0 , a 1 , . . . , a n−1 are usually put into the corresponding consecutive</text:p><text:p>indices of the array:</text:p><text:p>A[0] = a 0</text:p><text:p>A[1] = a 1</text:p><text:p>...</text:p><text:p>A[n − 1] = a n−1</text:p><text:p/>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>We can also store the data in a slightly different way, by making an array of counters. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro33" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string"><text:p>Each number may be counted in the array by using an index that corresponds to the value of the given number.</text:p><text:p>It is important that the array in which we count elements is sufficiently large.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>Counting the number of negative integers can be done in two ways. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>The first method is to add some big number to each value: so that, all values would be greater than or equal to zero.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
        <text:p>In the second method, we simply create a second array for counting negative numbers.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="10">
       <table:table-cell/>
       <table:table-cell table:style-name="ce75"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce75"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
       <text:p>Sums – prefix</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
       <text:p>There is a simple yet powerful technique that allows for the fast calculation of sums of elements in given slice (contiguous segments of array).</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="6">
      <table:table-cell/>
      <table:table-cell table:style-name="ce75"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce97"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce271" office:value-type="string" calcext:value-type="string">
      <text:p>Questions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce271" office:value-type="string" calcext:value-type="string">
      <text:p>numbers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
       <text:p>Question 1-Please implement a function that checks whether a positive number is a palindrome or not. For example, 1342431 is a palindrome, but 123 is not.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce264"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
       <text:p>Question 5 An array contains nnumbers ranging from 0 to n-2. There is exactly one number duplicated in the array. How do you find the duplicated number? For example, if an array with length 5 contains numbers {0, 2, 1, 3, 2}, the duplicated number is 2.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce264"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
       <text:p>Question 6</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
       <text:p>An array contains n numbers ranging from 0 to n-1. There are some numbers duplicated in the</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
       <text:p>array. It is not clear how many numbers are duplicated or how many times a number gets duplicated. How do you</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>find a duplicated number in the array? For example, if an array of length 7 contains the numbers </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{2, 3, 1, 0, 2, 5, 3}, the implemented function (or method) should return either 2 or 3.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>matrix</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Question 7-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Question 8-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="5">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>string</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Question 9</text:p><text:p>Please implement a function to replace each blank in a string with “%20”. For instance, it outputs “We%20are%20happy.” if the input is “We are happy.”.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Question 10</text:p><text:p>Given two sorted arrays, denoted as array1 and array2, please merge them into array1 and keep the merged array sorted. Suppose there is sufficient vacant memory at the end of array1 to accommodate elements of array2.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>question 10-merge two sorted arrays. there is sufficient vacant memory at the end of array1to accommodate elements of array2.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>question 13-print a list from tail to head</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>question 14-sort a list. Takes O(n^2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>question 15-merge two sorted lists</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>question 16-check if there is a loop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>question 17-find the entry in a loop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>question 43-delete a node, passed as parameter ( so we have the next element), from a list in average O(1)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>question 44-delete duplicated numbers and only leave unique ones.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
      <text:p>question 47-return the nth node from the tail of a list </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
      <text:p>Question 48 Please implement a function to reverse a list. Without stack. Just pointer usage</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
      <text:p>Question 49 How do you design an algorithm to reverse every k nodes in a list? A list is divided into several </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>groups, and each group has knodes except the last group, where the number of nodes may be less than k. Please </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>reverse the nodes in each group and connect all groups together. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>For example, when groups with three nodes are reversed in the list of Figure 5-8(a), it becomes the list in Figure </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>5-8(b). </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce273" office:value-type="string" calcext:value-type="string">
      <text:p>Question 54 Please implement a function to clone a complex list.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce273" office:value-type="string" calcext:value-type="string">
      <text:p>Question 82 Please find the first common node of two single-linked lists if they intersect with each other.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>hbf-in-order and pre-order traversal of a search binary tree </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>hbf-unable to code post-order or breath-first traversal</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>question 19-verify that a BST is really one</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>question 18-get the next node in a BST in the in-order traversal sequence. each node contains a pointer to its parent.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>get the next node in a BST in the *-order traversal sequence. add any contraints or assumptions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro72">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 20 Please implement a function to get the largest size of all binary search subtrees in a given binary tree. A subtree inside a tree tis a tree consisting of a node and all of its descendants in t. The size of a tree is defined as the number of nodes in the tree. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the largest binary search subtree in the binary tree of Figure 3-14 contains three nodes, which are node 9, node 8, and node 10. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce275" office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce275" office:value-type="string" calcext:value-type="string">
      <text:p>6 9</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce275" office:value-type="string" calcext:value-type="string">
      <text:p>5 8 10</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce275"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>Question 1xxx – place a tree nodes in a array. Like in heapsort.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Question 84- How do you get the k th node in a binary search tree in an incremental order of values?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Question 85- How do you get the depth of a binary tree? (the maximum length of all paths.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Question 86- How do you verify whether a binary tree is balanced? If the depth difference between a left subtree and right subtree of any node in a binary tree is not greater than 1, it is balanced.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>interview cases: Lowest Common Parent Node in a Tree</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Question 50- Given two binary trees, please check whether one is a substructure of the other. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Question 51- Given a binary tree, how do you get its mirrored tree?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Question 52- Please implement a function to verify whether a binary tree is symmetrical.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>Question 57- Please print a binary tree from its top level to bottom level, and print nodes at the same level from left to right. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>Question 58- How do you print a binary tree by level, in top down order, with each level in a line? Nodes in a </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>level should be printed from left to right. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>Question 59- How do you print a binary tree by level in zigzag order, each level in a line?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Question 60- Given a binary tree and an integer value, please print all paths where the sum of node values equals the given integer.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Question 61 Please build a binary tree with a pre-order traversal sequence and an in-order traversal sequence. All elements in these two given sequences are unique.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string">
      <text:p>Question 62 How do you serialize and deserialize binary trees?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Question 63 Please check whether it is possible for an array to be the post-order traversal sequence of a binary search tree. All numbers in the input array are unique.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Question 64 How do you convert a binary search tree into a sorted double-linked list without creating any new nodes? It is only allowed that you can reconnect links between existing nodes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>question 23-fibonacci sequence. traightforward (mathmatical function)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>question 23.1-algo for a^n in O(log2(n))</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>question 24-fibonacci sequence. disguised (a frog jumps 1 or 2 stairs at a time. how many way are there for it to jump n stairts)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>question 25-fibonacci sequence. disguised </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>question 26-fibonacci sequence. disguised (how many approcahes are there to cover a 2x8 rectangle with a 2x1 rectangle)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>question 30-backtracking: find the path of a string in a matrix.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>question 31-backtracking: movement of a robot.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>question 32-dynamic programming: edit distance of a string compared to a second string</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>question 33-backtracking: minimal number of coins for change</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 34 Please design an efficient algorithm to lay out cells on phone keyboards in order to minimize key presses. (greedy algo)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 72 dynamic programming: Given an integer array containing positive and negative numbers, how do you get the maximum sum of its sub-arrays? Continuous numbers form a sub-array of an array. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the input array is {1, -2, 3, 10, -4, 7, 2,-5}, the sub-array with the maximum sum is {3, 10, -4, 7, 2} whose sum 18. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro72">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 97 dynamic programmingYou are required to sort ncards numbered from 1 to n. You can choose one card and move it to any place you want (insert to any place, not swap). Given a sequence, please implement a function to return the minimum move count to sort these cards. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro72">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, given a sequence {1, 2, 5, 3, 4, 7, 6}, you can move 5 and insert it between 4 and 7, and the sequence becomes {1, 2, 3, 4, 5, 7, 6}. This is one move. If 7 is moved behind 6, the whole sequence gets sorted. Therefore, it needs two steps at least to sort cards in the sequence of {1, 2, 5, 3, 4, 7, 6}.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro72">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 81 If an element at the left side is greater than another element at the right side, they form a reversed pairin an array. How do you get a count of reversed pairs? For example, there are five reversed pairs in the array {7, 5, 6, 4}, which are (7, 5), (7, 6), (7, 4), (5, 4), and (6, 4). </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 90 Given a positive value s, print all sequences with continuous numbers (with two numbers at least) whose sum is s. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>Take the input s=15 as an example. Because 1+2+3+4+5=4+5+6=7+8=15, three continuous sequences should be printed: 1~5, 4~6, and 7~8.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>Question 69-How do you find the median from a stream of numbers?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>Question 70- the smallest k numbers (in value) out of n numbers. (solved with the partition method that is used in quicksort)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>General</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 9- Please implement a function to replace each blank in a string with “%20”. For instance, it outputs “We%20are%20happy.” if the input is “We are happy.”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro73">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 27 When some elements at the beginning of an array are moved to the end, it becomes a rotation of the original array. Please implement a function to get the minimum number in a rotation of an increasingly sorted array. For example, the array {3, 4, 5, 1, 2} is a rotation of array {1, 2, 3, 4, 5}, of which the minimum is 1. (can be solved using Binary Search algo in Partially Sorted Arrays)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 92 Left rotation of a string is to move some leading characters to its end. Please implement a function to rotate a string to the left. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the input string is “abcdefg” and a number 2, two characters are rotated and the result is “cdefgab”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 28 A turning number is the maximum number in a unimodal array that increases and then decreases. Please write a function (or a method) that finds the index of the turning number in a unimodal array. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the turning number in the array {1, 2, 3, 4, 5, 10, 9, 8, 7, 6} is 10, so its index 5 is the expected output. (can be solved using Binary Search algo )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 29 How do you find the majority element in an array when it exists? The majority is an element that occurs for more than half of the size of the array. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the number 2 in the array {1, 2, 3, 2, 2, 2, 5, 4, 2} is the majority element because it appears five times and the size of the array is 9.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>(solved with the partition method that is used in quicksort)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 40 Please implement the function double Power(double base, int exponent)to raise a number baseto power of exponent. You are not allowed to call library functions, and it is not necessary to take care of overflow issues.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 41 Given a number n, please print all numbers from 1 to the maximum n digit number in order. For example, if the input is 3, it prints 1, 2, 3, …,999, which is the maximum number with three digits. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 42 Please design a function to add two arbitrary positive integers. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 53 Please print a matrix in spiral order, clockwise from outer rings to inner rings. For example, the </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>matrix below is printed in the sequence of 1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5, 6, 7, 11, 10. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>1 2 3 4 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>5 6 7 8 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>9 10 11 12 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>13 14 15 16 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 71 Please implement a function that finds the intersection of two sorted arrays. Assume numbers in each array are unique. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 75 If a number only has factors 2, 3, and 5, it is an ugly number. For example, 6 and 10 are two ugly numbers, but 14 is not because it has a factor of 7. Usually 1 is considered to be the first ugly number. What is the arbitrary kth ugly number? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 91 How do you reverse the order of words in a sentence, but keep words themselves unchanged? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>Words in a sentence are separated by blanks. For instance, the reversed output should be “student. a am I” when the input is “I am a student.”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 96 A circle is composed of nnumbers, 0, 1, …, n-1. The mth number is removed every time, counting from the number 0 for the first removal. What is the last number left? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, a circle is composed of five numbers 0, 1, 2, 3, and 4 (Figure 8-3). If the third number is removed from the circle repeatedly, four numbers are deleted inthe sequence of 2, 0, 4, and 1, and the last number remaining in the circle is 3. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 98 Stock prices are stored in an array in the order of date. How do you get the most profit from a sequence of stock prices? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the most profit to be gained from the sequence of ordered stock prices {9, 11, 5, 7, 16, 1, 4, 2} is 11, bought when the price was 5 and sold when the price was 16.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 99 How do you calculate 1+2+…+nwithout multiplication, division, key words including for, while, if, else, switch, and case, as well as a conditional operator (A?B:C)?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 105 Given an array A[0, 1, …, n-1], please construct an array B[0, 1, …, n-1] in which B[i]=A[0]×A[1]×… ×A[i-1]×A[i+1]×…×A[n-1]. No division should be involved to solve this problem.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Permutations and combinations</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 65 Please print all permutations of a given string. For example, print “abc”, “acb”, “bac”, “bca”, “cab”, and “cba” when given the input string “abc”.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 66 How many distinct ways are available to place eight queens on a chessboard, where there are no two queens that can attack each other? That is to say, there are no two queens located at the same row, same column, or same diagonal. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, a solution in Figure 6-21 places eight queens on an 8×8 chessboard where any queen cannot attack another. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 67 There are narrays. A permutation is generated when an element is selected from each array. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>How do you generate all permutations of narrays? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, permutations for the 3 arrays {1, 2}, {3, 4}, {5, 6} are: {1, 3, 5}, {1, 3, 6}, {1, 4, 5}, {1, 4, 6}, {2, 3, 5}, {2, 3, 6}, {2, 4, 5}, and {2, 4, 6}.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 68 Please generate all combinations of a given string. For example, combinations of a given string “abc” are “a”, “b”, “c”, “ab”, “ac”, “bc”, and “abc”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 73 How many times does the digit 1 occur in the integers from 1 to n ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if nis 12, there are four numbers from 1 to 12 containing the digit 1, which are 1, 10, 11, and 12, and the digit 1 occurs five times. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 74 Big numbers can be formed if numbers in an array are concatenated together. How do you print the minimum concatenated number of a given array? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the input array is {3, 32, 321}, there are six concatenated numbers and the minimum one is 321323.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>hassan:using a bit operation, how to get the positive value of a signed int/char/short/float/double ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>hassan:how to get the max value of a type using bit operation?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>max value of a positive integer is when all bits are set to 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>max value of a negative integer is when all bits are set to 1 ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>max value of a positive float is when ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>max value of a positive float is when ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>this is a wrong question as the max of positive and negative integer is the same.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>i rather meant all bits set to 1.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>if(the type is unsigned) return 0x111...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>if(the type is signed) return ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>how to express an int type, not a float one ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;- we can define a specialization for float/double. but then all other types, not only integer type, would be used by the general function !</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>bit</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 35 Please implement a function to get the number of 1s in the binary representation of an integer. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the integer 9 is 1001 in binary, so it returns 2 since there are two bits of 1.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 36 Please check whether a number is a power product of 2 in only one C statement. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 37 Given two integers, m and n, please calculate the number of bits in binary that need to be modified to change m to n.For example, the number 10 is 1010 in binary, and 13 is 1101 in binary. We can modify 3 bits of 1010 to get 1101 in binary. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 38 Let’s assume all numbers except two occur twice in an array. How do you get those two numbers to occur only once in O(n) time and O(1) space? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, only two numbers, 4 and 6, in the array {2, 4,3, 6, 3, 2, 5, 5} occur once, and the others numbers occur twice. Therefore, the output should be 4 and 6.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 39 Two numbers out of n numbers from 1 to n are missing. The remaining n-2 numbers are restored in an array, not in any particular order. Please write a method (or a function) to find the missing two numbers. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 101 How do you implement a function for the subtraction operation without utilization of arithmetic </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>+, -, *, and / operators?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 100 How do you implement a function to add two integers without utilization of arithmetic +, -, *, and / operators? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 102 How do you implement a function for the multiplication operation without utilization of arithmetic +, -, *, and / operators?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 103 How do you implement a function to divide an integer by another without utilization of arithmetic +, -, *, and / operators? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Pattern matching</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro74">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 11- How do you implement a function to match regular expressions with ‘.’ and ‘*’ in patterns? The character ‘.’ in a pattern matches a single character, and ‘*’ matches zero or any number of characters preceding it. Matching means that a string fully matches the pattern where all characters in a string match the whole pattern. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the string “aaa” matches the pattern “a.a” and the pattern “ab*ac*a”. However, it does not match the pattern “aa.a” nor “ab*a”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 12- How do you check whether a string stands for a number or not? Numbers include positive and negative integers and floats. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, strings “+100.”, “5e2”, “-.123”, “3.1416”, and “-1E-16” stand for numbers, but “12e”, “1a3.14”,“1.2.3”, “+-5”, and “12e+5.4” do not. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>Arrays:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro73">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 7- In a 2-D matrix, every row is increasingly sorted from left to right, and the last number in each row is not greater than the first number of the next row. A sample matrix follows. Please implement a function to check whether a number is in such a matrix or not. It returns trueif it tries to find the number 7 in the sample matrix, but it returns falseif it tries to find the number 12. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>1 3 5 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>7 9 11 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>13 15 17 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro73">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 8- In a 2-D matrix, every row is increasingly sorted from left to right, and every column is increasingly sorted from top to bottom. Please implement a function to check whether a number is in such a matrix or not. For example, all rows and columns are increasingly sorted in the following matrix. It returns trueif it tries to find number 7, but it returns falseif it tries to find number 5. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>1 2 8 9 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>2 4 9 12 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>4 7 10 13 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>6 8 11 15 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro72">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 45 Please reorder an input array to place all odds before evens. For example, after numbers in the array {1, 2, 3, 4, 5} are reordered, it looks like {1, 5, 3, 4, 2}. The result is not unique, and there are multiple arrays meeting the reordering criteria.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro72">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 46 Given an array and a value, how do you implement a function to remove all instances of that value in place and return the new length of the array? It is not required that you keep the order of the remaining numbers. It doesn&apos;t matter what you leave beyond the new length. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the input array is {4, 3, 2, 1, 2, 3, 6}, the resulting array after removing value 2 contains the numbers {4, 3, 1, 3, 6}, and the new length of the remaining array is 5. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 78 Given two strings, how do you delete characters contained in the second string from the first string? For example, if all characters in the string “aeiou” are deleted from the string “We are students.”, the result is “W r stdnts.”.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce279" office:value-type="string" calcext:value-type="string">
      <text:p>Question 79 Please implement a function to delete all duplicated characters in a string and keep only the first occurrence of each character left. For example, if the input is string “google”, the result after deletion is “gole”. (uses hash table)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 80 If two English words have the same characters and the occurrence number of each character is also identical respectively, they are anagrams. The only difference between a pair of anagrams is the order of characters. For example, “silent” and “listen”, “evil” and “live” are two pairs of anagrams. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>Please implement a function to verify whether two words are a pair of anagrams.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell table:style-name="ce279" office:value-type="string" calcext:value-type="string">
      <text:p>Question 76 Implement a function to find the first character in a string that only appears once. For example, the output is the character ‘l’ when the input is “google”. (uses hash table)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 77 Implement a function to find the first character in a stream that only appears once at any time while reading the stream. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, when the first two characters “go” are read from a stream, the first character which appears once is the character ‘g’. When the first six characters “google” are read, the first character appearing only once is ‘l’. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce280" office:value-type="string" calcext:value-type="string">
      <text:p>Question 83 Please implement a function to find how many times a number occurs in a sorted array.(can be solved using Binary Search algo )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 87 Given an increasingly sorted array and a number s, is there a pair of two numbers in the array whose sum is s?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 88 Given an array, please check whether it contains three numbers whose sum equals 0.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 89 Given an array, please check whether it contains a subset of numbers (with one number at least) whose sum equals 0.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce280" office:value-type="string" calcext:value-type="string">
      <text:p>Numbers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 1-Please implement a function that checks whether a positive number is a palindrome or not. For example, 1342431 is a palindrome, but 123 is not.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>learned idea: construct a number in the inverse order of another.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 5 An array contains nnumbers ranging from 0 to n-2. There is exactly one number duplicated in the array. How do you find the duplicated number? For example, if an array with length 5 contains numbers {0, 2, 1, 3, 2}, the duplicated number is 2.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro73">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 6 An array contains nnumbers ranging from 0 to n-1. There are some numbers duplicated in the array. It is not clear how many numbers are duplicated or how many times a number gets duplicated. How do you find a duplicated number in the array? For example, if an array of length 7 contains the numbers {2, 3, 1, 0, 2, 5, 3}, the implemented function (or method) should return either 2 or 3. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 90 Given a positive value s, print all sequences with continuous numbers (with two numbers at least) whose sum is s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 91 How do you reverse the order of words in a sentence, but keep words themselves unchanged?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>interview cases: Integer Value from a String</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 92 code that if the input string is “abcdefg” and a number 2, two characters are rotated and the result is “cdefgab”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 95 Given a number n, which stands for ndice, please print probabilities of all possible sums of </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>dice points. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if there are two dice, there are two ways to get three points: (1) one die has one point, and the other has two points; and (2) one die has two points, and the other has one. However, there is only one way to get twelve points, with six points on each die. Therefore, the possibility to get three points is higher than to get twelve points with two dice. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>Queue/stack</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 21 Please design a queue with two stacks and implement methods to enqueue and dequeue items.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 22 Please design a stack with two queues and implement the methods to push and pop items.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 94 Define a queue in which we can get its maximum number with a function max. In this stack, the time complexity of max, push_back, and pop_frontare all O(1).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 55 Define a stack in which we can get its minimum number with a function min. The time complexity of min, push, and popon such stacks are all O(1). </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 56 You are given two integer arrays, one of which is a sequence of numbers pushed into a stack (supposing all numbers are unique). Please check whether the other array is a corresponding sequence popped from the stack. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the pushing sequence is {1, 2, 3, 4, 5}, the sequence {4, 5, 3, 2, 1} is a corresponding popping sequence, but {4, 3, 5, 1, 2} is not. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 93 Given an array of numbers and a sliding window size, how do you get the maximum numbers in all sliding windows? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the input array is {2, 3, 4, 2, 6, 2, 5, 1} and the size of the sliding windows is 3, the output of maximums are {4, 4, 6, 6, 6, 5}, as illustrated in Table 8-3. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>probabilities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 95 Given a number n, which stands for ndice, please print probabilities of all possible sums of dice points. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if there are two dice, there are two ways to get three points: (1) one die has one point, and the other has two points; and (2) one die has two points, and the other has one. However, there is only one way to get twelve points, with six points on each die. Therefore, the possibility to get three points is higher than to get twelve points with two dice. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 104 Please design a class in C++ that cannot be inherited.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
      <text:p>Question 4 There are three threads in a process. The first thread prints 1 1 1 …, the second one prints 2 2 2 …, and the third one prints 3 3 3 … endlessly. How do you schedule these three threads in order to print 1 2 3 1 2 3 …? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>solutions indications:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 7- binary search </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce271" office:value-type="string" calcext:value-type="string">
      <text:p>technics:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 7-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>going from a 2d array to an 1d array.(already know it)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>question 7 goes from 1d to 2d array</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 8-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>binary search in a diagonal way. complexe way. the general way of doing binary search (in a non-linear array)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 17-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>get the number of elements in a loop list</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string">
      <text:p>Question 83-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>use the binary search algo to find the first and last occurence of an element in a sorted array, then substract the first occurence&apos;s index from the last occurence&apos;s index to get the number of occurences. This takes O(log n)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>instead of using it just to find the element and linearly search on the left and on the right for the other occurences. This might take up to O(n)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">question 13</text:span>-print a list from tail to head. This can be solve with a stack. This takes O(n) space. </text:p><text:p>But since <text:span text:style-name="T80">A recursion is equivalent to stack</text:span>. Recusive function solves the problem. The draw back is the possiblity of a stack over flow.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>Question 1xxx – place a tree nodes in a array. Like in heapsort.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string"><text:p>Solution 1: Recursive function receiving a node and an idex.</text:p><text:p>Make sure the index does n&apos;t go beyond the array size</text:p><text:p>Using formula that yields the children indeces from a given I, call the function with each child and its corresponding index</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string"><text:p>Ix2+1</text:p><text:p><text:span text:style-name="T40">Ix2+2</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string"><text:p>I x3+1</text:p><text:p><text:span text:style-name="T40">I x3+2</text:span></text:p><text:p><text:span text:style-name="T40">I x3+3</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>Solution 2: using a stack, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro74">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string"><text:p>ProcessStack()</text:p><text:p>{</text:p><text:p>n=pop from queue();</text:p><text:p>If(n==null) return;</text:p><text:p>array[++i]=n→v;</text:p><text:p>if(n→L) push in queue(n-&gt;L);</text:p><text:p><text:span text:style-name="T40">if(n→R) push in queue(n-&gt;R);</text:span></text:p><text:p><text:span text:style-name="T40">ProcessStack();</text:span></text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>question xxx2: in a BST, print each depth first before going to the next depth</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro74">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string"><text:p>go()</text:p><text:p>{</text:p><text:p>n=pop from queue();</text:p><text:p>If(n==null) return;</text:p><text:p>Print n-&gt;v;</text:p><text:p>if(n→L) push in queue(n-&gt;L);</text:p><text:p><text:span text:style-name="T40">if(n→R) push in queue(n-&gt;R);</text:span></text:p><text:p><text:span text:style-name="T40">Go();</text:span></text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce281" office:value-type="string" calcext:value-type="string">
      <text:p>6.6 technics</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>-to solve a problem, think of:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>simplest solution</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>data structures : list, queue, stack, tree, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>sorting algos</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>dynamic programming, backtracking</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>brute force</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>analyse the pattern of data deleted, added, ...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>tricks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>-to indicate the range in/of an array, it is better to indicate A[startingelement] and A[startingelement+nbrelemts] as the end</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>instead of A[0] and A[startingelement+nbrelemts-1].</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>in the receiving function:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>__len = __last - __first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>lastelemtindex=(__last - __first) - 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>lastelemntvalue:_ValueType __value = (*(__last - 1))</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>instead of </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>__len = __last - __first+1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>lastelemtindex=(__last - __first)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>lastelemntvalue:_ValueType __value = (*(__last ))</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>No it does not offer that much benefits. it is just that it is more STL-coherent </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>O(n)+O(n*log n) = O(n*log n)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>the first term is dominated by the second</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>R:Given a series of for loops that are sequential, the slowest of them determines the asymptotic behavior of the program.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>R:Two nested loops followed by a single loop is asymptotically the same as the nested loops alone, because the nested loops dominate the simple loop.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>-an algo that runs n+(n-1)+...+1, is said to be O(n2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>-to get the complexity of algos I find, compare them to known sorting algos </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>-go through sorting algos or the technics they use to find the solution that best solves the problem at hand</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>-be open to all solutions, even the weird ones, even the heavy/bad ones</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>-AVL rebalancing, the node with the middle value is put as root</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>- 2 to the power of n is 1&lt;&lt;n. thus it is O(1)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>- a to the power of n is O(nlog(n)) using </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>a^(n/2).a^(n/2) when n is even</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>a^(n/2).a^(n/2).a when n is odd</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>-The time efficiency on average for an algo is the sum of the time is takes for each member of the data divided by n. for instance:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>for n-1 elements, it takes O(1) to do an operation. but for one element only (could be the last one, the first, in the middle, ...) it takes O(n) to do the operation. So The time efficiency on average is [(n-1)×O(1)+O(n)]/n, and so is O(1). </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>-countSort is a sorting algo in O(n) see page 83 in Coding interviews</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>it reads the array once and then it writes it once.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>So for some kind of data, we can find our own sorting algo.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce281" office:value-type="string" calcext:value-type="string">
      <text:p>6.7 strategies</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>delete a series of elements from a list.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
      <text:p>Q44 in Coding interviews</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce282"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce284"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce99"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce99"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce99"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="1048016">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
   </table:table>
   <table:table table:name="tosave" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>/home/hassan4/data4/trainingGame</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>videoa trainig+pirates code</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="protocols" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>browser formats text, receives click events on hyperlinks, send out a data with the link to resource</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tcpip adds data to it and forwards it to other component</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:named-expressions/>
  </office:spreadsheet>
 </office:body>
</office:document>