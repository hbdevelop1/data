<?xml version="1.0" encoding="UTF-8"?>

<office:document xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:presentation="urn:oasis:names:tc:opendocument:xmlns:presentation:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:config="urn:oasis:names:tc:opendocument:xmlns:config:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:grddl="http://www.w3.org/2003/g/data-view#" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:drawooo="http://openoffice.org/2010/draw" xmlns:calcext="urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0" xmlns:loext="urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" xmlns:formx="urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0" xmlns:css3t="http://www.w3.org/TR/css3-text/" office:version="1.2" office:mimetype="application/vnd.oasis.opendocument.spreadsheet">
 <office:meta><meta:creation-date>2016-02-03T00:11:04.989869140</meta:creation-date><meta:editing-duration>P15DT3H43M21S</meta:editing-duration><meta:editing-cycles>2064</meta:editing-cycles><meta:generator>LibreOffice/5.0.2.2$Linux_X86_64 LibreOffice_project/00m0$Build-2</meta:generator><dc:date>2016-06-13T11:48:28.884368265</dc:date><meta:document-statistic meta:table-count="34" meta:cell-count="6381" meta:object-count="6"/><meta:user-defined meta:name="qrichtext">1</meta:user-defined></office:meta>
 <office:settings>
  <config:config-item-set config:name="ooo:view-settings">
   <config:config-item config:name="VisibleAreaTop" config:type="int">451</config:config-item>
   <config:config-item config:name="VisibleAreaLeft" config:type="int">2257</config:config-item>
   <config:config-item config:name="VisibleAreaWidth" config:type="int">24374</config:config-item>
   <config:config-item config:name="VisibleAreaHeight" config:type="int">649700</config:config-item>
   <config:config-item-map-indexed config:name="Views">
    <config:config-item-map-entry>
     <config:config-item config:name="ViewId" config:type="string">view1</config:config-item>
     <config:config-item-map-named config:name="Tables">
      <config:config-item-map-entry config:name="C#">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">102</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">23</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">79</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="C# faq">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="C++ faq">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille10">
       <config:config-item config:name="CursorPositionX" config:type="int">5</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">6</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille14">
       <config:config-item config:name="CursorPositionX" config:type="int">11</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">8</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">1</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="Feuille4">
       <config:config-item config:name="CursorPositionX" config:type="int">2</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">17</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="SQL">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">181</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">200</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="STL algo">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">357</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">353</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="STL iterator">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">255</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">249</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="TCP IP">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">93</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">71</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="TDD BDD">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">15</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="algo">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">8</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="algo-hashtable">
       <config:config-item config:name="CursorPositionX" config:type="int">2</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">42</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">29</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="bits">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">4</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="books">
       <config:config-item config:name="CursorPositionX" config:type="int">5</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">6</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="c++ idioms">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="c++ ref">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">1812</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">1789</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="c++ ref update">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">32</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">32</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="cheatSheet">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">15</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="embedded">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">101</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">95</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="gcc">
       <config:config-item config:name="CursorPositionX" config:type="int">4</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">26</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="interview2">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">74</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">54</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="interview_tests">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="interviews">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">13</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="ios">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">64</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">48</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="ios faq">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">220</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">192</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="ios faq2">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">42</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="multithreading">
       <config:config-item config:name="CursorPositionX" config:type="int">1</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">457</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">457</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="oodesign">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">398</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">370</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="optim">
       <config:config-item config:name="CursorPositionX" config:type="int">4</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">0</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="protocols">
       <config:config-item config:name="CursorPositionX" config:type="int">9</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">16</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="tester job description">
       <config:config-item config:name="CursorPositionX" config:type="int">0</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">92</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="time management">
       <config:config-item config:name="CursorPositionX" config:type="int">2</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">24</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">9</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
      <config:config-item-map-entry config:name="tosave">
       <config:config-item config:name="CursorPositionX" config:type="int">3</config:config-item>
       <config:config-item config:name="CursorPositionY" config:type="int">2</config:config-item>
       <config:config-item config:name="HorizontalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="VerticalSplitMode" config:type="short">0</config:config-item>
       <config:config-item config:name="HorizontalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="VerticalSplitPosition" config:type="int">0</config:config-item>
       <config:config-item config:name="ActiveSplitRange" config:type="short">2</config:config-item>
       <config:config-item config:name="PositionLeft" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionRight" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionTop" config:type="int">0</config:config-item>
       <config:config-item config:name="PositionBottom" config:type="int">0</config:config-item>
       <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
       <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
       <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
       <config:config-item config:name="ShowGrid" config:type="boolean">true</config:config-item>
      </config:config-item-map-entry>
     </config:config-item-map-named>
     <config:config-item config:name="ActiveTable" config:type="string">oodesign</config:config-item>
     <config:config-item config:name="HorizontalScrollbarWidth" config:type="int">1343</config:config-item>
     <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
     <config:config-item config:name="ZoomValue" config:type="int">95</config:config-item>
     <config:config-item config:name="PageViewZoomValue" config:type="int">60</config:config-item>
     <config:config-item config:name="ShowPageBreakPreview" config:type="boolean">false</config:config-item>
     <config:config-item config:name="ShowZeroValues" config:type="boolean">true</config:config-item>
     <config:config-item config:name="ShowNotes" config:type="boolean">true</config:config-item>
     <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
     <config:config-item config:name="GridColor" config:type="long">12632256</config:config-item>
     <config:config-item config:name="ShowPageBreaks" config:type="boolean">true</config:config-item>
     <config:config-item config:name="HasColumnRowHeaders" config:type="boolean">true</config:config-item>
     <config:config-item config:name="HasSheetTabs" config:type="boolean">true</config:config-item>
     <config:config-item config:name="IsOutlineSymbolsSet" config:type="boolean">true</config:config-item>
     <config:config-item config:name="IsValueHighlightingEnabled" config:type="boolean">false</config:config-item>
     <config:config-item config:name="IsSnapToRaster" config:type="boolean">false</config:config-item>
     <config:config-item config:name="RasterIsVisible" config:type="boolean">false</config:config-item>
     <config:config-item config:name="RasterResolutionX" config:type="int">1000</config:config-item>
     <config:config-item config:name="RasterResolutionY" config:type="int">1000</config:config-item>
     <config:config-item config:name="RasterSubdivisionX" config:type="int">1</config:config-item>
     <config:config-item config:name="RasterSubdivisionY" config:type="int">1</config:config-item>
     <config:config-item config:name="IsRasterAxisSynchronized" config:type="boolean">true</config:config-item>
    </config:config-item-map-entry>
   </config:config-item-map-indexed>
  </config:config-item-set>
  <config:config-item-set config:name="ooo:configuration-settings">
   <config:config-item config:name="SyntaxStringRef" config:type="short">9999</config:config-item>
   <config:config-item config:name="IsDocumentShared" config:type="boolean">false</config:config-item>
   <config:config-item config:name="LoadReadonly" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AllowPrintJobCancel" config:type="boolean">true</config:config-item>
   <config:config-item config:name="UpdateFromTemplate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsKernAsianPunctuation" config:type="boolean">false</config:config-item>
   <config:config-item config:name="EmbedFonts" config:type="boolean">false</config:config-item>
   <config:config-item config:name="IsSnapToRaster" config:type="boolean">false</config:config-item>
   <config:config-item config:name="RasterResolutionX" config:type="int">1000</config:config-item>
   <config:config-item config:name="RasterResolutionY" config:type="int">1000</config:config-item>
   <config:config-item config:name="HasSheetTabs" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsRasterAxisSynchronized" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowPageBreaks" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowGrid" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ShowNotes" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsOutlineSymbolsSet" config:type="boolean">true</config:config-item>
   <config:config-item config:name="ShowZeroValues" config:type="boolean">true</config:config-item>
   <config:config-item config:name="SaveVersionOnClose" config:type="boolean">false</config:config-item>
   <config:config-item config:name="GridColor" config:type="long">12632256</config:config-item>
   <config:config-item config:name="RasterIsVisible" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrinterName" config:type="string">Brother_MFC_290C</config:config-item>
   <config:config-item-map-indexed config:name="ForbiddenCharacters">
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">US</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">fr</config:config-item>
     <config:config-item config:name="Country" config:type="string">FR</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">hi</config:config-item>
     <config:config-item config:name="Country" config:type="string">IN</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">GB</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">AU</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">CA</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
    <config:config-item-map-entry>
     <config:config-item config:name="Language" config:type="string">en</config:config-item>
     <config:config-item config:name="Country" config:type="string">NZ</config:config-item>
     <config:config-item config:name="Variant" config:type="string"/>
     <config:config-item config:name="BeginLine" config:type="string"/>
     <config:config-item config:name="EndLine" config:type="string"/>
    </config:config-item-map-entry>
   </config:config-item-map-indexed>
   <config:config-item config:name="LinkUpdateMode" config:type="short">3</config:config-item>
   <config:config-item config:name="RasterSubdivisionX" config:type="int">1</config:config-item>
   <config:config-item config:name="HasColumnRowHeaders" config:type="boolean">true</config:config-item>
   <config:config-item config:name="RasterSubdivisionY" config:type="int">1</config:config-item>
   <config:config-item config:name="AutoCalculate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrinterSetup" config:type="base64Binary">ggH+/0Jyb3RoZXJfTUZDXzI5MEMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ1VQUzpCcm90aGVyX01GQ18yOTBDAAAAAAAAAAAAAAAWAAMAqAAAAAAAAAAIAFZUAAAkbQAASm9iRGF0YSAxCnByaW50ZXI9QnJvdGhlcl9NRkNfMjkwQwpvcmllbnRhdGlvbj1Qb3J0cmFpdApjb3BpZXM9MQpjb2xsYXRlPWZhbHNlCm1hcmdpbmRhanVzdG1lbnQ9MCwwLDAsMApjb2xvcmRlcHRoPTI0CnBzbGV2ZWw9MApwZGZkZXZpY2U9MQpjb2xvcmRldmljZT0wClBQRENvbnRleERhdGEKEgBDT01QQVRfRFVQTEVYX01PREUKAERVUExFWF9PRkY=</config:config-item>
   <config:config-item config:name="ApplyUserData" config:type="boolean">true</config:config-item>
   <config:config-item config:name="CharacterCompressionType" config:type="short">0</config:config-item>
  </config:config-item-set>
 </office:settings>
 <office:scripts>
  <office:script script:language="ooo:Basic">
   <ooo:libraries xmlns:ooo="http://openoffice.org/2004/office" xmlns:xlink="http://www.w3.org/1999/xlink">
    <ooo:library-embedded ooo:name="Standard"/>
   </ooo:libraries>
  </office:script>
 </office:scripts>
 <office:font-face-decls>
  <style:font-face style:name="Arial3" svg:font-family="Arial"/>
  <style:font-face style:name="Arial1" svg:font-family="Arial, sans-serif"/>
  <style:font-face style:name="Calibri" svg:font-family="Calibri, sans-serif"/>
  <style:font-face style:name="Cambria Math" svg:font-family="&apos;Cambria Math&apos;"/>
  <style:font-face style:name="Comic Sans MS" svg:font-family="&apos;Comic Sans MS&apos;, cursive"/>
  <style:font-face style:name="Consolas" svg:font-family="Consolas, sans-serif"/>
  <style:font-face style:name="Courier New" svg:font-family="&apos;Courier New&apos;, monospace"/>
  <style:font-face style:name="Courier New2" svg:font-family="&apos;Courier New&apos;, sans-serif"/>
  <style:font-face style:name="Fixedsys" svg:font-family="Fixedsys"/>
  <style:font-face style:name="Times New Roman" svg:font-family="&apos;Times New Roman&apos;, serif"/>
  <style:font-face style:name="Cambria1" svg:font-family="Cambria" style:font-family-generic="modern"/>
  <style:font-face style:name="Cambria" svg:font-family="Cambria" style:font-family-generic="roman"/>
  <style:font-face style:name="Times New Roman1" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="roman"/>
  <style:font-face style:name="Arial2" svg:font-family="Arial" style:font-family-generic="swiss"/>
  <style:font-face style:name="Calibri1" svg:font-family="Calibri" style:font-family-generic="swiss"/>
  <style:font-face style:name="Monospace" svg:font-family="Monospace" style:font-pitch="fixed"/>
  <style:font-face style:name="Courier New1" svg:font-family="&apos;Courier New&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Liberation Mono" svg:font-family="&apos;Liberation Mono&apos;, &apos;Courier New&apos;, &apos;Nimbus Mono L&apos;, &apos;DejaVu Sans Mono&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Arial4" svg:font-family="Arial" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Bitstream Charter" svg:font-family="&apos;Bitstream Charter&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Calibri2" svg:font-family="Calibri" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Liberation Serif" svg:font-family="&apos;Liberation Serif&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Arial" svg:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="FreeSans" svg:font-family="FreeSans" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="Liberation Sans" svg:font-family="&apos;Liberation Sans&apos;" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="DejaVu Sans" svg:font-family="&apos;DejaVu Sans&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="Droid Sans Fallback" svg:font-family="&apos;Droid Sans Fallback&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="FreeSans1" svg:font-family="FreeSans" style:font-family-generic="system" style:font-pitch="variable"/>
 </office:font-face-decls>
 <office:styles>
  <style:default-style style:family="table-cell">
   <style:paragraph-properties style:tab-stop-distance="12.5mm"/>
   <style:text-properties style:font-name="Liberation Sans" fo:language="en" fo:country="NZ" style:font-name-asian="DejaVu Sans" style:language-asian="zh" style:country-asian="CN" style:font-name-complex="DejaVu Sans" style:language-complex="hi" style:country-complex="IN"/>
  </style:default-style>
  <style:default-style style:family="graphic">
   <style:graphic-properties svg:stroke-color="#3465a4" draw:fill-color="#729fcf" fo:wrap-option="no-wrap" draw:shadow-offset-x="3mm" draw:shadow-offset-y="3mm"/>
   <style:paragraph-properties style:text-autospace="ideograph-alpha" style:punctuation-wrap="simple" style:line-break="strict" style:writing-mode="page" style:font-independent-line-spacing="false">
    <style:tab-stops/>
   </style:paragraph-properties>
   <style:text-properties style:use-window-font-color="true" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" style:letter-kerning="true" style:font-name-asian="DejaVu Sans" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN"/>
  </style:default-style>
  <number:number-style style:name="N0">
   <number:number number:min-integer-digits="1"/>
  </number:number-style>
  <number:currency-style style:name="N104P0" style:volatile="true">
   <number:currency-symbol number:language="en" number:country="NZ">$</number:currency-symbol>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
  </number:currency-style>
  <number:currency-style style:name="N104">
   <style:text-properties fo:color="#ff0000"/>
   <number:text>-</number:text>
   <number:currency-symbol number:language="en" number:country="NZ">$</number:currency-symbol>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <style:map style:condition="value()&gt;=0" style:apply-style-name="N104P0"/>
  </number:currency-style>
  <number:currency-style style:name="N111P0" style:volatile="true">
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <number:text> </number:text>
   <number:currency-symbol number:language="fr" number:country="FR">€</number:currency-symbol>
  </number:currency-style>
  <number:currency-style style:name="N111">
   <style:text-properties fo:color="#ff0000"/>
   <number:text>-</number:text>
   <number:number number:decimal-places="2" loext:min-decimal-places="2" number:min-integer-digits="1" number:grouping="true"/>
   <number:text> </number:text>
   <number:currency-symbol number:language="fr" number:country="FR">€</number:currency-symbol>
   <style:map style:condition="value()&gt;=0" style:apply-style-name="N111P0"/>
  </number:currency-style>
  <style:style style:name="Default" style:family="table-cell">
   <style:text-properties style:font-name-asian="Droid Sans Fallback" style:font-family-asian="&apos;Droid Sans Fallback&apos;" style:font-family-generic-asian="system" style:font-pitch-asian="variable" style:font-name-complex="FreeSans1" style:font-family-complex="FreeSans" style:font-family-generic-complex="system" style:font-pitch-complex="variable"/>
  </style:style>
  <style:style style:name="Result" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-style="italic" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="Result2" style:family="table-cell" style:parent-style-name="Result" style:data-style-name="N104"/>
  <style:style style:name="Heading" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties fo:font-size="16pt" fo:font-style="italic" fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="Heading1" style:family="table-cell" style:parent-style-name="Heading">
   <style:table-cell-properties style:rotation-angle="90"/>
  </style:style>
 </office:styles>
 <office:automatic-styles>
  <style:style style:name="co1" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="39.21mm"/>
  </style:style>
  <style:style style:name="co2" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="161.22mm"/>
  </style:style>
  <style:style style:name="co3" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="193.36mm"/>
  </style:style>
  <style:style style:name="co4" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="22.58mm"/>
  </style:style>
  <style:style style:name="co5" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="31.04mm"/>
  </style:style>
  <style:style style:name="co6" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="71.61mm"/>
  </style:style>
  <style:style style:name="co7" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="46.83mm"/>
  </style:style>
  <style:style style:name="co8" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="40.83mm"/>
  </style:style>
  <style:style style:name="co9" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="122.82mm"/>
  </style:style>
  <style:style style:name="co10" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="269.61mm"/>
  </style:style>
  <style:style style:name="co11" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="243.73mm"/>
  </style:style>
  <style:style style:name="co12" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="214.42mm"/>
  </style:style>
  <style:style style:name="co13" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="212.13mm"/>
  </style:style>
  <style:style style:name="co14" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="34.4mm"/>
  </style:style>
  <style:style style:name="co15" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="281.13mm"/>
  </style:style>
  <style:style style:name="co16" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="88.78mm"/>
  </style:style>
  <style:style style:name="co17" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="19.88mm"/>
  </style:style>
  <style:style style:name="co18" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="222.44mm"/>
  </style:style>
  <style:style style:name="co19" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="80.06mm"/>
  </style:style>
  <style:style style:name="co20" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="57.45mm"/>
  </style:style>
  <style:style style:name="co21" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="65.35mm"/>
  </style:style>
  <style:style style:name="co22" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="158.24mm"/>
  </style:style>
  <style:style style:name="co23" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="145.04mm"/>
  </style:style>
  <style:style style:name="co24" style:family="table-column">
   <style:table-column-properties fo:break-before="auto" style:column-width="137.6mm"/>
  </style:style>
  <style:style style:name="ro1" style:family="table-row">
   <style:table-row-properties style:row-height="5.29mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro2" style:family="table-row">
   <style:table-row-properties style:row-height="5.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro3" style:family="table-row">
   <style:table-row-properties style:row-height="10.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro4" style:family="table-row">
   <style:table-row-properties style:row-height="20.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro5" style:family="table-row">
   <style:table-row-properties style:row-height="30.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro6" style:family="table-row">
   <style:table-row-properties style:row-height="45.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro7" style:family="table-row">
   <style:table-row-properties style:row-height="85.55mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro8" style:family="table-row">
   <style:table-row-properties style:row-height="55.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro9" style:family="table-row">
   <style:table-row-properties style:row-height="50.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro10" style:family="table-row">
   <style:table-row-properties style:row-height="110.56mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro11" style:family="table-row">
   <style:table-row-properties style:row-height="15.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro12" style:family="table-row">
   <style:table-row-properties style:row-height="40.53mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro13" style:family="table-row">
   <style:table-row-properties style:row-height="75.65mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro14" style:family="table-row">
   <style:table-row-properties style:row-height="25.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro15" style:family="table-row">
   <style:table-row-properties style:row-height="95.55mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro16" style:family="table-row">
   <style:table-row-properties style:row-height="10.53mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro17" style:family="table-row">
   <style:table-row-properties style:row-height="98.46mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro18" style:family="table-row">
   <style:table-row-properties style:row-height="5.79mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro19" style:family="table-row">
   <style:table-row-properties style:row-height="4.52mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro20" style:family="table-row">
   <style:table-row-properties style:row-height="20.27mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro21" style:family="table-row">
   <style:table-row-properties style:row-height="8.41mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro22" style:family="table-row">
   <style:table-row-properties style:row-height="12.36mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro23" style:family="table-row">
   <style:table-row-properties style:row-height="11.04mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro24" style:family="table-row">
   <style:table-row-properties style:row-height="16.32mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro25" style:family="table-row">
   <style:table-row-properties style:row-height="5.26mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro26" style:family="table-row">
   <style:table-row-properties style:row-height="6.95mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro27" style:family="table-row">
   <style:table-row-properties style:row-height="5.7mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro28" style:family="table-row">
   <style:table-row-properties style:row-height="12.63mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro29" style:family="table-row">
   <style:table-row-properties style:row-height="37.96mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro30" style:family="table-row">
   <style:table-row-properties style:row-height="6.31mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro31" style:family="table-row">
   <style:table-row-properties style:row-height="4.99mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro32" style:family="table-row">
   <style:table-row-properties style:row-height="4.87mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro33" style:family="table-row">
   <style:table-row-properties style:row-height="9.97mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro34" style:family="table-row">
   <style:table-row-properties style:row-height="10mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro35" style:family="table-row">
   <style:table-row-properties style:row-height="4.71mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro36" style:family="table-row">
   <style:table-row-properties style:row-height="13.02mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro37" style:family="table-row">
   <style:table-row-properties style:row-height="5.8mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro38" style:family="table-row">
   <style:table-row-properties style:row-height="14.68mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro39" style:family="table-row">
   <style:table-row-properties style:row-height="6.09mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro40" style:family="table-row">
   <style:table-row-properties style:row-height="5.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro41" style:family="table-row">
   <style:table-row-properties style:row-height="8.85mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro42" style:family="table-row">
   <style:table-row-properties style:row-height="5.54mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro43" style:family="table-row">
   <style:table-row-properties style:row-height="6.58mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro44" style:family="table-row">
   <style:table-row-properties style:row-height="19.39mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro45" style:family="table-row">
   <style:table-row-properties style:row-height="9.47mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro46" style:family="table-row">
   <style:table-row-properties style:row-height="36.32mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro47" style:family="table-row">
   <style:table-row-properties style:row-height="20.5mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro48" style:family="table-row">
   <style:table-row-properties style:row-height="25.49mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro49" style:family="table-row">
   <style:table-row-properties style:row-height="16.33mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro50" style:family="table-row">
   <style:table-row-properties style:row-height="6.12mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro51" style:family="table-row">
   <style:table-row-properties style:row-height="17.18mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro52" style:family="table-row">
   <style:table-row-properties style:row-height="6.65mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro53" style:family="table-row">
   <style:table-row-properties style:row-height="33.8mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro54" style:family="table-row">
   <style:table-row-properties style:row-height="6.54mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro55" style:family="table-row">
   <style:table-row-properties style:row-height="58.74mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro56" style:family="table-row">
   <style:table-row-properties style:row-height="45.72mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro57" style:family="table-row">
   <style:table-row-properties style:row-height="15.5mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro58" style:family="table-row">
   <style:table-row-properties style:row-height="8.31mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro59" style:family="table-row">
   <style:table-row-properties style:row-height="81.47mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro60" style:family="table-row">
   <style:table-row-properties style:row-height="13.95mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro61" style:family="table-row">
   <style:table-row-properties style:row-height="14.73mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro62" style:family="table-row">
   <style:table-row-properties style:row-height="19.47mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro63" style:family="table-row">
   <style:table-row-properties style:row-height="28.95mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro64" style:family="table-row">
   <style:table-row-properties style:row-height="9.45mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro65" style:family="table-row">
   <style:table-row-properties style:row-height="4.97mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro66" style:family="table-row">
   <style:table-row-properties style:row-height="21.33mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro67" style:family="table-row">
   <style:table-row-properties style:row-height="24.22mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro68" style:family="table-row">
   <style:table-row-properties style:row-height="3.6mm" fo:break-before="auto" style:use-optimal-row-height="false"/>
  </style:style>
  <style:style style:name="ro69" style:family="table-row">
   <style:table-row-properties style:row-height="38.44mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro70" style:family="table-row">
   <style:table-row-properties style:row-height="52.65mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro71" style:family="table-row">
   <style:table-row-properties style:row-height="197.96mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro72" style:family="table-row">
   <style:table-row-properties style:row-height="18.42mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro73" style:family="table-row">
   <style:table-row-properties style:row-height="33.69mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro74" style:family="table-row">
   <style:table-row-properties style:row-height="24.09mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro75" style:family="table-row">
   <style:table-row-properties style:row-height="7.48mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro76" style:family="table-row">
   <style:table-row-properties style:row-height="55.69mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro77" style:family="table-row">
   <style:table-row-properties style:row-height="22.72mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro78" style:family="table-row">
   <style:table-row-properties style:row-height="29.09mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro79" style:family="table-row">
   <style:table-row-properties style:row-height="47.91mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ro80" style:family="table-row">
   <style:table-row-properties style:row-height="43.16mm" fo:break-before="auto" style:use-optimal-row-height="true"/>
  </style:style>
  <style:style style:name="ta1" style:family="table" style:master-page-name="Default">
   <style:table-properties table:display="true" style:writing-mode="lr-tb"/>
  </style:style>
  <number:date-style style:name="N37" number:automatic-order="true">
   <number:day number:style="long"/>
   <number:text>/</number:text>
   <number:month number:style="long"/>
   <number:text>/</number:text>
   <number:year/>
  </number:date-style>
  <number:text-style style:name="N100">
   <number:text-content/>
  </number:text-style>
  <style:style style:name="ce1" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce2" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce3" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff33ff"/>
   <style:text-properties style:use-window-font-color="true" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce4" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce5" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce6" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties style:use-window-font-color="true" style:font-name="Liberation Serif" fo:font-size="12pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:font-name-complex="FreeSans1" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce7" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce8" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce9" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce10" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce11" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce12" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="DejaVu Sans" style:font-size-asian="12pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce13" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce14" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce15" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce16" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce17" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce18" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="DejaVu Sans" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce19" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce20" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" fo:font-weight="bold" style:font-size-asian="12pt" style:font-weight-asian="bold" style:font-size-complex="12pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce21" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce22" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce23" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce24" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce25" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-name-complex="FreeSans" style:font-size-complex="12pt" style:language-complex="none" style:country-complex="none"/>
  </style:style>
  <style:style style:name="ce26" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-name-complex="FreeSans" style:font-size-complex="12pt" style:language-complex="none" style:country-complex="none"/>
  </style:style>
  <style:style style:name="ce27" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" style:font-name-asian="FreeSans" style:font-size-asian="12pt" style:language-asian="none" style:country-asian="none" style:font-name-complex="FreeSans" style:font-size-complex="12pt" style:language-complex="none" style:country-complex="none"/>
  </style:style>
  <style:style style:name="ce28" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#cc66ff" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce29" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce30" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#cc66ff" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce31" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce32" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce33" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce34" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Liberation Serif" fo:font-size="12pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce35" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce36" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff99ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce37" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce38" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce39" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff" fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#0066cc" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce40" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt" fo:font-weight="normal" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce41" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="12pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:font-name-complex="FreeSans1" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce42" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce43" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce44" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce45" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce46" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce47" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce48" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce49" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce50" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce51" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="start"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce52" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce53" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Bitstream Charter" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce54" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce55" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce56" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce57" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce58" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce59" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce60" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce61" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce62" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
  </style:style>
  <style:style style:name="ce63" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce64" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce65" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce66" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce67" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N100">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce68" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="center" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce69" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce70" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce71" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce72" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce73" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce74" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce75" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="16pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="16pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="16pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce76" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:font-name="Arial" fo:font-size="13pt" style:font-size-asian="13pt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce77" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Arial" fo:font-size="13pt" style:font-size-asian="13pt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="ce78" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce79" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#ff00cc" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce80" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce81" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce82" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333"/>
  </style:style>
  <style:style style:name="ce83" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce84" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce85" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Liberation Serif" fo:font-size="12pt" fo:font-weight="normal" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce86" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce87" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color"/>
  </style:style>
  <style:style style:name="ce88" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="12pt" fo:font-weight="normal" style:font-size-asian="12pt" style:font-weight-asian="normal" style:font-size-complex="12pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce89" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce90" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce91" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#365f91" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce92" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce93" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce94" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#9b00d3" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce95" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce96" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Times New Roman" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce97" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce98" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce99" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce100" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Times New Roman" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce101" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce102" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce103" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New1" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce104" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce105" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce106" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce107" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce108" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce109" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce110" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Comic Sans MS" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce111" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Times New Roman" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce112" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce113" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#666666" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce114" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#808080" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Fixedsys" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce115" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce116" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce117" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce118" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce119" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce120" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce121" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#4f81bd" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce122" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria Math" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce123" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria Math" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce124" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria Math" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce125" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria Math" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce126" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce127" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Consolas" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce128" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#0000ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce129" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce130" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce131" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce132" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce133" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true"/>
  </style:style>
  <style:style style:name="ce134" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce135" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#ff0000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce136" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce137" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#4f81bd" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce138" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#0000ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce139" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="14pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce140" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce141" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce142" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce143" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
  </style:style>
  <style:style style:name="ce144" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Bitstream Charter"/>
  </style:style>
  <style:style style:name="ce145" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial1" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce146" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffffff"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="14pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce147" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffffff"/>
  </style:style>
  <style:style style:name="ce148" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffffff"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce149" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffffff"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="12pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce150" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="14pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce151" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="14pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce152" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="14pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce153" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff99ff"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce154" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New2" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce155" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce156" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial1" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce157" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#0000ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Consolas" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce158" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#2b91af" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Consolas" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce159" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:font-name="Liberation Sans" fo:font-weight="normal" style:font-name-asian="Droid Sans Fallback" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce160" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ff66ff"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce161" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="12pt" fo:font-weight="bold" style:font-size-asian="12pt" style:font-weight-asian="bold" style:font-size-complex="12pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce162" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce163" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce164" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="15pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="15pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="15pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce165" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce166" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce167" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce168" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="13pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="13pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="13pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce169" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce170" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce171" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce172" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce173" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce174" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffff00"/>
   <style:text-properties fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce175" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce176" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffff00" fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce177" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#eeeeee" fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce178" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#365f91" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria1" fo:font-size="14pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="14pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce179" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria1" fo:font-size="14pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce180" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="9pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce181" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Times New Roman1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce182" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-style="normal" fo:text-shadow="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce183" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce184" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:font-size="14pt" fo:font-weight="bold" style:font-size-asian="14pt" style:font-weight-asian="bold" style:font-size-complex="14pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce185" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce186" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce187" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="Monospace" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce188" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce189" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="16pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="16pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="16pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce190" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce191" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="9pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce192" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="12pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce193" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#ff0000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial2" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="9pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce194" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#888888" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Monospace" fo:font-size="10pt" fo:language="en" fo:country="US" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce195" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#ff3333"/>
  </style:style>
  <style:style style:name="ce196" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce197" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#ff00cc"/>
  </style:style>
  <style:style style:name="ce198" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#365f91" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce199" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:font-name="Calibri" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans1"/>
  </style:style>
  <style:style style:name="ce200" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties fo:color="#0000ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Consolas" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce201" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Consolas" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce202" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#4f81bd" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce203" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce204" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce205" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff6820" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce206" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ffad5b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce207" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce208" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce209" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce210" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce211" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce212" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce213" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce214" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap" style:vertical-align="top"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce215" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffcc00" fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce216" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce217" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce218" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap" style:vertical-align="top"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce219" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="11pt" fo:font-weight="bold" style:font-size-asian="11pt" style:font-weight-asian="bold" style:font-size-complex="11pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce220" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="14pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="14pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce221" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce222" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="22pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="22pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="22pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce223" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Sans" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce224" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#800000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce225" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce226" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce227" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce228" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:paragraph-properties fo:text-align="start"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce229" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="no-wrap" style:vertical-align="top"/>
   <style:paragraph-properties fo:text-align="start"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce230" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce231" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce232" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#800000" style:font-name="Arial3" fo:font-size="14pt" fo:font-weight="bold" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="10pt" style:font-name-complex="FreeSans1" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="ce233" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce234" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce235" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000080" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce236" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#eeeeee"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce237" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000080" style:font-name="Arial3" fo:font-size="14pt" fo:font-weight="bold" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="10pt" style:font-name-complex="FreeSans1" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="ce238" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce239" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="12pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="12pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce240" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:paragraph-properties fo:text-align="start"/>
   <style:text-properties fo:color="#800000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="14pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce241" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="11pt" fo:font-weight="bold" style:font-size-asian="11pt" style:font-weight-asian="bold" style:font-size-complex="11pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce242" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#ffcc00" fo:wrap-option="wrap"/>
   <style:text-properties fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce243" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="11pt" fo:font-weight="normal" style:font-size-asian="11pt" style:font-weight-asian="normal" style:font-size-complex="11pt" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="ce244" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#010100" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial3" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce245" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#010100" style:font-name="Arial3" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans1"/>
  </style:style>
  <style:style style:name="ce246" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="16pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="16pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="16pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce247" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff0000"/>
  </style:style>
  <style:style style:name="ce248" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N37"/>
  <style:style style:name="ce249" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false"/>
   <style:paragraph-properties fo:text-align="end"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce250" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial4" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce251" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial4" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Arial" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-name-complex="DejaVu Sans" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce252" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial4" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce253" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#00ff66" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce254" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:font-name="Arial4" fo:font-size="11pt" fo:language="en" fo:country="GB" style:font-name-asian="Arial" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce255" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial4" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="italic" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce256" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="value-type" style:repeat-content="false" fo:wrap-option="no-wrap"/>
   <style:paragraph-properties fo:margin-left="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial4" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce257" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri2" fo:font-size="10pt" fo:language="en" fo:country="AU" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce258" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent"/>
   <style:text-properties fo:color="#cc0066" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce259" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" fo:background-color="transparent"/>
   <style:paragraph-properties fo:text-align="start" fo:margin-left="0mm"/>
   <style:text-properties fo:color="#cc0066" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Arial4" fo:font-size="11pt" fo:language="en" fo:country="GB" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce260" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#cc0066" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce261" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri2" fo:font-size="10pt" fo:language="en" fo:country="AU" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="ar" style:country-asian="SA" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="12pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce262" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri2" fo:font-size="10pt" fo:language="en" fo:country="AU" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="en" style:country-asian="US" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce263" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#0000ff" fo:font-size="11pt" style:font-size-asian="11pt" style:font-name-complex="DejaVu Sans" style:font-size-complex="11pt" style:language-complex="en" style:country-complex="US"/>
  </style:style>
  <style:style style:name="ce264" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap" style:vertical-align="top"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce265" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:text-align-source="fix" style:repeat-content="false" style:vertical-align="middle"/>
   <style:paragraph-properties fo:text-align="center"/>
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="11pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="11pt" style:font-name-complex="FreeSans1" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce266" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="#eeeeee"/>
   <style:text-properties style:use-window-font-color="true" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce267" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff0000" fo:font-size="14pt" style:font-size-asian="14pt" style:font-size-complex="14pt"/>
  </style:style>
  <style:style style:name="ce268" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="10pt" style:font-size-asian="10pt" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="ce269" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#0000ff" fo:font-size="10pt" style:font-size-asian="10pt" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="ce270" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" fo:font-size="10pt" style:font-size-asian="10pt" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="ce271" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce272" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#0000ff" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce273" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce274" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333" fo:font-size="11pt" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce275" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#0000ff" fo:font-size="12pt" style:font-size-asian="12pt" style:font-size-complex="12pt"/>
  </style:style>
  <style:style style:name="ce276" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Bitstream Charter" fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce277" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent"/>
   <style:text-properties fo:color="#dddddd" style:font-name="Bitstream Charter" fo:font-size="11pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="11pt" style:font-name-complex="FreeSans1" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce278" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="16pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="16pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="16pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce279" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce280" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="9pt" fo:language="fr" fo:country="FR" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="12pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce281" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent"/>
   <style:text-properties fo:color="#ff99ff" style:font-name="Bitstream Charter"/>
  </style:style>
  <style:style style:name="ce282" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:font-name="Bitstream Charter"/>
  </style:style>
  <style:style style:name="ce283" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent" fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#eeeeee" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce284" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:background-color="transparent" fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#eeeeee" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Bitstream Charter" fo:font-size="10pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="10pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="10pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce285" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:color="#ff3333" style:font-name="Bitstream Charter"/>
  </style:style>
  <style:style style:name="ce286" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties style:vertical-align="bottom"/>
   <style:text-properties fo:color="#ff0000" fo:font-size="14pt" style:font-size-asian="14pt" style:font-size-complex="14pt"/>
  </style:style>
  <style:style style:name="ce287" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-size-asian="36pt" style:font-size-complex="36pt"/>
  </style:style>
  <style:style style:name="ce288" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce289" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri1" fo:font-size="12pt" fo:language="en" fo:country="CA" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce290" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Cambria" fo:font-size="12pt" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="6.80000019073486pt" style:language-asian="hi" style:country-asian="IN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="6.80000019073486pt" style:language-complex="en" style:country-complex="US" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce291" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="italic" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce292" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce293" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Mono" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce294" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:font-size="11pt" fo:font-weight="bold" style:font-size-asian="11pt" style:font-weight-asian="bold" style:font-size-complex="11pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="ce295" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties style:font-name="Liberation Sans" fo:font-size="11pt" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="11pt" style:font-name-complex="FreeSans1" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="ce296" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce297" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#0000ff" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Consolas" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce298" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce299" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce300" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce301" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce302" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce303" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce304" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce305" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-name-asian="Droid Sans Fallback" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="FreeSans1" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce306" style:family="table-cell" style:parent-style-name="Default">
   <style:text-properties fo:font-size="12pt"/>
  </style:style>
  <style:style style:name="ce307" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="bold" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="bold" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce308" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce309" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="no-wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce310" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#4b0082" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce311" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce312" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#32cd32" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce313" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce314" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce315" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce316" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#00008b" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Calibri" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce317" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#365f91" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="bold" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce318" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties fo:color="#17365d" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Liberation Serif" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce319" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Comic Sans MS" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="ce320" style:family="table-cell" style:parent-style-name="Default">
   <style:table-cell-properties fo:wrap-option="wrap"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:font-name="Courier New" fo:font-size="11pt" fo:language="en" fo:country="NZ" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:font-size-asian="11pt" style:language-asian="zh" style:country-asian="CN" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-size-complex="11pt" style:language-complex="hi" style:country-complex="IN" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="gr1" style:family="graphic">
   <style:graphic-properties draw:stroke="none" draw:fill="none" draw:textarea-horizontal-align="center" draw:textarea-vertical-align="middle" draw:color-mode="standard" draw:luminance="0%" draw:contrast="0%" draw:gamma="100%" draw:red="0%" draw:green="0%" draw:blue="0%" fo:clip="rect(0mm, 0mm, 0mm, 0mm)" draw:image-opacity="100%" style:mirror="none"/>
  </style:style>
  <style:style style:name="gr2" style:family="graphic" style:list-style-name="L1">
   <style:graphic-properties draw:stroke="none" svg:stroke-width="0mm" svg:stroke-color="#000000" draw:marker-start-width="3mm" draw:marker-start-center="false" draw:marker-end-width="3mm" draw:marker-end-center="false" draw:fill="none" draw:fill-color="#99ccff" draw:textarea-horizontal-align="center" draw:textarea-vertical-align="middle" fo:padding-top="1.25mm" fo:padding-bottom="1.25mm" fo:padding-left="2.5mm" fo:padding-right="2.5mm" draw:shadow="hidden" draw:shadow-offset-x="3mm" draw:shadow-offset-y="3mm" draw:shadow-color="#808080" draw:color-mode="standard" draw:luminance="0%" draw:contrast="0%" draw:gamma="100%" draw:red="0%" draw:green="0%" draw:blue="0%" fo:clip="rect(0mm, 0mm, 0mm, 0mm)" draw:image-opacity="100%" style:mirror="none"/>
  </style:style>
  <style:page-layout style:name="pm1">
   <style:page-layout-properties style:writing-mode="lr-tb"/>
   <style:header-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-bottom="2.5mm"/>
   </style:header-style>
   <style:footer-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-top="2.5mm"/>
   </style:footer-style>
  </style:page-layout>
  <style:page-layout style:name="pm2">
   <style:page-layout-properties style:writing-mode="lr-tb"/>
   <style:header-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-bottom="2.5mm" fo:border="2.49pt solid #000000" fo:padding="0.18mm" fo:background-color="#c0c0c0">
     <style:background-image/>
    </style:header-footer-properties>
   </style:header-style>
   <style:footer-style>
    <style:header-footer-properties fo:min-height="7.5mm" fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-top="2.5mm" fo:border="2.49pt solid #000000" fo:padding="0.18mm" fo:background-color="#c0c0c0">
     <style:background-image/>
    </style:header-footer-properties>
   </style:footer-style>
  </style:page-layout>
  <style:style style:name="P1" style:family="paragraph">
   <loext:graphic-properties draw:fill="none"/>
   <style:paragraph-properties fo:text-align="center"/>
  </style:style>
  <style:style style:name="P2" style:family="paragraph">
   <loext:graphic-properties draw:fill="none" draw:fill-color="#99ccff"/>
   <style:paragraph-properties fo:margin-left="0mm" fo:margin-right="0mm" fo:margin-top="0mm" fo:margin-bottom="0mm" fo:line-height="100%" fo:text-align="center" fo:text-indent="0mm"/>
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" fo:font-family="Albany" style:font-family-generic="roman" style:font-pitch="variable" fo:font-size="18pt" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:font-family-asian="&apos;Andale Sans UI&apos;" style:font-family-generic-asian="system" style:font-pitch-asian="variable" style:font-size-asian="18pt" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-family-complex="Tahoma" style:font-family-generic-complex="system" style:font-pitch-complex="variable" style:font-size-complex="18pt" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:font-relief="none"/>
  </style:style>
  <style:style style:name="T1" style:family="text">
   <style:text-properties style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T2" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T3" style:family="text">
   <style:text-properties style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="11pt" style:font-size-complex="11pt"/>
  </style:style>
  <style:style style:name="T4" style:family="text">
   <style:text-properties style:font-name-asian="FreeSans" style:font-name-complex="DejaVu Sans"/>
  </style:style>
  <style:style style:name="T5" style:family="text">
   <style:text-properties style:letter-kerning="true"/>
  </style:style>
  <style:style style:name="T6" style:family="text">
   <style:text-properties style:letter-kerning="true" fo:color="#000000" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T7" style:family="text">
   <style:text-properties fo:color="#0000ff" fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T8" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#2b91af"/>
  </style:style>
  <style:style style:name="T9" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#0000ff"/>
  </style:style>
  <style:style style:name="T10" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#000000" fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T11" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T12" style:family="text">
   <style:text-properties style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T13" style:family="text">
   <style:text-properties fo:font-size="12pt"/>
  </style:style>
  <style:style style:name="T14" style:family="text">
   <style:text-properties style:font-name="Liberation Sans" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T15" style:family="text">
   <style:text-properties fo:color="#0000ff"/>
  </style:style>
  <style:style style:name="T16" style:family="text">
   <style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="T17" style:family="text">
   <style:text-properties fo:color="#3333ff"/>
  </style:style>
  <style:style style:name="T18" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T19" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#2b91af" fo:country="none"/>
  </style:style>
  <style:style style:name="T20" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#0000ff" fo:country="none"/>
  </style:style>
  <style:style style:name="T21" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:country="none" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T22" style:family="text">
   <style:text-properties fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt" fo:color="#0000ff" fo:font-size="12pt" style:letter-kerning="true"/>
  </style:style>
  <style:style style:name="T23" style:family="text">
   <style:text-properties fo:font-size="12pt" fo:country="none" style:font-size-asian="12pt" style:font-name-asian="FreeSans" style:letter-kerning="true" fo:color="#2b91af" style:country-asian="none"/>
  </style:style>
  <style:style style:name="T24" style:family="text">
   <style:text-properties fo:font-size="12pt" fo:color="#2b91af" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T25" style:family="text">
   <style:text-properties fo:font-size="12pt" fo:color="#0000ff" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T26" style:family="text">
   <style:text-properties fo:color="#0000ff" fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt"/>
  </style:style>
  <style:style style:name="T27" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt"/>
  </style:style>
  <style:style style:name="T28" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt" fo:color="#2b91af" fo:country="none"/>
  </style:style>
  <style:style style:name="T29" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt" fo:color="#0000ff" fo:country="none"/>
  </style:style>
  <style:style style:name="T30" style:family="text">
   <style:text-properties fo:font-size="12pt" style:letter-kerning="true" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt" fo:country="none" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T31" style:family="text">
   <style:text-properties fo:color="#000000" fo:font-size="12pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:country-complex="none" style:font-name-asian="FreeSans" style:font-name-complex="FreeSans" style:font-size-asian="12pt" style:font-size-complex="6.80000019073486pt"/>
  </style:style>
  <style:style style:name="T32" style:family="text">
   <style:text-properties style:font-name-asian="FreeSans" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T33" style:family="text">
   <style:text-properties fo:color="#0000cc" fo:font-size="13pt" style:font-size-asian="13pt" style:font-size-complex="13pt"/>
  </style:style>
  <style:style style:name="T34" style:family="text">
   <style:text-properties fo:color="#2b91af" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T35" style:family="text">
   <style:text-properties fo:color="#0000ff" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T36" style:family="text">
   <style:text-properties fo:color="#ff99ff" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="FreeSans" style:font-size-asian="12pt"/>
  </style:style>
  <style:style style:name="T37" style:family="text">
   <style:text-properties fo:color="#ff3333"/>
  </style:style>
  <style:style style:name="T38" style:family="text">
   <style:text-properties fo:color="#6600ff"/>
  </style:style>
  <style:style style:name="T39" style:family="text">
   <style:text-properties style:font-name="Liberation Serif" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <style:style style:name="T40" style:family="text">
   <style:text-properties fo:color="#333333"/>
  </style:style>
  <style:style style:name="T41" style:family="text">
   <style:text-properties fo:color="#dddddd"/>
  </style:style>
  <style:style style:name="T42" style:family="text">
   <style:text-properties fo:color="#9900ff"/>
  </style:style>
  <style:style style:name="T43" style:family="text">
   <style:text-properties fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="T44" style:family="text">
   <style:text-properties fo:color="#ff00cc"/>
  </style:style>
  <style:style style:name="T45" style:family="text">
   <style:text-properties fo:font-size="14pt" fo:country="none" style:country-asian="none" style:font-size-asian="14pt"/>
  </style:style>
  <style:style style:name="T46" style:family="text">
   <style:text-properties fo:color="#ff0000" fo:font-size="14pt" fo:country="none" style:country-asian="none" style:font-size-asian="14pt"/>
  </style:style>
  <style:style style:name="T47" style:family="text">
   <style:text-properties style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T48" style:family="text">
   <style:text-properties style:font-name="Liberation Serif" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T49" style:family="text">
   <style:text-properties fo:color="#ff33ff"/>
  </style:style>
  <style:style style:name="T50" style:family="text">
   <style:text-properties style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="T51" style:family="text">
   <style:text-properties fo:color="#009695" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="T52" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#333333"/>
  </style:style>
  <style:style style:name="T53" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#009695"/>
  </style:style>
  <style:style style:name="T54" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" style:font-style-complex="italic" fo:font-style="italic" fo:color="#888888" style:font-style-asian="italic"/>
  </style:style>
  <style:style style:name="T55" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#333333" fo:font-style="normal" style:font-style-asian="normal" style:font-style-complex="normal"/>
  </style:style>
  <style:style style:name="T56" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" style:font-size-complex="10pt" fo:color="#888888" fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T57" style:family="text">
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T58" style:family="text">
   <style:text-properties style:font-name="Cambria" fo:font-size="14pt" style:font-name-asian="Cambria" style:font-size-asian="14pt" fo:color="#808000"/>
  </style:style>
  <style:style style:name="T59" style:family="text">
   <style:text-properties style:font-name="Cambria" fo:font-size="14pt" style:font-name-asian="Cambria" style:font-size-asian="14pt" fo:color="#c0c0c0"/>
  </style:style>
  <style:style style:name="T60" style:family="text">
   <style:text-properties style:font-name="Cambria" fo:font-size="14pt" style:font-name-asian="Cambria" style:font-size-asian="14pt" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T61" style:family="text">
   <style:text-properties style:font-name="Cambria" fo:font-size="14pt" style:font-name-asian="Cambria" style:font-size-asian="14pt" fo:color="#800080"/>
  </style:style>
  <style:style style:name="T62" style:family="text">
   <style:text-properties fo:color="#808000" fo:font-size="10pt" style:font-size-asian="10pt"/>
  </style:style>
  <style:style style:name="T63" style:family="text">
   <style:text-properties fo:font-size="10pt" style:font-size-asian="10pt" fo:color="#c0c0c0"/>
  </style:style>
  <style:style style:name="T64" style:family="text">
   <style:text-properties fo:font-size="10pt" style:font-size-asian="10pt" fo:color="#800080"/>
  </style:style>
  <style:style style:name="T65" style:family="text">
   <style:text-properties fo:font-size="10pt" style:font-size-asian="10pt" fo:color="#000000"/>
  </style:style>
  <style:style style:name="T66" style:family="text">
   <style:text-properties fo:color="#800080" style:font-name="Cambria" fo:font-size="14pt" style:font-name-asian="Cambria" style:font-size-asian="14pt"/>
  </style:style>
  <style:style style:name="T67" style:family="text">
   <style:text-properties fo:color="#000000" style:font-name="Cambria" fo:font-size="10pt" style:font-name-asian="Cambria" style:font-size-asian="14pt"/>
  </style:style>
  <style:style style:name="T68" style:family="text">
   <style:text-properties fo:color="#000000" style:font-name="Cambria" style:font-name-asian="Cambria" style:font-size-asian="14pt" fo:font-size="14pt"/>
  </style:style>
  <style:style style:name="T69" style:family="text">
   <style:text-properties fo:color="#eeeeee"/>
  </style:style>
  <style:style style:name="T70" style:family="text">
   <style:text-properties style:font-name="Arial" fo:font-size="9pt" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:country="none" style:country-asian="none" style:font-name-asian="Arial" style:font-size-asian="9pt"/>
  </style:style>
  <style:style style:name="T71" style:family="text">
   <style:text-properties fo:color="#ff0066"/>
  </style:style>
  <style:style style:name="T72" style:family="text">
   <style:text-properties style:font-name="Monospace" fo:color="#333333" style:font-size-complex="10pt" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-name-asian="Monospace" fo:font-size="10pt"/>
  </style:style>
  <style:style style:name="T73" style:family="text">
   <style:text-properties style:font-name="Monospace" style:font-size-complex="10pt" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-name-asian="Monospace" fo:font-size="10pt" fo:color="#009695"/>
  </style:style>
  <style:style style:name="T74" style:family="text">
   <style:text-properties style:font-name="Monospace" style:font-size-complex="10pt" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-name-asian="Monospace" fo:font-size="10pt" fo:color="#333333"/>
  </style:style>
  <style:style style:name="T75" style:family="text">
   <style:text-properties style:font-size-complex="10pt" fo:color="#009695" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt"/>
  </style:style>
  <style:style style:name="T76" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#333333"/>
  </style:style>
  <style:style style:name="T77" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#009695"/>
  </style:style>
  <style:style style:name="T78" style:family="text">
   <style:text-properties style:font-size-complex="10pt" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-name-complex="Monospace" style:font-size-asian="10pt" fo:color="#f57d00"/>
  </style:style>
  <style:style style:name="T79" style:family="text">
   <style:text-properties fo:color="#ff99ff"/>
  </style:style>
  <style:style style:name="T80" style:family="text">
   <style:text-properties fo:color="#000000" style:font-name="Arial" fo:font-size="10pt" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="Arial" style:font-size-asian="10pt"/>
  </style:style>
  <style:style style:name="T81" style:family="text">
   <style:text-properties style:font-name="Arial" fo:font-size="10pt" fo:font-style="italic" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-name-asian="Arial" style:font-size-asian="10pt" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T82" style:family="text">
   <style:text-properties fo:font-size="11pt" fo:font-style="italic" style:letter-kerning="true" fo:country="none" style:country-asian="none" style:font-size-asian="11pt" style:font-size-complex="11pt" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T83" style:family="text">
   <style:text-properties style:font-size-asian="36pt" style:font-size-complex="36pt"/>
  </style:style>
  <style:style style:name="T84" style:family="text">
   <style:text-properties fo:color="#000000" fo:font-size="12pt" fo:country="none" style:country-asian="none"/>
  </style:style>
  <style:style style:name="T85" style:family="text">
   <style:text-properties fo:color="#000000" fo:font-size="9pt" fo:country="none" style:country-asian="none" style:font-size-asian="9pt"/>
  </style:style>
  <style:style style:name="T86" style:family="text">
   <style:text-properties fo:color="#0000ff" style:font-name-asian="Droid Sans Fallback" style:font-name-complex="FreeSans"/>
  </style:style>
  <text:list-style style:name="L1">
   <text:list-level-style-bullet text:level="1" text:bullet-char="●">
    <style:list-level-properties/>
    <style:text-properties fo:font-family="StarSymbol" style:use-window-font-color="true" fo:font-size="45%"/>
   </text:list-level-style-bullet>
   <text:list-level-style-bullet text:level="2" text:bullet-char="●">
    <style:list-level-properties text:space-before="6mm" text:min-label-width="6mm"/>
    <style:text-properties fo:font-family="StarSymbol" style:use-window-font-color="true" fo:font-size="45%"/>
   </text:list-level-style-bullet>
   <text:list-level-style-bullet text:level="3" text:bullet-char="●">
    <style:list-level-properties text:space-before="12mm" text:min-label-width="6mm"/>
    <style:text-properties fo:font-family="StarSymbol" style:use-window-font-color="true" fo:font-size="45%"/>
   </text:list-level-style-bullet>
   <text:list-level-style-bullet text:level="4" text:bullet-char="●">
    <style:list-level-properties text:space-before="18mm" text:min-label-width="6mm"/>
    <style:text-properties fo:font-family="StarSymbol" style:use-window-font-color="true" fo:font-size="45%"/>
   </text:list-level-style-bullet>
   <text:list-level-style-bullet text:level="5" text:bullet-char="●">
    <style:list-level-properties text:space-before="24mm" text:min-label-width="6mm"/>
    <style:text-properties fo:font-family="StarSymbol" style:use-window-font-color="true" fo:font-size="45%"/>
   </text:list-level-style-bullet>
   <text:list-level-style-bullet text:level="6" text:bullet-char="●">
    <style:list-level-properties text:space-before="30mm" text:min-label-width="6mm"/>
    <style:text-properties fo:font-family="StarSymbol" style:use-window-font-color="true" fo:font-size="45%"/>
   </text:list-level-style-bullet>
   <text:list-level-style-bullet text:level="7" text:bullet-char="●">
    <style:list-level-properties text:space-before="36mm" text:min-label-width="6mm"/>
    <style:text-properties fo:font-family="StarSymbol" style:use-window-font-color="true" fo:font-size="45%"/>
   </text:list-level-style-bullet>
   <text:list-level-style-bullet text:level="8" text:bullet-char="●">
    <style:list-level-properties text:space-before="42mm" text:min-label-width="6mm"/>
    <style:text-properties fo:font-family="StarSymbol" style:use-window-font-color="true" fo:font-size="45%"/>
   </text:list-level-style-bullet>
   <text:list-level-style-bullet text:level="9" text:bullet-char="●">
    <style:list-level-properties text:space-before="48mm" text:min-label-width="6mm"/>
    <style:text-properties fo:font-family="StarSymbol" style:use-window-font-color="true" fo:font-size="45%"/>
   </text:list-level-style-bullet>
   <text:list-level-style-bullet text:level="10" text:bullet-char="●">
    <style:list-level-properties text:space-before="54mm" text:min-label-width="6mm"/>
    <style:text-properties fo:font-family="StarSymbol" style:use-window-font-color="true" fo:font-size="45%"/>
   </text:list-level-style-bullet>
  </text:list-style>
 </office:automatic-styles>
 <office:master-styles>
  <style:master-page style:name="Default" style:page-layout-name="pm1">
   <style:header>
    <text:p><text:sheet-name>???</text:sheet-name></text:p>
   </style:header>
   <style:header-left style:display="false"/>
   <style:footer>
    <text:p>Page <text:page-number>1</text:page-number></text:p>
   </style:footer>
   <style:footer-left style:display="false"/>
  </style:master-page>
  <style:master-page style:name="Report" style:page-layout-name="pm2">
   <style:header>
    <style:region-left>
     <text:p><text:sheet-name>???</text:sheet-name> (<text:title>???</text:title>)</text:p>
    </style:region-left>
    <style:region-right>
     <text:p><text:date style:data-style-name="N2" text:date-value="2016-06-13">00/00/0000</text:date>, <text:time style:data-style-name="N2" text:time-value="10:18:10.395903722">00:00:00</text:time></text:p>
    </style:region-right>
   </style:header>
   <style:header-left style:display="false"/>
   <style:footer>
    <text:p>Page <text:page-number>1</text:page-number> / <text:page-count>99</text:page-count></text:p>
   </style:footer>
   <style:footer-left style:display="false"/>
  </style:master-page>
 </office:master-styles>
 <office:body>
  <office:spreadsheet>
   <table:calculation-settings table:automatic-find-labels="false"/>
   <table:table table:name="C#" table:style-name="ta1">
    <table:table-column table:style-name="co1" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co2" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co3" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1021" table:default-cell-style-name="ce1"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>.Net</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>any language compiler that targets .NET must emit code in IL, intermediate language, rather than native processor code.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Programming languages that target .NET emit what we call managed code. As opposed to traditional compilers, the emitted code is not native to the processor that will execute it.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The Common Language Runtime, or CLR, is the .NET runtime environment that loads and manages our .NET programs and provides them with runtime services. We&apos;ll discuss the CLR in much detail in this module.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The Framework Class Library, or FCL, provides us with the essential building blocks we need in order to build our programs.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>In order to develop our programs, we need some building blocks - we can&apos;t start writing everything from scratch every time.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>The FCL is usable by all programming languages, since the vast majority of it is Common Language Specification compliant.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The Common Type System (CTS)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>The CTS specified how types in .NET are defined. The CLS is a subset of the CTS that must be supported by any .NET language.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>the .NET type system is type safety ? Example ? can&apos;t assign a small object to a bigger one. the latter would access wrong data in memory.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>// won&apos;t compile:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>LargeType l = (LargeType)s;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>C#</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>C# is a statically typed language. A variable can never change its type once declared. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro3" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string"><text:p>If the variable is of a reference type, it can still refer to instances of different types, as long as they derive from the type of the variable. </text:p><text:p>But the actual operations we can perform are always limited to those defined by the variable type, not by the actual type of instance it refers to.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro3" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce10" office:value-type="string" calcext:value-type="string"><text:p>The dynamic keyword is an exception to this rule. It allows performing operations on a variable based on the actual type of instance it will refer to at runtime. </text:p><text:p>As a consequence, errors are detected at runtime instead of at compile time. This is called dynamic typing or late binding.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="7">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>inheritance</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro4" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>If the variable is of a reference type, it can still refer to instances of different types, as long as they derive from the type of the variable. But the actual operations we can perform are always limited to those defined by the variable type, not by the actual type of instance it refers to.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>This is why when we have a reference of type object to an instance of type string, we cannot directly invoke anything that is not defined in object. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>BOXING</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce11" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T2">a value type converted to object or interface</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Every type, including int derives from object</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Up casting (converting up the inheritance hierarchy) is legal by definition</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>What happens when we cast from int to object?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>An object must refer to the heap, but the int is in the stack!</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>The solution is ... BOXING</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>int num1 = 20;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>// boxing:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>object o = num1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>// unboxing:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>int num2 = (int)o;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>num2 is different from num1 //hb: risk of infinite creation of reference type and value type variables</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>int? Num4 = (int?)o; //cast to nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>IConvertible convertibe = num1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>from a struct</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>MyValType v1 = new MyValType();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>v1.Data = 1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Console.WriteLine(&quot;v1 &quot; + v1.ToString());</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>// boxing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>object o1 = v1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce12" office:value-type="string" calcext:value-type="string">
       <text:p>Using a virtual or normal method defined in the base class, explicitly or implicitly (because not overridden)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>advanced - restriction</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>There is some restriction: Unboxing and data conversions are not allowed in a single operation.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>int num1 = 20;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>object o = num1;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>short num2 = (short)o; // runtime exception: throws an InvalidCastException. A boxed int must be unboxed as int.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>data conversions should happen in a different instruction.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>short num2 = (short)(int)o; // Once unboxed, the int can be converted to short</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1023"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>advanced - performance</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>-boxing occuring too many times may actually cause more garbage collections → slower code</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>-In C# boxing is implicit. So review the emitted IL code for the opcode BOX or contrained</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>Q:How to view the IL code</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
        <text:p>The constrained opcode checks if the value type it operates on overrides the method and if it doesn&apos;t, the value type is boxed. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1023"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:style-name="ce2" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>namespace</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>method1</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>System.IO.StreamWriter writer;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>method2</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>01using System.IO;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>03...</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>05StreamWriter writer;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>The type System.Console is defined in the assembly mscorlib.dll, whereas the type System.Uri is defined in the assembly System.dll.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>conversion/cast</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro5" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="6" table:number-rows-spanned="1"><text:p><text:span text:style-name="T3">Conversion 1: built-in types</text:span></text:p><text:p><text:span text:style-name="T3">int num1 = 10;</text:span></text:p><text:p><text:span text:style-name="T3">short num2 = (short)num1; // possible loss of data -&gt; explicit conversion needed</text:span></text:p><text:p/><text:p><text:span text:style-name="T3">short num2 = 10;</text:span></text:p><text:p><text:span text:style-name="T3">int num1 = num2; //no loss of data possible -&gt; no need for explicit conversion</text:span></text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="5"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T2">conversion 3 operators.Module 7</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T1">Conversion 2 complexe: class &quot;Convert&quot; is offered also, for more advanced conversion options that C# doesn&apos;t provide directly</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce7"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>enum</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce7"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro6" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p>enum Department : byte</text:p><text:p>{</text:p><text:p>    Sales = 10,</text:p><text:p>    IT = 20,</text:p><text:p>    RnD = 30,</text:p><text:p>    Management = 40</text:p><text:p>}</text:p><text:p>…</text:p><text:p>Department dep = Department.Sales;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>Note:the type byte, the values set</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>Use extenssion methods to enrich an enum</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce16" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="9" table:number-rows-spanned="1">
       <text:p>strongly typed. An int can&apos;t be used where enum is expected. But cast is possible : Department dep2 = (Department)10;</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="8"/>
      <table:table-cell table:number-columns-repeated="1014"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro7" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce17" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="8" table:number-rows-spanned="1"><text:p>operators are supported (comparison, …)</text:p><text:p>enum Priority</text:p><text:p>{</text:p><text:p>    Low,</text:p><text:p>    Normal,</text:p><text:p>    High,</text:p><text:p>}</text:p><text:p/><text:p>public void Process(</text:p><text:p>    Priority prio1,</text:p><text:p>    Priority prio2)</text:p><text:p>{</text:p><text:p>    if (prio1 &gt; prio2)</text:p><text:p>    {</text:p><text:p>        ...</text:p><text:p>    }</text:p><text:p>}</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>Enum derives System.Enum which derives from System.ValueType</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro8" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce18" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T4">the compiler emits sth like</text:span></text:p><text:p><text:span text:style-name="T4">struct Department : System.Enum</text:span></text:p><text:p><text:span text:style-name="T4">{</text:span></text:p><text:p><text:span text:style-name="T4">    public int value__;</text:span></text:p><text:p/><text:p><text:span text:style-name="T4">    public const Department Sales = (Department)0;</text:span></text:p><text:p><text:span text:style-name="T4">    public const Department IT = (Department)1;</text:span></text:p><text:p><text:span text:style-name="T4">    public const Department RnD = (Department)2;</text:span></text:p><text:p><text:span text:style-name="T4">    public const Department Management = (Department)3;</text:span></text:p><text:p><text:span text:style-name="T4">}</text:span></text:p><text:p><text:span text:style-name="T4">The only instance field it has is value__ which contains the actual numeric value of the current enum instance.</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro9" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p>System.Enum offers</text:p><text:p>    Non-static methods:</text:p><text:p>        ToString returns the name that corresponds to the current enum value</text:p><text:p>        GetHashCode returns the numeric value of the current instance</text:p><text:p>    Static methods:</text:p><text:p>        GetValues returns an array of all numeric values</text:p><text:p>        GetNames return an array of all names</text:p><text:p>        GetName returns the name that corresponds to the specified numeric value</text:p><text:p>        Parse / TryParse return an instance of the specified enum with the specified name</text:p><text:p>        IsDefined returns whether the specified value or name exists</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string">
       <text:p>flag</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro10" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce7"/>
       <table:table-cell table:style-name="ce17" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="10" table:number-rows-spanned="1"><text:p>[Flags]</text:p><text:p>02enum Mood</text:p><text:p>{</text:p><text:p>    None    = 0,</text:p><text:p>    Happy   = 0x01,</text:p><text:p>    Relaxed = 0x02,</text:p><text:p>    Good    = Happy | Relaxed,</text:p><text:p>    Sad     = 0x04,</text:p><text:p>    Grumpy  = 0x08,</text:p><text:p>    Bad = Sad | Grumpy</text:p><text:p>}</text:p><text:p/><text:p>Mood myMood = Mood.Happy | Mood.Relaxed;</text:p><text:p>if ((myMood &amp; Mood.Relaxed) == Mood.Relaxed)</text:p><text:p>{</text:p><text:p>}</text:p><text:p/><text:p>Using System.Enum.HasFlags </text:p><text:p>Mood myMood = Mood.Happy | Mood.Relaxed;</text:p><text:p>if (myMood.HasFlag(Mood.Relaxed))</text:p><text:p>{</text:p><text:p>}</text:p>
       </table:table-cell>
       <table:covered-table-cell table:number-columns-repeated="9"/>
       <table:table-cell table:number-columns-repeated="1012"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce7"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro11" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>visibility:</text:p><text:p>    Internal (default) - accessible by members of any types in the same assembly</text:p><text:p>    public - accessible by all</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Members Accessibility</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>private (default) - accessible by members of the containing class</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>protected - accessible by members of the containing class and derived classes even they are in other assemblies</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>internal - accessible by members of any types in the same assembly</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>protected internal -  accessible by members of any types in the same assembly or derived types</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>public - accessible by all</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>A member is affected by its accessibility modifier and by the visibility of the containing class - the more restrictive modifier prevails</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="6">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>constructor</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>static constructor</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="Default"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro9" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce16" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="25" table:number-rows-spanned="1"><text:p><text:span text:style-name="T5">-</text:span><text:span text:style-name="T6">Allows initialization of the type</text:span></text:p><text:p><text:span text:style-name="T5">-Invoked automatically by the CLR before first use of the type</text:span></text:p><text:p><text:span text:style-name="T5">-Guaranteed to execute only once and is thread-safe. If one is running it, others will wait it to finish, and will not run it again.</text:span></text:p><text:p><text:span text:style-name="T2">-If static constructor throws an exception, TypeLoadException is thrown and the type becomes unusable</text:span></text:p><text:p><text:span text:style-name="T2">-Static constructors of structures are not guaranteed to run! if we use a structure without the new keyword, no constructor is getting called and the static constructor will not get called either.</text:span></text:p><text:p/><text:p><text:span text:style-name="T7">class</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">SomeClass</text:span><text:span text:style-name="T2">{    </text:span><text:span text:style-name="T9">private</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">static</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">Logger</text:span><text:span text:style-name="T2"> logger;    </text:span><text:span text:style-name="T9">static</text:span><text:span text:style-name="T2"> SomeClass()    {        logger = </text:span><text:span text:style-name="T9">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">Logger</text:span><text:span text:style-name="T2">();        logger.Init();    }}</text:span></text:p><text:p><text:span text:style-name="T2">-</text:span><text:span text:style-name="T10">beforefieldinit</text:span><text:span text:style-name="T11"> flag allows the JIT to call the static constructor at an optimal point of time (to avoid checking at the middle of a loop).  </text:span></text:p><text:p><text:span text:style-name="T2">C# compiler automatically determines when to specify the flag</text:span></text:p><text:p><text:span text:style-name="T2">        NOT specified when an explicit static constructor is defined. Specified when static field initializers are used</text:span></text:p>
       </table:table-cell>
       <table:covered-table-cell table:style-name="Default"/>
       <table:covered-table-cell table:number-columns-repeated="23"/>
       <table:table-cell table:number-columns-repeated="998"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>destructor</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>object initializer</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>static members</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>fields</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro12" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce17" office:value-type="string" calcext:value-type="string"><text:p>-Fields may be initialized at their declaration</text:p><text:p><text:span text:style-name="T12">Public int f=1;</text:span></text:p><text:p>-The compiler inserts the initialization to the beginning of every constructor</text:p><text:p>-</text:p><text:p>-Field initialization in structures:</text:p><text:p>--Not allowed for instance fields</text:p><text:p>--Allowed for static fields, but should not be used. because <text:a xlink:href="http://mottishaked.com/training/dot-net-tutorial/107/defining-types/static-constructors" xlink:type="simple">static constructors</text:a> are not guaranteed to be executed.</text:p><text:p><text:span text:style-name="T13">-Initialization occurs before calling the base class&apos; constructor</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:style-name="Default"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro13" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce19" office:value-type="string" calcext:value-type="string"><text:p>Modifiers:</text:p><text:p>    static – initialization is inserted to the static constructor. And are stored within the type object. If also readonly, its value can set only in the static constructor </text:p><text:p>    readonly - can be set only within the constructor or in the declaration line. Note that we can still call methods that change its state.</text:p><text:p>    const - defines a constant value. Impllicitly static. Only with primitives. Its value is embedded in code wich is efficient but dependency/verionning-problematic. Use internal access qualifier. But Overcome, by using readonly static qualifiers. </text:p><text:p>Class hoho</text:p><text:p>{</text:p><text:p>Readonly StringBuilder str = new StringBuilder(&quot;Hello&quot;);</text:p><text:p>    void SomeMethod()</text:p><text:p>    {</text:p><text:p>        // error</text:p><text:p>        str = new StringBuilder(&quot;Bye&quot;);</text:p><text:p>        // ok</text:p><text:p>        str.Clear();</text:p><text:p>        str.Append(&quot;Bye&quot;);</text:p><text:p>    }</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="Default"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>methods</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>the most common method modifiers are static, virtual, abstract, override, sealed and new. Here is a discussion of each modifier.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>static</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>virtual - the method may be overridden in a derived class</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>abstract - the method has no implementation. Containing class cannot be instanciated. Derived classes must override it. or be abstract</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>without override ?</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>override - overrides a virtual or abstract method defined in a base class.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>sealed - prevents a method from being overridden</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>new - hides a method with the same signature defined in the base class. Without new keyword, compiler emits warning</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:style-name="ce3" office:value-type="string" calcext:value-type="string">
        <text:p>other overload rules ?</text:p>
       </table:table-cell>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>we can&apos;t overload a method that differs only by out and ref because They qre the same for the CLR</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>parameters</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>By default parameters are passed by value</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>When passing a value type the actual instance is copied</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>When passing a reference type the reference is copied</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    Use <text:span text:style-name="T15">ref</text:span> to pass by reference</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>The address of the variable, value type or reference, is copied</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>Changed to the parameter inside the method affect the original</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro14" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>        Method2(<text:span text:style-name="T38">ref</text:span> r);</text:p><text:p>        static void Method2(<text:span text:style-name="T38">ref</text:span> MyRefType r)</text:p><text:p>        {</text:p><text:p>            r = new MyRefType();</text:p><text:p>        }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    Use <text:span text:style-name="T15">out</text:span> to define an output parameter</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>The caller does not have to initialize the passed variable</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="8"/>The callee must assign a value before it returns</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>Array and variable number of parameters</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row-group table:display="false">
        <table:table-row table:style-name="ro1" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell office:value-type="string" calcext:value-type="string">
          <text:p>an array is a ref type</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>double Average(double[] nums)</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>{</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    if (nums == null || nums.Length == 0)</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>        return 0;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="float" office:value="5" calcext:value-type="float">
          <text:p>5</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    double sum = 0;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    foreach (double num in nums)</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    {</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>        sum += num;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    }</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="float" office:value="11" calcext:value-type="float">
          <text:p>11</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    return sum / nums.Length;</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>}</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>…</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>double avg = Average(new double [] { 2, 4, 6, 8});</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>    </text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro3" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>double Average(params double[] nums) { … }</text:p><text:p><text:span text:style-name="T39">double avg = Average( 2, 4, 6, 8);</text:span></text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14"/>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro11" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>A call to a method with variable number of parameters is less efficient than a call to a method with fixed number of parameters, because before the method can be invoked an array must be created and initialized. Also, the array must later be garbage collected, which is even more work.</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>provide multiple overloaded versions of the method that accept different number of parameters.</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro4" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>double Average(double num1, double num2) { ... }</text:p><text:p>double Average(double num1, double num2, double num3) { ... }</text:p><text:p>double Average(double num1, double num2, double num3, double num4) { ... }</text:p><text:p>Double Average(params double[] nums) { ... }</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="1024"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>The last parameter to a method may be marked with the params keyword</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>It must be an array and can be of any type</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>When the compiler emits code for a call to a method with params, it creates an array and assigns values</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>Use of params is less efficient because an array is used</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>Use multiple overloaded versions to reduce calls to method with params</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>To pass an unknown number of parameters of any type use an array of object</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro2" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
          <text:p>When passing null, the array is never created</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="1024"/>
        </table:table-row>
        <table:table-row table:style-name="ro4" table:visibility="collapse">
         <table:table-cell table:number-columns-repeated="2"/>
         <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>void Method(params object[] objs) { … }</text:p><text:p>Method(null); //array never created</text:p><text:p>Method(null, null, null); //array created with three null ref</text:p><text:p>Method(new object[] { null }); //array created with one null ref</text:p>
         </table:table-cell>
         <table:table-cell table:number-columns-repeated="1021"/>
        </table:table-row>
        <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
         <table:table-cell table:number-columns-repeated="1024"/>
        </table:table-row>
       </table:table-row-group>
      </table:table-row-group>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Optional, named params</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row-group>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
         <text:p>It&apos;s possible to provide parameters by name</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro5" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>void Method(int p1, int p2, int p3)</text:p><text:p>{</text:p><text:p>}</text:p><text:p/><text:p>Method(p3: 3, p2: 2, p1: 1);</text:p><text:p/>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>void Method(ref int p1, out int p2)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>int num1 = 1;</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>int num2;</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce39" office:value-type="string" calcext:value-type="string"><text:p>Method(p1: ref num1, p2: out num2); <text:span text:style-name="T40">//note the systaxe when naming ref and out param</text:span></text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
         <text:p>Q:How about naming by-value params ?</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
         <text:p>Default param values:</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce40"/>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce40" office:value-type="string" calcext:value-type="string">
         <text:p>order of appearance: required (non optional + ref + out), optional, params parameters</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro3" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>the default values are resolved when the caller is compiled, rather than at runtime. This means that if the default values change, the caller will still use the old defaults until it recompiles. </text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce40" office:value-type="string" calcext:value-type="string">
         <text:p>You should also avoid renaming parameters, because the caller will need to be modified accordingly if it resides in a different assembly</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro3" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>When adding a new optional parameter to a method, you should add it after existing optional parameters. Otherwise existing code may provide values to the wrong parameters.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro4" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>watch out for inheritance scenarios because the default values might not be what you expect them to be. More specifically, you should remember that it&apos;s the compiler that resolves the default of optional parameters, not the runtime. So the default is assigned based on the type known at compile time, even if at runtime the actual object might be of another type.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14"/>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce20"/>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>void Method(int p1 = 1, int p2 = 2, int p3 = 3)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>02{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>03}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>07Method();</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>09Method(10, 20); //p3 will take 3</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>11Method(p2: 20, p3: 30); <text:span text:style-name="T37">//We MUST name params if want to skip some of them</text:span></text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>Optional parameters cannot be used with ref and out.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>Not any value can be specified as default, only what the compiler considers a compile-time constant. When the compiler encounters a method with optional arguments it must persist the default values, and it can only persist compile-time constants.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro3" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Any C# primitive, such as int or string can be a default value.</text:p><text:p>void Method1(int num = 10, string str = &quot;Hello&quot;, bool flag = false) { }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro5" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>if the parameter is a reference type we can always specify null. </text:p><text:p>void Method2(System.IO.FileInfo file = null) { }</text:p><text:p>void Method3(int[] nums = null) { }</text:p><text:p/><text:p>If you have to specify a default array, you can&apos;t use optional parameters. </text:p><text:p>Instead you should create two overloaded versions of the method, one that accepts an array and one without parameters that creates an array and calls the first version.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>any value type, as long as it&apos;s in its default state where the value of all members is 0. so use default constructor or default keyword</text:p><text:p>void Method4(DateTime date = new DateTime()) { }</text:p><text:p>void Method5(DateTime date = default(DateTime)) { }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro15" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>// won&apos;t compile</text:p><text:p>12void Method6(DateTime date = new DateTime(2010, 1, 1)) { }  //fileds are not 0</text:p><text:p>14// workaround</text:p><text:p>15void Method7(DateTime? date = null)</text:p><text:p>16{</text:p><text:p>17    time = date ?? new DateTime(2010, 1, 1);</text:p><text:p>18}</text:p><text:p>The ?? operator is called the null-coalescing operator. It returns the left-hand operand if the operand is not null; otherwise it returns the right hand operand.</text:p><text:p>int? num = null; // num can have any int value and also null, hence the type int?. In this case num == null. </text:p><text:p/><text:p>// Is the HasValue property true?</text:p><text:p>        if (num.HasValue)</text:p><text:p>        {</text:p><text:p>            System.Console.WriteLine(&quot;num = &quot; + num.Value); <text:span text:style-name="T37">//Q:is num.Value mandatory ?</text:span></text:p><text:p>        }</text:p><text:p>        else</text:p><text:p>        {</text:p><text:p>            System.Console.WriteLine(&quot;num = Null&quot;);</text:p><text:p>        }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>interface I</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>02{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>03    void Method(int num = 10);</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>04}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="float" office:value="5" calcext:value-type="float">
         <text:p>5</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>06class A : I</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>07{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>08    public void Method(int num)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>09    {</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>10        Console.WriteLine(num);</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>11    }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>12}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="float" office:value="13" calcext:value-type="float">
         <text:p>13</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>14...</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="float" office:value="15" calcext:value-type="float">
         <text:p>15</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>16A a = new A();</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>17a.Method(); //error. Because <text:span text:style-name="T41">Method is implemented without a default param.</text:span></text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1021"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="5">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
       <text:p>properties</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro14" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Properties are a .NET feature, not a C# feature</text:p><text:p>Look like methods without parameters.</text:p><text:p>Has get, set or both</text:p><text:p><text:span text:style-name="T14">Can have any code in the ?etter. Watch out:Debugger invokes get accessor of property, So avoid having any side effects in it like incrementing a value when called</text:span></text:p><text:p><text:span text:style-name="T14">Properties are methods, so they can be static, virtual, abstract and can be in interfaces</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>01class Circle</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    private double radius;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>05    public double Radius</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07        get { return this.radius; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>08        set { this.radius = <text:span text:style-name="T15">value</text:span>; } //value is a keyword used only in set accessor of properties. Nowhere else. It represents the value to set.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="10" calcext:value-type="float">
        <text:p>10</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>11    public double Area</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>12    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>13        get { return this.radius * this.radius * 3.14; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>14    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>15}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Circle c;</text:p><text:p>c.Radius = 3;</text:p><text:p>double d = c.Area;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
        <text:p>automatic properties</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row-group>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>class Circle</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro14" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>     public Circle(double radius)</text:p><text:p>    {</text:p><text:p>        this.Radius = radius;</text:p><text:p>    }</text:p><text:p>     Public double Radius { get; private set; }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>The compiler automatically generates the field, a get accessor to return its value and a set accessor to set its value.</text:p><text:p>Note, The set accessor is private. So c.Radius = 5; is illegal but the constructor can set it.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>Automatic properties must be both readable and writable.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="1024"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce21" office:value-type="string" calcext:value-type="string">
         <text:p>overridable property</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>abstract class Shape</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>02{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>03    public abstract string ShapeType { get; }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>04}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="float" office:value="5" calcext:value-type="float">
         <text:p>5</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>06class Circle : Shape</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>07{</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>08    public override string ShapeType</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>09    {</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>10        get { return &quot;Circle&quot;; }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>11    }</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>12}</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14"/>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce21" office:value-type="string" calcext:value-type="string">
         <text:p>benefits/rules</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>If validity check is neded in the ?et accessor, then create the property manually (get, set, field)</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>And there&apos;s no way to set its value in the declaration line, only in constructors, ALL</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>cannot pass them to methods as <text:a xlink:href="http://mottishaked.com/training/dot-net-tutorial/128/fields-methods-properties/pass-by-value-pass-by-reference" xlink:type="simple">ref or out</text:a> parameters. </text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro3" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>component in the .NET framework and Visual Studio take advantage of properties, which they cannot with simple, disjoint get and set methods.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro3" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>Visual Studio also helps while debugging. Debugger invokes get accessor of property, So avoid having any side effects in it like incrementing a value.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro4" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>a user interface control, with properties to get and set your control&apos;s attributes, Visual Studio will allow users to get and set properties values through the user interface designer. This happens automatically and without any effort on your part, because the Visual Studio designer looks for properties by reading the metadata.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro3" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>properties accessors should have leightweight code. Imagine the impact when VS debugger uses get accessor, or users calling set every time. Otherwise define methods.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro11" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>Take advantage of inlining: JIT compiler will emit the code that is in the accessor directly into the code that uses it. But if the accessor is long JIT compiler will emit a call to the property&apos;s accessor method</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
         <text:p>inlining happens for any short method. But never happens in debug mode.</text:p>
        </table:table-cell>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
       <table:table-row table:style-name="ro1" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce14"/>
        <table:table-cell table:number-columns-repeated="1022"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
       <text:p>indexers</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>public class GradeHolder</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    private int[] counts = new int[100];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    private string[] names = new string[100];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>05    public int this[int grade]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07        get { return this.counts[grade];}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08        set { this.counts[grade] = value; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>05    public int this[string name]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07        get { return this.names[name];}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08        set { this.names[name] = value; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>14GradeHolder holder = new GradeHolder();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce21" office:value-type="string" calcext:value-type="string">
        <text:p>15holder[100] = 10;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce21" office:value-type="string" calcext:value-type="string">
        <text:p>16holder[99] = 33;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce21"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>the parameter can be anything else, such as string or any custom type. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>We can define indexers that accept multiple parameters, which makes them seem like a multidimensional array. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Also, we can define multiple indexers in the same type if their signature is different.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Another limitation of indexers is that they cannot be defined as static. Again, this is a limitation of C#, not a limitation of .NET.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>.NET treats indexers just like regular properties. But C# treats them very differently:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>we cannot give an indexer a name</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="5"/>it is accessed directly on the instance using square brackets.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>.NET sees an indexer is just another property, and the generated IL calls it Item.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>if our component is consumed by other languages, we might want to change the name to something more meaningful. But this has no effect on any usage of this class from C#</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>public class GradeHolder</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    private int[] counts = new int[101];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>05    <text:span text:style-name="T16">[IndexerName(&quot;Count&quot;)]</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    public int this[int grade]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08        get { return this.counts[grade];}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09        set { this.counts[grade] = value; }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>10    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>11}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>hassan: in the IL the indexer will be called Count instead of Item</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>operators</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Unary: +, -, !, ~, ++, --, true, false</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Binary: +, -, *, /, %, &amp;, |, ^, &lt;&lt;, &gt;&gt;, ==, !=, &gt;, &lt;, &gt;=, &lt;=</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>Operators are defined with the <text:span text:style-name="T17">operator</text:span> keyword, must be <text:span text:style-name="T17">public</text:span> and <text:span text:style-name="T17">static</text:span> and at least one of the parameters must be of the containing type</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>The compiler emits operators as methods with op_ prefix</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>some operator become automatically available when one is overloaded. We get += for free when + is defined</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>some operators must be overloaded together. When == is defined, != should be also</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>compiler recommends to redefine System.Object.Equals when == is overloaded</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="1024"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>struct Currency</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    ...</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>05    <text:span text:style-name="T17">public static</text:span> bool <text:span text:style-name="T17">operator</text:span> ==(Currency c1, Currency c2)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07        return c1.Sign == c2.Sign &amp;&amp; c1.Value == c2.Value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="9" calcext:value-type="float">
        <text:p>9</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>10    public static bool operator !=(Currency c1, Currency c2)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>11    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>12        return c1.Sign != c2.Sign || c1.Value != c2.Value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>13    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>public static Currency operator +(Currency c1, decimal d)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>07        return new Currency(c1.Sign, c1.Value + d);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>14}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>conversion operators</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>If conversion is not possible, C# tries to cast instead</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Casting is legal when the type we are casting to is up or down the inheritance hierarchy from the type we are casting from. But casting doesn&apos;t convert anything. It just refers to the same object using a different type of reference.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>struct Currency</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    ...</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>22    public static <text:span text:style-name="T17">implicit</text:span> operator Currency(decimal d) //conversion from decimal to Currency</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>23    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>24        return new Currency(&apos;$&apos;, d);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>25    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="26" calcext:value-type="float">
        <text:p>26</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>27    public static implicit operator decimal(Currency c)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>28    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>29        return c.Value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>30    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>01public static <text:span text:style-name="T17">explicit</text:span> operator int(Currency c) //possible loss of data from decimal to int, hence explicit</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    return (int)c.value;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>04}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="5" calcext:value-type="float">
        <text:p>5</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>14}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Currency price = 20; // $20</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>34decimal d = price;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08// compile-time error:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09int n1 = price; <text:s/>//to use the int conversion operator an explicit cast is to be used</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="float" office:value="10" calcext:value-type="float">
        <text:p>10</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>11// explcit conversion - ok</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>12int n2 = (int)price;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce22" office:value-type="string" calcext:value-type="string">
        <text:p>Converting to non-nullable is only allowed when the nullable has a value. Otherwise it will throw an InvalidOperationException. And when a conversion might fail it should be done explicitly. See Nullable below for more info</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
      <text:p>Find topic about Template in C#. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Nullable&lt;int&gt; num1 = 10; var numsList = new List&lt;int&gt;();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce5" office:value-type="string" calcext:value-type="string">
      <text:p>anonymous methods and lambda expression</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Interface</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T18">    An interface contains no implementations</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T18">    A class or structure may implement one or more interfaces</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce23" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="11" table:number-rows-spanned="1">
       <text:p><text:s text:c="4"/>The implementing type must provide implementations to all members defined by the interface and must be public</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="10"/>
      <table:table-cell table:number-columns-repeated="1012"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce15" office:value-type="string" calcext:value-type="string">
       <text:p/>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T7">interface</text:span><text:span text:style-name="T18"> </text:span><text:span text:style-name="T19">IVehicle</text:span><text:span text:style-name="T18">{    </text:span><text:span text:style-name="T20">void</text:span><text:span text:style-name="T18"> IncreaseSpeed();    </text:span><text:span text:style-name="T20">void</text:span><text:span text:style-name="T21"> DecreaseSpeed();}</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro16" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T22">interface</text:span><text:span text:style-name="T13"> </text:span><text:span text:style-name="T23">ImotorizedVehicle </text:span><text:span text:style-name="T13">: </text:span><text:span text:style-name="T24">IVehicle</text:span><text:span text:style-name="T13">{    </text:span><text:span text:style-name="T25">void</text:span><text:span text:style-name="T13"> StartEngine();}</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro17" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce25" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="13" table:number-rows-spanned="1"><text:p><text:span text:style-name="T26">class</text:span><text:span text:style-name="T27"> </text:span><text:span text:style-name="T28">MyCar</text:span><text:span text:style-name="T27"> :  someBaseClass, </text:span><text:span text:style-name="T28">ImotorizedVehicle</text:span></text:p><text:p><text:span text:style-name="T27">{    </text:span></text:p><text:p><text:span text:style-name="T26">public</text:span><text:span text:style-name="T27"> </text:span><text:span text:style-name="T29">void</text:span><text:span text:style-name="T27"> IncreaseSpeed()    {    }    </text:span></text:p><text:p><text:span text:style-name="T26">public</text:span><text:span text:style-name="T27"> </text:span><text:span text:style-name="T29">void</text:span><text:span text:style-name="T27"> DecreaseSpeed()    {    }    </text:span></text:p><text:p><text:span text:style-name="T26">public</text:span><text:span text:style-name="T27"> </text:span><text:span text:style-name="T29">void</text:span><text:span text:style-name="T30"> StartEngine()    {    }</text:span></text:p><text:p><text:span text:style-name="T31">}</text:span></text:p><text:p/><text:p><text:span text:style-name="T31">Car myCar = new Car();</text:span></text:p><text:p><text:span text:style-name="T31">Ivehicle myVehicle = myCar;</text:span></text:p><text:p/><text:p><text:span text:style-name="T31">myVehicle.IncreaseSpeed();</text:span></text:p><text:p><text:span text:style-name="T31">myCar.IncreaseSpeed();</text:span></text:p><text:p><text:span text:style-name="T31">myCar.Stop();</text:span></text:p><text:p><text:span text:style-name="T31">// error:</text:span></text:p><text:p><text:span text:style-name="T31">myVehicle.Stop();</text:span></text:p><text:p/><text:p><text:span text:style-name="T31">// error : cannot instantiate interface</text:span></text:p><text:p><text:span text:style-name="T31">IVehicle anotherVehicle = new IVehicle();</text:span></text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="12"/>
      <table:table-cell table:number-columns-repeated="1010"/>
     </table:table-row>
     <table:table-row table:style-name="ro3" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce26" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1"><text:p><text:span text:style-name="T32">a derived class can redefine an interface method inhereted from its base class. Specify the interface name, otherwize the new implementation will not be invoked:</text:span></text:p><text:p><text:span text:style-name="T32">class MyCar2 : MyCar, ImotorizedVehicle { public void IncreaseSpeed() {} }</text:span></text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce25" office:value-type="string" calcext:value-type="string">
       <text:p>explicit implementation</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>interface name appears in implementation</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce41" office:value-type="string" calcext:value-type="string">
        <text:p>implementation does not have “public” access modifier</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>called only through the interface ref</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>interface IVehicle</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>02{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>03    void IncreaseSpeed();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>05    void DecreaseSpeed();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>06}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>08class Car : IVehicle</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>09{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>10    void <text:span text:style-name="T42">Ivehicle</text:span>.IncreaseSpeed() <text:span text:style-name="T42">//note the absence of public access modifier</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>11    {</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>12        ...</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>13    }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>15    public void DecreaseSpeed() { … }</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>16}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce25"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>to avoid collisions</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Car myCar = new Car();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>myCar.IncreaseSpeed(); //error. IncreaseSpeed is explicitly implemented</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>myCar.DecreaseSpeed(); //OK. implicitly implemented</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Ivehicle myVehicle = myCar;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>myVehicle.IncreaseSpeed();</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce27"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce27"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>extension methods</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Method 1: static method in a static class</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>static class StringUtils</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>03    public static int WordCount(string str)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>04    {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>05        return str.Split(&apos; &apos;).Length;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>06    }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>07}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>11string str = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce28" office:value-type="string" calcext:value-type="string">
       <text:p>12int count = StringUtils.WordCount(str);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Method 2: extension method:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>static class StringExtensions</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce29" office:value-type="string" calcext:value-type="string"><text:p>    public static int WordCount(<text:span text:style-name="T33">this</text:span> string str)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>    {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>        return str.Split(&apos; &apos;).Length;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>    }</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>string str = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce30" office:value-type="string" calcext:value-type="string">
       <text:p>int count = str.WordCount();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="7" table:number-rows-spanned="1">
       <text:p>Extension methods are static methods that are defined in a static non-generic class. </text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="6" table:style-name="ce42"/>
      <table:table-cell table:style-name="ce42"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" table:number-columns-spanned="7" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="6" table:style-name="ce42"/>
      <table:table-cell table:style-name="ce42"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="7" table:number-rows-spanned="1">
       <text:p>Extension methods can apply to classes, structures, enums, interfaces and delegates</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="6" table:style-name="ce42"/>
      <table:table-cell table:style-name="ce42"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce32" office:value-type="string" calcext:value-type="string">
       <text:p>Limitations:</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce42" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce32" office:value-type="string" calcext:value-type="string">
       <text:p>Applies to the specified class and all derived classes</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce42" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell table:style-name="ce6" office:value-type="string" calcext:value-type="string">
       <text:p>Example ?</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce32" office:value-type="string" calcext:value-type="string">
       <text:p>To be accessible the class must be in the current namespace scope. </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce42" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="8" table:number-rows-spanned="1">
       <text:p>If there is more than one extension method with the same signature for the same type, neither can be invoked. But we can still invoke the extension method as regular static methods.</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="7" table:style-name="ce42"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="8" table:number-rows-spanned="1">
       <text:p>If there is an extension method with the same signature as a member method, the extension method cannot be invoked. But we can still invoke the extension method as regular static methods.</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="7" table:style-name="ce42"/>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>RTTI</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>Reference has an overhead of 8 or 16 bytes. The first part is the pointer to the heap. The second part is a pointer to the System.Type instance that represents its type.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce13" office:value-type="string" calcext:value-type="string">
      <text:p>How does the CLR know which type to point at when boxing? The compiler provides this information. Check the IL code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T34">XmlSerializer</text:span> serializer = <text:span text:style-name="T35">new</text:span> <text:span text:style-name="T34">XmlSerializer</text:span>(<text:span text:style-name="T35">typeof</text:span>(Employee));</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
      <text:p>XmlSerializer requires an instance of System.Type</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:style-name="ce7" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T1">STRUCT</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Structures are value types: always allocated in the stack</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Always derive from System.ValueType</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Cannot be the base for other types.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Defined with the struct keyword.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce4" office:value-type="string" calcext:value-type="string">
       <text:p>Q : what is the difference between struct and class ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May be created with or without the new keyword.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A constructor is only invoked if new is used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="7"/>If new is not used, all fields must be initialized prior to use (Because no constructor is called) Otherwise, no function call, no passing fields to functions.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>A structure may have constructors</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A default constructor may NOT be defined explicitly. It is always automatically available even when other constructors are defined.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A constructor must initialize all fields. Otherwise compile error.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>A constructor may not call a base class&apos; constructor (System.ValueType) but may call another constructor of the same struct</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>Initialization of non-static fields at the declaration in a structure is not allowed.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Suitable for lightweight objects such as Point, Rectangle and Color</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>When inheritance is not required</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May not be the best choice when boxing is a concern</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May be more efficient than class is some scenarios thanks of the absence of the overhead</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce24" office:value-type="string" calcext:value-type="string"><text:p>    Also used for interoperability with unmanaged code. <text:span text:style-name="T36">Example?</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>May be suitable for larger object that are never passed to or returned from methods, or otherwise assigned. Because on assignment the instance is copied.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>struct Point</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{ <text:s text:c="3"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public int X; <text:s text:c="3"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public int Y; <text:s text:c="3"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public Point(int x, int y) <text:s text:c="2"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{ <text:s text:c="7"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>this.X = x; <text:s text:c="7"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>this.Y = y; <text:s text:c="3"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>} <text:s text:c="3"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public void PrintValue() <text:s text:c="3"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{ <text:s text:c="7"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Console.WriteLine( &quot;{0},{1}&quot;, <text:s/>this.X, this.Y); <text:s text:c="3"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>System.Object</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>Default implementation in System.Object:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>GetHashCode returns an unpredictable hash code</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Equals performs an identity test. which means that two separate instances of a class will not be considered equal, even if their fields have equal values.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Default implementation in System.ValueType:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>GetHashCode returns a value calculated arbitrarily from one or more of its field</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Equals compares the all actual fields, but may be slow due to use of reflection</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>object myVar = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>02myVar = true;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
       <text:p>03myVar = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro11" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce33" office:value-type="string" calcext:value-type="string">
       <text:p>everything in .NET derives from object, there is no problem with any of these assignments. It is perfectly valid to cast anything to object and the cast can be implicit, so the assignments work just fine.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>09object [] paramVals = new object [] { &quot;world&quot;, 3 };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>dynamic</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>01object myVar = 10;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>02myVar = true;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>03myVar = &quot;hello world&quot;;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>05// won&apos;t compile: because myVar is object which doesnot define IndexOf</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>06int index = myVar.IndexOf(&quot;world&quot;);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>solution use dynamic</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>dynamic myVar = 10;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>02myVar = true;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>03myVar = &quot;hello world&quot;;</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="float" office:value="4" calcext:value-type="float">
        <text:p>4</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce9" office:value-type="string" calcext:value-type="string">
        <text:p>06int index = myVar.IndexOf(&quot;world&quot;);</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
        <text:p>the compiler does not check, the CLR will and will throw exception</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce34" office:value-type="string" calcext:value-type="string">
        <text:p>If the variable is of a reference type, it can still refer to instances of different types, as long as they derive from the type of the variable. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce34" office:value-type="string" calcext:value-type="string">
        <text:p>But the actual operations we can perform are always limited to those defined by the variable type, not by the actual type of instance it refers to.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce34"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce35" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T12">The dynamic keyword is an exception to this rule. It allows performing operations on a variable based on the actual type of instance it will refer to at runtime. </text:span></text:p><text:p><text:span text:style-name="T12">As a consequence, errors are detected at runtime instead of at compile time. This is called dynamic typing or late binding.</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce2"/>
       <table:table-cell table:number-columns-repeated="1022"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce36" office:value-type="string" calcext:value-type="string">
       <text:p>Q:what is reflection ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce2" office:value-type="string" calcext:value-type="string">
       <text:p>reflection is used by the default implementation of Equals to access the fields of our structure, which is much slower than direct access.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>A techinique to find the method and invoke it.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>05// invoke IndexOf using reflection</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>01object myVar = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>02myVar = true;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>03myVar = &quot;hello world&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
       <text:p>Type type = myVar.GetType(); //obtain a representation of the object&apos;s runtime type information</text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Type[] paramTypes = new Type[] { typeof(string) };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1"><text:p>MethodInfo method = type.GetMethod(&quot;IndexOf&quot;, paramTypes); <text:span text:style-name="T37">//what if GetMethod returns null ?</text:span> </text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>09object [] paramVals = new object [] { &quot;world&quot; };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
       <text:p>10int index = (int)method.Invoke(myVar, paramVals); //Invoke returns an Object. But casting to int because IndexOf returns int</text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="5">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>System.Nullable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>A nullable value type is represented with the System.Nullable structure.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce38" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="5" table:number-rows-spanned="1">
       <text:p>A nullable is a structure that internally contains two components: a boolean that specifies whether a value exists + the actual value. </text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="4" table:style-name="ce8"/>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>Since System.Nullable is a structure, it&apos;s still a value type.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
       <text:p>The value in System.Nullable can be of any type. </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>01Nullable&lt;int&gt; num1 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>02Nullable&lt;int&gt; num2 = null;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce8" table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="float" office:value="3" calcext:value-type="float">
       <text:p>3</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>04int? num3 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>05int? num4 = null;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>03if (num1.HasValue)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>04{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>05}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="float" office:value="6" calcext:value-type="float">
       <text:p>6</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>07if (num1 == null)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>08{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>09}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>01// uses conversion operator from non nullable to nullable </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>02int? num1 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="float" office:value="3" calcext:value-type="float">
       <text:p>3</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>04// uses conversion operator non nullable to non nullable </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>05int num2 = (int)num1; <text:s/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>Converting to non-nullable is only allowed when the nullable has a value. Otherwise it will throw an InvalidOperationException. And when a conversion might fail it should be done explicitly.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
      <text:p>BOXING</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>// create a nullable int without a value</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>02Nullable&lt;int&gt; num = new Nullable&lt;int&gt;();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>04// box by casting to object</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>05object obj = num;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>07// check if null</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>08if (obj == null)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>09{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>10    Console.WriteLine(&quot;null&quot;);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>11}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>// create a nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>02int? num1 = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>04// box it</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>05object obj = num1;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>07// unbox as a nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>08int? num2 = (int?)obj;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>10// unbox as a non-nullable int</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>11int num3 = (int)obj;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string">
       <text:p>boxing a nullable, boxes the underlying value.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="4" table:number-rows-spanned="1">
       <text:p>calling GetType method on a nullable type, it gets invoked on the underlying value instead, which first gets boxed</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Nullable&lt;int&gt; num = new Nullable&lt;int&gt;(10);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>03// prints System.Int32</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro3" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce31" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1"><text:p>04Console.WriteLine(num.GetType()); //if you invoke GetType on a nullable that has no value, a NullReferenceException will be thrown. </text:p><text:p>That&apos;s because when boxing a Nullable that has no value the CLR returns null.</text:p>
      </table:table-cell>
      <table:covered-table-cell/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Implicitly Typed Local Variables</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>A local variable may be declared as var - compiler infers the type</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>01// compiler determines that type is string</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>02var text1 = &quot;hello&quot;;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>// List&lt;int&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>11var numsList = new List&lt;int&gt;();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>13// int[]</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>14var numsArray = new[] {1, 2, 3, 4, 5};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>16// can be used in loops</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>17foreach (var oneNum in numsArray)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>18{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>19    Console.WriteLine(oneNum);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>20}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Limitations:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Must be assigned a value at the declaration</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Cannot be assigned null initially</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Only local variables: no parameters, return types or fields</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Cannot be nullable. var? Num1 = 10; //illegal</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Statically typed - cannot change after declaration</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>var someVar = &quot;some string&quot;; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>someVar = 10; // won&apos;t compile</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>01int GetNum()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>02{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>03    var num = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>04    return num; //compiler has determined that it is an int; This method returns int, not a var.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>05}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Guidelines:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>Do you need an int?   </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>Use with anonymous types, <text:a xlink:href="http://msdn.microsoft.com/en-us/netframework/aa904594" xlink:type="simple">LINQ</text:a>, cumbersome generic types</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>// use var when LINQ returns anonymous types</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>14var res3 = from n in nums</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>15            where n &gt;= 5</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>16            select new { Num = n, IsEven = (n % 2 == 0) };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="15">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="float" office:value="4" calcext:value-type="float">
      <text:p>4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="float" office:value="5" calcext:value-type="float">
      <text:p>5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="1047795">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="15">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="C# faq" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce47"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.allinoneplace.info/FAQ/Programming/DotNetFaq.aspx</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p>C#.NET FAQ</text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="150">
      <text:p>1.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="150">
      <text:p>What is C#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>C# (pronounced C-Sharp) is a new programming language introduced with the Microsoft .NET framework and is no doubt the language of choice in .NET environment. It was first created in the late 1990&apos;s as part of Microsoft’s whole .NET strategy. It is a whole new language free of backward compatibility curse and a whole bunch of new, exciting and promising features. It is an Object Oriented Programming language, which at its core, has similarities with Java, C++ and VB.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46" table:number-columns-spanned="2" table:number-rows-spanned="1"/>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>2.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What are Jagged Arrays in C#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>A special type of array is introduced in C#. A Jagged Array is an array of an array in which the length of each array index can differ. Example: A Jagged Array can be used is to create a table in which the lengths of the rows are not same. This Array is declared using square brackets ( [ ] ) to indicate each dimension.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>3.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>How do you prevent the class from being inheritance??</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Simply include the keyword ‘Sealed’ in front of the class keyword.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>4.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What’s the advantage of using System.Text.StringBuilder over System String?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>String Builder is more efficient in cases where there is a large amount of string manipulation. Strings are immutable, so each time a string is changed, a new instance in memory is created.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>5.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the use of abstraction in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Abstraction is used to create a common set of methods that might have different specific implementations by subclasses. Abstract class cannot be instantiated and consists of abstract methods without any implementations. Classes inheriting from abstract class must implement all the methods in abstract class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>6.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the Difference between instance data and class data?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Class data in terms of static class is the data that particular class holds in its structure. Instances can refer to different objects of the same class that hold different values using the same class structure in memory heap.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>7.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the significance of static method?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Static methods are used when we want only one copy of that method to perform action and remain active at a single point in time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>8.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the uses of boxing and unboxing?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Boxing and Unboxing are used to convert value types into reference types and vice versa. Developers often need to make some methods generic and hence create methods that accept objects rather than specific value types. The advantage of reference types is that they don’t create a copy of the object in memory, instead pass the reference of the data in the memory. This uses memory much more efficiently, especially, if the object to be passed is very heavy.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>9.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the Debug class methods?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string"><text:p>a. Assert:This method checks for a condition. It displays a user message if the condition is false.</text:p><text:p>b. Write:used to write information which will be used by Trace Listeners.</text:p><text:p>c. WriteIf:Write information for Trace Listeners only if the condition is true.</text:p><text:p>d. WriteLine: same as write but, every time writes in a new line.</text:p><text:p>e. WriteLineIf:same as WriteIf but everytime writes in a new line. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>10.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is Anchoring a control and Docking a control? </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string"><text:p>Anchoring: used to resize controls dynamically with the form.</text:p><text:p>Docking: to adhere to the edges of its container.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>11.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is Form level validation and Field level Validation?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Form level validation occurs once the user is ready to submit the form. The application checks the complete form at once and validates all the fields in it and informs the user about it. Field level validation occurs only for a specific field. E.g.: As soon as the user looses focus from a name input box, the application validates the data in that particular field and informs the user about it. They are normally used for mandatory fields using javascript.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>12.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is Code-Access security?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Code access security is a mechanism that helps limit the access to the code by protecting the resources. It defines permissions which tell about the rights to access various. It also imposes restrictions on code at run time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>13.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between DataGrid control in Windows Forms and Web Forms?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Windows Forms controls have more functionality than Web Forms. Also, DataGrid in Web Forms has to be bound to the form before it displays any data.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>14.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between Finalize() and Dispose()?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Dispose() is called by as an indication for an object to release any unmanaged resources it has held.Finalize() is used for the same purpose as dispose however finalize doesn’t assure the garbage collection of an object.Dispose() operates determinalistically due to which it is generally preferred.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>15.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>How does the XmlSerializer work? What ACL permissions does a process using it require?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>The XmlSerializer constructor generates a pair of classes derived from XmlSerializationReader and XmlSerializationWriter by analysis of the classes using reflection. Temporary C# files are created and compiled into a temporary assembly and then loaded into a process.The XmlSerializer caches the temporary assemblies on a per-type basis as the code generated like this is expensive. This cached assembly is used after a class is created.Therefore the XmlSerialize requires full permissions on the temporary directory which is a user profile temp directory for windows applications.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>16.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What are circular references?how garbage collection deals with circular references?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string"><text:p>A circular reference is a run-around wherein the 2 or more resources are interdependent on each other rendering the entire chain of references to be unusable.There are quite a few ways of handling the problem of detecting and collecting cyclic references. </text:p><text:p>1. A system may explicitly forbid reference cycles.</text:p><text:p>2. Systems at times ignore cycles when they have short lives and a small amount of cyclic garbage. In this case a methodology of avoiding cyclic data structures is applied at the expense of efficiency.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>17.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between Interface-oriented, Object-oriented and Aspect-oriented programming?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Interface oriented approach compels to develop the software based on the contract. Object oriented approach emphasizes on its aspects like, Abstraction, Encapsulation, Inheritance, Polymorphism. Cross cutting concerns cannot be implemented in object oriented programming. That’s not the case with aspect-oriented. However, there is a risk of system failure in this situation.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>18.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the accessibility modifier &quot;protected internal&quot; in C#.?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string"><text:p>The Protected Internal access modifier can be accessed by:</text:p><text:p>Members of the Assembly</text:p><text:p>The inheriting class</text:p><text:p>The class itself,</text:p><text:p>Its access is limited to the types derived from the defining class in the current assembly or the assembly itself.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>19.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between Debug.Write and Trace.Write? When should each be used?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string"><text:p>Debug.Write: Debug Mode, Release Mode (used while debuging a project).</text:p><text:p>Trace.write: Release Mode (used in Released verion of Applications).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>20.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What are implementation inheritance and interface inheritance?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Implementation inheritance is achieved when a class is derived from another class in such a way that it inherits all its members. Interface inheritance is when a class inherits only the signatures of the functions from another class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>21.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What are generics in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Generic types to maximize code reuse, type safety, and performance. They can be used to create collection classes. Generic collection classes in the System.Collections.Generic namespace should be used instead of classes such as ArrayList in the System.Collections namespace.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>22.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the use of GetCommandLineArgs() method in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>With GetCommandLineArgs() method, the command line arguments can be accessed. The value returned is an array of strings.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>23.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the use of System.Environment class in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>The System.Environment class can be used to retrieve information like command-line arguments, the exit code, environment variable settings, contents of the call stack, time since last system boot, the version of the common language runtime.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>24.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is an Exception in .NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Exceptions are errors that occur during the runtime of a program. The advantage of using exceptions is that the program doesn’t terminate due to the occurrence of the exception. Whenever an exception is occurred the .NET runtime throws an object of specified type of Exception. The class ‘Exception’ is the base class of all the exceptions..</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>25.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What are Custom Exceptions?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Custom Exceptions are user defined exceptions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>26.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is a Constructor?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>It is the first method that are called on instantiation of a type. It provides way to set default values for data before the object is available for use. Performs other necessary functions before the object is available for use.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>27.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Can private virtual methods be overridden in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>No, moreover, you cannot access private methods in inherited classes. They have to be protected in the base class to allow any sort of access.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>28.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Is is possible to force garbage collector to run?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Yes, we can force garbage collector to run using System.GC.Collect().</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>29.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is an Event?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>When an action is performed, this action is noticed by the computer application based on which the output is displayed. These actions are called events. Examples of events are pressing of the keys on the keyboard, clicking of the mouse. Likewise, there are a number of events which capture your actions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>30.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is Delegate?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Delegates are kind of similar to the function pointers. But they are secure and type-safe. A delegate instance encapsulates a static or an instance method. Declaring a delegate defines a reference type which can be used to encapsulate a method having a specific signature.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>31.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>How does object pooling and connection pooling differ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>In Object pooling, you can control the number of connections. In connection pooling, you can control the maximum number reached. When using connection pooling, if there is nothing in the pool, a connection is created since the creation is on the same thread. In object pooling, the pool decides the creation of an object depending on whether the maximum is reached which in case if it is, the next available object is returned. However, this could increase the time complexity if the object is heavy.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>32.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is Language Integrated Query (LINQ)?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>LINQ is a set of extensions to .NET Framework that encapsulate language integrated query, set and other transformation operations. It extends VB, C# with their language syntax for queries. It also provides class libraries which allow a developer to take advantages of these features.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>33.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Explain the purpose of CultureInfo class. What namespace contains it?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>System.Globalization namespace contains CultureInfo class. This class provides information about a specific culture, i.e. datetime format, currency, language etc.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>34.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Which is the class from where everything is derived in .NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>System.Object. Object class is the ultimate base class of all classes in the .NET Framework, it is the root of the type hierarchy. It is often used as a generic argument in class methods - all classes are treatable as Object classes.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>35.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the use of assert() method?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Assert method is in debug compilation. It takes a boolean condition as a parameter. It shows error dialog if the condition is false and if the condition is true, the program proceeds without interruption.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>36.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Difference between the System.Array.CopyTo() and System.Array.Clone()?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>System.Array.CopyTo() performs a deep copy of the array. System.Array.Clone() performs a shallow copy of the array</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>37.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the purpose of Dispose method?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Dispose method is used to destroy the objects from the memory.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>38.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between shadow and override?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>In general when you extend a class you shadow fields with the same name in the base class and override virtual methods with the same name and parameter list in the base class. Overriding makes the base class method invisible. Shadowing a field only hides the field from view. You can still explicitly touch the hidden shadowed field if you wish. You cannot touch an invisible overridden method.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>39.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between const and readonly in C#.NET?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>The read only can be modified by the class it is contained in. However, the const cannot be modified. It needs to be instantiated only at the compile time.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>40.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Is there regular expression (regex) support available to C# developers?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Yes. The .NET class libraries provide support for regular expressions. Look at the System.Text.RegularExpressions namespace.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>41.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Is there an equivalent of exit() for quitting a C# .NET application?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Yes, you can use System.Environment.Exit(int exitCode) to exit the application or Application.Exit() if it’s a Windows Forms app. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>42.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Is there a way to force garbage collection?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Yes. Set all references to null and then call System.GC.Collect(). If you need to have some objects destructed, and System.GC.Collect() doesn’t seem to be doing it for you, you can force finalizers to be run by setting all the references to the object to null and then calling System.GC.RunFinalizers().</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>43.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Is it possible to restrict the scope of a field/method of a class to the classes in the same namespace?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>There is no way to restrict to a namespace. Namespaces are never units of protection. But if you’re using assemblies, you can use the ‘internal’ access modifier to restrict access to only within the assembly.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>44.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>How do I implement function pointers in C#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Delegates provide the functionality of function pointers in C#. A delegate is a type that references a method. Once a delegate is assigned a method, it behaves exactly like that method.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>45.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is partial class?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>partial classes mean that your class definition can be split into multiple physical files. Logically, partial classes do not make any difference to the compiler. During compile time, it simply groups all the various partial classes and treats them as a single entity.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>46.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What does the volatile modifier do?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>The volatile modifier is usually used for a field that is accessed by multiple threads without using the lock statement to serialize access. Using the volatile modifier ensures that one thread retrieves the most up-to-date value written by another thread.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>47.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>Why do I get a security exception when I try to run my application?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Some security exceptions are thrown if you are working on a network share. There are some parts of the frameworks that run if being run off a share (roaming profile, mapped drives, etc.). To see if this is what&apos;s happening, just move the executable over to your local drive and see if it runs without the exceptions. One of the common exceptions thrown under these conditions is System.Security.SecurityException.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>48.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between directcast and ctype</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>DirectCast requires the run-time type of an object variable to be the same as the specified type.The run-time performance of DirectCast is better than that of CType, if the specified type and the run-time typeof the expression are the same. Ctype works fine if there is a valid conversion defined between the expression and the type.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>49.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>How to create and manage files in c#?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>Using System.IO namespace and FileStream and StreamWriter classes.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p> </text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce44" office:value-type="string" calcext:value-type="string">
      <text:p>50.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce48" office:value-type="string" calcext:value-type="string">
      <text:p>What is FormClosed and FormClosing events?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce45"/>
     <table:table-cell table:style-name="ce49" office:value-type="string" calcext:value-type="string">
      <text:p>The FormClosing event occurs as the form is being closed.You can Cancel this event. If you cancel this event, the form remains opened. To cancel the closure of a form, set the Cancel property of the FormClosingEventArgs passed to your event handler to true. The FormClosed event occurs after the form has been closed by the user. When a form is closed, it is disposed, releasing all resources associated with the form</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46" table:number-columns-spanned="2" table:number-rows-spanned="1"/>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048273">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
   </table:table>
   <table:table table:name="SQL" table:style-name="ta1">
    <table:shapes>
     <draw:frame draw:z-index="0" draw:name="Image 2" draw:style-name="gr1" draw:text-style-name="P1" svg:width="132.08mm" svg:height="86.78mm" svg:x="90.31mm" svg:y="504.39mm">
      <draw:image xlink:href="">
       <office:binary-data>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
        JfD/QqFAVN+hNo8AAAAASUVORK5CYII=
       </office:binary-data>
       <text:p/>
      </draw:image>
     </draw:frame>
     <draw:frame draw:z-index="1" draw:name="Image 3" draw:style-name="gr1" draw:text-style-name="P1" svg:width="99.48mm" svg:height="46.34mm" svg:x="67.73mm" svg:y="635.12mm">
      <draw:image xlink:href="">
       <office:binary-data>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
        AIGECPwfgBvRRqo9y40AAAAASUVORK5CYII=
       </office:binary-data>
       <text:p/>
      </draw:image>
     </draw:frame></table:shapes>
    <table:table-column table:style-name="co5" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co6" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co7" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co8" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="12" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>select film.name from film where film.actorid</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="14"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>film1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="14"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>film34</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="14"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>film</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>actor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>filmactor (junction table)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>id</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>name</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>id</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>name</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>filmid</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>actorid</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="6" calcext:value-type="float">
      <text:p>6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="18" calcext:value-type="float">
      <text:p>18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="33" calcext:value-type="float">
      <text:p>33</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="92" calcext:value-type="float">
      <text:p>92</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="34" calcext:value-type="float">
      <text:p>34</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="1" calcext:value-type="float">
      <text:p>1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="34" calcext:value-type="float">
      <text:p>34</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="6" calcext:value-type="float">
      <text:p>6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="34" calcext:value-type="float">
      <text:p>34</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="18" calcext:value-type="float">
      <text:p>18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="7"/>
     <table:table-cell office:value-type="float" office:value="35" calcext:value-type="float">
      <text:p>35</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>From film.id → list of actor.names</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>From actor.id → list of film.names</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="16" table:number-rows-spanned="1">
      <text:p>select actor.name WHERE id=filmactor.filmid &amp;&amp; filmactor.actorid=actor.id</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="16" table:number-rows-spanned="1"><text:p>Exercice todo on <text:a xlink:href="http://www.w3schools.com/sql/trysql.asp?filename=trysql_func_count" xlink:type="simple">http://www.w3schools.com/sql/trysql.asp?filename=trysql_func_count</text:a></text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>1-get the names of customers who bought a product</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>1.1-get list of orders where the product appeared</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>1.2-for each order in the list, get the customer&apos;s id</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>1.3-from customers table get name given the id</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>1.1-get the names of customers who bought a product</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT * FROM OrderDetails where ProductID=11;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>OrderDetailID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>OrderID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>ProductID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>Quantity</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="1" calcext:value-type="float">
      <text:p>1</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="10248" calcext:value-type="float">
      <text:p>10248</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="130" calcext:value-type="float">
      <text:p>130</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="10296" calcext:value-type="float">
      <text:p>10296</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="211" calcext:value-type="float">
      <text:p>211</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="10327" calcext:value-type="float">
      <text:p>10327</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="50" calcext:value-type="float">
      <text:p>50</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="281" calcext:value-type="float">
      <text:p>281</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="10353" calcext:value-type="float">
      <text:p>10353</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="314" calcext:value-type="float">
      <text:p>314</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="10365" calcext:value-type="float">
      <text:p>10365</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="24" calcext:value-type="float">
      <text:p>24</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="426" calcext:value-type="float">
      <text:p>426</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="10407" calcext:value-type="float">
      <text:p>10407</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="30" calcext:value-type="float">
      <text:p>30</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="492" calcext:value-type="float">
      <text:p>492</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="10434" calcext:value-type="float">
      <text:p>10434</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="6" calcext:value-type="float">
      <text:p>6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="514" calcext:value-type="float">
      <text:p>514</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="10442" calcext:value-type="float">
      <text:p>10442</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="30" calcext:value-type="float">
      <text:p>30</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="517" calcext:value-type="float">
      <text:p>517</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="10443" calcext:value-type="float">
      <text:p>10443</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="11" calcext:value-type="float">
      <text:p>11</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="6" calcext:value-type="float">
      <text:p>6</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>1.2-for each order in the list, get the customer&apos;s id</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT CustomerID FROM Orders where OrderID in (SELECT OrderID FROM OrderDetails where ProductID=11;);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>CustomerID</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="90" calcext:value-type="float">
      <text:p>90</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="46" calcext:value-type="float">
      <text:p>46</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="24" calcext:value-type="float">
      <text:p>24</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="59" calcext:value-type="float">
      <text:p>59</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="3" calcext:value-type="float">
      <text:p>3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="56" calcext:value-type="float">
      <text:p>56</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="24" calcext:value-type="float">
      <text:p>24</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="20" calcext:value-type="float">
      <text:p>20</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="float" office:value="66" calcext:value-type="float">
      <text:p>66</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>1.3-from customers table get name given the id</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce50" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT CustomerName FROM Customers where CustomerID in (SELECT CustomerID FROM Orders where OrderID in (SELECT OrderID FROM OrderDetails where ProductID=11;););</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce51" office:value-type="string" calcext:value-type="string">
      <text:p>CustomerName</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Antonio Moreno Taquería </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Ernst Handel </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Folk och fä HB </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>LILA-Supermercado </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Ottilies Käseladen </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Piccolo und mehr </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Reggiani Caseifici </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce52" office:value-type="string" calcext:value-type="string">
      <text:p>Wilman Kala </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:style-name="ce50"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://www.ntu.edu.sg/home/ehchua/programming/sql/relational_database_design.html" xlink:type="simple">http://www.ntu.edu.sg/home/ehchua/programming/sql/relational_database_design.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>To ensure uniqueness, each table should have a column (or a set of columns), called primary key, that uniquely identifies every records of the table. </text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>A primary key is called a simple key if it is a single column; it is called a composite key if it is made up of several columns.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>the primary key shall have these properties:</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>no duplicate value). For example, customerName may not be appropriate to be used as the primary key for the Customers table, as there could be two customers with the same name.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The primary key shall always have a value. In other words, it shall not contain NULL</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>Let&apos;s illustrate with an example: a table customers contains columns lastName, firstName, phoneNumber, address, city, state, zipCode. The candidates for primary key are name=(lastName, firstName), phoneNumber, Address1=(address, city, state), Address1=(address, zipCode). Name may not be unique. Phone number and address may change. Hence, it is better to create a fact-less auto-increment number, say customerID, as the primary key.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>Relationships among Tables</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>The most crucial aspect in designing a relational database is to identify the relationships among tables. The types of relationship include:</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
      <text:p>one-to-many</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>many-to-many</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
      <text:p>one-to-one</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro23">
     <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
      <text:p>One-to-Many</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string"><text:p>To support a one-to-many relationship, we need to design two tables: a table Classes to store information about the classes with classID as the primary key; </text:p><text:p>and a table Teachers to store information about teachers with teacherID as the primary key. We can then create the one-to-many relationship by storing the </text:p><text:p>Primary key of the table Teacher (i.e., teacherID) (the &quot;one&quot;-end or the parent table) in the table classes (the &quot;many&quot;-end or the child table), as illustrated below.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string"><text:p>The column teacherID in the child table Classes is known as the <text:span text:style-name="T16">foreign key</text:span>.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce55" office:value-type="string" calcext:value-type="string">
      <text:p>Many-to-Many</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro24">
      <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string"><text:p>Let&apos;s illustrate with a &quot;product sales&quot; database. We begin with two tables: Products and Orders. The table products contains information about the products (such as name, </text:p><text:p>description and quantityInStock) with productID as its primary key. The table orders contains customer&apos;s orders (customerID, dateOrdered, dateRequired and status). </text:p><text:p>Again, we cannot store the items ordered inside the Orders table, as we do not know how many columns to reserve for the items. We also cannot store the order information in the Products table.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="13"/>
     </table:table-row>
     <table:table-row table:style-name="ro24">
      <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string"><text:p>To support many-to-many relationship, we need to create a third table (known as a junction table), say OrderDetails (or OrderLines), where each row represents an item of a particular order. </text:p><text:p>For the OrderDetails table, the primary key consists of two columns: orderID and productID, that uniquely identify each row. The columns orderID and productID in OrderDetails table </text:p><text:p>Are used to reference Orders and Products tables, hence, they are also the foreign keys in the OrderDetails table.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="13"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>The many-to-many relationship is, in fact, implemented as two one-to-many relationships, with the introduction of the junction table.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce53" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="13"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="19">
      <table:table-cell table:style-name="ce53" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="13"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="8">
     <table:table-cell table:style-name="ce53" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="22">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>One-to-One</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>In a &quot;product sales&quot; database, a product may have optional supplementary information such as image, moreDescription and comment. </text:p><text:p>Keeping them inside the Products table results in many empty spaces (in those records without these optional data). Furthermore, these large data may degrade the performance of the database.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>Some databases limit the number of columns that can be created inside a table. You could use a one-to-one relationship to split the data into two tables. </text:p><text:p>One-to-one relationship is also useful for storing certain sensitive data in a secure table, while the non-sensitive ones in the main table.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>The same column productID should be used as the primary key for both tables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="13">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>Apply the so-called <text:span text:style-name="T16">normalization </text:span>rules to check whether your database is structurally correct and optimal.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">First Normal Form (1NF)</text:span>: A table is 1NF if every cell contains a single value, not a list of values. This properties is known as atomic. </text:p><text:p>1NF also prohibits repeating group of columns such as item1, item2,.., itemN. Instead, you should create another table using one-to-many relationship.</text:p><text:p> (<text:span text:style-name="T16">hb:an orders table containing a column for each product id. Is this what 1NF prevents. Do research on internet</text:span>)</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce62" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:style-name="ce62" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Second Normal Form (2NF)</text:span>: A table is 2NF, if it is 1NF and every non-key column is fully dependent on the primary key. Furthermore, if the primary key is made up of several columns, every non-key column shall depend on the entire set and not part of it.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce62" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the primary key of the OrderDetails table comprising orderID and productID. If unitPrice is dependent only on productID, it shall not be kept in the OrderDetails table (but in the Products table). On the other hand, if the unitPrice is dependent on the product as well as the particular order, then it shall be kept in the OrderDetails table.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce62" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:style-name="ce62" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Third Normal Form (3NF)</text:span>: A table is 3NF, if it is 2NF and the non-key columns are independent of each others. In other words, the non-key columns are dependent on primary key, only on the primary key and nothing else. </text:p><text:p>For example, suppose that we have a Products table with columns productID (primary key), name and unitPrice. The column discountRate shall not belong to Products table if it is also dependent on the unitPrice, which is not part of the primary key.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce62" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:style-name="ce62" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Higher Normal Form</text:span>: 3NF has its inadequacies, which leads to higher Normal form, such as Boyce/Codd Normal form, Fourth Normal Form (4NF) and Fifth Normal Form (5NF), which is beyond the scope of this tutorial.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce62" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>At times, you may decide to break some of the normalization rules, for performance reason (e.g., create a column called totalPrice in Orders table which can be derived from the orderDetails records); or because the end-user requested for it. Make sure that you fully aware of it, develop programming logic to handle it, and properly document the decision.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce62" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="12"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce60" office:value-type="string" calcext:value-type="string">
      <text:p>Integrity Rules</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>You should also apply the integrity rules to check the integrity of your design:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Entity Integrity Rule: The primary key cannot contain NULL. Otherwise, it cannot uniquely identify the row. For composite key made up of several columns, none of the column can contain NULL. Most of the RDBMS check and enforce this rule.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Referential Integrity Rule: Each foreign key value must be matched to a primary key value in the table referenced (or parent table).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>You can insert a row with a foreign key in the child table only if the value exists in the parent table.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>If the value of the key changes in the parent table (e.g., the row updated or deleted), all rows with this foreign key in the child table(s) must be handled accordingly. You could either (a) disallow the changes; (b) cascade the change (or delete the records) in the child tables accordingly; (c) set the key value in the child tables to NULL.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Most RDBMS can be setup to perform the check and ensure the referential integrity, in the specified manner.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>Business logic Integrity: Beside the above two general integrity rules, there could be integrity (validation) pertaining to the business logic, e.g., zip code shall be 5-digit within a certain ranges, delivery date and time shall fall in the business hours; quantity ordered shall be equal or less than quantity in stock, etc. These could be carried out in validation rule (for the specific column) or programming logic.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce61"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce60" office:value-type="string" calcext:value-type="string">
      <text:p>Column Indexing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>You could create index on selected column(s) to facilitate data searching and retrieval. An index is a structured file that speeds up data access for SELECT, but may slow down INSERT, UPDATE, and DELETE. Without an index structure, to process a SELECT query with a matching criterion (e.g., SELECT * FROM Customers WHERE name=&apos;Tan Ah Teck&apos;), the database engine needs to compare every records in the table. A specialized index (e.g., in BTREE structure) could reach the record without comparing every records. However, the index needs to be rebuilt whenever a record is changed, which results in overhead associated with using indexes.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Index can be defined on a single column, a set of columns (called concatenated index), or part of a column (e.g., first 10 characters of a VARCHAR(100)) (called partial index) . You could built more than one index in a table. For example, if you often search for a customer using either customerName or phoneNumber, you could speed up the search by building an index on column customerName, as well as phoneNumber. Most RDBMS builds index on the primary key automatically.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>http://databasemanagement.wikia.com/wiki/Relational_Database_Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>In the relational database model, there are five, very important rules.  When followed, these rules help to ensure data integrity. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>1.     The order of tuples and attributes is not important.  (Ex. Attribute order not important…if you have name before address, is the same as address before name). </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>2.     Every tuple is unique.  This means that for every record in a table there is something that uniquely identifies it from any other tuple. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>3.     Cells contain single values.  This means that each cell in a table can contain only one value. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>4.     All values within an attribute are from the same domain.  This means that however the attribute is defined, the values for each tuple fall into that definition.  For example, if the attribute is labeled as Date, you would not enter a dollar amount, shirt size, or model number in that column, only dates. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>5.     Table names in the database must be unique and attribute names in tables must be unique.  No two tables can have the same name in a database.  Attributes (columns) cannot have the same name in a table.  You can have two different tables that have similar attribute names.  </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:style-name="ce62"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Update</text:span> is used to update a field(s) in a table. Note the use of WHERE. If you omit the WHERE clause, all records will be updated!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string">
      <text:p>if we wish to update the customer &quot;Alfreds Futterkiste&quot; with a new contact person and city :</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>UPDATE Customers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>SET ContactName=&apos;Alfred Schmidt&apos;, City=&apos;Hamburg&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>WHERE CustomerName=&apos;Alfreds Futterkiste&apos;; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
      <text:p>ALTER</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>To add/delete a column in a table, (notice that some database systems don&apos;t allow deleting a column)::</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>ALTER TABLE table_name ADD column_name datatype </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ALTER TABLE table_name DROP COLUMN column_name</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce62"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce63" office:value-type="string" calcext:value-type="string">
      <text:p>Select</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT column_name,column_name FROM table_name WHERE field=value;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT TOP 2 * FROM Customers; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>MySQL : SELECT column_name(s) FROM table_name LIMIT number;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce62" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Delete </text:span>a row from a table. If you omit the WHERE clause, all records will be deleted!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>DELETE FROM table_name WHERE some_column=some_value;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>INNER JOIN</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="15" table:number-rows-spanned="1">
      <text:p>The most common type of join is: SQL INNER JOIN (simple join). An SQL INNER JOIN returns all rows from multiple tables where the join condition is met.</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="14"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="15" table:number-rows-spanned="1">
      <text:p>Let&apos;s look at a selection from the &quot;Orders&quot; table:</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="14"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>OrderID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>CustomerID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>OrderDate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce66" office:value-type="float" office:value="10308" calcext:value-type="float">
      <text:p>10308</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>1996-09-18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce66" office:value-type="float" office:value="10309" calcext:value-type="float">
      <text:p>10309</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="float" office:value="37" calcext:value-type="float">
      <text:p>37</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>1996-09-19</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce66" office:value-type="float" office:value="10310" calcext:value-type="float">
      <text:p>10310</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="float" office:value="77" calcext:value-type="float">
      <text:p>77</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce67" office:value-type="string" calcext:value-type="string">
      <text:p>1996-09-20</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="13"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="15" table:number-rows-spanned="1">
      <text:p>Then, have a look at a selection from the &quot;Customers&quot; table:</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="14"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:number-columns-repeated="11"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>CustomerID</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>CustomerName</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>ContactName</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce65" office:value-type="string" calcext:value-type="string">
      <text:p>Country</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce66" office:value-type="float" office:value="1" calcext:value-type="float">
      <text:p>1</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>Alfreds Futterkiste</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>Maria Anders</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>Germany</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce66" office:value-type="float" office:value="2" calcext:value-type="float">
      <text:p>2</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>Ana Trujillo Emparedados y helados</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>Ana Trujillo</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>Mexico</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce66" office:value-type="float" office:value="3" calcext:value-type="float">
      <text:p>3</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>Antonio Moreno Taquería</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>Antonio Moreno</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce66" office:value-type="string" calcext:value-type="string">
      <text:p>Mexico</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce68"/>
     <table:table-cell table:number-columns-repeated="8"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:number-columns-repeated="11"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="15" table:number-rows-spanned="1"><text:p>Notice that the &quot;CustomerID&quot; column in the &quot;Orders&quot; table refers to the &quot;CustomerID&quot; in the &quot;Customers&quot; table. The relationship between the two tables above is the &quot;CustomerID&quot; column. </text:p><text:p>(hb:that might explain why INNER JOIN is used for Customers table)</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="14"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="16"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>FROM Orders</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>INNER JOIN Customers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>ON Orders.CustomerID=Customers.CustomerID;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="15"/>
    </table:table-row>
   </table:table>
   <table:table table:name="Feuille4" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co9" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p>You&apos;ve gotten answers that mention ensuring that the ctor can&apos;t change what&apos;s being copied -- and they&apos;re right, putting the const there does have that effect.</text:p><text:p>More important, however, is that a temporary object cannot bind to a non-const reference. The copy ctor must take a reference to a const object to be able to make copies of temporary objects.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string"><text:p>class Foo {</text:p><text:p>  Foo( const Foo&amp; f ) :</text:p><text:p>      mem1( f.mem1 ), mem2( f.mem2 ) /* etc */</text:p><text:p>  {}</text:p><text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce71"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p>where mem1 and mem2 are data members of Foo, which can be const</text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="2" table:number-rows-spanned="1">
      <text:p>members, non-const members, const references or non-const references.</text:p>
     </table:table-cell>
     <table:covered-table-cell/>
    </table:table-row>
   </table:table>
   <table:table table:name="ios" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="6" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Party * pi;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pi = [Party alloc]; <text:s text:c="2"/>can a pointer be set this way ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(ip == nil) </text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(!ip)</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ip=nil; the obj pointed to by ip is desctucted.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[ip method1]; doesn&apos;t crash or does anything if ip is nil; unlike in C</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>get ip;</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>get ip;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>single inheritance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NSObject is the root class of the entire hierarchy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>overriding a method only needs to be implemented. No need to declare it in the overriding class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>every object has an instance variable called isa. It is a pointer to the class that created it. At run time, when a message is sent to the object, it uses its isa variable to find the class and run the method</text:p><text:p>It is not a compile time type determination. It is run time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>self == this in C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Self = [super init]</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>[self setItemName:name];</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>super start the search for the method from the base class, not from the current one.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>@interface BNRItem:NSObject</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>NSString *name;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int <text:s text:c="11"/>id; <text:s text:c="3"/>//this only lives within the BNRItem instance. Pointers do not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>NSMutableArray <text:s text:c="2"/>*ar; <text:s text:c="2"/>//arrays&apos; elements do not live within the array. Array can hold any mix of objects</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- (NSString *)itemName</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return itemName;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>- (void)setItemName:<text:span text:style-name="T43">(</text:span>NSString *<text:span text:style-name="T43">)</text:span>str</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>itemName=str;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>BNRItem *p = [[BNRItem alloc] init];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[p setItem:@”red sosssssa”];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NSString *str=[p itemName];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>NSMutableArray array = [[NSMutableArray alloc] init];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[array addObject:[NSNull null]];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[array addObject:@”this is a string”];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int len = [array count];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>can&apos;t have two methods with different return types</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>init</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>initializer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>for each class, no matter how many initializers it has, one is chosen as designated initializer. Typically is has parameters for the most important and frequently used instance variables.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>designated </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Default init calls the designated init</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>- (id) init</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>return [self initWithField1:@”item”</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="17"/>field2:0];</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>init</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="4"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="ios faq" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce62"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.faqs.org/faqs/computer-lang/Objective-C/faq/</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>Contents</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* Contents</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 1. About this FAQ</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 1.1 Where can I find the latest version of the FAQ ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 2. Objective-C Compiler Commands</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.1 What&apos;s the file suffix for Objective-C source ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.2 How do I compile .m files with the Stepstone compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.3 How do I compile .m files with the Apple compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.4 How do I compile .m files with the GNU C compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 2.5 How do I compile .m files with the POC ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 3. Objective-C preprocessor issues</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.1 What&apos;s the syntax for comments ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.2 How do I include the root class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.3 What is #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 3.4 Why am I lectured about using #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 4. Object datatype (id)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 4.1 What is id ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 4.2 What is the difference between self and super ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 4.3 What is @defs() ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 5. Message selectors (SEL)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 5.1 What is a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 5.2 What is perform: doing ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 5.3 How do I know the SEL of a given method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 6. Implementation pointers (IMP)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.1 What is an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.2 How do I get an IMP given a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.3 How do I send a message given an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.4 How can I use IMP for methods returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 6.5 Can I use perform: for a message returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 7. Copying objects</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 7.1 What&apos;s the difference between copy and deepCopy ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 8. Objective-C and C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 8.1 How can I link a C++ library into an Objective-C program</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 9. Messages</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 9.1 How do I make a static method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 9.2 How do I prevent an object from sending a given message ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 9.3 Do I have to recompile everything if I change the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>implementation of a method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 10. Instance and Class Variables</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 10.1 Do I have to recompile everything if I change instance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>variables of a class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 11. Objective-C and X-Windows</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 11.1 How do I include X Intrinsics headers into an</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C file ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 12. Stepstone Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 12.1 How do I allocate an object on the stack ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 13. GNU Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 13.1 Why do I get a &apos;floating point exception&apos; ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 14. Apple Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 14.1 What&apos;s the class of a constant string ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 14.2 How can I link a C++ library into an Objective-C program</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 15. Portable Object Compiler Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 15.1 What&apos;s the syntax for class variables ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 15.2 How do I forward messages ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 15.3 How can I link a C++ library into an Objective-C program</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>* 16. Books and further reading</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.1 Object-Oriented Programming : An Evolutionary Approach,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.2 An Introduction To Object-Oriented Programming, 2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.3 Objective-C : Object-Oriented Programming Techniques</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>+ 16.4 Applications of Object-Oriented Programming; C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>SmallTalk Actor Objective-C Object PASCAL</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="7"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="31"/>1. About this FAQ</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>1.1 Where can I find the latest version of the FAQ ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>   It&apos;s posted once a month to <text:a xlink:href="http://groups.google.com/group/comp.lang.objective-c" xlink:type="simple">comp.lang.objective-c</text:a>, <text:a xlink:href="http://groups.google.com/group/comp.answers" xlink:type="simple">comp.answers</text:a> and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>   <text:a xlink:href="http://groups.google.com/group/news.answers" xlink:type="simple">news.answers</text:a>. It is archived at</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>   <text:a xlink:href="ftp://rtfm.mit.edu/pub/faqs/computer-lang/Objective-C/faq" xlink:type="simple">ftp://rtfm.mit.edu/pub/faqs/computer-lang/Objective-C/faq</text:a>.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>2. Objective-C Compiler Commands</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>2.1 What&apos;s the file suffix for Objective-C source ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s .m for implementation files, and .h for header files. Objective-C</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>compilers usually also accept .c as a suffix, but compile those files</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>in plain C mode.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>2.2 How do I compile .m files with the Stepstone compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>objcc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>objcc -o class class.o</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>2.3 How do I compile .m files with the Apple compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>cc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>cc -o class class.o</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>   See <text:a xlink:href="http://www.apple.com/" xlink:type="simple">http://www.apple.com</text:a> for more information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>2.4 How do I compile .m files with the GNU C compiler ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>gcc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>gcc -o class class.o -lobjc -lpthread</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>   See <text:a xlink:href="http://www.gnu.org/" xlink:type="simple">http://www.gnu.org</text:a> for more information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>2.5 How do I compile .m files with the POC ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>objc -c class.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>objc -o class class.o</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>   See <text:a xlink:href="http://metalab.unc.edu/pub/Linux/devel/lang/objc/" xlink:type="simple">http://metalab.unc.edu/pub/Linux/devel/lang/objc/</text:a> for more</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="22"/>3. Objective-C preprocessor issues</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>3.1 What&apos;s the syntax for comments ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The Objective-C preprocessor usually supports two styles of comments :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>// this is a BCPL-style comment (extends to end of line)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>/* this is a C-style comment */</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>3.2 How do I include the root class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>On Stepstone and the POC, the header file to include is :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>On GNU cc and Apple cc, it&apos;s :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;objc/Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The root class is located in a directory called runtime for the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Stepstone compiler, and in a directory called objcrt for the POC, but</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>because of implicit -I options passed on to the preprocessor, these</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>locations are automatically searched.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>3.3 What is #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s a C preprocessor construct to avoid multiple inclusions of the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>same file.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>#import &lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>is an alternative to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>where the .h file is protected itself against multiple inclusions :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>#ifndef _OBJECT_H_</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>#define _OBJECT_H_</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>#endif</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>3.4 Why am I lectured about using #import ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The GNU Objective-C compiler emits a warning when you use #import</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>because some people find using #import poor style. You can turn off</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>the warning by using the -Wno-import option, you could modify the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>compiler source code and set the variable warn_import (in the file</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>cccp.c) or you could convert your code to use pairs of #ifndef and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>#endif, as shown above, which makes your code work with all compilers.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>4. Object datatype (id)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>4.1 What is id ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s a generic C type that Objective-C uses for an arbitrary object.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>For example, a static function that takes one object as argument and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>returns an object, could be declared as :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>static id myfunction(id argument) { ... }</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>4.2 What is the difference between self and super ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>self is a variable that refers to the object that received a message</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>in a method implementation. super refers to the same variable, but</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>directs the compiler to use a method implementation from the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>superclass.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Using pseudo-code, where copy (from super) is the syntax for the copy</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>implementation of the superclass, the following are equivalent :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>myObject = [super copy];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>and,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>myObject = [self copy (from super)]; // pseudo-code</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>4.3 What is @defs() ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s a compiler directive to get access to the internal memory layout</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of instances of a particular class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>typedef struct { @defs(MyClass) } *TMyClass;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>defines a C-type TMyClass with a memory layout that is the same as</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>that of MyClass instances.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="26"/>5. Message selectors (SEL)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>5.1 What is a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s the C type of a message selector; it&apos;s often defined as a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>(uniqued) string of characters (the name of the method, including</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>colons), but not all compilers define the type as such.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>5.2 What is perform: doing ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>perform: is a message to send a message, identified by its message</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>selector (SEL), to an object.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>5.3 How do I know the SEL of a given method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>If the name of the method is known at compile time, use @selector :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>[myObject perform:@selector(close)];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>At runtime, you can lookup the selector by a runtime function that</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>takes the name of the message as argument, as in :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = selUid(name); // for Stepstone</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = sel_getUid(name); // for Apple</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = sel_get_any_uid(name); // for GNU Objective C</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>SEL mySel = selUid(name); // for POC</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>6. Implementation pointers (IMP)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>6.1 What is an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s the C type of a method implementation pointer, a function pointer</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>to the function that implements an Objective-C method. It is defined</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>to return id and takes two hidden arguments, self and _cmd :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>typedef id (*IMP)(id self,SEL _cmd,...);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>6.2 How do I get an IMP given a SEL ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>This can be done by sending a methodFor: message :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>IMP myImp = [myObject methodFor:mySel];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>6.3 How do I send a message given an IMP ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>By dereferencing the function pointer. The following are all</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>equivalent :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>[myObject myMessage];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>or</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>IMP myImp = [myObject methodFor:@selector(myMessage)];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>myImp(myObject,@selector(myMessage));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>or</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>[myObject perform:@selector(myMessage)];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>6.4 How can I use IMP for methods returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>For methods that return a C type such as double instead of id, the IMP</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>function pointer is casted from pointer to a function returning id to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>pointer to a function returning double :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>double aDouble = ((double (*) (id,SEL))myImp)(self,_cmd);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>6.5 Can I use perform: for a message returning double ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>No. The method perform: is for sending messages returning id without</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>any other argument. Use perform:with: if the message returns id and</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>takes one argument. Use methodFor: for the general case of any number</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of arguments and any return type.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="30"/>7. Copying objects</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>7.1 What&apos;s the difference between copy and deepCopy ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>copy is intented to make a bytecopy of the object, sharing pointers</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>with the original, and can be overridden to copy additional memory.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>deepCopy is intented to make a copy that doesn&apos;t share pointers with</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>the original. A deep copy of an object contains copies of its instance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>variables, while a plain copy is normally just a copy at the first</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>level.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>8. Objective-C and C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>8.1 How can I link a C++ library into an Objective-C program ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You have two options : either use the Apple compiler or use the POC.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>The former accepts a mix of C++ and Objective-C syntax (called</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Objective-C++), the latter compiles Objective-C into C and then</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>compiles the intermediate code with a C++ compiler. See the compiler</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>specific questions for more information.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="34"/>9. Messages</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>9.1 How do I make a static method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Methods are always implemented in Objective-C as static functions. The</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>only way to obtain the IMP (implementation pointer) of a method is</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>through the runtime (via methodFor: and friends), because the function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>itself is static to the file that implements the method.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>9.2 How do I prevent an object from sending a given message ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You can&apos;t. If your object responds to a message, any other class can</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>send this message. You could add an extra argument sender and check,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>as in :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>- mymethod:sender</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if ([sender isKindOf:..]) ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>But this still requires cooperation of the sender, to use a correct</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>argument :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>[anObject mymethod:self];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>9.3 Do I have to recompile everything if I change the implementation of a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>method ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>No, you only have to recompile the implementation of the method</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>itself. Files that only send that particular messages do not have to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>be recompiled because Objective-C has dynamic binding.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>10. Instance and Class Variables</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>10.1 Do I have to recompile everything if I change instance variables of a</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>class ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You have to recompile that class, all of its subclasses, and those</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>files that use @defs() or use direct access to the instance variables</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of that class. In short, using @defs() to access instance variables,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>or accessing instance variables through subclassing, breaks the</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>encapsulation that the Objective-C runtime normally provides for all</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>other files (the files that you do not have to recompile).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="25"/>11. Objective-C and X-Windows</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>11.1 How do I include X Intrinsics headers into an Objective-C file ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>To avoid a conflict between Objective-C&apos;s Object and the X11/Object,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>do the following :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;Object.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>#define Object XtObject</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;X11/Intrinsic.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;X11/IntrinsicP.h&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>#undef Object</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="23"/>12. Stepstone Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>12.1 How do I allocate an object on the stack ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>To allocate an instance of &apos;MyClass&apos; on the stack :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>MyClass aClass = [MyClass new];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="20"/>13. GNU Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>13.1 Why do I get a &apos;floating point exception&apos; ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>This used to happen on some platforms and is described at</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>   <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387</text:a>. A solution</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>was to add -lieee to the command line, so that an invalid floating</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>point operation in the runtime did not send a signal. DJGPP users can</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>consult http://www.delorie.com/djgpp/v2faq/. AIX users may want to</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>consult http://world.std.com/~gsk/oc-rs6000-problems.html. In some</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>cases, you can fix the problem by upgrading to a more recent version</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>of the GNU Objective-C runtime and/or compiler.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="19"/>14. Apple Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>14.1 What&apos;s the class of a constant string ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>It&apos;s an NXConstantString.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>NXConstantString *myString = @&quot;my string&quot;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>14.2 How can I link a C++ library into an Objective-C program ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>c++ -c file.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>c++ file.o -lcpluslib -o myprogram</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>15. Portable Object Compiler Objective-C Specific Questions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>15.1 What&apos;s the syntax for class variables ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>List the class variables after the instance variables, and group them</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>together in the same way as instance variables, as follows :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>@implementation MyClass : Object { id ivar1; int ivar2; } : { id cvar1; }</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>@end</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>15.2 How do I forward messages ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>You have to implement doesNotUnderstand: to send a sentTo: message.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>- doesNotUnderstand:aMsg</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return [aMsg sentTo:aProxy];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>15.3 How can I link a C++ library into an Objective-C program ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>objc -c -cplus file.m</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>objc -cplus file.o -lcpluslib -o myprogram</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="25"/>16. Books and further reading</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="39"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>16.1 Object-Oriented Programming : An Evolutionary Approach, 2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Brad Cox &amp; Andy Novobilski, ISBN 0201548348.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>16.2 An Introduction To Object-Oriented Programming, 2nd Ed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Timothy Budd, ISBN 0201824191</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>16.3 Objective-C : Object-Oriented Programming Techniques</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>Pinson, Lewis J. / Wiener, Richard S., ISBN 0201508281</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>16.4 Applications of Object-Oriented Programming; C++ SmallTalk Actor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>Objective-C Object PASCAL</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048219">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
   </table:table>
   <table:table table:name="ios faq2" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="1024" table:default-cell-style-name="ce62"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://faqs.cs.uu.nl/na-dir/Objective-C/answers.html</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://www.cs.uu.nl/" xlink:type="simple"> </text:a> Note from archiver&lt;at&gt;cs.uu.nl: This page is part of a big <text:a xlink:href="http://faqs.cs.uu.nl/" xlink:type="simple">collection</text:a> of Usenet postings, archived here for your convenience. For matters concerning the content of this page, please contact its author(s); use the <text:a xlink:href="ftp://ftp.cs.uu.nl/pub/NEWS.ANSWERS/Objective-C/answers" xlink:type="simple">source</text:a>, if all else fails. For matters concerning the archive as a whole, please refer to the <text:a xlink:href="http://faqs.cs.uu.nl/na-msc/descr.html" xlink:type="simple">archive description</text:a> or contact the archiver. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>Subject: comp.lang.objective-c FAQ, part 1/3: Answers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>This article was archived around: 17 Sep 1998 12:52:00 GMT </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>All FAQs in Directory: <text:a xlink:href="http://faqs.cs.uu.nl/na-dir/Objective-C/idx.html" xlink:type="simple">Objective-C</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>All FAQs posted in: <text:a xlink:href="http://faqs.cs.uu.nl/na-bng/comp.lang.objective-c.html" xlink:type="simple">comp.lang.objective-c</text:a>, <text:a xlink:href="http://faqs.cs.uu.nl/na-bng/comp.sys.mac.programmer.info.html" xlink:type="simple">comp.sys.mac.programmer.info</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>Source: <text:a xlink:href="ftp://ftp.cs.uu.nl/pub/NEWS.ANSWERS/Objective-C/answers" xlink:type="simple">Usenet Version</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>Archive-name: Objective-C/answers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>Version: $Id: answers,v 3.64 1998/09/17 12:51:31 tiggr Exp $</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="33"/>Answers to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="25"/>FREQUENTLY ASKED QUESTIONS</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="27"/>concerning Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>This is the first in a series of three informational postings concerning</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>comp.lang.objective-c. <text:s/>This first part answers FAQs; the second part lists</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>available class libraries and the third part is a simple sample Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>program.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>This document answers the following questions:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>1 <text:s text:c="2"/>What is Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>2 <text:s text:c="2"/>What exactly is it that makes Objective-C have `classes similar to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>Smalltalk&apos;, and what are the resulting capabilities of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>3 <text:s text:c="2"/>What are the differences between Objective-C and C++?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>4 <text:s text:c="2"/>What are the differences between Objective-C and Java?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>5 <text:s text:c="2"/>What are the `nice features&apos; of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>6 <text:s text:c="2"/>What are some problems of the language and how can I work around them?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>7 <text:s text:c="2"/>What object encapsulation does Objective-C provide?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>8 <text:s text:c="2"/>What are protocols?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>9 <text:s text:c="2"/>Does Objective-C employ garbage collection?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>10 <text:s/>How do I debug Objective-C using an unaware gdb?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>11 <text:s/>I get this `Floating exception&apos;...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>12 <text:s/>Why am I lectured by gcc about `#import&apos;?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>13 <text:s/>What written information concerning Objective-C is available?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>14 <text:s/>History <text:s text:c="3"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>15 <text:s/>Major compilers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>16 <text:s/>Compiler differences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>17 <text:s/>Objective-C support per platform</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>18 <text:s/>What are the newsgroups or mailing lists to read?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>19 <text:s/>Are there any FTP sites with Objective C code? <text:s/>Where?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>20 <text:s/>Is there any information on the Net concerning Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>21 <text:s/>For more information...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>(To find a question search on the question number starting a line.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>1 <text:s text:c="2"/>What is Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C is an object oriented computer programming language. <text:s/>It is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a superset of ANSI C and provides classes and message passing similar to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C includes, when compared to C, a few more keywords and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>constructs, a short description of which follows. <text:s/>For a complete</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>example see part 3 of this FAQ.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`@interface&apos; declares a new class. <text:s/>It indicates the name of the class,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the name of its superclass, the protocols adhered to (see Q7), the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>layout of the instance variables (similar to the definition of a struct,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>but including encapsulation information (see Q6)) and declares the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>methods implemented by this class. <text:s/>A class&apos; interface usually resides</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>in a file called `&lt;classname&gt;.h&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`@implementation&apos; defines a class. <text:s/>The implementation is no more than a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>collection of method definitions. <text:s/>Without an implementation, a class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>does not exist at run time. <text:s/>The implementation of a class usually</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>resides in a file called `&lt;classname&gt;.m&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>A category is a named collection of method definitions which are added</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to an existing class, possibly at run time. <text:s/>Thus, you use a category</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to add methods to a class. <text:s/>Some Objective-C implementations allow a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>category to even replace methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C includes the predefined type `id&apos; which stands for a pointer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to some object. <text:s/>Thus, `id obj;&apos; declares a pointer to an object. <text:s/>The</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>actual class of the object being pointed to is almost irrelevant, since</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C does run-time binding.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`-message;&apos; declares a method called `message&apos;. <text:s/>The `-&apos; indicates that</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the message can be sent to objects. <text:s/>A `+&apos; instead indicates the message</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>can be sent to class objects. <text:s/>A method is similar to a function in that</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it has arguments and a return value. <text:s/>The default return type is `id&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>If a method has nothing useful to return, it returns `self&apos;, which is a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>pointer to the object to which the message was sent (similar to `this&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>in C++).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>[obj message], [obj message: arg1] and [obj message: arg1 with: arg2]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>are examples of sending a message to the object OBJ with 0, 1 and 2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>arguments respectively. <text:s/>The name of the message is called the selector.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In this example, the selectors are: `message&apos;, `message:&apos; and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`message:with:&apos;, respectively.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>2 <text:s text:c="2"/>What exactly is it that makes Objective-C have `classes similar to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Smalltalk&apos;, and what are the resulting capabilities of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C is as close to Smalltalk as a compiled language allows:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Much of the syntax, i.e. both Smalltalk and Objective-C use method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>names like `a:method:name:&apos;. <text:s/>In Objective-C, the message sending</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>construct is enclosed in square brackets, like this:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[anObject aMessage: arg]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>whereas Smalltalk uses something like</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>anObject aMessage: arg</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* The basic class hierarchy: single inheritance with the `Object&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>class as the root of the tree.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Most method names in the Object class are the same like, for example,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`respondsTo:&apos;. <text:s/>What is called `doesNotUnderstand:&apos; in Smalltalk</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>is unchanged in the POC, but it is called `doesNotRecognize:&apos; in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU and Apple Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Smalltalk normally uses `doesNotUnderstand:&apos; to implement</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>forwarding, delegation, proxies, etc. <text:s/>In [GNU, Apple] Objective-C,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>such functionality is implemented by `forward::&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Objective-C has class objects and meta classes mostly like Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* You can add or delete methods and classes at runtime. <text:s/>A subclass</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>can pose as its superclass.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Objective-C does not have class variables like Smalltalk, but pool</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>variables and globals are easily emulated via static variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>* Objective-C is compiled---Smalltalk is only partially compiled. <text:s/>The</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>current Objective-C implementations are all *much* faster than any</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Smalltalk. <text:s/>For example ParcPlace Smalltalk-80/4 is at least 3 times</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>slower than both the GNU and NeXT Objective-C&apos;s. <text:s/>(This was measured</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>using the Self/Smalltalk benchmark suite available by FTP from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`self.stanford.edu:pub/Self-2.0.1&apos;.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The big difference of course is that Objective-C is a hybrid between</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Smalltalk and C. <text:s/>One can choose to represent a string as a `char *&apos; or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>as an object, whereas in Smalltalk everything is an object. <text:s/>This is one</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reason for Objective-C being faster. <text:s/>On the other hand, if every bit of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>information in an Objective-C program would be represented by an object,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the program would probably run at a speed comparable to Smalltalk and it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>would suffer from not having optimizations performed on the basic</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>classes, like Smalltalk can do.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>3 <text:s text:c="2"/>What are the differences between Objective-C and C++?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>C++ is a multi-paradigm language; Objective-C is object orientation on</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>top of C. <text:s/>In this answer, only the OO aspects of both languages will be</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>discussed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In Objective-C, the value of a variable denoting an object is always a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reference to the object. <text:s/>In C++ it is, in addition, possible for the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>variable&apos;s value to be the actual object.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In Objective-C, all method invocations are dynamically bound. <text:s/>In C++,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>invocations of virtual member functions are dynamically bound. <text:s/>Other</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>(non-virtual) member functions are more like scoped normal functions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>with a different syntax. <text:s/>In Objective-C, the dynamic binding is safe:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it will be signaled if an object does not implement the requested</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>method; in C++, the results will be unpredictable. <text:s/>In Objective-C, the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>safe dynamic binding mechanism underlies method forwarding and easy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>delegation. <text:s/>The selector type and perform: methods further increase the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>usefulness of dynamic binding.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C only allows single inheritance, with the Object class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>residing at the root of the inheritance tree. <text:s/>C++ allows multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance where direct superclasses must be distinct and conspicuous</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>use of `virtual&apos; defines whether a repeatedly inherited superclass is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>shared or repeated in the subclass.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In Objective-C, static typing is optional, though commonly used; in C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>static typing is mandatory.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In C++ (member) functions can be overloaded on argument types.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Operators can be overloaded too. <text:s/>Both are not possible in Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Other differences include C++&apos; implicit invocation of constructor and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>destructor functions when objects enter and exit scope, respectively;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and the concept of `friend&apos; classes and functions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C protocols resemble C++ signatures. <text:s/>In Objective-C, a class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>is an object like any other; C++ classes do not exist at run time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>4 <text:s text:c="2"/>What is the difference between Objective-C and Java?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The most obvious difference is syntax: Java&apos;s syntax is based on C++&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>whereas Objective-C employs the C syntax (and semantics) with the syntax</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of object declaration and manipulation based on Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The Java object model comes straight from Objective-C. <text:s/>Nested classes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>do not change that since they are retrofitted, in Java 1.1, onto the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>original Java 1.0 object model for compatibility with 1.0 tools.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Features that Java adds include mandatory typing, exception and thread</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>support in the language, security managers, name spaces, predefined</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class libraries (java.lang, awt), etc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Features that Java misses include categories and the selector type. <text:s/>No</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>categories means that a class can not be amended to suit your needs (a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>problem suffered by more OO languages, including C++). <text:s/>No selector type</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>means that `forward::&apos; and `perform:&apos; methods do not exist, and that the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>possibilities of dynamic binding are limited; e.g. you can&apos;t tell an</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>array to say `@selector (hello)&apos; to all its elements, and the buttons in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>your GUI won&apos;t be able to use the target/action paradigm employed by the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>OPENSTEP AppKit (and which is why inner classes were invented in Java</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>1.1).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Java currently enjoys a lot of `compile-once run-anywhere&apos; hype. <text:s/>Even</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>though Objective-C in this respect suffers the portability problems of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>C, OPENSTEP provides a foundation that could be described as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`compile-once-for-each-platform run-on-each-platform&apos;: OPENSTEP enables</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>application deployment on platforms ranging from MS Windows to Solaris.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>This is without modifications to the source, which is what</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`compile-once&apos; is all about.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>5 <text:s text:c="2"/>What are the `nice features&apos; of Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The possibility to load class definitions at run time. <text:s/>The possibility</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to extend a class at compile, link, or run time, through a category or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class posing.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objects are dynamically typed: full type information (name and type of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>instance variables; name, argument and return types of methods, etc) is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>available at run time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Every method invocation is dynamically bound. <text:s/>Add to this the selector</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>type, forward:: and perform: methods, and you get flexibility not easily</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>matched by other OO languages. <text:s/>Object archiving and distributed objects</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>(`remote method invocation&apos; in Java speak) are easy, not just to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>implement but also to use.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>6 <text:s text:c="2"/>What are some problems of the language and how can I work around them?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The underlying language is C: use Objective-C and you get all of C&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>problems for free.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There are some `common problems&apos;:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>There is no innate multiple inheritance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Protocols address the absence of multiple inheritance (MI) to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>some extent: Technically, protocols are equivalent to MI for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>purely &quot;abstract&quot; classes (see the answer on `Protocols&apos; below).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>To get around the absence of MI, you can create a compound</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>class, i.e. a class with instance variables that are references</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>to other objects. <text:s/>Instances can specifically redirect messages</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>to any combination of the objects they are compounded of. <text:s/>(It</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>isn&apos;t that much of a hassle and you have direct control over the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>inheritance logistics.) <text:s/>Of course, this is not `getting around</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>the problem of not having multiple inheritance&apos;, but just</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>modeling the world slightly different in such a way that you</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>don&apos;t need multiple inheritance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>There are no class variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>You can get around this by defining a static variable in the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>implementation file, and defining access methods for it. <text:s/>This</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>is actually a more desirable way of designing a class hierarchy,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>because subclasses shouldn&apos;t access superclass storage (this</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>would cause the subclass to break if the superclass was</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>reimplemented), and allows the subclass to override the storage</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>(if the classes access all their own variables via methods).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>To get the effect of class variables for which each subclass has</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>a distinct value, more elaborate schemes are needed. <text:s/>An often</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>used solution is to use a hash table to store the value of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>`variable&apos;, keyed on the class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>7 <text:s text:c="2"/>What object encapsulation does Objective-C provide?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Object encapsulation can be discerned at two levels: encapsulation of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>instance variables and of methods. <text:s/>In Objective-C, the two are quite</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>different.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Instance variables:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The keywords @public, @private and @protected are provided to secure</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>instance variables from prying eyes to some extent.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>@public <text:s text:c="8"/>anyone can access any instance variable.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>@protected <text:s text:c="5"/>only methods belonging to this object&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>class or a subclass thereof have access to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>the instance variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>@private <text:s text:c="7"/>only methods of this class may access the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>instance variables. <text:s/>This excludes methods</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="32"/>of a subclass.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>If not explicitly set, all instance variables are @protected. <text:s/>Some</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>people advocate that only @private should be used. <text:s/>It is generally</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>agreed upon that @public if prohibited.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Note: Instance variable encapsulation is enforced at compile-time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>At run-time, full typing information on all instance variables is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>available, which sort-of makes all variables @public again.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Methods:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>To the Objective-C runtime, all methods are @public. <text:s/>The programmer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>can only show his/her intention of making specific methods not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>public by not advertising them in the class&apos; interface. <text:s/>In</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>addition, so-called private methods can be put in a category with a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>special name, like `secret&apos; or `private&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>However, these tricks do not help much if the method is declared</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>elsewhere, unless one employs static typing. <text:s/>And the runtime</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>doesn&apos;t care about all this and any programmer can easily circumvent</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>the tricks described. <text:s/>Thus, all methods really are always @public.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>8 <text:s text:c="2"/>What are Protocols?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols are an addition to Objective-C that allows you to organize</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>related methods into groups that form high-level behaviors. <text:s/>Protocols</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>are currently available in NeXTSTEP (since 3.0) and derivatives, and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU CC (since 2.4).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In short, a protocol is a set of method declarations. <text:s/>A protocol can</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inherit from multiple other protocols, and a class can inherit multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>protocols. <text:s/>The protocol hierarchy is unrelated to the class hierarchy.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The type of a variable can be `id &lt;P&gt;&apos; to denote that the class of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>object pointed to does not matter, as long as the class implements all</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>methods prescribed by the protocol P. <text:s/>Protocols provide `multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance of interface&apos;. <text:s/>They are matched by Java interfaces and C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>signatures.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols address the MI issue. <text:s/>When you design an object with multiple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance, you usually don&apos;t want *all* the features of both A and B,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>you want feature set X from A and feature set Y from B. <text:s/>If those</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>features are methods, then encapsulating X and Y in protocols allows you</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to say exactly what you want in your new object. <text:s/>Furthermore, if</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>someone changes objects A or B, that doesn&apos;t break your protocols or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>your new object. <text:s/>This does not address the question of new instance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>variables from A or B, only methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols allow you to get type-checking features without sacrificing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>dynamic binding. <text:s/>You can say &quot;any object which implements the messages</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>in Protocol Foo is OK for this use&quot;, which is usually what you want -</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>you&apos;re constraining the functionality, not the implementation or the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>inheritance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Protocols give library builders a tool to identify sets of standard</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>protocols, independent of the class hierarchy. <text:s/>Protocols provide</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>language support for the reuse of design, whereas classes support the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reuse of code. <text:s/>Well designed protocols can help users of an application</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>framework when learning or designing new classes. <text:s/>Here is a simple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>protocol definition for archiving objects:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@protocol Archiving</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>-read: (Stream *) stream;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>-write: (Stream *) stream;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@end</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Once defined, protocols can be referenced in a class interface as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>follows:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>/* MyClass inherits from Object and conforms to the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="11"/>Archiving protocol. <text:s/>*/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@interface MyClass: Object &lt;Archiving&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>@end</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Unlike copying methods to/from other class interfaces, any incompatible</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>change made to the protocol will immediately be recognized by the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>compiler (the next time the class is compiled). <text:s/>Protocols also provide</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>better type checking without compromising the flexibility of untyped,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>dynamically bound objects.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>MyClass *obj1 = [MyClass new];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>// OK: obj1 conforms to the Archiving protocol.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>id &lt;Archiving&gt; obj2 = obj1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>// Error: obj1 does not conform to the TargetAction protocol.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>id &lt;TargetAction&gt; obj3 = obj1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>9 <text:s text:c="2"/>Does Objective-C employ garbage collection?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>No. <text:s/>Some libraries conventionally use a reference counting scheme, but</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>since such a scheme is implemented outside the language, it needs a lot</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of extra typing (by the programmer, on the keyboard) with all the usual</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>consequences: errors caused by not properly maintaining an object&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reference count.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Hans Boehm&apos;s garbage collector can be used with Objective-C. <text:s/>Depending</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>on the Objective-C compiler and library you use, integration is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>automatic or needs some work.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Garbage Collection in an Uncooperative Environment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Garbage collection of chunks of memory obtained through (its</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>replacement of) malloc(3). <text:s/>Works for C, C++, Objective-C, etc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>@article{bw88,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>title=&quot;Garbage Collection in an Uncooperative Environment&quot;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>author=&quot;Hans J\&quot;urgen Boehm and Mark Weiser&quot;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>journal=&quot;Software Practice and Experience&quot;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>pages=807-820,volume=18,number=9,month=sep,year=1988}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>            Available as `<text:a xlink:href="ftp://parcftp.xerox.com/pub/gc/gc4.10.tar.gz" xlink:type="simple">ftp://parcftp.xerox.com/pub/gc/gc4.10.tar.gz</text:a>&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>(check the directory for a newer version).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>10 <text:s/>How do I debug Objective-C using an unaware gdb.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>On August 20 1996, Michael Snyder of NeXT posted patches to GDB 4.16</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to make it Objective-C aware for GNU Objective-C code. <text:s/>This was</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>tested on HP-UX, Solaris and MS Windows. <text:s/>As he did not supply an URL</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>for these patches, I&apos;ve made the postings available as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.diff.gz.uue" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.diff.gz.uue</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    and <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.README" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/gdb-gnu-objc.README</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Debugging Objective-C using a non-Objective-C aware gdb has been</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>documented by Martin Cracauer &lt;cracauer@wavehh.hanse.de&gt; on</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.cons.org/cracauer/objc-hint-gdb.html" xlink:type="simple">http://www.cons.org/cracauer/objc-hint-gdb.html</text:a>.  It comes down to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>understanding that you can very well look at Objective-C from the C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>perspective, a language very well understood by gdb.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>11 <text:s/>I get this `Floating exception&apos;...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>This answer describes possible solutions for the floating exception</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>problem when using GNU Objective-C on i386 machines. <text:s/>[This problem</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>existed some time ago; it should not exist any more with recent</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>versions of the libraries/software.] <text:s/>If the problem you&apos;re having</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>does not fit either description, try applying the hack described in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387" xlink:type="simple">ftp://ftp.ics.ele.tue.nl/pub/users/tiggr/objc/README.387</text:a>, which has</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>been reported to work for Linux, FreeBSD, and DJGPP (2.7.2). <text:s/>If it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>does not solve the problem, ask.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>If you&apos;re running Linux, adding `-lieee&apos; to the linker invocation could</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>help. <text:s/>Thomas March &lt;amadeus@bga.com&gt; reported that on several</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>occasions, on systems running Linux ELF, with libc.so.5.0.9 and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>libm.so.5.?.?, the problem was reproducible and adding `-lieee&apos; did not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>solve the problem. <text:s/>However, switching to a newer libc (libc.so.5.2.18</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and libm.so.5.0.5) both solved the problem and removed the need for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`-lieee&apos; (i.e. a back to normal situation).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>If you&apos;re using DJGPP, you might want to take a look at the DJGPP FAQ,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    especially <text:a xlink:href="http://www.delorie.com/djgpp/v2faq/faq082.html" xlink:type="simple">http://www.delorie.com/djgpp/v2faq/faq082.html</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>12 <text:s/>Why am I lectured by gcc about `#import&apos;?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU CC issues the following multi-line warning about the how the use</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of `#import&apos; is discouraged (output from GNU CC 2.7.0):</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>foo.m:1: warning: using `#import&apos; is not recommended</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The fact that a certain header file need not be processed more than once</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>should be indicated in the header file, not where it is used.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The best way to do this is with a conditional of this form:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>#ifndef _FOO_H_INCLUDED</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>#define _FOO_H_INCLUDED</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>... &lt;real contents of file&gt; ...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>#endif /* Not _FOO_H_INCLUDED */</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Then users can use `#include&apos; any number of times.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU C automatically avoids processing the file more than once</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>when it is equipped with such a conditional.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In short, use `-Wno-import&apos; as an argument to gcc to stop it from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>producing this. <text:s/>Another possibility is to compile gcc after having</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>changed the line reading `static int warn_import = 1&apos; into `static</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int warn_import = 0&apos; in `cccp.c&apos; (line 467 in GNU CC 2.7.1); this way,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`-Wno-import&apos; is the default setting.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Whether or not using `#import&apos; is desirable (obviously) has to do with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>how to prevent multiple inclusions of the same file. <text:s/>Most include</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>files, when included multiple times, either do nothing new (possibly</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>due to guards being used) or (without the guards) cause the emission</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of C code on which the compiler will choke (due to, for instance,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>repeated typedefs). <text:s/>Thus, if everybody were to use `#import&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>everybody would be happy, since it does not seem to matter. <text:s/>However,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a notable exception to this rule is `assert.h&apos;, which changes the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>definition of the `assert&apos; macro depending on the setting of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NDEBUG macro.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There is one point to be made in favor of the warning: if the _user_</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>of an include file uses `#include&apos; instead of `#import&apos;, the guards</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>will be necessary. <text:s/>Thus, actually, the warning should be issued when</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a file is imported that appears not to be guarded.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Apart from the more-or-less religious (and thus useless) debate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>whether `#import&apos; or `#include&apos;-with-guards is better, it has been</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>observed that `#import&apos; does not catch re-reading a linked and/or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>duplicated file, whereas the guards do. <text:s/>However, this is, of course,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>a highly unlikely and probably undesirable situation for which neither</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>was designed to catch.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The reason for the existence of `#import&apos; probably is historical: the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>first implementation of Objective-C (by Stepstone) was as a preprocessor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>to C, run after a modified cpp. <text:s/>`#import&apos; was the include-once</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>directive to that cpp. <text:s/>Since it is part of the Objective-C language, it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>has made it into GNU CC&apos;s cpp.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>13 <text:s/>What written information concerning Objective-C is available?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Books on Objective-C, or object oriented programming in general:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Brad J. Cox, Andrew J. Novobilski: `Object Oriented Programming:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>An Evolutionary Approach&apos;, Addison-Wesley Publishing Company,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Reading, Massachusetts, 1991. <text:s/>ISBN: 0-201-54834-8 (Japanese:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>4-8101-8046-8).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This is the original book on Objective-C, which actually is a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>book on object oriented system development using Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Object-Oriented Programming and the Objective-C Language.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Originally published as `Nextstep Object-Oriented Programming and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>the Objective-C Language&apos; by Addison-Wesley in 1993 with ISBN</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>0-201-63251-9 (Japanese: 4-7952-9636-7). <text:s/>In its current [Tue Aug</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>26 1997] incarnation it is available on-line from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="http://devworld.apple.com/dev/SWTechPubs/Documents/OPENSTEP/ObjectiveC/objctoc.htm" xlink:type="simple">http://devworld.apple.com/dev/SWTechPubs/Documents/OPENSTEP/ObjectiveC/objctoc.htm</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This is a good book on OO programming in general, which focuses</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>on Objective-C as the implementation language. <text:s/>It is also the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>definitive source of information for the Objective-C language as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>implemented by NeXT (and GNU).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Lewis J. Pinson, Richard S. Wiener: Objective-C: Object Oriented</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Programming Techniques. <text:s/>Addison-Wesley Publishing Company, Reading,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Massachusetts, 1991. ISBN 0-201-50828-1 (Japanese: 4-8101-8054-9).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Includes many examples, discusses Stepstone&apos;s and NeXT&apos;s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>versions of Objective-C, and their differences.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Timothy Budd: An Introduction to Object-Oriented Programming.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Addison-Wesley Publishing Company, Reading, Massachusetts.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ISBN 0-201-54709-0 (Japanese: 4-8101-8048-4).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>An intro to the topic of OOP, as well as a comparison of C++,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C, Smalltalk, and Object Pascal</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Simson L. Garfinkel, Michael K. Mahoney: NeXTSTEP Programming Step</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ONE: Object-Oriented Applications. <text:s/>TELOS/Springer-Verlag, 1993</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>(tel: (800)SPR-INGE).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>It&apos;s updated to discuss NeXTSTEP 3.0 features (Project Builder,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>new development environment) but doesn&apos;t discuss 3DKit or DBKit.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Articles</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Why I need Objective-C&apos;, by Christopher Lozinski.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Journal of Object-Oriented Programming (JOOP) September 1991.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Contact info@bpg.com for a copy and subscription to the BPG</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>newsletter.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This article discusses the differences between C++ and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C in great detail and explains that Objective-C is a</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>better object oriented language.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Concurrent Object-Oriented C (cooC)&apos;, by Rajiv Trehan et. al.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ACM SIGPLAN Notices, Vol. 28, No 2, February 1993.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This article discusses cooC, a language based on the premise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>that an object not only provides an encapsulation boundary but</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>should also form a process boundary. <text:s/>cooC is a superset of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Porting NEXTSTEP Applications to Microsoft Windows&apos;,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>by Christopher Lozinski. <text:s/>NEXTWORLD EXPO Conference Proceedings,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>San Francisco, CA, May 25-27, 1993. <text:s/>Updated version of the article</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>available from the author. <text:s/>Contact info@bpg.com.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>This article describes how to develop Objective-C applications</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for both Microsoft Windows and NEXTSTEP.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU Documentation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The GNU project needs a free manual describing the Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>language features. <text:s/>Because of its cause, GNU cannot include the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>non-free books in the GNU system, but the system needs to come with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>documentation.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Anyone who can write good documentation, please think about giving</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>it to the GNU project. <text:s/>Contact rms@gnu.ai.mit.edu.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>14 <text:s/>History</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C was developed by Brad Cox, who founded the Stepstone</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>corporation in 1983 to develop and support the language, a compiler,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and supporting libraries. <text:s/>Stepstone never really made it big,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>fostering Objective-C in a niche similar to that of Smalltalk.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In 1985, Steve Jobs left Apple and started NeXT, a company that</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>developed m68k machines and the NeXTSTEP operating system. <text:s/>The user</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>interface of these machines was provided by Display PostScript and the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>AppKit, which, written in Objective-C, made Objective-C the language of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>choice on NeXT computers.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Brad Cox and Andrew Novobilski write `Object Oriented Programming: An</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Evolutionary Approach&apos; in 1986, the first book on Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NEXTSTEP 1.0a was released in 1989. <text:s/>The Objective-C compiler is based</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>on gcc 1.34.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In 1991, the Objective-C related modifications by NeXT to gcc find</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>their way back into the FSF GNU CC distribution. <text:s/>By version 1.99, gcc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>(the compiler) supports Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NEXTSTEP 3.0 is released in 1992. <text:s/>The compiler supports Objective-C++,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and the Objective-C language has been extended with `@protocol&apos;.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In the same year, gcc 2.0 comes supplied with an Objective-C runtime</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>library.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>In 1993, gcc supports protocols by version 2.4. <text:s/>NeXT stops the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>production of hardware. <text:s/>With NEXTSTEP 3.1 they include support for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>PC&apos;s. <text:s/>NeXT starts creating other products not bound to a particular</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>operating system, such as Portable Distributed Objects (PDO), which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>comes with its own Objective-C compiler and debugger.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>OPENSTEP, an Objective-C API, is made public in 1994.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NEXTSTEP 3.3 is released in 1995; it adds support for HP hppa and Sun</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>sparc machines. <text:s/>Also in this year, NeXT acquires all rights to the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C programming language and trademark from Stepstone.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Sun includes support for Objective-C++ in their SparcCompiler in 1996.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>They release OPENSTEP for Solaris. <text:s/>NeXT releases OPENSTEP 4.0 for PC</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>hardware. <text:s/>Support for hppa and sparc has vanished. <text:s/>OPENSTEP for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Windows NT is released.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Early 1997, Apple acquires NeXT and starts work on the next Macintosh</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>operating system, code named Rhapsody, based on the technology they got</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>from NeXT. <text:s/>In the same year, Sun fosters the success of Java and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>subsequently kills OPENSTEP for Solaris.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>[Entry updated Tue Feb 17 1998. <text:s/>Credits to Norihiro Ito, Hajime Murao,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>KATO Tsuguru, and Hironobu Suzuki.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>15 <text:s/>Major compilers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There are 4 major Objective-C compilers, provided by Apple, GNU,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Stepstone, and Portable Object Compiler. <text:s/>The Stepstone and POC are</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>preprocessors that emit vanilla C code, which makes them very</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>portable. <text:s/>The GNU compiler compiles directly to assembly, as does</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Apple&apos;s, which is based on the GNU compiler.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Apple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Apple (formerly NeXT) Objective-C compiler comes bundled with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OpenStep Developer, current Rhapsody seeds, and various other</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>products like Portable Distributed Objects (PDO) and WebObjects.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Bundled with the operating systems is the FoundationKit general</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>class library and the AppKit GUI library.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OpenStep is available for NeXT hardware and PC compatible Intel</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>machines. <text:s/>Rhapsody is the current name for the next-generation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Apple Macintosh operating system; it is based on OpenStep. <text:s/>Rhapsody</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>will be available for PowerPC-based Macintoshes and Intel-based PC</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>compatibles.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Apple Computer, Inc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>1 Infinite Loop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Cupertino, CA 95014</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>voice: 408-996-1010</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>        www: <text:a xlink:href="http://www.apple.com/" xlink:type="simple">http://www.apple.com/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Sep 21 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU CC, since version 2, comes with an Objective-C compiler. <text:s/>The</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>current distribution of GNU CC (version 2.8.0) includes an</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Objective-C compiler and runtime library. <text:s/>The latter includes the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>`Object&apos; and `NXConstantString&apos; classes. <text:s/>Some people are working</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>on GNU libraries, see part 2 of this FAQ (The ClassWare Listing)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>        for details or visit <text:a xlink:href="http://www.gnustep.org/" xlink:type="simple">http://www.gnustep.org/</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Free Software Foundation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>59 Temple Place -- Suite 330</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Boston, MA <text:s text:c="2"/>02111</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>+1-617-542-5942</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>General questions about the GNU Project can be asked to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>gnu@prep.ai.mit.edu.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>For information on how to order GNU software on tape or cd-rom,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>and printed GNU manuals, check the file etc/ORDERS in the GNU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Emacs distribution, ftp the file /pub/gnu/GNUinfo/ORDERS on prep,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>or e-mail a request to: gnu@prep.ai.mit.edu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>By ordering your GNU software from the FSF, you help us continue</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>to develop more free software. <text:s/>Media revenues are our primary</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>source of support. <text:s/>Donations to FSF are deductible on US tax</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>returns.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The above software will soon be at these ftp sites as well.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Please try them before prep.ai.mit.edu as prep is very busy!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="10"/>thanx -gnu@prep.ai.mit.edu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>ASIA: ftp.cs.titech.ac.jp, tron.um.u-tokyo.ac.jp/pub/GNU/prep</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>cair-archive.kaist.ac.kr/pub/gnu, ftp.nectec.or.th/pub/mirrors/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>AUSTRALIA: archie.au/gnu (archie.oz or archie.oz.au for ACSnet)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>AFRICA: ftp.sun.ac.za/pub/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>MIDDLE-EAST: ftp.technion.ac.il/pub/unsupported/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>EUROPE: irisa.irisa.fr/pub/gnu, ftp.univ-lyon1.fr:pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.mcc.ac.uk, unix.hensa.ac.uk/mirrors/uunet/systems/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>src.doc.ic.ac.uk/gnu, ftp.ieunet.ie:pub/gnu, ftp.eunet.ch,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>nic.sunsite.cnlab-switch.ch/mirror/gnu, ftp.win.tue.nl/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.nl.net, ftp.informatik.rwth-aachen.de/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.informatik.tu-muenchen.de, ftp.etsimo.uniovi.es/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.funet.fi/pub/gnu, ftp.denet.dk, ftp.stacken.kth.se,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>isy..se, ftp.luth.se/pub/unix/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.sunet.se/pub/gnu, archive.eu.net</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>SOUTH AMERICA: ftp.inf.utfsm.cl/pub/gnu, ftp.unicamp.br/pub/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>WESTERN CANADA: ftp.cs.ubc.ca/mirror2/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>USA: wuarchive.wustl.edu/systems/gnu, labrea.stanford.edu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.digex.net/pub/gnu, ftp.kpc.com/pub/mirror/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>f.ms.uky.edu/pub3/gnu, jaguar.utah.edu/gnustuff,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.hawaii.edu/mirrors/gnu, uiarchive.cso.uiuc.edu/pub/gnu,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.cs.columbia.edu/archives/gnu/prep,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>archive.cis.ohio-state.edu/pub/gnu, gatekeeper.dec.com/pub/GNU,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>ftp.uu.net/systems/gnu</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Sep 21 1997. <text:s/>GNU FTP mirror site list</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="9"/>up to date as of Tue Jan 13 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNU/EGCS</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>        EGCS (at <text:a xlink:href="http://www.cygnus.com/egcs/" xlink:type="simple">http://www.cygnus.com/egcs/</text:a>) is a variation of GCC.  From</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>the EGCS FAQ:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>In brief, the three biggest differences between egcs and gcc2 are</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>these:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>More rexamination of basic architectual decisions of gcc and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>an interest in adding new optimizations;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>working with the groups who have fractured out from gcc2 (like</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>the Linux folks, the Intel optimizations folks, Fortran folks)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>including more front-ends; and finally</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>An open development model (see below) for the development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>process.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Like GCC, EGCS supports Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Stepstone</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Steptone provides Objective-C compilers and runtime for: Apple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Macintosh (running Mac Programmers Workshop), DEC (Open VMS,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OSF/1, ULTRIX), HP9000/700, 800 (HPUX), IBM RISC System/6000</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>(AIX), MIPS, NeXT, PC (MS-DOS, OS/2, MS Windows 3.1/95/NT, SCO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Unix), Sun 3/4/SPARC (SunOS, Solaris), Silicon Graphics INDIGO</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>(IRIS). <text:s/>Other ports available by market demands or consulting</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>services.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The ICpak101 Foundation Class Library is available on all the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>above. <text:s/>The ICpak201 GUI Class Library is available on platforms</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>that support XWindows, Motif, OpenWindows and SunView.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Stepstone Corporation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>75 Glen Road</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Sandy Hook, CT 06482</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>voice: 203 426 1875</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>voice: 800 BUY OBJEct</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>fax: <text:s text:c="2"/>203 270 0106</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>        www: <text:a xlink:href="http://www.stepstn.com/" xlink:type="simple">http://www.stepstn.com/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Aug 31 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Portable Object Compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Portable Object Compiler is available on Windows 95, Windows</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>NT, OS/2, Macintosh MPW, Amiga, BeOS, Linux, Linux/Alpha, MkLinux,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>FreeBSD, NetBSD, AIX, SunOS, Solaris, NeXTstep, HP-UX, SGI IRIX,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>OSF/1 Digital UNIX, Apple Rhapsody, and CRAY Unicos.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>It&apos;s an Objective C compiler, developed under the GNU Library</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>General Public License, compatible with several C compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>environments, including GNU cc, lcc, SGI cc, MIPSpro cc, HP-UX cc,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>AIX cc, DEC cc, SUN acc, DJGPP gcc, Cray cc, pgcc, WATCOM wcc,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Microsoft Visual C, Metrowerks MWCPPC, Metrowerks/BeOS mwcc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>and IBM Visual Age icc.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Portable Object Compiler supports C and C++ as base languages,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>and comes with an extensive set of collection class objects,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>including objects for arbitrary precision arithmetic. <text:s/>Most of the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>collection class objects compile on, and work with, Stepstone</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Objective C, GNU Objective C and NeXT Objective C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Additional interesting features of the compiler are support for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Objective-C blocks, an option for garbage collection and an inline</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>cache, pure C messenger.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>The Portable Object Compiler is obtainable from a few sites,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>         <text:a xlink:href="http://www.can.nl/%7Estes/compiler.html" xlink:type="simple">http://www.can.nl/~stes/compiler.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>         <text:a xlink:href="http://cage.rug.ac.be/%7Estes/compiler.html" xlink:type="simple">http://cage.rug.ac.be/~stes/compiler.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>         <text:a xlink:href="http://hydrogen.ch.ntu.edu.tw:8080/%7Edavid/OBJC/software.html" xlink:type="simple">http://hydrogen.ch.ntu.edu.tw:8080/~david/OBJC/software.html</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>[Entry up to date as of Sun Jan 25 1998.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>16 <text:s/>Compiler differences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>This section lists differences between the various Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>compilers that are available. <text:s/>The following compilers are compared:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Compiler <text:s text:c="3"/>Description</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>gcc <text:s text:c="8"/>GNU CC, version 2.8.0 or later</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>apple <text:s text:c="6"/>The (GNU CC based) compiler supplied with Rhapsody (previously</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>known as the NeXT compiler supplied with NextStep/OpenStep).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>stepstone <text:s text:c="2"/>Stepstone Objective-C compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>objc <text:s text:c="7"/>Portable Object Compiler</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The following table lists features of only the compiler and runtime</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>library. <text:s/>Any other libraries normally supplied or associated with the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>compiler are not taken into account.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Feature <text:s text:c="28"/>gcc <text:s text:c="4"/>apple <text:s text:c="2"/>stepstn objc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>supports</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>blocks (1) <text:s text:c="23"/>no <text:s text:c="5"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>categories <text:s text:c="23"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>replacing methods <text:s text:c="14"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>garbage collection <text:s text:c="15"/>no (3) <text:s/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes (2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Objective-C++ <text:s text:c="20"/>no <text:s text:c="5"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>protocols <text:s text:c="24"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>no</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>static method binding <text:s text:c="12"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes <text:s text:c="4"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>static/automatic allocation <text:s text:c="6"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes <text:s text:c="4"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>supports =-style class defs <text:s text:c="6"/>no <text:s text:c="5"/>no <text:s text:c="5"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>method decls in implementation <text:s text:c="3"/>no <text:s text:c="5"/>no <text:s text:c="5"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>multithreading <text:s text:c="19"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>+initialize method <text:s text:c="15"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>+load method <text:s text:c="21"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>@&quot;string objects&quot; <text:s text:c="16"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>no</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>@class forward declarations <text:s text:c="6"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>source available <text:s text:c="19"/>yes <text:s text:c="4"/>no <text:s text:c="5"/>no <text:s text:c="5"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>method binding mechanism <text:s text:c="11"/>sparse <text:s/>class <text:s text:c="2"/>? <text:s text:c="6"/>inline</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="40"/>array <text:s text:c="2"/>cache <text:s text:c="10"/>cache</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>exception handling mechanism <text:s text:c="7"/>yes <text:s text:c="4"/>yes <text:s text:c="4"/>? <text:s text:c="6"/>yes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>--------------------------------------------------------------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>notes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>1: Described as `Action Expressions&apos; in</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>       <text:a xlink:href="http://www.virtualschool.edu/cox/CoxTaskMaster.html" xlink:type="simple">http://www.virtualschool.edu/cox/CoxTaskMaster.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>2: Using Hans Boehm&apos;s garbage collector (see question 9).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>3: Work in progress; some next release of gcc/ecgs will</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="7"/>have support for using Boehm&apos;s garbage collector.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>17 <text:s/>Objective-C support per platform</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Below is a list of compilers supporting Objective-C, and which are not</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>NeXT&apos;s, Stepstone&apos;s or plain GCC.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>DOS, Windows, OS/2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>BPG</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG provides the Borland Extensions to Objective-C which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>allows the Objective-C translator to be used with the Borland</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Compiler, and makes it easy to develop Objective-C application</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for Microsoft Windows.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG provides the Smalltalk Interface to Objective-C which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>makes Objective-C objects look like Smalltalk Objects. <text:s/>It can</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>be used to build Graphical User Interface on portable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C objects, or to sell Objective-C libraries to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Smalltalk developers.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG provides the Objective-C Message Bus which sends</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Objective-C messages across heterogeneous computer platforms.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>BPG has a library of objects for modeling Objective-C</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>programs. <text:s/>A browser application has been built on this</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>library. <text:s/>Other potential applications include adding class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>variables to Objective-C, adding runtime information about</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>instance variables, and method argument types, generating</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>object versions, and eventually building a browser/translator.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Christopher Lozinski</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>BPG</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>35032 Maidstone Court</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Newark, CA 94560</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Tel: +1 510 795-6086</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>fax: +1 510 795-8077</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>email: info@bpg.com</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>DJGPP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>DJGPP includes Objective-C support [though I do not know to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>which extent].</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>            From the DJGGP homepage at <text:a xlink:href="http://www.delorie.com/" xlink:type="simple">http://www.delorie.com</text:a>:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>DJGPP is a complete 32-bit C/C++ development system for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>Intel 80386 (and higher) PCs running DOS. It includes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>ports of many GNU development utilities. The development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>tools require a 80386 or newer computer to run, as do the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>programs they produce. In most cases, the programs it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>produces can be sold commercially without license or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>royalties.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GCC/EMX</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>The EMX port of GCC implements Objective-C, and with RSX (or</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>RSXNT) it runs on DOS/DPMI boxes (or NT) too.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>EMX is available for anonymous ftp on at following locations:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://ftp.uni-stuttgart.de/pub/systems/os2/leo/devtools/emx+gcc/" xlink:type="simple">ftp://ftp.uni-stuttgart.de/pub/systems/os2/leo/devtools/emx+gcc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://ftp-os2.cdrom.com/pub/os2/lang/emxtools/" xlink:type="simple">ftp://ftp-os2.cdrom.com/pub/os2/lang/emxtools/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://ftp.leo.org/pub/comp/os/os2/devtools/emx+gcc/" xlink:type="simple">ftp://ftp.leo.org/pub/comp/os/os2/devtools/emx+gcc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>                <text:a xlink:href="ftp://src.doc.ic.ac.uk/packages/os2/ftp.cdrom.com/lang/emxtools/" xlink:type="simple">ftp://src.doc.ic.ac.uk/packages/os2/ftp.cdrom.com/lang/emxtools/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>RSX is available from</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>            <text:a xlink:href="ftp://ftp.uni-bielefeld.de/pub/systems/msdos/misc/" xlink:type="simple">ftp://ftp.uni-bielefeld.de/pub/systems/msdos/misc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Without RSX EMX is limited to DOS/VCPI and OS/2 &gt;=2.0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>[Thanks to &lt;huug@poboxes.com&gt; for this information.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GCC for Win32</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Hyungjip Kim &lt;hjkim@namo.co.kr&gt; provides GCC 2.7.2 binaries</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for Win32. <text:s/>This GCC is modified to generate CodeView</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>compatible debug information, to enable the use of existing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>            Windows debuggers.  Visit <text:a xlink:href="http://www.darkland.co.kr/%7Ehjkim/objc/" xlink:type="simple">http://www.darkland.co.kr/~hjkim/objc/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>for more information, and the binaries.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>GNU-Win32</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>The GNU-Win32 project aims at providing the GNU tools</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>(including GCC) for Windows NT/95. <text:s/>[I do not know to which</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>extent Objective-C is supported.] <text:s/>Below is a description of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>            the project, taken from <text:a xlink:href="http://www.cygnus.com/misc/gnu-win32" xlink:type="simple">http://www.cygnus.com/misc/gnu-win32</text:a>:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>The GNU-Win32 tools are ports of the popular GNU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>development tools to Windows NT/95 for the x86 and powerpc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>processors. Applications built with these tools have</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>access to the Microsoft Win32 API as well as the Cygwin32</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>API which provides additional UNIX-like functionality</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>including UNIX sockets, process control with a working</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>fork and select, etc...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>With these tools installed, it is now possible to:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>write Win32 console or GUI applications that make use of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>the standard Microsoft Win32 API and/or the Cygwin32 API.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>easily configure and build many GNU tools from source</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>(including rebuilding the gnu-win32 development tools</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>themselves under x86 NT).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>port many other significant UNIX programs to Windows NT/95</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>without making significant changes to the source code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>have a fairly full UNIX-like environment to work in, with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>access to many of the common Unix utilities (from both the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>bash shell and command.com).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>The GNU-Win32 project is run by Cygnus; for more information</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>            see <text:a xlink:href="http://www.cygnus.com/" xlink:type="simple">http://www.cygnus.com</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Macintosh</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Metrowerks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Preliminary Objective-C support for the MacOS will be included</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>in CodeWarrior Professional 1, to be released at the end of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>May 1997. <text:s/>[Entry written Thu May 15 1997.]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Metrowerks Corporation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>2201 Donley Drive</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Austin, TX 78758</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>            <text:a xlink:href="http://www.metrowerks.com/" xlink:type="simple">http://www.metrowerks.com/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>phone: 1-800-377-5416, +1 512 873 8313</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>email: info@metrowerks.com</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Tenon</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Tenon CodeBuilder supports Objective-C. <text:s/>This product is based</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>on GNU CC and targeted at the Power Macintosh.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>            <text:a xlink:href="http://www.tenon.com/products/codebuilder/" xlink:type="simple">http://www.tenon.com/products/codebuilder/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Sun SPARC</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Sun</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>Sun&apos;s SPARCcompiler C++ 4.1 understands Objective-C, though it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>does not come with the relevant include files and libraries.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>At one time, Sun provided OpenStep on Solaris; it now seems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>that they are trying very hard to forget that: Sun&apos;s WWW site</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>no longer provides any relevant information on either OpenStep</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>or Objective-C.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>18 <text:s/>What are the newsgroups or mailing lists to read?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Read comp.lang.objective-c, which is bound to discuss current events.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Also, threads on comp.sys.next.programmer are Objective-C specific on</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>occasion.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There is a mailing list on GNU Objective-C: gnu-objc@gnu.ai.mit.edu.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>To subscribe to this list, send a mail with your request to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>`gnu-objc-request@gnu.ai.mit.edu.&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There&apos;s a mailing list for Portable Object Compiler users. Send email to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>&apos;objc-users-request@peti.gmd.de&apos; to subscribe.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>GNUstep has several newsgroups devoted to it: gnu.gnustep.announce and</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>gnu.gnustep.discuss to name but a few.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Furthermore, the various kits that are being developed each come with</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>their own mailing list. <text:s/>See part 2 of this FAQ for more information.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>19 <text:s/>Are there any FTP sites with Objective C code? <text:s/>Where?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>All Rhapsody/NextStep/OpenStep sites carry Objective-C material.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>To name a few:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://next-ftp.peak.org/pub/next/" xlink:type="simple">ftp://next-ftp.peak.org/pub/next/</text:a>       (NEXTSTEP)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ftp.leo.org/pub/comp/platforms/next/" xlink:type="simple">ftp://ftp.leo.org/pub/comp/platforms/next/</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ftp.informatik.uni-muenchen.de/" xlink:type="simple">ftp://ftp.informatik.uni-muenchen.de</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ftp.gnustep.org/pub/" xlink:type="simple">ftp://ftp.gnustep.org/pub/</text:a>              (GNUStep)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>        <text:a xlink:href="ftp://ccrma-ftp.stanford.edu/pub/NeXT/" xlink:type="simple">ftp://ccrma-ftp.stanford.edu/pub/NeXT/</text:a>  (MusicKit a.o.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>See also part 2 of this FAQ.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>20 <text:s/>Is there any information on the Net concerning Objective-C?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Basic and related Objective-C (and/or NeXTSTEP) information is available</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>at the following places:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    Apple Enterprise Group at <text:a xlink:href="http://www.enterprise.apple.com/" xlink:type="simple">http://www.enterprise.apple.com/</text:a> with the</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    book at <text:a xlink:href="http://gemma.apple.com/techinfo/techdocs/rhapsody/apple.html" xlink:type="simple">http://gemma.apple.com/techinfo/techdocs/rhapsody/apple.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Steve deKorte&apos;s Objective-C page at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.slip.net/%7Edekorte/Objective-C/" xlink:type="simple">http://www.slip.net/~dekorte/Objective-C/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Brad Cox&apos;s Objective-C page at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.virtualschool.edu/mon/Cox/ObjectiveC.html" xlink:type="simple">http://www.virtualschool.edu/mon/Cox/ObjectiveC.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    the GNUStep project at <text:a xlink:href="http://www.gnustep.org/" xlink:type="simple">http://www.gnustep.org/</text:a>, with a mirror at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.nmr.embl-heidelberg.de/GNUstep" xlink:type="simple">http://www.nmr.embl-heidelberg.de/GNUstep</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the libobjects FAQ at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="ftp://ftp.cs.rochester.edu/pub/u/mccallum/libobjects/Gnustep-FAQ.html" xlink:type="simple">ftp://ftp.cs.rochester.edu/pub/u/mccallum/libobjects/Gnustep-FAQ.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    the NEXTSTEP/OpenStep Information Service at <text:a xlink:href="http://www.stepwise.com/" xlink:type="simple">http://www.stepwise.com/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    the eduStep initiative at <text:a xlink:href="http://www.nmr.embl-heidelberg.de/eduStep/" xlink:type="simple">http://www.nmr.embl-heidelberg.de/eduStep/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    Cetus Links (<text:a xlink:href="http://www.rhein-neckar.de/%7Ecetus/" xlink:type="simple">http://www.rhein-neckar.de/~cetus/</text:a>) has many links on OO;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    Objective-C is on <text:a xlink:href="http://www.rhein-neckar.de/%7Ecetus/oo_objective_c.html" xlink:type="simple">http://www.rhein-neckar.de/~cetus/oo_objective_c.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Nelson Minar&apos;s Objective-C page at</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    <text:a xlink:href="http://www.santafe.edu/projects/swarm/ObjC/objective-c.html" xlink:type="simple">http://www.santafe.edu/projects/swarm/ObjC/objective-c.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    Tiggr&apos;s Objective-C page at <text:a xlink:href="http://www.ics.ele.tue.nl/%7Etiggr/objc/" xlink:type="simple">http://www.ics.ele.tue.nl/~tiggr/objc/</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    Portable Object Compiler homepage at <text:a xlink:href="http://www.can.nl/%7Estes/compiler.html" xlink:type="simple">http://www.can.nl/~stes/compiler.html</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    Norihiro Itoh&apos;s page at <text:a xlink:href="http://www.fsinet.or.jp/%7Enito/index-j.html" xlink:type="simple">http://www.fsinet.or.jp/~nito/index-j.html</text:a>,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>and of course the HTML versions of this FAQ and associated information</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>at the addresses listed below.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>21 For more information...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Visit one of the places mentioned in #20, or see part 2 of this FAQ,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Objective-C/classes a.k.a. the ClassWare Listing, for an [incomplete!]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>overview of available Objective-C classes and libraries. <text:s/>See part 3 of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>this FAQ, Objective-C/sample a.k.a. the Simple Sample Program, for an</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>example Objective-C program.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>A World Wide Web hypertext version of this FAQ is maintained by Steve Dekorte</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>&lt;dekorte@suite.com&gt; at <text:a xlink:href="http://www.slip.net/%7Edekorte/Objective-C/" xlink:type="simple">http://www.slip.net/~dekorte/Objective-C/</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>A Japanese language version of this FAQ, maintained by Norihiro Itoh</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>&lt;nito@fsinet.or.jp&gt;, resides at <text:a xlink:href="http://www.fsinet.or.jp/%7Enito/index-j.html" xlink:type="simple">http://www.fsinet.or.jp/~nito/index-j.html</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>The early version of this FAQ was compiled by Bill Shirley, with the aid of</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>many people. <text:s/>The current version is being maintained by Pieter Schoenmakers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;tiggr@gerbil.org&gt;, aided by input from a lot of people, including: Per</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>Abrahamsen, Paul Burchard, Brad Cox, Christopher Lozinski, Mike Mahoney, Jon</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>F. Rosen, Paul Sanchez, Lee Sailer, David Stes, Paul Sanchez, Bill Shirley,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>Subrata Sircar, Ted Slupesky, Richard Stallman, and Kersten Krab Thorup.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>Send your suggestions, additions, bug reports, comments and fixes to</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>tiggr@gerbil.org.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>The information in this file comes AS IS, WITHOUT ANY WARRANTY. <text:s/>You may</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>use the information contained in this file or distribute this file, as</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>long as you do not modify it, make money out of it or take the credits.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1047739">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="Feuille10" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="1024" table:default-cell-style-name="ce62"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Base classes and general description How the event handling happens? Difference between UIWindow and UIView Can we have more UIWindows in iOS?Yes, but rare – UIAlertView is a separate window Difference between bounds, frame of a view What&apos;s very important designing UIs (views)? Difference between points and pixels What is the responder chain? What is IBOutlet and IBAction? How do you use them? Basic tableview how to: datasource and delegate implementation Drawbacks of UITableViews Collection views Benefits of collections views What is very important updating the UI in a multithreaded application? How can you do that? what to do when the keyboard appears and hides some parts of the UI that are important - logic implementation Why should we release the outlets in viewDidUnload in MRC? What about ARC? Difference in Xib/storyboard vs nib? Animations? view transitions? how can we present new view controllers? tabbar vs toolbar vs navigationbar: when to use which, can you combine them? [expand tag=”div”  title=”UI customization (possible ways to set color etc)”]use public properties, use appearance[/expand] UIAppearance basics, difference between setting through appearance proxy and instance </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
      <text:p>CoreData</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>what is CoreData and what do we use it for is CoreData == sqlite or some wrapper? what types of stores does core data support What is the minimum necessary classes and relationship between them? Can the NSPersistentStoreCoordinator have more persistent stores? What is a managed object context What about multi-threading and core data usage What is an NSManagedObjectId What is lazy loading, how does this relate to core data, situations when this can be handy How to read only a few attributes of an entity What is a fetchedresultcontroller How to synchronize contexts How could one simulate an NSManagedObject (dynamic properties) </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell/>
     <table:table-cell table:style-name="ce75" office:value-type="string" calcext:value-type="string">
      <text:p>Tricky questions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>What is an actual class in ObjectiveC What is the isa member How to make a static library optional? How to correctly implement a retaining setter property How to declare the properties to work the same in MRC and ARC? What happens if you add your just created object to a mutable array, and you release your object What happens with the objects if the array is released What happens if you remove the object from the array/dict, and you try to use it Garbage collection on iPhone The circular reference problem with delegates What happens when we invoke a method on a nil pointer? What happens when we call a method on an object which doesn&apos;t exists? Does KVO works with iVars? Does KVC works with iVars? When it is mandatory to synthesize properties What to do in a situation when a class not necessarily implement a method from a protocol Difference between nil and Nil and NULL??? How does proxy-ing work ??? How to call a method on an &apos;unknown&apos; typed object? How to call a selector with more than 2 parameters? How to cancel a block? How NSOperation cancellation works? Can we/should we invoke (public) instance methods in an initializer and the dealloc? what about properties? NSCoding, NSKeyedArchiving Can we use our own objects as key in a dictionary? The difference between a shallow and a deep copy What can&apos;t we put into an array or dictionary? How can we put nil it into dictionary/array? How to get the current language of the device? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>Post navigation </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://andras.palfi.hu/robert-c-martin-clean-architecture-and-design/" xlink:type="simple">←Robert C. Martin: Clean Architecture and Design</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://andras.palfi.hu/select-items-from-a-list-without-repetition/" xlink:type="simple">Select items from a list without repetition →</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048563">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="C++ faq" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce76"/>
    <table:table-column table:style-name="co10" table:default-cell-style-name="ce77"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1022" table:default-cell-style-name="ce76"/>
    <table:table-row table:style-name="ro27" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro27" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro27" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell/>
     <table:table-cell table:style-name="ce78" office:value-type="string" calcext:value-type="string">
      <text:p>Why can’t my derived class access private things from my base class?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell table:style-name="ce77"/>
     <table:table-cell table:style-name="ce79" office:value-type="string" calcext:value-type="string">
      <text:p>protected inline access functions</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro27" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro27" table:number-rows-repeated="183">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro27" table:number-rows-repeated="1048378">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="c++ ref" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co11" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>sizeof an empty class is ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Size of class is 1</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
      <text:p>What is a “virtual constructor”?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>An idiom that allows you to do something that C++ doesn’t directly support.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
      <text:p>Example 1 using the idiom of virtual contructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Shape {</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual ~Shape() { } <text:s text:c="16"/>// A virtual destructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual void draw() = 0; <text:s text:c="12"/>// A pure virtual function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual void move() = 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>// ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>      virtual <text:span text:style-name="T44">Shape</text:span>* clone()  const = 0;   // Uses the copy constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>virtual Shape* create() const = 0; <text:s text:c="2"/>// Uses the default constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Circle : public Shape {</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Circle* clone() <text:s/>const; <text:s text:c="2"/>// Covariant Return Types; see below</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Circle* create() const; <text:s text:c="2"/>// Covariant Return Types; see below</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>// ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T44">Circle</text:span>* Circle::clone()  const { return new Circle(*this); }</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Circle* Circle::create() const { return new Circle(); <text:s text:c="5"/>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>with the code above, calling clone using Shape, creates Circle.</text:p><text:p>Note the covariant return type of clone and create functions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
      <text:p>Example 2 using the idiom of virtual constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>A variant of factory method using virtual constructor idiom:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>struct F { <text:s/>// interface to object creation functions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>virtual A* make_an_A() const = 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>virtual B* make_a_B() const = 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>void user(const F&amp; fac)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>A* p = fac.make_an_A(); // make an A of the appropriate type</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>B* q = fac.make_a_B(); <text:s/>// make a B of the appropriate type</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>// ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>user function can use any class derived from F, even if it is completely isolated from it.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Arrays and inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>casting or passing as function argument :</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Derived * <text:s/>→ Base * <text:s/>: legal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Derived ** <text:s/>→ Base ** : illegal, pass a vector of Dogs to a function expecting a vector of Pets</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>array of Derived <text:s/>→ array of Base : legal but run-time error see code 13 <text:s text:c="4"/>use std::array&lt;T, N&gt; is better </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Std::container of Derived * <text:s/>→ Std::container of Base * : illegal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Code 13</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>void userCode(Base* arrayOfBase)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>arrayOfBase[2].f(); <text:s/>//this points to the position arrayOfBase+sizeof(Base)*2. If sizeof(Derived) &gt; sizeof(Base) → catastrophy </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>Derived arrayOfDerived[10]; <text:s text:c="2"/>// 4</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>userCode(arrayOfDerived); <text:s text:c="4"/>// 5</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>std::map vs std::unordered_map</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>the first uses tree-based lookedup, the second uses hash based lookedup</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Array, collection, typle, shared_ptr, unique_ptr</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>std::vector vs std::Array</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>the first uses the heap, the second uses the stack</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>Arrays are fixed-size sequence containers: they hold a specific number of elements ordered in a strict linear sequence.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;array&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
        <text:p>int main ()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::array&lt;int,10&gt; myarray;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>unsigned int i;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>// assign some values:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>for (i=0; i&lt;10; i++) myarray[i]=i;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>// print content</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;myarray contains:&quot;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>for (i=0; i&lt;10; i++)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>std::cout &lt;&lt; &apos; &apos; &lt;&lt; myarray[i];</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>//array can be used as iterator</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>vector v;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>copy(myarray, myarray+4, back_inserter(v));</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>A tuple is an object capable to hold a collection of elements. Each element can be of a different type.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;tuple&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
        <text:p>int main ()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::tuple&lt;int,char&gt; mytuple (10,&apos;a&apos;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::get&lt;0&gt;(mytuple) = 20;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;mytuple contains: &quot;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::get&lt;0&gt;(mytuple) &lt;&lt; &quot; and &quot; &lt;&lt; std::get&lt;1&gt;(mytuple);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>Std::get function is specialized for pair and array too.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;utility&gt; <text:s text:c="5"/>// std::pair, std::get</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce84" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt; <text:s text:c="4"/>// std::cout</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
        <text:p>int main () {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::pair &lt;int,char&gt; foo (10,&apos;x&apos;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::get&lt;0&gt;(foo) = 50;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;foo contains: &quot;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::get&lt;0&gt;(foo) &lt;&lt; &quot; and &quot; &lt;&lt; std::get&lt;1&gt;(foo) &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
        <text:p>Is an array of Derived a kind-of an array of Base?</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>void userCode(Base* arrayOfBase)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>arrayOfBase[1].f(); <text:s text:c="10"/>// 3</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>int main()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>Derived arrayOfDerived[10]; <text:s text:c="2"/>// 4</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>userCode(arrayOfDerived); <text:s text:c="4"/>// 5</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>// ...</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>the compiler does not know that the arg to userCode is an array, and does not detect the run time catastrophy.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
        <text:p>a container of derived can&apos;t be cast to container of base</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>void chug(list&lt;Base*&gt;&amp; alist)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>for (list&lt;Base*&gt;::iterator i = alist.begin(), z = alist.end(); i != z; ++i)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>(*i)-&gt;chug();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>int main() </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>list&lt;Base*&gt; baselist;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>list&lt;Derived*&gt; derlist;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>baselist.push_back(new Base);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>baselist.push_back(new Base);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>derlist.push_back(new Derived);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>derlist.push_back(new Derived);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>chug(baselist);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>// chug(derlist); <text:s/>// How do I make this work?</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>} </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;typename C, typename T&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>void chug(const C&lt;T&gt;&amp; container)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>typedef typename C&lt;T&gt;::iterator iter;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>for(iter i = container.begin(); i &lt; container.end(); ++i)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>(*i)-&gt;chug();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;typename T&gt; void chug(list&lt;T*&gt;&amp; alist) { for (list&lt;T*&gt;::iterator i = alist.begin(), z = alist.end(); i != z; ++i) (*i)-&gt;chug(); }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>soltuion</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>Either store them by pointer (boost::shared_ptr is a popular option), or use Boost ptr_containers that store pointers internally,</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;boost/ptr_container/ptr_vector.hpp&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>boost::ptr_vector&lt;FooBase&gt; foos;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>foos.push_back(new FooDerived(...));</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>foos[0].memberFunc();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>possible solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>`boost::any`</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>solution</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>class IBase {};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>class Derived : virtual public IBase {};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>std::vector&lt;std::unique_ptr&lt;IBase&gt;&gt; v;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>v.push_back(std::unique_ptr&lt;IBase&gt;(new Derived())); </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro22" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p>a unique_ptr, has the ownership of the pointee and delets it when it gets deleted. Ownership can be &quot;moved&quot; from one unique_ptr to another, but there can never be more than one owner. </text:p><text:p>With shared_ptr, there can be an arbitrary number of owners, and the last one to die deletes the pointee. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>kind of = if A can do something B can’t, then B can’t be a kind of A. when your derived class overrides a function as private, you violate the substitutability principle</text:p><text:p>B is a kind of A if you can do to a B object whatever you can do to A, and it will work correctly (not just compile). </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Design – inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce85" office:value-type="string" calcext:value-type="string">
      <text:p>- Composition is for code reuse, inheritance is mainly for dynamic binding (flexibility). Don&apos;t inherit to reuse code. inherit for interface substitutability (https://isocpp.org/wiki/faq/multiple-inheritance#mi-disciplines)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>- the derived class objects must be substitutable for the base class objects. That means objects of the derived class must behave in a manner consistent with the promises made in the base class’ contract. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro5">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string"><text:p>you can make anything inherit from anything provided the methods in the derived class abide by the promises made in the base class. </text:p><text:p>But you ought not to use inheritance just because you feel like it, or just because you want to get code reuse. </text:p><text:p>You should use inheritance (a) only if </text:p><text:p>–--- the derived class’s methods can abide by all the promises made in the base class, </text:p><text:p>–--- and you don’t think you’ll confuse your users, </text:p><text:p>–--- and there’s something to be gained by using the inheritance — some real, measurable improvement in time, money or risk.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce86" office:value-type="string" calcext:value-type="string">
      <text:p>Bad inheritances always have a base class with an extra capability (often an extra member function or two; sometimes an extra promise made by one or a combination of member functions) that a derived class can’t satisfy. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string"><text:p>interfaces are so valuable, they should be protected from being tarnished by data structures and other implementation artifacts. Thus you should separate interface from implementation.</text:p><text:p>And to seperate them, use an ABC</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Design – access</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>C++ access control is for clarity: you want to make it clear which parts of the class are supposed to be used and which are just implementation details or the bits that you might want to change later. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>prevent my class from being inhirited from:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce87" office:value-type="string" calcext:value-type="string">
       <text:p>solution1</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>It has no public constructor. To create instances of it, have a static creator or a friend one. See code 14</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce87" office:value-type="string" calcext:value-type="string">
       <text:p>solution2</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>declare it as final</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>class Point final</text:p><text:p>{</text:p><text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>code 14</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>class Point</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>private:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>int x, y;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>private:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Point(int xx=0, int yy=0):x(xx), y(yy){}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>static Point* create(int xx=0, int yy=0) { return new Point(xx,yy);}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>friend Point* create(int xx=0, int yy=0);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Point* create(int xx, int yy) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{ </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>return new Point(xx,yy);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>class Pointcol:public Point</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>int main()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Point* p=Point::create(3,14);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>cout &lt;&lt; *p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>delete p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>p=create(13,4);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>cout &lt;&lt; *p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>delete p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>Pointcol pc; //←--------compile time error</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="6"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>prevent a member function from being overriden</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>solution1: set as non-virutal</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>solution2: use final</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>solution3: use a comment to discourage from overriding</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>hiding</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Function f is hidden leads to static binding. Because B::f is called if B pointer is used</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>D *d=new D;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>b→f(); //B::f is called. And can&apos;t see D&apos;s version</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>d→f(); //D::f is called. And can&apos;t see B&apos;s version. Unless <text:span text:style-name="T15">using B::f;</text:span> is used or call using <text:span text:style-name="T15">d.B::f();</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>private inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p> a member function or friend of a privately derived class, the relationship to the base class is known, and the upward conversion from PrivatelyDer* to Base* (or PrivatelyDer&amp; to Base&amp;) is safe; no cast is needed</text:p><text:p>However, users of PrivatelyDer should avoid this unsafe conversion, since it is based on a private decision of PrivatelyDer, and is subject to change without notice.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro28">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>C++ ref/Design:-<text:span text:style-name="T45">Private inheritance is employed almost exclusively to inherit an implementation. hbf the code. so that the derived class takes advantage of it, while providing a new interface.</text:span></text:p><text:p><text:span text:style-name="T46">  </text:span><text:span text:style-name="T45">The necessity of using a cast to convert the derived class pointer to a base class pointer is a strong indicator of a bad design practice.gotcha 91</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>public: using Base::f; //this makes f public symblol accessible through Derived even if derived privately from Base </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>multiple inheritance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>There are two kinds of problems with multiple inheritance - &quot;static&quot; and &quot;dynamic&quot;. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro3" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
        <text:p>Static:If you override name in the class C, did you override A::name, B::name or both? What happens if the two name functions accept arguments of the same type? What happens if they don&apos;t? </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro11" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce88" office:value-type="string" calcext:value-type="string">
        <text:p>dynamic: C derive from A and B. get an A* from a C*. then get a B* from A*. WRONG. No passing from B* to A* or vice-versa. Always start from C*. Because without knowing the definition of C, there&apos;s no way to figure out the location of the B sub-object given the location of the A sub-object. </text:p>
       </table:table-cell>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64"/>
     </table:table-row>
     <table:table-row table:style-name="ro3" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce40" office:value-type="string" calcext:value-type="string"><text:p>to pro<text:span text:style-name="T47">perly multi inherit, the base classes and the join class should be ABCs.</text:span></text:p><text:p><text:span text:style-name="T48">this discipline helps you avoid situations where you need to inherit data or code along two paths, plus it encourages you to use inheritance properly.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::mutex mtx; std::unique_lock&lt;std::mutex&gt; lck(mtx);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unique_lock locks the mutex passed by parameter. The mutex is unlocked at destruction (at the end of the scope or in case an exception is thrown)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>at construction, it can defer locking, if passed the right second argument.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Modern C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>1- no new/delete. <text:s/>Circle* p = new Circle(42); <text:s/>Auto p = make_shared&lt;circle&gt;(42); Auto p = make_unique&lt;circle&gt;(42);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>2- Range-for : for (auto &amp;element : v)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro24">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>11- loops and algo </text:p><text:p>for_each(begin(v), end(v), [](){ … });  instead of for (auto i=v.begin(); I != v.end(); ++i) { … }</text:p><text:p/><text:p>Auto I = find_if(begin(v), end(v), []() { return … }); instead of auto i=v.begin(); for(…) { if (condition(i)) break;}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>3- automatic return type deduction</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro29">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T49">auto</text:span> mean(auto <text:span text:style-name="T49">Sequence</text:span> &amp;s)  //any Sequence</text:p><text:p>{</text:p><text:p>  Auto n=0.0;</text:p><text:p>  For (auto x:s)</text:p><text:p>  {</text:p><text:p>   n+=x;</text:p><text:p>  }</text:p><text:p>  Return n/s.size(); //what if s is empty ?</text:p><text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>4- boost::any for any type. Boost::any so = “a string”; so=10;</text:p>
       </table:table-cell>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce89" office:value-type="string" calcext:value-type="string">
       <text:p>5- boost::optional&lt;int&gt; I = 10;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>6- void someclass(const someclass&amp;)=delete;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>7-void bar() override {;}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>9-value type by default. Need more explanation and example</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>10-detrminism</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Concurrency</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Fractional arithmetic</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Clocks and Timers</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Random numbers and distributions</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>New smart pointers</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Regular expressions</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>New STL containers, such as arrays, forward lists, and unordered containers</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>New STL algorithms</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Tuples</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Type traits and type utilities</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Lambdas</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Range-based for loops</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Move semantics</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Variadic templates.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro24">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>auto iterator_th = find_if(begin(v_threads), end(v_threads),[&amp;first_message_done](auto &amp; th) { … });</text:p><text:p>while find_if return an iterator, it passes to the lamda the element (a thread object in this case).</text:p><text:p>Note “auto &amp; th” is used, to pass a reference. “auto th” is rejected at compilation because it uses copy constructor which is deleted in std::thread class.</text:p><text:p><text:span text:style-name="T14">“use of deleted function ‘std::thread::thread(std::thread&amp;)”</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>todo</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>experiment few thing in arrays and inheritance(some shared_ptr, container_ptr, function &lt;T&lt;C&gt; &amp; array)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>What is copy assignment, move assignment ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>protected and private inheretance</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what are the drawbacks of using OOP ? In embedded ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce90" office:value-type="string" calcext:value-type="string">
      <text:p>the prohibition against converting Foo**to const Foo**.)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>complexity of operations on map, ordered_map, list, vector</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Built-in / Intrinsic / Primitive Data Types/ restrict?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>how much C++ support OO ? (see <text:a xlink:href="http://yosefk.com/c++fqa/class.html#fqa-7.1" xlink:type="simple">http://yosefk.com/c++fqa/class.html#fqa-7.1</text:a>)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is forbiden to do with move reference ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro30">
     <table:table-cell/>
     <table:table-cell table:style-name="ce91" office:value-type="string" calcext:value-type="string">
      <text:p>18.5 decltype</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>Auto lets you declare a variable with a particular type; if you need a type for a variable you are going to initialize, use auto. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>decltype lets you extract the type from a variable (or any other expression), including to express the type for a return value from a method.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>decltype is better used when you need the type for something that is not a variable, like a return type.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
       <text:p>int x = 3;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
       <text:p>decltype(x) y = x; // same thing as auto y = x;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce93" office:value-type="string" calcext:value-type="string">
       <text:p>decltype lets you extract the type from a variable (or any other expression), including to express the type for a return value from a method.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;typename Builder&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
       <text:p>auto</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
       <text:p>makeAndProcessObject (const Builder&amp; builder) -&gt; decltype( builder.makeObject() )</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
       <text:p>auto val = builder.makeObject();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
       <text:p>// do stuff with val</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
       <text:p>return val;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce94" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>The decltype can be used to determine the type of an expression at compile-type.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>decltype(5) x; // x will be type int because 5 is an int</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>decltype(x) y = 6; // y will be type int because x is an int</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>auto z = x; // z will type type int</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>Although it may seem like auto and decltype will always deduce the same type, that isn’t the case, as shown by the following example:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>const std::vector&lt;int&gt; v(5); // declare a vector v</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>auto a = v[0]; // a will be type int because v[0] is an int</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
       <text:p>decltype(v[0]) b = 1; // b will be type const int&amp;, which is the return type of std::vector&lt;int&gt;::operator[](size_type) const</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>STL</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce95"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95"/>
     </table:table-row>
     <table:table-row table:style-name="ro33">
      <table:table-cell/>
      <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string"><text:p>Iterators are a generalization of pointers that allow a programmer to work with different data structures (containers) in a uniform manner</text:p><text:p>Since iterators are a generalization of pointers it is assumed that every template function that takes iterators as arguments also works with regular pointers </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
       <text:p>To travers/process a collection for begining to end, we use the iterator defined for the collection.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34">
      <table:table-cell/>
      <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
       <text:p>To travers/process a collection in the reverse order, we use the reverse iterator defined for the collection. there is a trick when going from a &apos;rit&apos; to an &apos;it&apos; (see iterators/adaptors)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro34">
      <table:table-cell/>
      <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string"><text:p>To insert an element into a collection either in the front, back or middle, we use an iterator inserter (iterator adaptor) (<text:span text:style-name="T37">example for each ?</text:span>)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce98"/>
     </table:table-row>
     <table:table-row table:style-name="ro34">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string"><text:p>back inserter() causes the container’s push back() operator to be invoked in place of the assignment operator. </text:p><text:p>Hbf:so &apos;i&apos; in the previous code called the assignement operator ? isn&apos;t it correcte provided it incremented ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99"/>
     </table:table-row>
     <table:table-row table:style-name="ro34">
      <table:table-cell/>
      <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string">
       <text:p>-iterators have different abilities. These abilities are important because some algorithms require special iterator abilities. For example, sorting algorithms require iterators that can perform random access because otherwise the runtime would be poor.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce99"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string">
       <text:p>For each iterator category, the C++ standard library provides an iterator tag that can be used as a &quot;label&quot; for iterators:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce100"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>namespace std {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>struct output_iterator_tag </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>struct input_iterator_tag </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>struct forward_iterator_tag : public input_iterator_tag</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>struct bidirectional_iterator_tag : public forward_iterator_tag</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>struct random_access_iterator_tag : public bidirectional_iterator_tag</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T50">std::list::iterator</text:span> is std::_List_iterator&lt;int&gt; iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T50">std::vector&lt;int&gt;::iterator</text:span> is of type __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int&gt; &gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce103" office:value-type="string" calcext:value-type="string">
       <text:p>error: cannot convert &apos;std::_List_iterator&lt;int&gt;*&apos; to &apos;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int&gt; &gt;*&apos; in assignment</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="5"/>a=b;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>^</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">std::list::iterator::category</text:span> is std::bidirectional_iterator_tag</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">std::vector&lt;int&gt;::iterator</text:span> is std::random_access_iterator_tag</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce103" office:value-type="string" calcext:value-type="string">
       <text:p>error: invalid conversion from &apos;std::bidirectional_iterator_tag*&apos; to &apos;std::random_access_iterator_tag*&apos; [-fpermissive]</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="5"/>a=b;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>^</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string">
       <text:p>how to get the category of an iterator ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce105"/>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
       <text:p>// std::iterator example</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt; <text:s text:c="4"/>// std::cout</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iterator&gt; <text:s text:c="4"/>// std::iterator, std::input_iterator_tag</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
        <text:p>class MyIterator : public std::iterator&lt;std::input_iterator_tag, int&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>int* p;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator(int* x) :p(x) {}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator(const MyIterator&amp; mit) : p(mit.p) {}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator&amp; operator++() {++p;return *this;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator operator++(int) {MyIterator tmp(*this); operator++(); return tmp;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>bool operator==(const MyIterator&amp; rhs) {return p==rhs.p;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>bool operator!=(const MyIterator&amp; rhs) {return p!=rhs.p;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>int&amp; operator*() {return *p;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
        <text:p>int main () {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>int numbers[]={10,20,30,40,50};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator from(numbers);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>MyIterator until(numbers+5);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>for (MyIterator it=from; it!=until; it++)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>std::cout &lt;&lt; *it &lt;&lt; &apos; &apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::cout &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>back_insert_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>front_insert_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>insert_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>istreambuf_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>istream_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>move_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>ostreambuf_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>ostream_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>reverse_iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>exercise</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>output sth to a string and display it. Use an iterator and use the string stream</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>ostringstream s;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>ostream_iterator&lt;char&gt; it(s);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>*it=&apos;e&apos;;//&quot;erererrere&quot;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>s&lt;&lt;&apos;f&apos;;//&quot;fifofof;&quot;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>cout &lt;&lt; s.str().c_str()&lt;&lt;endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>exercise</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>output an object of class A to a string and display it. Use an iterator and use the string stream</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>by providing ostream &amp; operator&lt;&lt;(ostream &amp; , A);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>exercise</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>output two instances of class A to a string seperated by some character (\n). reach the same effect as std::endl which is not acceptable in this case</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>output iterator example</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p>All <text:a xlink:href="http://www.cplusplus.com/ForwardIterator" xlink:type="simple">forward</text:a>, <text:a xlink:href="http://www.cplusplus.com/BidirectionalIterator" xlink:type="simple">bidirectional</text:a> and <text:a xlink:href="http://www.cplusplus.com/RandomAccessIterator" xlink:type="simple">random-access</text:a> iterators that are not constant iterators are also valid output iterators.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
        <text:p>it automatically advances after assignment</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72"/>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">ostream_iterator</text:span> can output to ostringstream, ofsteam and cout</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
        <text:p>this is the output of the code below. It writes to a file. To output to cout use ostream_iterator&lt;char&gt; out_it (std::cout);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="5"/>#</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>##</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="3"/>###</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>####</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>#####</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
        <text:p>######</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>int n=6;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>ofstream fout(&quot;output.txt&quot;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro36" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    std::ostream_iterator&lt;char&gt; out_it (fout); </text:p><text:p>  //ostringstream oss2(ios_base::out | ios_base::ate | ios_base::app|ios_base::binary) ;    std::ostream_iterator&lt;char&gt; out_it (oss2);</text:p><text:p>  //ostream_iterator&lt;char&gt; out_it (std::cout);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>for(int i=1; i&lt;n; ++i)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>//std::cout &lt;&lt; std::setw(n-i);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>for(int j=0; j&lt;n-i; ++j)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="12"/>*out_it = &apos; &apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>for(int j=0; j&lt;i; ++j)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="12"/>*out_it = &apos;#&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>*out_it = &apos;\n&apos;; <text:s/>// == fout&lt;&lt;endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>fout.close();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce108" office:value-type="string" calcext:value-type="string">
        <text:p>output to a file:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>ofstream fout(&quot;output.txt&quot;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>auto it = copy(line.begin(), line.end(), std::ostream_iterator&lt;char&gt;(fout, &quot;,&quot; ));</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>fout.close();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="7">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce109"/>
     </table:table-row>
     <table:table-row table:style-name="ro37">
      <table:table-cell/>
      <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
       <text:p>4.4.1 Iterator Adaptors</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro37">
      <table:table-cell/>
      <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
       <text:p>Reverse Iterators</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro37">
      <table:table-cell/>
      <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
       <text:p>Insert Iterators</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro37">
      <table:table-cell/>
      <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
       <text:p>Raw Storage Iterator</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro37">
      <table:table-cell/>
      <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
       <text:p>no stream iterator ? like said in iterators/adaptors node</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce109"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce101"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce111" office:value-type="string" calcext:value-type="string">
       <text:p>insert iterators </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>insert iterators are implemented so that they call the collection&apos;s push_back, push_front or insert</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>All insert iterators are in the output iterator category. Thus, they provide only the ability to assign new values.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Name : Back inserter</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Class : back_insert_iterator</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Called Function : push_back (value)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro38" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string"><text:p>Creation : template &lt;class Container&gt;  back_insert_iterator&lt;Container&gt; <text:span text:style-name="T16">back_inserter</text:span> (Container&amp; x);</text:p><text:p>Using the assignment operator on the returned iterator (either dereferenced or not), causes the container to expand by one element, which is initialized to the value assigned. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Name : Front inserter </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Class : front_insert_iterator </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Called Function : push_front (value) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Creation : front_inserter (coll) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Name : General inserter </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Class : insert_iterator </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Called Function : insert (pos, value) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
        <text:p>Creation : inserter (coll, pos) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112"/>
      </table:table-row>
      <table:table-row table:style-name="ro38" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string"><text:p>1.0- </text:p><text:p>We can also insert using the random access iterator for a vector, but position pointed to by iterator is valid (size of vector is 7 and we&apos;re never going beyond that, otherwise use back_inserter)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>int myints[]={10,20,30,40,50,60,70};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (7);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>std::copy ( myints, myints+7, myvector.begin() );</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
        <text:p>std::copy ( myints, myints+15, myvector.begin() ); //myvector.size() is still 7, but run-time problem at deletion.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>1.1 - std::back_inserter</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce46"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce113" office:value-type="string" calcext:value-type="string">
         <text:p>std::vector&lt;An8PointKey&gt; vPointKeys;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce113" office:value-type="string" calcext:value-type="string">
         <text:p>std::copy(t.vPointKeys.begin(),t.vPointKeys.end(),vPointKeys.begin());</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p>la deuxième ligne produit un plantage. la cause serait que pas d&apos;espace alloué par vPointKeys .</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce46"/>
       </table:table-row>
       <table:table-row table:style-name="ro31" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce114" office:value-type="string" calcext:value-type="string">
         <text:p>std::back_inserter was the solution :</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce113" office:value-type="string" calcext:value-type="string">
         <text:p>std::vector&lt;An8PointKey&gt; vPointKeys;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce113" office:value-type="string" calcext:value-type="string">
         <text:p>std::copy(t.vPointKeys.begin(),t.vPointKeys.end(),std::back_inserter(vPointKeys));</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell/>
        <table:table-cell table:style-name="ce113"/>
       </table:table-row>
       <table:table-row table:style-name="ro35" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>auto it = back_inserter(vi);</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro35" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=1;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro35" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=4;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro35" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=7;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro35" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=2;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>copy(begin(vi), end(vi), ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); <text:s/>//1,4,7,2</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce113"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce46"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>1.2 - std::front_inserter</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>list&lt;int&gt; li;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>auto it = front_inserter(li);</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=1;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=4;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=7;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>it=2;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro2" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
         <text:p><text:s text:c="4"/>copy(begin(li), end(li), ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); <text:s/>//2,7,4,1</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell/>
        <table:table-cell table:style-name="ce110"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>1.3 - std::inserter</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce46"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>#include &lt;iostream&gt;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>#include &lt;set&gt;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>#include &lt;list&gt;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>#include &lt;algorithm&gt;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>#include &quot;print.hpp&quot;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>using namespace std;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell/>
        <table:table-cell table:style-name="ce46"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>int main() </text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>{</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>set&lt;int&gt; coll;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce46"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>//create insert iterator for coll</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>insert_iterator&lt;set&lt;int&gt; &gt; iter(coll,coll.begin());</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce46"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>//insert elements with the usual iterator interface</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>*iter = 1;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>iter++;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>*iter = 2;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce46"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>//inserter using inserter function</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>inserter(coll,coll.end()) = 44;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
         <text:p>inserter(coll,prev(coll.end())) = 43;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce70"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
         <text:p>//Coll = 1,2,43,44</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce46"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>//use inserter to insert all elements into a list</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>list&lt;int&gt; coll2;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>copy (coll.begin(), coll.end(), inserter(coll2,coll2.begin())); </text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce46"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>//use inserter to reinsert all elements into the list before the second element</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>copy (coll.begin(), coll.end(), inserter(coll2,++coll2.begin())); </text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
         <text:p>}</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
        <table:table-cell/>
        <table:table-cell table:style-name="ce115"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115"/>
     </table:table-row>
     <table:table-row table:style-name="ro39">
      <table:table-cell/>
      <table:table-cell table:style-name="ce116" office:value-type="string" calcext:value-type="string">
       <text:p>Reverse Iterators</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro40" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce117" office:value-type="string" calcext:value-type="string">
        <text:p>constructors</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell table:style-name="ce80"/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>reverse_iterator();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell table:style-name="ce81"/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>explicit reverse_iterator (iterator_type it);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro41" table:visibility="collapse">
       <table:table-cell table:style-name="ce81"/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class Iter&gt;</text:p><text:p>  reverse_iterator (const reverse_iterator&lt;Iter&gt;&amp; rev_it);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro40" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce117" office:value-type="string" calcext:value-type="string">
        <text:p>example of use</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro42" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>reverse_iterator&lt;vector&lt;int&gt;::iterator&gt; begin_r(vi.end());</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro40" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>reverse_iterator&lt;vector&lt;int&gt;::iterator&gt; end_r(begin(vi));</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro40" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>copy(begin_r, end_r, ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); <text:s text:c="21"/>//5,4,3,2,1</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro40" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string"><text:p>    copy(end_r.<text:span text:style-name="T16">base</text:span>(), begin_r.<text:span text:style-name="T16">base</text:span>(), ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); //1,2,3,4,5</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="4">
       <table:table-cell/>
       <table:table-cell table:style-name="ce118"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce118"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce119"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce120"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce108" office:value-type="string" calcext:value-type="string">
      <text:p>stream</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
      <text:p>ofstream fout(getenv(&quot;OUTPUT_PATH&quot;));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
      <text:p>fout &lt;&lt; res;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
      <text:p>fout.close()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
      <text:p>output to a file:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>ofstream fout(&quot;output.txt&quot;);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>auto it = copy(line.begin(), line.end(), std::ostream_iterator&lt;char&gt;(fout, &quot;,&quot; ));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>fout.close();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::string input;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;color? &quot;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>getline (std::cin,input);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bool b = true;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::boolalpha &lt;&lt; b &lt;&lt; &apos;\n&apos;; <text:s/>//true</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; std::noboolalpha &lt;&lt; b &lt;&lt; &apos;\n&apos;; <text:s/>//1</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
      <text:p>cin</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>std::cout&lt;&lt;&quot;Enter start time (13 25 59 502):&quot;&lt;&lt;std::endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>//std::getline (std::cin, str);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>unsigned int h,m,s,ms;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>std::cin &gt;&gt; h;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>std::cin &gt;&gt; m;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>std::cin &gt;&gt; s;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>std::cin &gt;&gt; ms;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>std::cout&lt;&lt;h&lt;&lt;&quot;:&quot;&lt;&lt;m&lt;&lt;&quot;:&quot;&lt;&lt;s&lt;&lt;&quot;:&quot;&lt;&lt;ms&lt;&lt;std::endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>Watch out: may need to use</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>std::cin.clear(); // Reset stream</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>std::cin.ignore(256,&apos;\n&apos;);// Ignore rest of line</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>before reading again using &gt;&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>std::cin just keeps considering it has read data and uses the old ones instead of reading new ones</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>This trick didn&apos;t work in the following code, which loops infinitely if I entered &apos;q&apos; or a string</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>found=true;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>do</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>cout &lt;&lt;&quot;enter number [1-9]&quot;&lt;&lt;endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>cin.clear();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>cin.ignore(256,&apos;\n&apos;);// Ignore rest of line</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>cin&gt;&gt; val;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>found = someCodeReturningfoundornot();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>}while(found);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
      <text:p>exercise</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>Reaching the end of a vector container is reaching vector::end().</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>How do we know that we reached the end of ifstream ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
      <text:p>exercise</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>read from a file using an iterator and output to an output iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>do this operation twice</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>ifstream f(&quot;overflow.cpp&quot;);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>istream_iterator&lt;string&gt; b(f);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>istream_iterator&lt;string&gt; e;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>copy(b,e,ostream_iterator&lt;string&gt;(cout));</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>f.clear();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>f.seekg(0, f.beg);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>for(auto it=b; it!=e; ++it)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout&lt;&lt;(*it).c_str();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>when the stream reaches the end, the state bit eof is set.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>needs to clear it.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>and repoint the beginning of the file</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>doing one without the other doesn&apos;t yield the right result</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Adaptors</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce121" office:value-type="string" calcext:value-type="string">
       <text:p>21.4.3.1 binder</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce122" office:value-type="float" office:value="4.1" calcext:value-type="float">
        <text:p>4.1</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce123" office:value-type="string" calcext:value-type="string">
        <text:p>you can handle the class std::binder2nd directly. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce123" office:value-type="string" calcext:value-type="string">
        <text:p>but you can also use the helper function bind2nd wich specification is:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce124" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;typename _Operation, typename _Tp&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce124" office:value-type="string" calcext:value-type="string">
        <text:p>inline binder2nd&lt;_Operation&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce124" office:value-type="string" calcext:value-type="string">
        <text:p>bind2nd(const _Operation&amp; __fn, const _Tp&amp; __x);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>see:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce124" office:value-type="string" calcext:value-type="string">
        <text:p>C:\cygwin64\lib\gcc\x86_64-pc-cygwin\4.8.1\include\c++\backward\binders.h</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>//transform all elements into coll2 by multiplying 10 </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>transform (coll1 .begin(), coll1 .end(), //source </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>back_inserter(coll2), //destination </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>bind2nd(multiplies&lt;int&gt;() ,10)); //operation </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>The way bind2nd operates is as follows: transform() is expecting as its fourth argument an </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>operation that takes one argument; namely, the actual element. However, we would like to </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>multiply that argument by ten. So, we have to combine an operation that takes two arguments </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>and the value that always should be used as a second argument to get an operation for one </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>argument. bind2nd does that job. It stores the operation and the second argument as internal </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>values. When the algorithm calls bind2nd with the actual element as the argument, bind2nd </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>calls its operation with the element from the algorithm as the first argument and the internal value </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>as the second argument, and returns the result of the operation.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>bind2nd takes a binary object function and a parameter, and when called, it behaves as a unary object function. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce126" office:value-type="float" office:value="2" calcext:value-type="float">
        <text:p>2</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>hbf-bind2nd is a template function, that receives a binary function object class and a value V. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>using binder2nd template class, it constructs and returns a unary function object instance that is ready to apply the value V to any parameter it receives.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>in the code below, &apos;b&apos; is an instance of the binder2nd class, with the important function call operator operator() that is expecting one parameter.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce128" office:value-type="string" calcext:value-type="string">
        <text:p>binder2nd&lt;greater&lt;int&gt; &gt; b=bind2nd&lt;greater&lt;int&gt;,int&gt;(greater&lt;int&gt;(),3);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>assert(b(9)==true); //greater&lt;int&gt;(9,3)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>assert(b(1)==false);//greater&lt;int&gt;(1,3)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>experience:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>it was a little tough writing the declaration of the &apos;b&apos; variable, this required to clearly make the difference between what is a type and what is an instance of greater function object.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce127" office:value-type="string" calcext:value-type="string">
        <text:p>But looking at the code of the different classes definitions was the key to constructing the declaration line. I even had no compile errors from the first compilation !</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>4-the following code does not compile :</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>std::binder2nd&lt;MyFun1&gt; bfi1;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>where </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>struct MyFun1</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>bool operator()(int a,int b)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>return (a&lt;b);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>because first_argument_type and second_argument_type are not defined in MyFun1.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>std::binder2nd needs a binary_function object</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro43" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce125" office:value-type="string" calcext:value-type="string">
        <text:p>Unlike for_each, std::binder2nd can not be used with simple functions</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce121" office:value-type="string" calcext:value-type="string">
       <text:p>21.4.3.2 mem_fun</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce129"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>class C12</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>bool f()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>return (3&lt;2);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce129"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>we can create a function object wrapping the function C12::f in two ways:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce131" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;functional&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce131" office:value-type="string" calcext:value-type="string">
        <text:p>std::mem_fun_t&lt;bool,C12&gt; mf1(&amp;C12::f);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>or</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce131" office:value-type="string" calcext:value-type="string">
        <text:p>std::mem_fun_t&lt;bool,C12&gt; mf2=std::mem_fun(&amp;C12::f);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce129"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>std::mem_fun_t creates a function object for a member function that has no params.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce129"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>to use function object :</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce131" office:value-type="string" calcext:value-type="string">
        <text:p>C12 ic12;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce131" office:value-type="string" calcext:value-type="string">
        <text:p>bool r4=mf2(&amp;ic12);//calls ic12.f() and set r4 to its return value</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce129"/>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce130" office:value-type="string" calcext:value-type="string">
        <text:p>see declaration at C:\cygwin64\lib\gcc\x86_64-pc-cygwin\4.8.1\include\c++\bits\stl_function.h</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce129"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce121" office:value-type="string" calcext:value-type="string">
       <text:p>21.4.3.3 function</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>http://www.cplusplus.com/reference/functional/function/</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>// function::operator= example</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;iostream&gt; // std::cout</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>#include &lt;functional&gt; // std::function, std::negate</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>int main () </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce132" office:value-type="string" calcext:value-type="string">
        <text:p>std::function&lt;int(int)&gt; foo,bar;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>foo = std::negate&lt;int&gt;(); // target</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>bar = foo; // copy</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>foo = std::function&lt;int(int)&gt;([](int x){return x+1;}); // move</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>bar = nullptr; // clear</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>std::cout &lt;&lt; &quot;foo: &quot; &lt;&lt; foo(100) &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>return 0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro38" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string"><text:p>An object of std::function class instantiation can wrap any of the following kinds of callable objects: a function, a function pointer, a pointer to member, or any kind of function object (i.e., an object whose class defines operator(), including <text:span text:style-name="T44">closures</text:span>). <text:span text:style-name="T44">Hb: Q: what is closure ?</text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro44" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string"><text:p>A decay copy (<text:span text:style-name="T44">Hb: Q: what is that ?</text:span>) of the wrapped callable object is stored internally by the object, which becomes the function&apos;s target.</text:p><text:p>The specific type of this target callable object is not needed in order to instantiate the function wrapper class; only its call signature.  (hb: Q: !!!!!!)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro45" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>The function object can be copied and moved around, and can be used to directly invoke the callable object with the specified call signature (see member operator()).</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro45" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>function objects can also be in a state with no target callable object. In this case they are known as empty functions, and calling them throws a bad_function_call exception.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="121">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="8">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Requirements for a standard container:</text:p><text:p>Has Front and back  member functions</text:p><text:p>Has iterators, in order to be used with standard algorithms</text:p><text:p>can return a pointer to an element of the container</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Vector &amp; array</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>vector&lt;int&gt; v; <text:s/>&amp;v[0] == v.data() if v contains data. However, &amp;v[0] is undefined if no data</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>v.begin() is not garenteed to be &amp; of int. it is primarly an iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Same for Array class. It supports begin,end</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>double mydoubles[] = {3.14, 1.41, 2.72, 4.67, 1.73, 1.32, 1.62, 2.58};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;double&gt; myvector;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string"><text:p>  myvector.<text:span text:style-name="T16">assign</text:span>(mydoubles,mydoubles+8);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>loop with array</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::thread threads[3];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (auto&amp; th : threads) th.join();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int myints[]={10,20,30,40,50,60,70};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::vector&lt;int&gt; myvector (7);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>copy(myints, myints+4, back_inserter(myvector));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce82" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>cout &lt;&lt;&quot;size of vector is :&quot;&lt;&lt;myvector.size()&lt;&lt;endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce82"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce82" office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce82"/>
     <table:table-cell table:style-name="ce133" office:value-type="string" calcext:value-type="string">
      <text:p>int size=10;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce133" office:value-type="string" calcext:value-type="string">
      <text:p>int a[size];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce133" office:value-type="string" calcext:value-type="string">
      <text:p>size=7;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce133" office:value-type="string" calcext:value-type="string">
      <text:p>int b[size];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
     <table:table-cell/>
     <table:table-cell table:style-name="ce82"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>containers</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>set</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>displaying the content of a set shows they are ordered</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p>// set::insert (C++98)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;iostream&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;set&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p>int main ()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::set&lt;int&gt; myset;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::set&lt;int&gt;::iterator it;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::pair&lt;std::set&lt;int&gt;::iterator,bool&gt; ret;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>// set some initial values:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (int i=1; i&lt;=5; ++i) myset.insert(i*10); <text:s text:c="3"/>// set: 10 20 30 40 50</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>ret = myset.insert(20); <text:s text:c="14"/>// no new element inserted</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if (ret.second==false) it=ret.first; <text:s/>// &quot;it&quot; now points to element 20</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>myset.insert (it,25); <text:s text:c="16"/>// max efficiency inserting</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>myset.insert (it,24); <text:s text:c="16"/>// max efficiency inserting</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>myset.insert (it,26); <text:s text:c="16"/>// no max efficiency inserting</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[]= {5,10,15}; <text:s text:c="13"/>// 10 already in set, won&apos;t be inserted</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>myset.insert (myints,myints+3);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;myset contains:&quot;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (it=myset.begin(); it!=myset.end(); ++it)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; &apos; &apos; &lt;&lt; *it;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>Output:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>myset contains: 5 10 15 20 24 25 26 30 40 50</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>vector&lt;bool&gt; vs map,set</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string"><text:p>The functional struct hash &lt;vector&lt;bool,Alloc&gt;&gt; returns a hash value based on the entire vector. This allows the use of <text:a xlink:href="http://www.cplusplus.com/vector%3Cbool%3E" xlink:type="simple">vector&lt;bool&gt;</text:a> objects as keys for unordered containers (like <text:a xlink:href="http://www.cplusplus.com/unordered_set" xlink:type="simple">unordered_set</text:a> or <text:a xlink:href="http://www.cplusplus.com/unordered_map" xlink:type="simple">unordered_map</text:a>).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>unordered_map</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>it works just like a hash table. But without the negative side of it.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>it doesn&apos;t allocate entries for all possible keys</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>It has allocates just enough space for the number of elements it contains.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>we can implement the same idea using a balanced binary tree.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>unordered_map&lt;Edge,Index_of_edge ,hash&lt;Edge&gt;, equal_to2&gt; mm_edges; </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this unordered map has Edge type as the key. The data is Index_of_edge</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the Edge type is not a primitive type so I need to provide a way to hash it. That&apos;s done by the functor hash&lt;Edge&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when unordered_map::find is used, the hash functor is used to get the key and then it looks for the key.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if it find a data in the map already at the same position, it needs to compare the entries (colliding) to check if the element to insert it there or not. That&apos;s where equal_to2 comes in.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>equal_to2 compares the different entries in the position with the new element (to insert) and returns true if it finds it. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>So, the hash is the first processing to insert/find the data, equal_to2 is the second one to make sure the data is there or not</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>If you need to know the exact type of the object in the container you can use dynamic_cast&lt;&gt; or typeid()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="7">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro18">
     <table:table-cell/>
     <table:table-cell table:style-name="ce57" office:value-type="string" calcext:value-type="string">
      <text:p>fonction pointer</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56"/>
     </table:table-row>
     <table:table-row table:style-name="ro23">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>-Si un pointeur sur les fonctions de la classe dérivée prend la valeur d’un pointeur sur les fonctions de la classe de base, cela veut dire qu’on voudras appliquer une fonction de la classe de base à un objet de la classe dérivée.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>//.h</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>class Pointcol : public Point { . . . }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>// .cpp</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>void (Pointcol::*pfpc)(void);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>void (Point::*pfp)(void);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pfpc = &amp;Pointcol::Affiche;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pfp = &amp;Point::Affiche;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pfp = (void (Point::*)(void)) pfpc;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pfp = static_cast&lt;void (Point::*)(void)&gt;(pfpc);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pfp = reinterpret_cast&lt;void (Point::*)(void)&gt;(pfpc);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro23">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>C++ n’accèpte pas une affectation d’un pointeur sur une fonction membre de la classe dérivé à un pointeur sur une fonction membre de la classe de base. Il faut passer par un cast explicite.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>(p.*pfp)(); //what happens here ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pfp = &amp;Point::Affiche;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pfpc = pfp ;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>(pc.*pfpc)(); //what happens here ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>Il y a un cast implicite d’un pointeur sur une fonction membre de la classe de base en un pointeur sur une fonction de la classe dérivée.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce135" office:value-type="string" calcext:value-type="string">
       <text:p>hbf: how to declare a pointer to function as a member?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>class Pointcol : public Point</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>int col;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>void (*m_pfpc)(void) ;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>public :</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>Pointcol(int=0, int=0, int=0);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>void Affiche() ;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>void operator=(const Pointcol &amp;);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pointer to a member of a class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56"/>
     </table:table-row>
     <table:table-row table:style-name="ro46">
      <table:table-cell/>
      <table:table-cell table:style-name="ce136" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T51">int</text:span><text:span text:style-name="T52"> main(){Point point(1,2);cout &lt;&lt; point;</text:span><text:span text:style-name="T53">int</text:span><text:span text:style-name="T52"> Point::*px = &amp;Point::x; </text:span><text:span text:style-name="T54">//Point::x is public outputs 1</text:span><text:span text:style-name="T55">cout &lt;&lt; point.*px; </text:span><text:span text:style-name="T56">//outputs 1</text:span><text:span text:style-name="T55">} </text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>//declare the symbol p2m_c as a pointer to member col of the class Pointcol.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>int Pointcol::*p2m_c=&amp;Pointcol::col;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>//then use it for the objects pc1, pc2</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pc1.*p2m_c=45;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pc2.*p2m_c=30;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>pointer to a member of an object</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>int *p2m_c3=&amp;pc.col;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>*p2m_c3=44;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce53"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce1"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>new delete</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro44" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string"><text:p>7-memory allocations can be done by any overload of operator new.</text:p><text:p>But when it comes to freeing it, there is only are delete operator (delete p;) that is used, no matter which version of operator new was used. </text:p><text:p>This is why all overloaded operators new should obtain the storage from the standard global operator new.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce92"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce137" office:value-type="string" calcext:value-type="string">
       <text:p>13.14.1 in a nutshell</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>new keyword (1) allocates mem* and (2) calls constructor if applicable</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>delete keyword (1) calls destructor if applicable and (2) frees mem **</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>*in fact it just calls the operator new that has this signature : void * operator new(size_t size);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro23" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>it is not recommened to replace the operator with this signature (many libraries and STL rely on it). if you do, don&apos;t call it within the operator new function, it will call it self recursively/indefinately. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>void * operator new(size_t size)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>//allocate mem somehow but on&apos;t use ::operator new(size); it will call itself</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>rather, overload the operator with different arguments. ex: </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>void * operator new(size_t size, char *filename, int line);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>an implication of defining the operator new, is to define its corresponding operator delete, like :</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>void operator delete(void *p, char *filename, int line)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>this is never called by us. it is called by the system only in case the constructor of a newly created object throws an exception.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>**in fact it just calls the operator delete which has this signature: void operator delete(void * p);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>this operator can be overloaded with the same signature. it will then be calle by the operator delete instead of the system&apos;s. ex:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>void operator delete(void *p)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce138" office:value-type="string" calcext:value-type="string">
       <text:p>if ( RemoveTrack((long)p) )</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>free(p);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro18" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce134"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
       <text:p>one way of allocating 2-dimensional array is the following :</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>my_class = new Myclass* [size1]; <text:s text:c="15"/>//note that the type is a Myclass pointer</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>for(int i=0; i&lt;size1; i++)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>my_class[i] = new Myclass [size2];</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>freeing it is done in the reverse way</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>for(int i=0; i&lt;size; i++)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>delete [] my_class[i];</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>delete[] my_class;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro35" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>allocating mem for a function pointer</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>allocating mem for a function pointer (this is now legacy. C++11 offers std::function object)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>int (**f)(int,int) = new (int (*) (int,int));</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro35" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>Virtual memory</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro47" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string"><text:p>Every application running on your operating system has its unique address space, which it sees as a continuous block of memory. In fact the memory is not physically continuous (it is fragmented), this is just the impression the operating system gives to every program and it&apos;s called virtual memory. The size of the virtual memory is the maximum size of the maximum size your computer can address using <text:a xlink:href="http://www.cprogramming.com/tutorial/lesson6.html" xlink:type="simple">pointers</text:a> (usually on a 32-bit processor each process can address 4 GB of memory).</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce118"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>the virtual memory is divided in pages of fixed size (usually 4096 bytes) the os allocates some pages to the application</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce118"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
        <text:p>accessing more than what the mem has</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro48" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
        <text:p>what happens when a process wants to access more memory than your machine physically has available as RAM? Due to having a virtual address space, parts of the hard disk can be mapped together with real memory and the process doesn&apos;t have to know anything about whether the address is physically stored in RAM or on the hard disk. The operating system maintains a table, where virtual addresses are mapped with their correspondent physical addresses, which is used whenever a request is made to read or write to a memory address. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string"><text:p>in each process, the virtual memory available to that process is called its <text:span text:style-name="T16">address space</text:span>.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string"><text:p>Process&apos;s <text:span text:style-name="T50">address space</text:span> organization</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro47" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string"><text:p>process&apos;s address space is typically organized in 6 sections that are illustrated in the next picture: environment section - used to store environment variables and <text:a xlink:href="http://www.cprogramming.com/tutorial/lesson14.html" xlink:type="simple">command line arguments</text:a>; the stack, used to store memory for function arguments, return values, and automatic variables; the heap (free store) used for dynamic allocation, two data sections (for initialized and uninitialized <text:a xlink:href="http://www.cprogramming.com/tutorial/statickeyword.html" xlink:type="simple">static</text:a> and global variables) and a text section where the actual code is kept.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro49" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce56" office:value-type="string" calcext:value-type="string">
        <text:p>Even though every application has its own 4 GB (on 32-bit systems) of virtual memory, that does not necessarily mean that your program can actually use all of that memory. For example, on Windows, the upper 2 GB of that memory are allocated to the operating system kernel, and are unavailable to the process.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro50" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce139" office:value-type="string" calcext:value-type="string">
        <text:p>Address Space Fragmentation</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string"><text:p>Caching <text:span text:style-name="T57">according to </text:span><text:span text:style-name="T57"><text:a xlink:href="http://www.cprogramming.com/tutorial/operator_new.html" xlink:type="simple">http://www.cprogramming.com/tutorial/operator_new.html</text:a></text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro41" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>When a new node is needed, a deleted one is going to be used. Delete will simply add the node to the deleted nodes. This way instead of allocating new memory from the heap (which is pretty time consuming) we will use the already allocated space. The technique is usually called caching.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>using more memory than expected doesn&apos;t mean a memory leak </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>When new is used to gain a block of memory the size reserved by the operating system may be bigger than your request, but never smaller. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro22" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>Because of this and the fact that delete doesn&apos;t immediately return the memory to the operating system, when you inspect the whole memory that your program is using you may be made to believe that your application has serious memory leaks. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro22" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>So inspecting the number of bytes the whole program is using should not be used as a way of detecting memory errors. Only if the memory manager indicates a large and continuous growth of memory used should you suspect memory leaks. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>A good approach to protect from memory leaks is to use a garbage collector and replace new with its allocator.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>A half way to garbage collection is to use private heaps, that is, you first allocate a big chunk of memory and manage it in a Heap class</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>smart pointers is the easiest way to avoid mem leak</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>pData = (int*) calloc (nbr,sizeof(int)); //allocates N * sizeof int and initializes them to 0</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>buffer = (char*) malloc (i+1); <text:s text:c="10"/>//allocates i+1 bytes.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro35" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
       <text:p>smart pointers</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce140" office:value-type="string" calcext:value-type="string">
       <text:p>owner group</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string">
       <text:p>it is the group of smart pointers pointing at an object</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string">
       <text:p>only strong pointers (shared_ptr) increase the count. Weak pointers, although in the owner group, do not increase the count</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce120"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string">
       <text:p>weak pointer is used only for caching purposes. When it is to be used, lock() should be used first andmake sure the returned value is != null</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>assignment operator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro51">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>no solution in stack over flow for assignment operator for a class with const or ref.</text:p><text:p>The idea is if you assign the objects why should they have const fields ?</text:p><text:p>But not technical solution  </text:p><text:p>C++11 deletes the move assignment operator for a class with ref or const member</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>copy constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>Derived&amp; operator=(const Derived&amp; d)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>Base::operator=(d);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>additional_ = d.additional_;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>return *this;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>static member</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
      <text:p>to access a static member in a function member we use the following code:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
      <text:p>void MyClass::SomeFunc()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
      <text:p>m_x=1;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
      <text:p>MyClass::s_count++;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
      <text:p>How to access the static member using an object ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
       <text:p>MyClass mc;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
       <text:p>mc.s_cout++; <text:s/>&lt; - - - - - - - - - - <text:s/>ERROR <text:s/>&lt; - - - - - - <text:s/>- - THIS IS NOT AN ERROR !!!!!! what did I get this from <text:s/>??????</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce141"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>A pointer can access static members , an object not.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>struct B: A {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>static const char* static_type;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>B() { dynamic_type = static_type; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>main</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>B b1;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>B *b1p=&amp;b1;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>cout &lt;&lt; b1.B::static_type&lt;&lt;endl;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>cout &lt;&lt; b1p-&gt;static_type&lt;&lt;endl;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>cout &lt;&lt; b1.static_type&lt;&lt;endl; <text:s text:c="4"/>&lt; - ------------------- <text:s/>ERROR! Not a pointer &lt; - - - - - - <text:s/>- - THIS IS NOT AN ERROR !!!!!! what did I get this from <text:s/>??????</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
      <text:p>STATIC</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
      <text:p>static members (functions and fields) can be accessed using the class (::), the object (., →) and without defining the scope withing member function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
      <text:p>static members (functions and fields) can be accessed using the derived class and the derived object (., →)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
      <text:p>why is the following code not correct ? Error: ISO C++ forbids in-class initialization of non-const static member ‘vec3::size’</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
      <text:p>struct vec3</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>static int size=10;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
      <text:p>this one is correct, even without defining size in the cpp file</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
      <text:p>struct vec3</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>static const int size=10;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>data type</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
       <text:p>If v is negative sign == -1. if v is positive sign == 1 </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>int sign = (v &gt; 0) - (v &lt; 0); <text:s text:c="2"/>//portable ? Because some compiler might issue warning because bools are used as operand</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>turn a sign to positive == Abs</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>number = (number &lt; 0 ? -number : number);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>read the following discussion to learn more about int, overflows, architerture dependent code, ... </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>http://stackoverflow.com/questions/1489830/efficient-way-to-determine-number-of-digits-in-an-integer</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
       <text:p>float</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>better doc:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>http://www.toves.org/books/float/</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
        <text:p>rounding errors</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
         <text:p>floating point values are rounded when using prints</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
         <text:p>So when you use the value printed you would be using the rounded values</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
         <text:p>to use the exact float value, print all the 32 bits</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell table:style-name="ce70"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>taken from <text:a xlink:href="http://www.cprogramming.com/tutorial/floating_point/understanding_floating_point_representation.html" xlink:type="simple">http://www.cprogramming.com/tutorial/floating_point/understanding_floating_point_representation.html</text:a></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>seeeeeeeemmmmmmmmmmmmmmmmmmmmmmm <text:s text:c="3"/>meaning</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>31 <text:s text:c="29"/>0 <text:s text:c="3"/>bit #</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>value = (sign ? -1:1) * 2^(exponent) * 1.(mantissa bits)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>0 <text:s text:c="5"/>0x00000000</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>1.0 <text:s text:c="3"/>0x3f800000</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>0.5 <text:s text:c="3"/>0x3f000000</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>3 <text:s text:c="5"/>0x40400000</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>+inf <text:s text:c="2"/>0x7f800000 (A number is infinite if every bit of the exponent is set)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>-inf <text:s text:c="2"/>0xff800000</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>+NaN <text:s text:c="2"/>0x7fc00000 or 0x7ff00000 <text:s/>(NaN == every bit of the exponent is set plus any mantissa bits are set)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>confirm:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>if( Math.abs(a-b) &lt; 0.00001) // wrong - don&apos;t do this</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro51" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>This is a bad way to do it because a fixed epsilon chosen because it “looks small” could actually be way too large when the numbers being compared are very small as well. The comparison would return “true” for numbers that are quite different. And when the numbers are very large, the epsilon could end up being smaller than the smallest rounding error, so that the comparison always returns “false”. </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
        <text:p>comparing two floats</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row-group table:display="false">
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>float ret = abs(f1 - f2);</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>float epsilon = .0000000001f;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>if(ret &lt; epsilon) return true;</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>return false</text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell/>
        <table:table-cell office:value-type="string" calcext:value-type="string">
         <text:p>bit pattern comparison is not necessary when comparing native types of the same type. f1 == f2 is the same as bit pattern comparison </text:p>
        </table:table-cell>
       </table:table-row>
       <table:table-row table:style-name="ro19" table:visibility="collapse">
        <table:table-cell table:number-columns-repeated="2"/>
       </table:table-row>
      </table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro21" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>Floatint point properties: exponent biasing, <text:s/>NaNs, infinities, normalizing, gradual underflow, signed zeroes, represents vastly more discrete values between 0 and 1 than you can between 1,000,000 and 1,000,001.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
        <text:p>double precision vs single precision, and their formats, unormalized values</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>http://stackoverflow.com/questions/801117/whats-the-difference-between-a-single-precision-and-double-precision-floating-p</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="10">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>size of data types depend on compilers, their flags, OS,</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>in g++ 5.2, ubuntu, 64x</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>The size of int <text:s text:c="8"/>4</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>The size of short <text:s text:c="6"/>2</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>The size of long <text:s text:c="7"/>8</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>The size of long long <text:s text:c="2"/>8</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>The size of float <text:s text:c="6"/>4</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>The size of double <text:s text:c="5"/>8</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>The size of long double 16</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>The size of char <text:s text:c="7"/>1</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>The size of enum <text:s text:c="7"/>4</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>windows guys kep long as 32 for backward compatibility</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>use long long for 64 bytes</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>or </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>uint8_t</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>uint16_t</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>uint32_t</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>uint64_t</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>int8_t</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>int16_t</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>int32_t</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>int64_t</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what is the output of the following</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; sizeof(pv)&lt;&lt; &quot;,&quot; &lt;&lt; sizeof(*pv)&lt;&lt;endl;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>where:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>hvector *pv=&amp;v;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>struct hvector</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>int x,y,z;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>8,12</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>What is reminder for 5.0 % 2?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>Error, It is invalid that either of the operands for the modulus operator (%) is a real number.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="20">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
      <text:p>template</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>argument deduction only happens for function template</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>for classes, we need to specify the arguments</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>template function example</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>inline T const&amp; max (T const&amp; a, T const&amp; b)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>return a&lt;b?b:a;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>} </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>Exercise for Function specialization</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;class T&gt; void setIncrement(T a) </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="3"/>cout &lt;&lt;&quot;void setIncrement(T a) &quot;&lt;&lt;endl;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>give two ways of specializing the above function</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro35" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>template &lt;&gt; void setIncrement<text:span text:style-name="T16">&lt;char&gt;</text:span>(char a) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="3"/>cout &lt;&lt;&quot;void setIncrement&lt;char&gt;(char a) &quot;&lt;&lt;endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;&gt; void setIncrement(int a) </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="3"/>cout &lt;&lt;&quot;void setIncrement(int a) &quot;&lt;&lt;endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>the deduction process can not do any automatic conversion, promotions. But for template argument of builtin type, cast is possible </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>don&apos;t forget, the order of consideration of functions: normal, the specialized versions, the broader version, then the same order happens considering conversions/promotions of defined types</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>exercise</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>is the second function a specialization or a new template ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class T&gt; void f(T x, T y) { cout &lt;&lt; &quot;Template&quot; &lt;&lt; endl; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class T1&gt; void f(T1 x, int y) { cout &lt;&lt; &quot;Template&quot; &lt;&lt; endl; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>solution</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>hb:a sepcialization is a template, an independent one.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>the compiler will pick it instead of the broad version in case a more determined type was provided.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>don&apos;t forget, the order of consideration of functions: normal, the specialized versions, the broader version, then the same order happens considering conversions/promotions of defined types</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>Exercise: which version will be called with the following code:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>int a=6; char b=&apos;r&apos;; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>tf(a,2.); </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class T&gt; void tf(T a, T b)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;generic function template:&quot; &lt;&lt; a&lt;&lt;b&lt;&lt; endl; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;&gt; void tf(int a, int b) //specialisation pour int</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;specialization function template:&quot; &lt;&lt; a&lt;&lt;b&lt;&lt; endl; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46" office:value-type="string" calcext:value-type="string">
       <text:p>solution</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>template.cpp:121:8: error: no matching function for call to ‘tf(int&amp;, double)’</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>template.cpp:121:8: note: candidate is:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>template.cpp:107:24: note: template&lt;class T&gt; void tf(T, T)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>template.cpp:107:24: note: template argument deduction/substitution failed:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro2" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
        <text:p>template.cpp:121:8: note: deduced conflicting types for parameter ‘T’ (‘int’ and ‘double’)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>Will Calling f1504 the following parameters work ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>F1504 ( 1 , 4.5); </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class T1&gt; void f1504 (T1 x, int y) </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{ </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;template&lt;class T1&gt; void f(T1 x, int y) &quot; &lt;&lt; endl; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;&gt; void f1504 (int x, int y) </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{ </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;template&lt;&gt; void f(int x, int y) &quot; &lt;&lt; x &lt;&lt;&quot;,&quot;&lt;&lt;y&lt;&lt;endl; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>solution</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>yes. There is a conversion from float to int and the call to the specialized version</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>Will Calling f1520 the following parameters work ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>F1520 ( 1 , 4.5); </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class T1&gt; void f1504 (T1 x, int y) </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{ </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;template&lt;class T1&gt; void f(T1 x, int y) &quot; &lt;&lt; endl; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>solution</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>yes. There is a conversion from float to int</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>exercise</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>call f1491 with argument deductions and with arguments specified</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class T, int N&gt; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>void f1491(T a)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt;&quot;N=&quot;&lt;&lt;N&lt;&lt;endl;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>solution</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>int main()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>f1491&lt;int,5&gt;(4);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell office:value-type="string" calcext:value-type="string">
        <text:p>f1491&lt;int,&apos;s&apos;&gt;(3);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>what does it take to use the variable y as a call template </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>int y = 9;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class T, int N=8&gt; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>void ft(T a)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>cout &lt;&lt;&quot;N=&quot;&lt;&lt;N&lt;&lt;endl;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>ft&lt;char,y&gt;(&apos;1&apos;);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return 0;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>solution</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>const int y = 9;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>exercise</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>overload a function template by a specialization, another template and a normal function</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>solution</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce145" office:value-type="string" calcext:value-type="string">
        <text:p>You may overload a function template either by a non-template function or by another function template.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;class T&gt; void f(T x, T y) { cout &lt;&lt; &quot;Template&quot; &lt;&lt; endl; }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;class T1&gt; void f(T1 x, int y) { cout &lt;&lt; &quot;Template&quot; &lt;&lt; endl; }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;class T1,class T2&gt; void f(T1 x, T2 y) { cout &lt;&lt; &quot;Template&quot; &lt;&lt; endl; }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;&gt; void f(int x, int y) { cout &lt;&lt; &quot;Template&quot; &lt;&lt; endl; }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;&gt; void f(int x, char y) { cout &lt;&lt; &quot;Template&quot; &lt;&lt; endl; }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>void f(int w, int z) { cout &lt;&lt; &quot;Non-template&quot; &lt;&lt; endl; }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>int main() {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>f( 1 , 2 );</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>f(&apos;a&apos;, &apos;b&apos;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>f( 1 , &apos;b&apos;);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="76">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro50">
      <table:table-cell/>
      <table:table-cell table:style-name="ce146" office:value-type="string" calcext:value-type="string">
       <text:p>PARAMETRE PAR DEFAUT</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146" office:value-type="string" calcext:value-type="string">
        <text:p>- on peut spécifier des paramètres type par défaut dans un patron de classe comme suite :</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class T, class U = float&gt; class A { ... }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class T, int n = 5&gt; class B { ... }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146"/>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146" office:value-type="string" calcext:value-type="string">
        <text:p>A&lt;char&gt; _a ;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146" office:value-type="string" calcext:value-type="string">
        <text:p>B&lt;long&gt; _b ;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146" office:value-type="string" calcext:value-type="string">
        <text:p>Sont équivalantes à </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146" office:value-type="string" calcext:value-type="string">
        <text:p>A&lt;char, float&gt; _a ;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146" office:value-type="string" calcext:value-type="string">
        <text:p>B&lt;long, 5&gt; _b ;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce147"/>
      </table:table-row>
      <table:table-row table:style-name="ro50" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146"/>
      </table:table-row>
      <table:table-row table:style-name="ro52">
       <table:table-cell/>
       <table:table-cell table:style-name="ce148" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T58">template</text:span><text:span text:style-name="T59"> </text:span><text:span text:style-name="T60">&lt;</text:span><text:span text:style-name="T58">class</text:span><text:span text:style-name="T59"> </text:span><text:span text:style-name="T61">T</text:span><text:span text:style-name="T60">=</text:span><text:span text:style-name="T58">int</text:span><text:span text:style-name="T60">&gt; </text:span><text:span text:style-name="T62">struct</text:span><text:span text:style-name="T63"> </text:span><text:span text:style-name="T64">S</text:span><text:span text:style-name="T63"> </text:span><text:span text:style-name="T65">{ } ;</text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell table:style-name="ce149" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146"/>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce150" office:value-type="string" calcext:value-type="string">
        <text:p>et alors les déclarations suivantes </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro52">
       <table:table-cell/>
       <table:table-cell table:style-name="ce151" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T66">S</text:span><text:span text:style-name="T59"> </text:span><text:span text:style-name="T60">s; </text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce152" office:value-type="string" calcext:value-type="string">
        <text:p>error: missing template arguments before &apos;s&apos;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro52">
       <table:table-cell/>
       <table:table-cell table:style-name="ce153" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T67">     </text:span><text:span text:style-name="T68">S s = {1, 2, 3, 4, 5}; // copy list-initialization</text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro52">
       <table:table-cell/>
       <table:table-cell table:style-name="ce153" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T67">       </text:span><text:span text:style-name="T68">^</text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro52">
       <table:table-cell/>
       <table:table-cell table:style-name="ce151" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T66">S</text:span><text:span text:style-name="T60">&lt;&gt;</text:span><text:span text:style-name="T59"> </text:span><text:span text:style-name="T60">s;  //correct. int type is implied </text:span><text:span text:style-name="T59"> </text:span></text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro50">
       <table:table-cell/>
       <table:table-cell table:style-name="ce146"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
       <table:table-cell table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>exercise</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>create a normal class. Add a template function to it. Add a static templare function to it. Use them</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>response</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>A class member expression (. or -&gt; operator) that names an instance of a member</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>function template with template arguments must use the template keyword before</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>the member name.</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro53" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string"><text:p>class bigfloat {     </text:p><text:p>int y; </text:p><text:p>public:     </text:p><text:p>  bigfloat()    {        y=0;    }         </text:p><text:p>  template&lt;class T&gt;           bigfloat(T y)    {        y=0;    }         </text:p><text:p>  template&lt;unsigned N&gt; double round( );     </text:p><text:p>  template&lt;unsigned N&gt; static double round(double); </text:p><text:p>}; </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;unsigned N&gt; double bigfloat::round( )</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>cout &lt;&lt; &quot;round( ), N =&quot;&lt;&lt; N &lt;&lt; endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>return 1.0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;unsigned N&gt; double bigfloat::round(double d)</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>cout &lt;&lt; &quot;round(d), N =&quot;&lt;&lt; N &lt;&lt; endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>return d+1.0;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>int main()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>bigfloat f;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>std::cout &lt;&lt; f.template round&lt;2&gt;( ) &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>std::cout &lt;&lt; bigfloat::template round&lt;8&gt;(3.14) &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>std::cout &lt;&lt; f.round&lt;2&gt;( ) &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>std::cout &lt;&lt; bigfloat::round&lt;8&gt;(3.14) &lt;&lt; &apos;\n&apos;;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>bigfloat fw(4);</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>exercise</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>create a template class with a move/copy constructor/assignment</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>when is the compiler move/copy constructor/assignment are used ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>response</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>enum Currency { CAD, DM, USD, Yen };</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;Currency currency&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>class Money {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>Money( double amt );</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;Currency otherCurrency&gt; Money( const Money&lt;otherCurrency&gt; &amp; );</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;Currency otherCurrency&gt; Money &amp;operator =( const Money&lt;otherCurrency&gt; &amp; );</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>~Money();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>double get_amount() const { return amt_; }</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>// . . .</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>private:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>Curve *myCurve_;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>double amt_;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>// . . .</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>Money&lt;Yen&gt; acct1( 1000000.00 );</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>Money&lt;DM&gt; acct2( 123.45 );</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>Money&lt;Yen&gt; acct3( acct2 ); // template ctor</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>Money&lt;Yen&gt; acct4( acct1 ); // compiler-generated copy ctor!</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>acct3 = acct2; // template assignment</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro31">
       <table:table-cell/>
       <table:table-cell table:style-name="ce92" office:value-type="string" calcext:value-type="string">
        <text:p>acct4 = acct1; // compiler-generated assignment!</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce154" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class X&gt; </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce154" office:value-type="string" calcext:value-type="string">
        <text:p>class auto_ptr {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce154" office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce154" office:value-type="string" calcext:value-type="string">
        <text:p>auto_ptr( auto_ptr &amp; ); // copy ctor //hbf-copy constructor to use with a similar-type instance</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce154" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class Y&gt; auto_ptr( auto_ptr&lt;Y&gt; &amp; ); //hbf-copy constructor to use with a different-type instance</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce154" office:value-type="string" calcext:value-type="string">
        <text:p>auto_ptr &amp;operator =( auto_ptr &amp; ); // copy assignment hbf-copy assignment to use for a similar instance</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro21">
       <table:table-cell/>
       <table:table-cell table:style-name="ce154" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class Y&gt; auto_ptr &amp;operator =( auto_ptr&lt;Y&gt; &amp; ); //hbf-copy assignment to use with a different instance</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce154" office:value-type="string" calcext:value-type="string">
        <text:p>// . . .</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="ce154" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce46"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="30">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>partial specialization</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce155"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>exercise</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
       <text:p>Parial-specialize vector for the case of a bool</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename _Tp, typename _Alloc = std::allocator&lt;_Tp&gt; &gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
       <text:p>class vector : protected _Vector_base&lt;_Tp, _Alloc&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce156" office:value-type="string" calcext:value-type="string">
       <text:p>{ … };</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>response</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class Allocinting&gt; </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
        <text:p>class hvector&lt;bool, Allocinting&gt; </text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>hvector()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>cout &lt;&lt; &quot;class hvector&lt;bool, Allocinting&gt; &quot;&lt;&lt;endl;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce155"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce155"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>example of specialization using more arguments than in the primary template and how they end up combined to match the primary one :</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>but is this partial specialization ? Or a specialization for ratio&lt;&gt; ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class _R1, class _R2&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p>struct _Ratio_divide2;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;intmax_t _N1, intmax_t _D1, intmax_t _N2, intmax_t _D2&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro31">
      <table:table-cell/>
      <table:table-cell table:style-name="ce157" office:value-type="string" calcext:value-type="string">
       <text:p>struct _Ratio_divide2&lt;ratio&lt;_N1, _D1&gt;, ratio&lt;_N2, _D2&gt; &gt; { …. }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce158"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce155"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
       <text:p>The following example shows several instances of the demo class template.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T, typename U, int N&gt; class demo {};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T, int N&gt; class demo&lt;T, int, N&gt; {};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; class demo&lt;T, T, 0&gt; {};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; class demo&lt;T*, T, 1&gt; {};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;int, char, 1&gt; w;                                                                                                                    <text:span text:style-name="T69">// Primary template</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char, int, 10&gt; x;                                          <text:span text:style-name="T69">// First specialization</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char, char, 0&gt; y;                                                                                 <text:span text:style-name="T69">// Second specialization</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char, char, 1&gt; z;                                         <text:span text:style-name="T69">// Primary template</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char*,char, 1&gt; p;                                                                                                            <text:span text:style-name="T69">// Third template</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char*,char, 0&gt; q;                                         <text:span text:style-name="T69">// Primary template</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;char*,char*, 0&gt; r;                                        <text:span text:style-name="T69">// Second template</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>demo&lt;int*, int, 1&gt; s;                                             <text:span text:style-name="T69">// Error: ambiguous</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="10">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="15">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>explicite instanciation of class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
       <text:p>1-One instance of usage is when the template definition is in a file different from the one containing the declaration</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce159" office:value-type="string" calcext:value-type="string">
       <text:p>2-Another instance of usage is with friend functions</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>3-solution to error:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>/home/hassan4/data3/git/c/p1/template17.cpp:8: error: &apos;Point&apos; does not name a type</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>template&lt;typename T&gt; Point&lt;T&gt; operator+ (const Point&lt;T&gt;&amp; lhs, const Point&lt;T&gt;&amp; rhs);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="22"/>^</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>solution is instanciate the class : template&lt;typename T&gt; class Point;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce160" office:value-type="string" calcext:value-type="string">
       <text:p>//////// in sqr.cpp</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>#include &quot;sqr.h&quot;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>Template int sqr&lt;int&gt;(int);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; T sqr(T x)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return x * x;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>template double sqr&lt;&gt;(double); <text:span text:style-name="T16">// Explicit instantiation</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce160" office:value-type="string" calcext:value-type="string">
       <text:p>//////// in sqr.h</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; extern T sqr(T x);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce160" office:value-type="string" calcext:value-type="string">
       <text:p>//////// in main.cpp</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>#include &quot;sqr.h&quot; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>int main( ) { <text:s text:c="4"/>double g = sqr(4.4);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>friend and template</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string">
       <text:p>to make a friend successfully either define the friend function in the class or</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro41">
      <table:table-cell/>
      <table:table-cell table:style-name="ce155" office:value-type="string" calcext:value-type="string"><text:p>instanciate the class itself + convince the compiler that  while it is examining the class body proper that the operator+ and operator&lt;&lt; functions are </text:p><text:p>themselves templates + add the &lt;&gt; at the friend line in the class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; class Point;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; Point&lt;T&gt; operator+ (const Point&lt;T&gt;&amp; lhs, const Point&lt;T&gt;&amp; rhs);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; std::ostream&amp; operator&lt;&lt; (std::ostream&amp; o, const Point&lt;T&gt;&amp; x);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>class Point</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>Point(const T u = T(),const T v = T()):x(u),y(v) {}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>friend Point&lt;T&gt; operator+ &lt;&gt;(const Point&lt;T&gt;&amp; lhs, const Point&lt;T&gt;&amp; rhs);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>friend std::ostream&amp; operator&lt;&lt; &lt;&gt;(std::ostream&amp; o, const Point&lt;T&gt;&amp; x);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>private:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>T x;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>T y;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; Point&lt;T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>operator+ (const Point&lt;T&gt;&amp; l, const Point&lt;T&gt;&amp; r)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return Point&lt;T&gt;(l.x+r.x, l.y+r.y);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; std::ostream&amp;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>operator&lt;&lt; (std::ostream&amp; o, const Point&lt;T&gt;&amp; p)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>o&lt;&lt;&quot;Point(&quot;&lt;&lt;p.x&lt;&lt;&quot;,&quot;&lt;&lt;p.x&lt;&lt;&quot;)&quot;;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return o;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>template for a specific type only</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;class T&gt; class mytype; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;&gt; class mytype&lt;int&gt; { }; <text:s/>//// int is a valid type</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>mytype&lt;&gt; r; //error</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>mytype&lt;float&gt; r; <text:s/>//error</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>mytype&lt;int&gt; r; //ok</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce161" office:value-type="string" calcext:value-type="string">
       <text:p>Constraints</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>make sure that a class D derives from a class B</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>the idea is to have a function/constructor that does the conversion/assignment from D to B with no cast, and call the function, constructor</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>1- solution 1</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;class D, class B&gt; void derivedfrom_fn()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>D* d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>B* b = d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template void derivedfrom_fn&lt;D,B&gt;(); <text:s/>///the compiler will issue an error if D not derive from B</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>Solution 2</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;class D, class B&gt; void derivedfrom_fn()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>D* d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>B* b = d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro36">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string"><text:p>derivedfrom_fn&lt;D,A&gt;(); //error: cannot convert &apos;D*&apos; to &apos;A*&apos; in initialization</text:p><text:p>     B* b = d;</text:p><text:p>            ^</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>Solution 3</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class D, class B&gt; struct Derived_from</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>D* d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>B* b = d;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Derived_from&lt;D,B&gt; f;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>Solution 4</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class D, class B&gt; struct Derived_from</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>static void constraints(D* p)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>B* pb = p;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>void(*p)(D*) = constraints;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>Derived_from&lt;D,A&gt; f;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>make sure that a class derives from another one, that it is copiable, multipliable</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;class T, class B&gt; struct Derived_from {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>static void constraints(T* p) { B* pb = p; } <text:s/>//doesn’t check derivation, but conversion, but that’s often a better constraint.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from() { void(*p)(T*) = constraints; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;class T1, class T2&gt; struct Can_copy {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>static void constraints(T1 a, T2 b) { T2 c = a; b = a; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_copy() { void(*p)(T1,T2) = constraints; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;class T1, class T2 = T1&gt; struct Can_compare {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>static void constraints(T1 a, T2 b) { a==b; a!=b; a&lt;b; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_compare() { void(*p)(T1,T2) = constraints; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;class T1, class T2, class T3 = T1&gt; struct Can_multiply {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>static void constraints(T1 a, T2 b, T3 c) { c = a*b; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_multiply() { void(*p)(T1,T2,T3) = constraints; }</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>struct B { };</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>struct D : B { };</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>struct DD : D { };</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>struct X { };</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from&lt;D,B&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from&lt;DD,B&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from&lt;X,B&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from&lt;int,B&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Derived_from&lt;X,int&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_compare&lt;int,float&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_compare&lt;X,B&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_multiply&lt;int,float&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_multiply&lt;int,float,double&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_multiply&lt;B,X&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_copy&lt;D*,B*&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_copy&lt;D,B*&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>Can_copy&lt;int,B*&gt;();</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>// the classical &quot;elements must derived from Mybase*&quot; constraint:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;class T&gt; class Container : Derived_from&lt;T,Mybase&gt; </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:style-name="ce64"/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>write a function that returns true if a class A derives from a calss R</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;typename D, typename B&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>class IsDerivedFromHelper</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>class dummy1 { };</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>class dummy2 { dummy1 d[2]; };</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>static dummy1 Test( ... );</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>static dummy2 Test( B* );</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>enum { Is = sizeof(Test(static_cast&lt;D*&gt;(0))) == sizeof(dummy2) };</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class C, class P&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>bool IsDerivedFrom() {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>return IsDerivedFromHelper&lt;C, P&gt;::Is;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>int main()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>cout &lt;&lt; boolalpha &lt;&lt; IsDerivedFrom&lt;A,D&gt;();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>a simpler function</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>template&lt;typename D, typename B&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>class IsDerivedFromHelper</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>static constexpr int Test( ... ) <text:s text:c="2"/>{return 0;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>static constexpr int Test( B* ) <text:s/>{return 1;}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>public:</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>enum { Is = Test(static_cast&lt;D*&gt;(0)) == 1 };</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class C, class P&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>bool IsDerivedFrom() {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>return IsDerivedFromHelper&lt;C, P&gt;::Is;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>int main()</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>cout &lt;&lt; boolalpha &lt;&lt; IsDerivedFrom&lt;A,D&gt;();</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
       <text:p>write a function that returns true if a class A and B are the same</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;typename T, typename U&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>struct is_same</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>static const bool value = false;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;typename T&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>struct is_same&lt;T, T&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>{</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>static const bool value = true;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>};</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>template &lt;class A, class B&gt;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>bool IsSameClass() {</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>return is_same&lt;A, B&gt;::value;</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
        <text:p>}</text:p>
       </table:table-cell>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce143"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="18">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>template-derived-class using a nested type it inherits from its template-base-class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>class Xyz { /*...*/ }; <text:s/>// Global (&quot;namespace scope&quot;) typevoid </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell/>
      <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
       <text:p>f() { } <text:s text:c="11"/>// Global (&quot;namespace scope&quot;) function</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class B {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>class Xyz { /*...*/ }; <text:s/>// Type nested in class B&lt;T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>typedef int Pqr; <text:s text:c="7"/>// Type nested in class B&lt;T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class D : public B&lt;T&gt; {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>void g()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>        Xyz x;  <text:span text:style-name="T44">// it is not using the B nested Xyz, but the global one.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>        Pqr y;  <text:span text:style-name="T44">// it is not using the B nested Pqr, but the global one.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>the correct way is</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class D : public B&lt;T&gt; {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>void g()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>        typename B&lt;T&gt;::Xyz x;  // <text:span text:style-name="T44">solution</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>typename B&lt;T&gt;::Pqr y; <text:s/>// Good</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>template-derived-class using a function member it inherits from its template-base-class</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class B {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>void f() { } <text:s/>// Member of class B&lt;T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class D : public B&lt;T&gt; {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>void g()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>        f();  <text:span text:style-name="T44">// error: there are no arguments to &apos;f&apos; that depend on a template parameter, so a declaration of &apos;f&apos; must be available</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>the correct way is</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>template&lt;typename T&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class D : public B&lt;T&gt; {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string"><text:p>    using B&lt;T&gt;::f; <text:span text:style-name="T44">// solution 1</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>void g()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro35">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string"><text:p>         this-&gt;f();  <text:span text:style-name="T44">// solution 2. Since this is always implicitly dependent in a template, this-&gt;f is dependent and the lookup is therefore deferred until the template is actually instantiated, at which point all base classes are considered.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>Question ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143" office:value-type="string" calcext:value-type="string">
       <text:p>what is this two templates ? How is this instanciated ? And used ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>template&lt;typename T&gt; template&lt;typename U&gt;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>sp&lt;T&gt;::sp(U* other) : m_ptr(other)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>if (other) ((T*)other)-&gt;incStrong(this);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="30">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="70">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce143"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce143"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Namespace , Koenig Lookup == Argument Dependent Lookup</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>namespace MyNamespace</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class MyClass {};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>void doSomething(MyClass);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>MyNamespace::MyClass obj; // global object</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>int main()</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>doSomething(obj); // Works Fine - MyNamespace::doSomething() is called.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce162" office:value-type="string" calcext:value-type="string">
       <text:p>How does it work?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>The algorithm tells the compiler to not just look at local scope, but also the namespaces that contain the argument&apos;s type. Thus, in the above code, the compiler finds that the object obj, which is the argument of the function doSomething(), belongs to the namespace MyNamespace. So, it looks at that namespace to locate the declaration of doSomething(). </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce162" office:value-type="string" calcext:value-type="string">
       <text:p>What is the advantage of Koenig Lookup?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>As the simple code example above demonstrates above the Koenig Algorithm provides convenience and ease of usage to the programmer. Without Koenig Algorithm there would be an overhead on the programmer, to repeatedly specify the fully qualified names, or instead, use numerous using-declarations. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce162" office:value-type="string" calcext:value-type="string">
       <text:p>Why the criticism of Koenig Algorithm?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Over dependence on Koenig Algorithm can lead to semantic problems,and catch the programmer off guard sometimes. </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>std::swap(obj1,obj2); <text:s text:c="3"/></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>may not show the same behavior as: </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>using std::swap;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>swap(obj1, obj2); </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>With ADL, which version of swap function gets called would depend on the namespace of the arguments passed to it.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>If there exists an namespace A and if A::obj1, A::obj2 &amp; A::swap() exist then the second example will result in a call to A::swap() which might not be what the user wanted.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="7">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce140" office:value-type="string" calcext:value-type="string">
      <text:p>Static polymorphism – exhibited by overloaded functions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>The resolution of a function call is based on number, type, and sequence of arguments declared for each form of the function. Consider the following function declaration:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p> </text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>            void add(int , int);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>            void add(float, float);</text:p>
      </table:table-cell>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce140" office:value-type="string" calcext:value-type="string">
      <text:p>Dynamic polymorphism – exhibited by using late binding.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce163" office:value-type="string" calcext:value-type="string">
      <text:p>What is function overriding? </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Defining the functions within the base and derived class with the same signature and name where the base class’s function is virtual.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce162" office:value-type="string" calcext:value-type="string">
      <text:p>What are VTABLE and VPTR?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>vtable is a table of function pointers. It is maintained per class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>vptr is a pointer to vtable. It is maintained per object (See this for an example).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>1) compiler adds code in every constructor. to set vptr of the object being created. And sets vptr to point to vtable of the class.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>2) compiler adds code with polymorphic function call. Wherever a polymorphic call is made, compiler inserts code to first look for vptr using base class pointer or reference (In the above example, since pointed or referred object is of derived type, vptr of derived class is accessed). Once vptr is fetched, vtable of derived class can be accessed. Using vtable, address of derived derived class function show() is accessed and called.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>can a static function be virtual ? (geeksquiz.com/commonly-asked-c-interview-questions-set-2/)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce162" office:value-type="string" calcext:value-type="string">
       <text:p>A static member function cannot be virtual</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>can a static function be volatile/const ? (geeksquiz.com/commonly-asked-c-interview-questions-set-2/)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce162" office:value-type="string" calcext:value-type="string">
       <text:p>static member function can not be declared const, volatile, or const volatile.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="7">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro52">
     <table:table-cell/>
     <table:table-cell table:style-name="ce164" office:value-type="string" calcext:value-type="string">
      <text:p>“delete this” in C++</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro54" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce164"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>(http://www.geeksforgeeks.org/delete-this-in-c/)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>delete this; can be used for objects allocated with new. But be ware, don&apos;t access anything after the delete </text:p>
      </table:table-cell>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>stream</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>Which function is used to move the stream pointer for the purpose of reading data from stream? </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>seekg</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Which function is used to move the stream pointer for the purpose of writing data from stream?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>seekp</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Pointer to member</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int Point::*px = &amp;Point::x; <text:s/>//x should be public</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Point p(3,14);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>p.print();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>p.*px=5;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>p.print();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>lessons learned/discovered</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>Trick1-val.first &lt; val.second? (a=val.first, b=val.second) : (a=val.second, b=val.first);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Trick2-Specializing an stl struct should be under std namespace (see template_specialization01.cpp)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>Trick3-unique_ptr&lt;int[]&gt; connectivity(new int[size]);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Trick4-int j = I + 3 – (I % 3); what values does j take when I changes</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Trick5-bool CompareEdge(unsigned short* indexTriples, int Edge1, int Edge2)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>unsigned short a1 = indexTriples[Edge1];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>unsigned short a2 = (2 == Edge1 % 3) ? indexTriples[Edge1 - 2] : indexTriples[Edge1 + 1];</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Trick 6- swap using tuble</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int a = 5;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int b = 6;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tie(b, a) = make_tuple(a, b);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Trick 7</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
      <text:p>STATIC</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>exercice</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2-specialize std::hash for edge{ushort a, b;} // see stl_hash.cpp</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3-create a unique_ptr for an array of int, and display it using copy()</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro55">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string"><text:p>4-make it possible to pass std::endl as a parameter to functions</text:p><text:p>template &lt;class type_of_arg1&gt;</text:p><text:p>void output(type_of_arg1 a1)</text:p><text:p>{</text:p><text:p>    cout &lt;&lt; a1;</text:p><text:p>}</text:p><text:p/><text:p>template &lt;class type_of_arg1, typename... type_of_remaining_args&gt;</text:p><text:p>void output(type_of_arg1 a1, type_of_remaining_args... args)</text:p><text:p>{</text:p><text:p>    cout &lt;&lt; a1;</text:p><text:p>    output(args...);</text:p><text:p>}</text:p><text:p>Output(&quot;writer thread &quot;,std::this_thread::get_id(),std::endl);</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="STL algo" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co12" table:default-cell-style-name="ce1"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce8"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1021" table:default-cell-style-name="ce1"/>
    <table:table-row table:style-name="ro27">
     <table:table-cell/>
     <table:table-cell table:style-name="ce168" office:value-type="string" calcext:value-type="string">
      <text:p>Returns true if pred returns true for all the elements in the range [first,last) or if the range is empty</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class UnaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bool all_of (InputIterator first, InputIterator last, UnaryPredicate pred)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (!pred(*first)) return false;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return true;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>std::array&lt;int,8&gt; foo = {3,5,7,11,13,17,19,23};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if ( std::all_of(foo.begin(), foo.end(), [](int i){return i%2;}) )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; &quot;All the elements are odd numbers.\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>Returns true if pred returns true for any of the elements in the range [first,last)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class UnaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bool any_of (InputIterator first, InputIterator last, UnaryPredicate pred)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (pred(*first)) return true;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return false;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>std::array&lt;int,7&gt; foo = {0,1,-1,3,-3,5,-5};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if ( std::any_of(foo.begin(), foo.end(), [](int i){return i&lt;0;}) )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; &quot;There are negative elements in the range.\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>Returns true if pred returns false for all the elements in the range [first,last) or if the range is empty</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce170" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class UnaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>  bool <text:span text:style-name="T16">none_of</text:span> (InputIterator first, InputIterator last, UnaryPredicate pred)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (pred(*first)) return false;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return true;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::array&lt;int,8&gt; foo = {1,2,4,8,16,32,64,128};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>  if ( std::<text:span text:style-name="T16">none_of</text:span>(foo.begin(), foo.end(), [](int i){return i&lt;0;}) )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; &quot;There are no negative elements in the range.\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce170" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class Function&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>  Function <text:span text:style-name="T16">for_each</text:span>(InputIterator first, InputIterator last, Function fn)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>fn (*first);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return fn; <text:s text:c="5"/>// or, since C++11: return move(fn);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">find</text:span> Returns an iterator to the first element in the range [first,last) that compares equal to val. If no such element is found, the function returns last.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>same as search_n(,,1,val)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro56">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>template&lt;class InputIterator, class T&gt;</text:p><text:p>  InputIterator <text:span text:style-name="T16">find</text:span> (InputIterator first, InputIterator last, const T&amp; val)</text:p><text:p>{</text:p><text:p>  while (first!=last) {</text:p><text:p>    if (*first==val) return first;</text:p><text:p>    ++first;</text:p><text:p>  }</text:p><text:p>  return last;</text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">search_n</text:span> Searches the range [first,last) for a sequence of count elements, each comparing equal to val (or for which pred returns true).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string">
      <text:p>search_n(,,1,val) == find</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell table:style-name="ce165"/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator, class Size, class T&gt;</text:p><text:p>   ForwardIterator <text:span text:style-name="T16">search_n</text:span> (ForwardIterator first, ForwardIterator last,</text:p><text:p>                             Size count, const T&amp; val);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro47">
     <table:table-cell table:style-name="ce166"/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator, class Size, class T, class BinaryPredicate&gt;</text:p><text:p>   ForwardIterator <text:span text:style-name="T16">search_n </text:span>( ForwardIterator first, ForwardIterator last,</text:p><text:p>                              Size count, const T&amp; val, BinaryPredicate pred );</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce166"/>
     <table:table-cell table:style-name="ce171"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Returns an iterator to the first element in the range [first,last) for which pred returns true. If no such element is found, the function returns last.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce170" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class UnaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string"><text:p>  InputIterator <text:span text:style-name="T16">find_if </text:span>(InputIterator first, InputIterator last, UnaryPredicate pred)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (pred(*first)) return first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return last;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Returns an iterator to the first element in the range [first,last) for which pred returns false. If no such element is found, the function returns last.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class InputIterator, class UnaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string"><text:p>  InputIterator <text:span text:style-name="T16">find_if_not</text:span> (InputIterator first, InputIterator last, UnaryPredicate pred)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (!pred(*first)) return first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return last;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">search</text:span> Searches the range [first1,last1) for the first occurrence of the sequence defined by [first2,last2), and returns an iterator to its first element, or last1 if no occurrences are found.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce170" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class ForwardIterator1, class ForwardIterator2&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>  ForwardIterator1 <text:span text:style-name="T16">search</text:span> ( ForwardIterator1 first1, ForwardIterator1 last1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>ForwardIterator2 first2, ForwardIterator2 last2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>BinaryPredicate pred);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if (first2==last2) return first1; <text:s/>// specified in C++11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first1!=last1)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>ForwardIterator1 it1 = first1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>ForwardIterator2 it2 = first2;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>while (*it1==*it2) { <text:s text:c="3"/>// or: while (pred(*it1,*it2)) for version 2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>++it1; ++it2;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>if (it2==last2) return first1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>if (it1==last1) return last1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return last1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Searches the range [first1,last1) for the last occurrence of the sequence defined by [first2,last2), and returns an iterator to its first element, or last1 if no occurrences are found.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator1, class ForwardIterator2&gt;</text:p><text:p>   ForwardIterator1 <text:span text:style-name="T16">find_end</text:span> (ForwardIterator1 first1, ForwardIterator1 last1,</text:p><text:p>                              ForwardIterator2 first2, ForwardIterator2 last2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro47">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator1, class ForwardIterator2, class BinaryPredicate&gt;</text:p><text:p>   ForwardIterator1 <text:span text:style-name="T16">find_end</text:span> (ForwardIterator1 first1, ForwardIterator1 last1,</text:p><text:p>                              ForwardIterator2 first2, ForwardIterator2 last2,</text:p><text:p>                              BinaryPredicate pred);</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce1"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Returns an iterator to the first element in the range [first1,last1) that matches any of the elements in [first2,last2). If no such element is found, the function returns last1.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator, class ForwardIterator&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string"><text:p>   InputIterator <text:span text:style-name="T16">find_first_of</text:span> (InputIterator first1, InputIterator last1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="35"/>ForwardIterator first2, ForwardIterator last2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator, class ForwardIterator, class BinaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>   InputIterator <text:span text:style-name="T16">find_first_of</text:span> (InputIterator first1, InputIterator last1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="35"/>ForwardIterator first2, ForwardIterator last2,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="35"/>BinaryPredicate pred);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Searches the range [first,last) for the first occurrence of two consecutive elements that match, and returns an iterator to the first of these two elements, or last if no such pair is found.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class ForwardIterator&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string"><text:p>   ForwardIterator <text:span text:style-name="T16">adjacent_find</text:span> (ForwardIterator first, ForwardIterator last)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>if (first != last)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>ForwardIterator next=first; ++next;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>while (next != last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>if (*first == *next) <text:s text:c="4"/>// or: if (pred(*first,*next)), for version (2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>return first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>++first; ++next;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return last;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Returns the number of elements in the range [first,last) that compare equal to val.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce170" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator, class T&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>typename iterator_traits&lt;InputIterator&gt;::difference_type</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T16">count</text:span> (InputIterator first, InputIterator last, const T&amp; val)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>typename iterator_traits&lt;InputIterator&gt;::difference_type ret = 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first!=last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if (*first == val) ++ret;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return ret;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Returns the number of elements in the range [first,last) for which pred is true.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce172" office:value-type="string" calcext:value-type="string">
      <text:p>count_if</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce172"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Compares the elements in the range [first1,last1) with those in the range beginning at first2, and returns the first element of both sequences that does not match.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator1, class InputIterator2&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>pair&lt;InputIterator1, InputIterator2&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T16">mismatch</text:span> (InputIterator1 first1, InputIterator1 last1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="14"/>InputIterator2 first2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator1, class InputIterator2, class BinaryPredicate&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>pair&lt;InputIterator1, InputIterator2&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>    <text:span text:style-name="T16">mismatch</text:span> (InputIterator1 first1, InputIterator1 last1,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="14"/>InputIterator2 first2, BinaryPredicate pred);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">equal</text:span> != <text:span text:style-name="T16">mismatch</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[] = {10,20,80,320,1024};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::pair&lt;std::vector&lt;int&gt;::iterator,int*&gt; mypair;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>mypair = std::mismatch (myvector.begin(), myvector.end(), myints);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;First mismatching elements: &quot; &lt;&lt; *mypair.first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot; and &quot; &lt;&lt; *mypair.second &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>First mismatching elements: 30 and 80</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p>Constructs a <text:a xlink:href="http://www.cplusplus.com/tuple" xlink:type="simple">tuple</text:a> object whose elements are references to the arguments in args, in the same order.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class... Types&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>constexpr tuple&lt;Types&amp;...&gt; tie (Types&amp;... args) noexcept;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
      <text:p>// packing/unpacking tuples</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce173" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;iostream&gt; <text:s text:c="4"/>// std::cout</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce173" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;tuple&gt; <text:s text:c="7"/>// std::tuple, std::make_tuple, std::tie</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
      <text:p>int main ()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myint;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>char mychar;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::tuple&lt;int,float,char&gt; mytuple;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>mytuple = std::make_tuple (10, 2.6, &apos;a&apos;); <text:s text:c="9"/>// packing values into tuple</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::tie (myint, std::ignore, mychar) = mytuple; <text:s text:c="2"/>// unpacking tuple into variables</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;myint contains: &quot; &lt;&lt; myint &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;mychar contains: &quot; &lt;&lt; mychar &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell table:style-name="ce165"/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator1, class ForwardIterator2&gt;</text:p><text:p>   bool <text:span text:style-name="T16">is_permutation</text:span> (ForwardIterator1 first1, ForwardIterator1 last1,</text:p><text:p>                        ForwardIterator2 first2);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro47">
     <table:table-cell table:style-name="ce166"/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>template &lt;class ForwardIterator1, class ForwardIterator2, class BinaryPredicate&gt;</text:p><text:p>   bool <text:span text:style-name="T16">is_permutation</text:span> (ForwardIterator1 first1, ForwardIterator1 last1,</text:p><text:p>                        ForwardIterator2 first2, BinaryPredicate pred);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce174"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Reverse</text:span>s the order of the elements in the range [first,last).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce170" office:value-type="string" calcext:value-type="string">
      <text:p>// set some values:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (int i=1; i&lt;10; ++i) myvector.push_back(i); <text:s text:c="2"/>// 1 2 3 4 5 6 7 8 9</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce175" office:value-type="string" calcext:value-type="string">
      <text:p>// then reverse</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::reverse(myvector.begin(),myvector.end()); <text:s text:c="3"/>// 9 8 7 6 5 4 3 2 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>rotate </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Rotates the order of the elements in the range [first,last), in such a way that the element pointed by middle becomes the new first element.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (int i=1; i&lt;10; ++i) myvector.push_back(i); <text:s text:c="19"/>// 1 2 3 4 5 6 7 8 9</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::rotate(myvector.begin(),myvector.begin()+3,myvector.end()); <text:s text:c="2"/>// 4 5 6 7 8 9 1 2 3</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce54" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">random_shuffle</text:span> Rearranges the elements in the range [first,last) randomly, using a user-defined shuffler or system one</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">generate</text:span> Assigns the value returned by gen function to the elements in the range [first,last). </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">generate_n</text:span> Assigns the value returned by successive calls to gen to the first n elements of the sequence pointed by first.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class OutputIterator, class Size, class Generator&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>OutputIterator generate_n (OutputIterator first, Size n, Generator gen);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce53"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">remove</text:span>  removes all elements comparing equal to val in the range [first,last), and returns an iterator to the new end of that range.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Assigns val to all the elements in the range [first,last).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce170" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class ForwardIterator, class T&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>  void <text:span text:style-name="T16">fill </text:span>(ForwardIterator first, ForwardIterator last, const T&amp; val)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (first != last) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>*first = val;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>++first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">fill_n</text:span> Assigns val to the first n elements of the sequence pointed by first.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class OutputIterator, class Size, class T&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>OutputIterator fill_n (OutputIterator first, Size n, const T&amp; val);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce176"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">std::reverse_copy</text:span> Copies the elements in the range [first,last) to the range beginning at result, but in reverse order.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[] ={1,2,3,4,5,6,7,8,9};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>myvector.resize(9); <text:s text:c="3"/>// allocate space</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::reverse_copy (myints, myints+9, myvector.begin());</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>myvector contains: 9 8 7 6 5 4 3 2 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">rotate_copy</text:span> Copies the elements in the range [first,last) to the range beginning at result, but rotating the order of the elements in such a way that the element pointed by middle becomes the first element in the resulting range.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce170" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class ForwardIterator, class OutputIterator&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>  OutputIterator <text:span text:style-name="T16">rotate_copy </text:span>(ForwardIterator first, ForwardIterator middle,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="30"/>ForwardIterator last, OutputIterator result)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>result=std::copy (middle,last,result);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return std::copy (first,middle,result);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string">
      <text:p>Copies the elements in the range [first,last) starting from the end into the range terminating at result.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce170" office:value-type="string" calcext:value-type="string">
      <text:p>template&lt;class BidirectionalIterator1, class BidirectionalIterator2&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p>  BidirectionalIterator2 <text:span text:style-name="T16">copy_backward</text:span> ( BidirectionalIterator1 first,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="41"/>BidirectionalIterator1 last,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="41"/>BidirectionalIterator2 result )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>while (last!=first) *(--result) = *(--last);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return result;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">copy_if</text:span> Copies the elements in the range [first,last) for which pred returns true to the range beginning at result.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>auto it = std::copy_if (foo.begin(), foo.end(), bar.begin(), [](int i){return !(i&lt;0);} );// copy only positive numbers:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bar.resize(std::distance(bar.begin(),it)); <text:s/>// shrink container to new size</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce14" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">replace_copy_if</text:span> Copies the elements in the range [first,last) to the range beginning at result, replacing those for which pred returns true by new_value.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce177" office:value-type="string" calcext:value-type="string">
      <text:p>Hb:replaces an element with value if pred is true. Copy otherwise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>// set some values:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (int i=1; i&lt;10; i++) foo.push_back(i); <text:s text:c="9"/>// 1 2 3 4 5 6 7 8 9</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bar.resize(foo.size()); <text:s text:c="2"/>// allocate space</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string"><text:p>  std::<text:span text:style-name="T16">replace_copy_if</text:span> (foo.begin(), foo.end(), bar.begin(), IsOdd, 0);  // 0 2 0 4 0 6 0 8 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>where IsOdd : bool IsOdd (int i) { return ((i%2)==1); }</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Copies the elements in the range [first,last) to the range beginning at result, except those elements for which pred returns true.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce177" office:value-type="string" calcext:value-type="string">
      <text:p>Hb:skips an element if pred is true. Copy otherwise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[] = {1,2,3,4,5,6,7,8,9};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (9);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string"><text:p>  std::<text:span text:style-name="T16">remove_copy_if</text:span> (myints,myints+9,myvector.begin(),IsOdd);  //2 4 6 8 0 0 0 0 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p>where IsOdd : bool IsOdd (int i) { return ((i%2)==1); }</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">remove_copy</text:span> Copies the elements in the range [first,last) to the range beginning at result, except those elements that compare equal to val.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce177" office:value-type="string" calcext:value-type="string">
      <text:p>Hb:skips an element if equals to value. Copy otherwise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[] = {10,20,30,30,20,10,10,20}; <text:s text:c="14"/>// 10 20 30 30 20 10 10 20</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (8);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::remove_copy (myints,myints+8,myvector.begin(),20); // 10 30 30 10 10 0 0 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">replace_copy</text:span> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Copies the elements in the range [first,last) to the range beginning at result, replacing the appearances of old_value (20) by new_value (99)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[] = { 10, 20, 30, 30, 20, 10, 10, 20 };</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (8);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::replace_copy (myints, myints+8, myvector.begin(), 20, 99); <text:s/>//10 99 30 30 99 10 10 99</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>technics</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>Traditional array in algos</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell/>
      <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>int myints[]={10,20,30,40,50,60,70};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell/>
      <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (7);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell/>
      <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::copy ( myints, myints+7, myvector.begin() );</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell/>
      <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>int myints[] = {10,20,80,320,1024};</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell/>
      <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::pair&lt;std::vector&lt;int&gt;::iterator,int*&gt; mypair;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell/>
      <table:table-cell table:style-name="ce171" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>mypair = std::mismatch (myvector.begin(), myvector.end(), myints);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>Check if we have previously processed an entry by comparing where it is first found and the current position. Code taken </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p>template &lt;class InputIterator1, class InputIterator2&gt;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>bool is_permutation (InputIterator1 first1, InputIterator1 last1,</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="23"/>InputIterator2 first2)</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>std::tie (first1,first2) = std::mismatch (first1,last1,first2);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>if (first1==last1) return true;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>InputIterator2 last2 = first2; std::advance (last2,std::distance(first1,last1));</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>for (InputIterator1 it1=first1; it1!=last1; ++it1) {</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string"><text:p>    if (<text:span text:style-name="T16">std::find(first1,it1,*it1)==it1</text:span>) { //hb:the semantic:if *it1 is encountered before it1, it means it has already been processed.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>auto n = std::count (first2,last2,*it1);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>if (n==0 || std::count (it1,last1,*it1)!=n) return false;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>return true;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:style-name="ce167" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="1048189">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="13">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="STL iterator" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co13" table:default-cell-style-name="ce70"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">advance</text:span>s the iterator it by n element positions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>template &lt;class InputIterator, class Distance&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>void advance (InputIterator&amp; it, Distance n);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">next </text:span>Returns an iterator pointing to the element that it would be pointing to if <text:a xlink:href="http://www.cplusplus.com/advance" xlink:type="simple">advanced</text:a> n positions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">prev </text:span>Returns an iterator pointing to the element that it would be pointing to if <text:a xlink:href="http://www.cplusplus.com/advance" xlink:type="simple">advanced</text:a> -n positions.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::advance (it,5);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>it = std::next(it,5); <text:s/>//step forward by 5</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>it = std::prev(it,5); <text:s/>//step backward by 5</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>typename iterator_traits&lt;InputIterator&gt;::difference_type </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="102"/>std::distance(first,last)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce95"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce96" office:value-type="string" calcext:value-type="string"><text:p>Iterators are a generalization of pointers that allow a programmer to work with different data structures (containers) in a uniform manner</text:p><text:p>Since iterators are a generalization of pointers it is assumed that every template function that takes iterators as arguments also works with regular pointers </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce95"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>To travers/process a collection for begining to end, we use the iterator defined for the collection.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>To travers/process a collection in the reverse order, we use the reverse iterator defined for the collection. there is a trick when going from a &apos;rit&apos; to an &apos;it&apos; (see iterators/adaptors)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string"><text:p>To insert an element into a collection either in the front, back or middle, we use an iterator inserter (iterator adaptor) (<text:span text:style-name="T37">example for each ?</text:span>)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce99" office:value-type="string" calcext:value-type="string"><text:p>back inserter() causes the container’s push back() operator to be invoked in place of the assignment operator. </text:p><text:p>Hbf:so &apos;i&apos; in the previous code called the assignement operator ? isn&apos;t it correcte provided it incremented ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce99"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string">
      <text:p>-iterators have different abilities. These abilities are important because some algorithms require special iterator abilities. For example, sorting algorithms require iterators that can perform random access because otherwise the runtime would be poor.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce99"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce100" office:value-type="string" calcext:value-type="string">
      <text:p>For each iterator category, the C++ standard library provides an iterator tag that can be used as a &quot;label&quot; for iterators:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce100"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>namespace std {</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>struct output_iterator_tag </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>struct input_iterator_tag </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>struct forward_iterator_tag : public input_iterator_tag</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>struct bidirectional_iterator_tag : public forward_iterator_tag</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>struct random_access_iterator_tag : public bidirectional_iterator_tag</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T50">std::list::iterator</text:span> is std::_List_iterator&lt;int&gt; iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T50">std::vector&lt;int&gt;::iterator</text:span> is of type __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int&gt; &gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce103" office:value-type="string" calcext:value-type="string">
      <text:p>error: cannot convert &apos;std::_List_iterator&lt;int&gt;*&apos; to &apos;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int&gt; &gt;*&apos; in assignment</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>a=b;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>^</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">std::list::iterator::category</text:span> is std::bidirectional_iterator_tag</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">std::vector&lt;int&gt;::iterator</text:span> is std::random_access_iterator_tag</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce103" office:value-type="string" calcext:value-type="string">
      <text:p>error: invalid conversion from &apos;std::bidirectional_iterator_tag*&apos; to &apos;std::random_access_iterator_tag*&apos; [-fpermissive]</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce102" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>a=b;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>^</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce104" office:value-type="string" calcext:value-type="string">
      <text:p>how to get the category of an iterator ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce105"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce106" office:value-type="string" calcext:value-type="string">
      <text:p>// std::iterator example</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;iostream&gt; <text:s text:c="4"/>// std::cout</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;iterator&gt; <text:s text:c="4"/>// std::iterator, std::input_iterator_tag</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p>class MyIterator : public std::iterator&lt;std::input_iterator_tag, int&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int* p;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p>public:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>MyIterator(int* x) :p(x) {}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>MyIterator(const MyIterator&amp; mit) : p(mit.p) {}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>MyIterator&amp; operator++() {++p;return *this;}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>MyIterator operator++(int) {MyIterator tmp(*this); operator++(); return tmp;}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bool operator==(const MyIterator&amp; rhs) {return p==rhs.p;}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>bool operator!=(const MyIterator&amp; rhs) {return p!=rhs.p;}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int&amp; operator*() {return *p;}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p>int main () {</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int numbers[]={10,20,30,40,50};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>MyIterator from(numbers);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>MyIterator until(numbers+5);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (MyIterator it=from; it!=until; it++)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; *it &lt;&lt; &apos; &apos;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return 0;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>back_insert_iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>front_insert_iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>insert_iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>istreambuf_iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>istream_iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>move_iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>ostreambuf_iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>ostream_iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reverse_iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
      <text:p>exercise</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>output sth to a string and display it. Use an iterator and use the string stream</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ostringstream s;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ostream_iterator&lt;char&gt; it(s);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>*it=&apos;e&apos;;//&quot;erererrere&quot;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>s&lt;&lt;&apos;f&apos;;//&quot;fifofof;&quot;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; s.str().c_str()&lt;&lt;endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
      <text:p>exercise</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro41">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>output an object of class A to a string and display it. Use an iterator and use the string stream</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>by providing ostream &amp; operator&lt;&lt;(ostream &amp; , A);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
      <text:p>exercise</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro41">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>output two instances of class A to a string seperated by some character (\n). reach the same effect as std::endl which is not acceptable in this case</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce107" office:value-type="string" calcext:value-type="string">
      <text:p>output iterator example</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p>All <text:a xlink:href="http://www.cplusplus.com/ForwardIterator" xlink:type="simple">forward</text:a>, <text:a xlink:href="http://www.cplusplus.com/BidirectionalIterator" xlink:type="simple">bidirectional</text:a> and <text:a xlink:href="http://www.cplusplus.com/RandomAccessIterator" xlink:type="simple">random-access</text:a> iterators that are not constant iterators are also valid output iterators.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>it automatically advances after assignment</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">ostream_iterator</text:span> can output to ostringstream, ofsteam and cout</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>this is the output of the code below. It writes to a file. To output to cout use ostream_iterator&lt;char&gt; out_it (std::cout);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>#</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>##</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="3"/>###</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>####</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>#####</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>######</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int n=6;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>ofstream fout(&quot;output.txt&quot;);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro36">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    std::ostream_iterator&lt;char&gt; out_it (fout); </text:p><text:p>  //ostringstream oss2(ios_base::out | ios_base::ate | ios_base::app|ios_base::binary) ;    std::ostream_iterator&lt;char&gt; out_it (oss2);</text:p><text:p>  //ostream_iterator&lt;char&gt; out_it (std::cout);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>for(int i=1; i&lt;n; ++i)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>//std::cout &lt;&lt; std::setw(n-i);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>for(int j=0; j&lt;n-i; ++j)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>*out_it = &apos; &apos;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>for(int j=0; j&lt;i; ++j)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>*out_it = &apos;#&apos;;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>*out_it = &apos;\n&apos;; <text:s/>// == fout&lt;&lt;endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>fout.close();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce108" office:value-type="string" calcext:value-type="string">
      <text:p>output to a file:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>ofstream fout(&quot;output.txt&quot;);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>auto it = copy(line.begin(), line.end(), std::ostream_iterator&lt;char&gt;(fout, &quot;,&quot; ));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>fout.close();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="7">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p>4.4.1 Iterator Adaptors</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p>Reverse Iterators</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p>Insert Iterators</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p>Raw Storage Iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p>no stream iterator ? like said in iterators/adaptors node</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce109"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce111" office:value-type="string" calcext:value-type="string">
      <text:p>insert iterators </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>insert iterators are implemented so that they call the collection&apos;s push_back, push_front or insert</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>All insert iterators are in the output iterator category. Thus, they provide only the ability to assign new values.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Name : Back inserter</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Class : back_insert_iterator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Called Function : push_back (value)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro38">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string"><text:p>Creation : template &lt;class Container&gt;  back_insert_iterator&lt;Container&gt; <text:span text:style-name="T16">back_inserter</text:span> (Container&amp; x);</text:p><text:p>Using the assignment operator on the returned iterator (either dereferenced or not), causes the container to expand by one element, which is initialized to the value assigned. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Name : Front inserter </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Class : front_insert_iterator </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Called Function : push_front (value) </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Creation : front_inserter (coll) </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Name : General inserter </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Class : insert_iterator </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Called Function : insert (pos, value) </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string">
      <text:p>Creation : inserter (coll, pos) </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112"/>
    </table:table-row>
    <table:table-row table:style-name="ro38">
     <table:table-cell/>
     <table:table-cell table:style-name="ce112" office:value-type="string" calcext:value-type="string"><text:p>1.0- </text:p><text:p>We can also insert using the random access iterator for a vector, but position pointed to by iterator is valid (size of vector is 7 and we&apos;re never going beyond that, otherwise use back_inserter)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int myints[]={10,20,30,40,50,60,70};</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::vector&lt;int&gt; myvector (7);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::copy ( myints, myints+7, myvector.begin() );</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
      <text:p>std::copy ( myints, myints+15, myvector.begin() ); //myvector.size() is still 7, but run-time problem at deletion.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p>1.1 - std::back_inserter</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce113" office:value-type="string" calcext:value-type="string">
      <text:p>std::vector&lt;An8PointKey&gt; vPointKeys;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce113" office:value-type="string" calcext:value-type="string">
      <text:p>std::copy(t.vPointKeys.begin(),t.vPointKeys.end(),vPointKeys.begin());</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p>la deuxième ligne produit un plantage. la cause serait que pas d&apos;espace alloué par vPointKeys .</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce114" office:value-type="string" calcext:value-type="string">
      <text:p>std::back_inserter was the solution :</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce113" office:value-type="string" calcext:value-type="string">
      <text:p>std::vector&lt;An8PointKey&gt; vPointKeys;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce113" office:value-type="string" calcext:value-type="string">
      <text:p>std::copy(t.vPointKeys.begin(),t.vPointKeys.end(),std::back_inserter(vPointKeys));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce113"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>auto it = back_inserter(vi);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it=1;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it=4;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it=7;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it=2;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>copy(begin(vi), end(vi), ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); <text:s/>//1,4,7,2</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce113"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p>1.2 - std::front_inserter</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>list&lt;int&gt; li;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>auto it = front_inserter(li);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it=1;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it=4;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it=7;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>it=2;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>copy(begin(li), end(li), ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); <text:s/>//2,7,4,1</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro37">
     <table:table-cell/>
     <table:table-cell table:style-name="ce110" office:value-type="string" calcext:value-type="string">
      <text:p>1.3 - std::inserter</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;iostream&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;set&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;list&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;algorithm&gt;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>#include &quot;print.hpp&quot;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>using namespace std;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>int main() </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>set&lt;int&gt; coll;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>//create insert iterator for coll</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>insert_iterator&lt;set&lt;int&gt; &gt; iter(coll,coll.begin());</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>//insert elements with the usual iterator interface</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>*iter = 1;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>iter++;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>*iter = 2;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>//inserter using inserter function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>inserter(coll,coll.end()) = 44;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inserter(coll,prev(coll.end())) = 43;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>//Coll = 1,2,43,44</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>//use inserter to insert all elements into a list</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>list&lt;int&gt; coll2;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>copy (coll.begin(), coll.end(), inserter(coll2,coll2.begin())); </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>//use inserter to reinsert all elements into the list before the second element</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>copy (coll.begin(), coll.end(), inserter(coll2,++coll2.begin())); </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="6">
     <table:table-cell/>
     <table:table-cell table:style-name="ce115"/>
    </table:table-row>
    <table:table-row table:style-name="ro39">
     <table:table-cell/>
     <table:table-cell table:style-name="ce116" office:value-type="string" calcext:value-type="string">
      <text:p>Reverse Iterators</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce117" office:value-type="string" calcext:value-type="string">
      <text:p>constructors</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>reverse_iterator();</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>explicit reverse_iterator (iterator_type it);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro41">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>template &lt;class Iter&gt;</text:p><text:p>  reverse_iterator (const reverse_iterator&lt;Iter&gt;&amp; rev_it);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce117" office:value-type="string" calcext:value-type="string">
      <text:p>example of use</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reverse_iterator&lt;vector&lt;int&gt;::iterator&gt; begin_r(vi.end());</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>reverse_iterator&lt;vector&lt;int&gt;::iterator&gt; end_r(begin(vi));</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>copy(begin_r, end_r, ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); <text:s text:c="21"/>//5,4,3,2,1</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string"><text:p>    copy(end_r.<text:span text:style-name="T16">base</text:span>(), begin_r.<text:span text:style-name="T16">base</text:span>(), ostream_iterator&lt;int&gt;(cout,&quot;,&quot;)); //1,2,3,4,5</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="5">
     <table:table-cell/>
     <table:table-cell table:style-name="ce118"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce119"/>
    </table:table-row>
   </table:table>
   <table:table table:name="c++ ref update" table:style-name="ta1">
    <table:table-column table:style-name="co14" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co15" table:default-cell-style-name="ce143"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="7" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce178" office:value-type="string" calcext:value-type="string">
      <text:p>13.29 inheritance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce179"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce180"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce181" office:value-type="string" calcext:value-type="string">
      <text:p>If the destructor isn&apos;t virtual, chances are it&apos;s not a base class.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce182" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T70">elements for inherentance</text:span>:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce180" office:value-type="string" calcext:value-type="string">
      <text:p>abstract function;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce180" office:value-type="string" calcext:value-type="string">
      <text:p>virtual destructor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce180"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce183" office:value-type="string" calcext:value-type="string"><text:p>base class : protected destructor OR pure virtual function (see inheritance/virtual destructor) </text:p><text:p>And what about <text:span text:style-name="T71">virtual destructor.</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce184" office:value-type="string" calcext:value-type="string">
      <text:p>Hiding</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string"><text:p>for hiding not to happen, the signatures of the functions and the number of the functions should be maintained</text:p><text:p>Inline, const are part of the signature</text:p><text:p/>
     </table:table-cell>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T72">in visual 2010implemetation was :</text:span><text:span text:style-name="T73">inline</text:span><text:span text:style-name="T74"> </text:span><text:span text:style-name="T73">void</text:span><text:span text:style-name="T74"> * </text:span><text:span text:style-name="T73">operator</text:span><text:span text:style-name="T74"> </text:span><text:span text:style-name="T73">new</text:span><text:span text:style-name="T74">[](size_t size, </text:span><text:span text:style-name="T73">char</text:span><text:span text:style-name="T74"> </text:span><text:span text:style-name="T73">const</text:span><text:span text:style-name="T74"> * filename, </text:span><text:span text:style-name="T73">int</text:span><text:span text:style-name="T74"> line) { ...declaration was:</text:span><text:span text:style-name="T73">void</text:span><text:span text:style-name="T74"> * </text:span><text:span text:style-name="T73">operator</text:span><text:span text:style-name="T74"> </text:span><text:span text:style-name="T73">new</text:span><text:span text:style-name="T74">[](size_t size, </text:span><text:span text:style-name="T73">char</text:span><text:span text:style-name="T74"> </text:span><text:span text:style-name="T73">const</text:span><text:span text:style-name="T74"> * filename, </text:span><text:span text:style-name="T73">int</text:span><text:span text:style-name="T74"> line);linker could not find the function.</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro31" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce187" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T75">class</text:span><text:span text:style-name="T76"> Object{</text:span><text:span text:style-name="T77">public</text:span><text:span text:style-name="T76">:</text:span><text:span text:style-name="T77">virtual</text:span><text:span text:style-name="T76"> </text:span><text:span text:style-name="T77">void</text:span><text:span text:style-name="T76"> print() </text:span><text:span text:style-name="T77">const</text:span><text:span text:style-name="T76"> {cout &lt;&lt;</text:span><text:span text:style-name="T78">&quot;this is Object\n&quot;</text:span><text:span text:style-name="T76">;}};</text:span><text:span text:style-name="T77">class</text:span><text:span text:style-name="T76"> Point: </text:span><text:span text:style-name="T77">public</text:span><text:span text:style-name="T76"> Object{</text:span><text:span text:style-name="T77">public</text:span><text:span text:style-name="T76">:</text:span><text:span text:style-name="T77">void</text:span><text:span text:style-name="T76"> print() {cout &lt;&lt;</text:span><text:span text:style-name="T78">&quot;this is Point\n&quot;</text:span><text:span text:style-name="T76">;}};Point::print is hidden because of absence of const</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce185"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce188" office:value-type="string" calcext:value-type="string">
      <text:p>Constructor</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
       <text:p>copy constructor</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
        <text:p>copy constructor from ref of a base class only</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce185"/>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro31" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce186" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T75">class</text:span><text:span text:style-name="T76"> Point: </text:span><text:span text:style-name="T77">public</text:span><text:span text:style-name="T76"> Object{};</text:span><text:span text:style-name="T77">class</text:span><text:span text:style-name="T76"> Shape: </text:span><text:span text:style-name="T77">public</text:span><text:span text:style-name="T76"> Object{};</text:span><text:span text:style-name="T77">void</text:span><text:span text:style-name="T76"> cc(</text:span><text:span text:style-name="T77">const</text:span><text:span text:style-name="T76"> Object &amp; o){Point o1=o; o1.print();}</text:span></text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
        <text:p>copy_constructor.cpp:57:11: error: conversion from ‘const Object’ to non-scalar type ‘Point’ requested</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="2"/>Point o1=o; <text:s/></text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
      </table:table-row>
      <table:table-row table:style-name="ro19" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce185" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="11"/>^</text:p>
       </table:table-cell>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="3"/>
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce43" table:number-columns-repeated="2"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="9"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce178" office:value-type="string" calcext:value-type="string">
      <text:p>13.12 exceptions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce179"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell/>
     <table:table-cell table:style-name="ce189" office:value-type="string" calcext:value-type="string">
      <text:p>When should a function throw an exception?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.careerride.com/C++-Interview-questions-Answer.aspx</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>- A function should throw an exception when it is not able to fulfil its promise. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>- As soon as the function detects a problem that prevents it from fulfilling its promise, it should throw an exception. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>- If the function is able to handle the problem, recover itself and deliver the promise, then the exception should not be thrown. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce190" office:value-type="string" calcext:value-type="string">
      <text:p>- If an event happens very frequently then exception handling is not the best way to deal with it. It requires proper fixation.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce179"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce191" office:value-type="string" calcext:value-type="string"><text:p>-exception raised in the middle of a bloc, <text:span text:style-name="T79">local objects are destructed</text:span>, the remaining code is not run in the rasing function, including any memory deletion instruction (memory leak)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce191" office:value-type="string" calcext:value-type="string">
      <text:p>control is passed to the catching bloc and execution continues after it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce192" office:value-type="string" calcext:value-type="string"><text:p>This process continues until, at some level, a handler matches the exception. At that point, the exception is considered &quot;caught&quot;, </text:p><text:p>And no further searching occurs. </text:p><text:p><text:span text:style-name="T79">And the execution continues after all catch blocs ?</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
      <text:p>throw;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce193" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>en bas on a dit que throw c&apos;est pour rethrow <text:s/>the last exception object. what happens in case no exceptions has been thrown, but we encounter throw ? it that correct code after all ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce194" office:value-type="string" calcext:value-type="string">
      <text:p>in a catch bloc it will rethrow the same exception object to the upper level. Hb:we can have modified it before rethrowing it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inside try or in the code it calls terminate() function, which calls the default termination handler or the one set by set_terminate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
      <text:p>throw obj;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in a catch bloc it will create a new object and throw it to the upper level</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>try </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>try </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>MyErrDerived e;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>throw e; <text:s/>←-- <text:s/>throw MyErrDerived. ok</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>catch (MyErr&amp; err) </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>printf(&quot;B Inner catch, &amp;err=%p\n&quot;, &amp;err);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>err.m_x=5;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>    throw err; ←-- <text:span text:style-name="T37">throws an MyErr object !!! because the base class ref doens carry info on the underlying object and there could/will be MyErrDerived1, MyErrDerived2, …     </text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce195" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="25"/>It is better to just call throw; see exceptions/throw01.cpp</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>} </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>catch (MyErrDerived&amp; err)  &lt; - - - - - -  <text:span text:style-name="T37">will not be used, because a ref to MyErr was thrown </text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>Printf(&quot;B Outer catch 33, &amp;err=%p\n&quot;, &amp;err);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>catch (MyErr&amp; err) </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>Printf(&quot;B Outer catch 44, &amp;err=%p\n&quot;, &amp;err);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>QUIZ</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro58">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1-what does throw. Does in code, try and catch bloc ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro59">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>2-try </text:p><text:p>{</text:p><text:p>try </text:p><text:p>{</text:p><text:p>MyErrDerived e;</text:p><text:p>     throw e;  ←-- safe/correct ?</text:p><text:p>    } </text:p><text:p>    catch (MyErr&amp; err) </text:p><text:p>    {</text:p><text:p>printf(&quot;B Inner catch, &amp;err=%p\n&quot;, &amp;err);</text:p><text:p>throw err; ←-- safe/correct ?  </text:p><text:p>    }</text:p><text:p>} </text:p><text:p>catch (MyErr&amp; err) </text:p><text:p>{</text:p><text:p>printf(&quot;B Outer catch, &amp;err=%p\n&quot;, &amp;err);</text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is the output of the following code:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>#include &lt;iostream&gt;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>class A {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>A() {}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>~A() {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>throw 42;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>int main(int argc, const char * argv[]) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>try {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>A a;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>throw 32;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>} catch(int a) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>std::cout &lt;&lt; a;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>This program will terminate abnormally. throw 32 will start unwinding the stack and destroy class A. The class A destructor will throw another exception during the exception handling, which will cause program to crash. This question is testing if developer has experience working with exceptions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce142" office:value-type="string" calcext:value-type="string">
      <text:p>overloading function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>is it legal to overload a function by changing just its return value ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="9"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>No. remove the const from the second overload, and the compiler will complain</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>void print()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>cout &lt;&lt;&quot;(&quot;&lt;&lt;x&lt;&lt;&quot;,&quot;&lt;&lt;y&lt;&lt;&quot;)&quot;&lt;&lt;endl;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="9"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>int print() const</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>cout &lt;&lt;&quot;(&quot;&lt;&lt;x&lt;&lt;&quot;,&quot;&lt;&lt;y&lt;&lt;&quot;)&quot;&lt;&lt;endl;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return 3;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>error: ‘int Point::print()’ cannot be overloaded</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="9"/>int print()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="13"/>^</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>error: with ‘void Point::print()’</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="9"/>void print()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="7"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="9"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="22">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce178" office:value-type="string" calcext:value-type="string">
      <text:p>18.1 lambda</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce196" office:value-type="string" calcext:value-type="string">
      <text:p>int multi=2;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce196" office:value-type="string" calcext:value-type="string">
      <text:p>c=count_if(col.begin(),col.end(),[multi /*to capture the local variable multi*/](int x){return !(x%multi)});</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce197" office:value-type="string" calcext:value-type="string"><text:p>multi is read only. Its modification throws compiling error </text:p><text:p>If it needs to be modified, use [&amp;multi]</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce198" office:value-type="string" calcext:value-type="string">
      <text:p>21.2 iterators</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro60">
     <table:table-cell/>
     <table:table-cell table:style-name="ce199" office:value-type="string" calcext:value-type="string"><text:p>back inserter() causes the container’s push back() operator to be invoked in place of the assignment operator. </text:p><text:p>Hbf:so &apos;i&apos; in the previous code called the assignement operator ? isn&apos;t it correcte provided it incremented ?</text:p><text:p><text:span text:style-name="T37">←No. the assignment operator needs a container to assign it to the this container. back_inserter calling the push_back function is to add a new element to the container</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce200" office:value-type="string" calcext:value-type="string">
      <text:p>void std::queue::_Assign_rv(_Myt&amp;&amp; _Right)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce201" office:value-type="string" calcext:value-type="string">
      <text:p>{ // assign by moving _Right</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce200" office:value-type="string" calcext:value-type="string">
      <text:p>if (this == &amp;_Right)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce201" office:value-type="string" calcext:value-type="string">
      <text:p>;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce200" office:value-type="string" calcext:value-type="string">
      <text:p>else if (get_allocator() != _Right.get_allocator())</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce201" office:value-type="string" calcext:value-type="string">
      <text:p>{ // move construct a copy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce201" office:value-type="string" calcext:value-type="string">
      <text:p>clear();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce200" office:value-type="string" calcext:value-type="string">
      <text:p>for (iterator _Next = _Right.begin(); _Next != _Right.end(); &lt;-----------------</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce201" office:value-type="string" calcext:value-type="string">
      <text:p>++_Next)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro31">
     <table:table-cell/>
     <table:table-cell table:style-name="ce201" office:value-type="string" calcext:value-type="string"><text:p>push_back(<text:span text:style-name="T37">_STD forward</text:span>&lt;_Ty&gt;(*_Next));  <text:span text:style-name="T37">//What is this</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce201" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce185"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce202" office:value-type="string" calcext:value-type="string">
      <text:p>13.6.1 explicit</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce203" office:value-type="string" calcext:value-type="string">
      <text:p>1- Hb: it is always used for constructor with one argument. Because this constructor is going be called on assignments, which naturally only accept one right operand.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce203" office:value-type="string" calcext:value-type="string">
      <text:p>2- use</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class RKString</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>explicit RKString(const char* a_cData)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>cout&lt;&lt;&quot;RKString::RKString&quot;&lt;&lt;endl;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>char getString() const{return &apos;a&apos;;}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void DoA(const RKString&amp; a_str)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>cout&lt;&lt;a_str.getString()&lt;&lt;endl;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int main()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>const char* cStr = &quot;Long string&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>DoA(cStr); //error <text:s/>because of explicit constructor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>/home/hassan4/data3/git/c/algo/bt_main.cpp:45: error: invalid initialization of reference of type &apos;const RKString&amp;&apos; from expression of type &apos;const char*&apos;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>DoA(cStr);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="13"/>^</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="7"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048374">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="9"/>
    </table:table-row>
   </table:table>
   <table:table table:name="interview_tests" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co16" table:default-cell-style-name="ce95"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="6" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>hamilton jet</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
       <text:p>optimization</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p>cache friendly code</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p>LHS</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
        <text:p>bitwise operations</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce206" office:value-type="string" calcext:value-type="string">
        <text:p>loop unrolling</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p>prefetching</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p>CPU</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p>frame</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p>sp,bp</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce207" office:value-type="string" calcext:value-type="string">
        <text:p>assembly</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204"/>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>c++ faq</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>mem management: overloading of new for a class and globally. Placement new </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>pointer functin on memebers</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>cast</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>const, ref members and copy constructor, assignment. How to write assignement for ref and/or const containing class</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>OOP + OOD + GRASP</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
       <text:p>design/design patterns</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro1">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p>visitor</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
        <text:p>adaptor</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro19">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="3"/>STL</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
       <text:p>STL, boost, meta programming</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
       <text:p>multi-threading, inter process communication, pipes, </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
       <text:p>syntaxe, template</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
       <text:p>data types</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce206" office:value-type="string" calcext:value-type="string">
        <text:p>how to express an decimal number into hex ?</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce206" office:value-type="string" calcext:value-type="string">
        <text:p>how to express fixed point float ?</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p>narrow conversion</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204"/>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
       <text:p>cross-platform programming</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
       <text:p>algorithms</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p>data structures</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>AVL. auto-balancing</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>heap</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
        <text:p>calculating complexity of algorithms</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
      <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="ce204"/>
       <table:table-cell table:number-columns-repeated="6"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce207" office:value-type="string" calcext:value-type="string">
       <text:p>testing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce207" office:value-type="string" calcext:value-type="string">
       <text:p>how to test a complex system</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce207" office:value-type="string" calcext:value-type="string">
       <text:p>how to test quickly </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce207" office:value-type="string" calcext:value-type="string">
       <text:p>Testing interview questions</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce207"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce207" office:value-type="string" calcext:value-type="string">
      <text:p>testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>what is usability testing?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce209" office:value-type="string" calcext:value-type="string">
       <text:p>used to make sure we don&apos;t miss anything from the user point perspective</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce209" office:value-type="string" calcext:value-type="string">
       <text:p>the user is given a mock-up or prototype of the final app.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce209" office:value-type="string" calcext:value-type="string">
       <text:p>what is a mock-up/prototype ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>What are the categories of defects?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
       <text:p>Wrong: The requirements have been implemented incorrectly. This defect is a variance from the given specification. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
       <text:p>Missing: There was a requirement given by the customer and it was not done. This is a variance from the specifications, an indication that a specification was not implemented, or a requirement of the customer was not noted properly. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
       <text:p>Extra: A requirement incorporated into the product that was not given by the end customer. This is always a variance from the specification, but may be an attribute desired by the user of the product. However, it is considered a defect because it&apos;s a variance from the existing requirements. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce210"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>defect vs failure ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>When detected internally, it is a defect, if it reaches the end customer it is called a failure</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>What is the difference between latent and masked defects?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
       <text:p>A latent defect is an existing defect that has not yet caused a failure because the sets of conditions were never met.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
       <text:p>A masked defect is an existing defect that hasn&apos;t yet caused a failure just because another defect has prevented that part of the code from being executed.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>On what basis is the acceptance plan prepared?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
      <text:p>Testing should occur in conjunction with each phase of the software development.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce1" office:value-type="string" calcext:value-type="string"><text:p>In the <text:span text:style-name="T44">requirement phase</text:span> we can verify if the requirements are met according to the customer needs.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro11" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce211" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T44">During design</text:span> we can check whether the design document covers all the requirements. </text:p><text:p>In this stage we can also generate rough functional data. </text:p><text:p>We can also review the design document from the architecture and the correctness perspectives.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string"><text:p>In the <text:span text:style-name="T44">build and execution phase</text:span> we can execute unit test cases and generate structural and functional data. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
       <text:p>And finally comes the testing phase done in the traditional way. i.e., run the system test cases and see if the system works according to the requirements. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
       <text:p>During installation we need to see if the system is compatible with the software. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce208" office:value-type="string" calcext:value-type="string">
       <text:p>Finally, during the maintenance phase when any fixes are made we can retest the fixes and follow the regression testing.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Are there more defects in the design phase or in the coding phase?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>A defect in The design phase is more costy than in the execution phase.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Does an increase in testing always improve the project?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro14">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string"><text:p>No an increase in testing does not always mean improvement of the product, company, or project. </text:p><text:p>In real test scenarios only 20% of test plans are critical from a business angle. </text:p><text:p>Running those critical test plans will assure that the testing is properly done. </text:p><text:p>No under testing so defects do not go up.</text:p><text:p>No over testing so cost do not go up</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Explain Unit Testing, Integration Tests, System Testing and Acceptance Testing?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>Unit testing - Testing performed on a single, stand-alone module or unit of code.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>Integration Tests - Testing performed on groups of modules to ensure that data and control are passed properly between modules.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>System testing - Testing a predetermined combination of tests that, when executed successfully meets requirements.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>Acceptance testing - Testing to ensure that the system meets the needs of the organization and the end user or customer (i.e., validates that the right system was built).</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>black box testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string"><text:p>In order to write black box test cases we need the requirement document and, design or project plan.</text:p><text:p><text:span text:style-name="T44">Why is the design or project plan needed ?</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Les tests de vérification du logiciel sont des tests systèmes et unitaires exécutés avec l&apos;outil RTRT (Rational Test Real Time) sur SUN et PC-Lynx</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>embedded avionics systems (requires registration)</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>name the test</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>test on which is depends. They are run one after the other as set in a script</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>list all objectives of the test</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>each objective shows the requirement it is <text:span text:style-name="T80">Traceable to In </text:span>the SLS. le texte de l&apos;objectif fait la qualité du test.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Exigences couvertes</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Environnement du test</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- les zones de RAM utilisées par ARF_MGR,</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- les canaux de communication : pipes et files de messages,</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>pipes needed. Printer pipe, pipe mcdu, …</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- les databases,</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>- les interfaces simulées avec les autres sous-ensemble de l’ATSU.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Passage du test et résultats attendus</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>In DO-178B, testing emphasises requirements coverage. Each requirement has one or more tests to prove that it has been implemented correctly.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-code coverage</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Benefit : Code coverage analysis Avoids delivering code that is executed for the first time by the user or the target system running the Application. (RTRT spec)</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how is the code/structural coverage is done ? What tool is involved ? RTRT, does memory, performance profiling, … and code coverage analysis</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>If you don’t get 100% structural coverage, it means one of four things and each requires action on your part:</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There’s a requirement missing. The code that hasn’t been covered is performing an essential activity, but no requirement indicates that this should be done.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Action: need to add a new requirement (and associated tests).</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>There’s a test missing. The code that hasn’t been covered relates to an existing requirement, but no test was implemented for it.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Action: add a new test.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Extraneous/dead code. The code that hasn’t been covered is not traceable to any requirement and isn’t needed by the application.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Action: remove the code.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>Deactivated code. The code that hasn’t been covered isn’t traceable to any requirements for the current system, but is intended to be executed in certain configurations.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Action: show that a configuration exists in which the code will execute.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>-unit tests</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>pour vérifier des exigences de bas niveau (les fonctions)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>pour compléter la couverture structurelle des instructions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>O1 : Dans le cas où la database WorldMap est invalide, ARF_MGR doit envoyer un LightOn afin d’afficher un &lt;REQ&gt;.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>severity, priority</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>severity is the degree of impact of a bug on the application. Crash, hang, …</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>priority is how soon whould the bug be fixed. This is set by the manager who bases it on user&apos;s perspective. Making customer needs the primary focus</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce212" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="6" table:number-rows-spanned="1">
      <text:p>severity</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce212" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="1">
      <text:p>critical</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce212" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="2">
      <text:p>urgent</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce212" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="2"><text:p>fey feature does not work</text:p><text:p>Frequent bug (even minor)</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell/>
     <table:covered-table-cell table:style-name="ce95"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce212" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="2">
      <text:p>low</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce212" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="2">
      <text:p>feature does not work but rarely used</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:covered-table-cell/>
     <table:covered-table-cell table:style-name="ce95"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tests stem from requirements</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>test cases problem</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>Talk about and think of requirements. From requirements → test cases</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>isolating defect</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>find data the produce the bug</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unit tests</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>pour vérifier des exigences de bas niveau ou</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>pour compléter la couverture structurelle des instructions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Retesting Vs Regression Testing</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>Retesting is done only for failed test cases</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>Re-testing is carried out to confirm the test cases that failed in the final execution are passing after the defects are fixed</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>Regression testing is carried out to confirm whether a recent program or code change has not adversely affected existing features</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>Defect verification is the part of re-testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Cannot Reproduce avoidance</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>note down each step and the environment information. Tester verifies the validity of details</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>verification VS validation</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce213" office:value-type="string" calcext:value-type="string">
       <text:p>Criteria</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce213" office:value-type="string" calcext:value-type="string">
       <text:p>Verification</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce214" office:value-type="string" calcext:value-type="string">
       <text:p>Definition</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce218" office:value-type="string" calcext:value-type="string">
       <text:p>The process of evaluating work-products (not the actual final product) of a development phase to determine whether they meet the specified requirements for that phase.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce214" office:value-type="string" calcext:value-type="string">
       <text:p>Objective</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce218" office:value-type="string" calcext:value-type="string">
       <text:p>To ensure that the product is being built according to the requirements and design specifications. In other words, to ensure that work products meet their specified requirements.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce214" office:value-type="string" calcext:value-type="string">
       <text:p>Question</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce218" office:value-type="string" calcext:value-type="string">
       <text:p>Are we building the product right?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce214" office:value-type="string" calcext:value-type="string">
       <text:p>Evaluation Items</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce218" office:value-type="string" calcext:value-type="string">
       <text:p>Plans, Requirement Specs, Design Specs, Code, Test Cases</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro61">
      <table:table-cell/>
      <table:table-cell table:style-name="ce214" office:value-type="string" calcext:value-type="string">
       <text:p>Activities</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce218" office:value-type="string" calcext:value-type="string"><text:p>Reviews</text:p><text:p>Walkthroughs</text:p><text:p>Inspections</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce214" office:value-type="string" calcext:value-type="string">
       <text:p>code review and syntax check is verification while actually running the product and checking the results is validation.</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce218"/>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce214"/>
      <table:table-cell table:style-name="ce218"/>
      <table:table-cell table:number-columns-repeated="5"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce215" office:value-type="string" calcext:value-type="string">
      <text:p>If it&apos;s a pure testing project, then the V model is the best.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce208"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce216"/>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce95"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>opengl concepts</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>graphics concepts</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>dithering</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>frustrum culling</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>3d concepts</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>math</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>-matrix, vector, quaternion, interpolation of points/vector/quaternion,trigonometry, arc distance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>-homogenous coordinates vs normal coordinates. especially, RHW c&apos;est quoi ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>intersections</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>plane, line, sphere, triangle </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>engine concepts, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>fill rate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>frame rate, dropping of a frame</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>optimization</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>cache friendly code</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>LHS</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>bitwise operations</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce206" office:value-type="string" calcext:value-type="string">
      <text:p>loop unrolling</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>multi-threading, inter process communication, pipes, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>c++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>syntaxe, template</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>OOP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce206" office:value-type="string" calcext:value-type="string">
      <text:p>how to express an decimal number into hex ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce206" office:value-type="string" calcext:value-type="string">
      <text:p>how to express fixed point float ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>CPU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>frame</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>sp,bp</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce205" office:value-type="string" calcext:value-type="string">
      <text:p>cross-platform programming</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>STL, boost</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>design/design patterns</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>visitor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>know</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>assembly</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="5">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce217" office:value-type="string" calcext:value-type="string">
      <text:p>amazon</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>data structures</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>AVL. auto-balancing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>heap</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>calculating complexity of algorithms</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce217" office:value-type="string" calcext:value-type="string">
      <text:p>QA consultants</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>OOP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>Code example</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>algorithms</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>STL</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>how would you overload new ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>DB</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204"/>
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
   </table:table>
   <table:table table:name="c++ idioms" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Virtual Friend Function</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class Base {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>friend std::ostream&amp; operator&lt;&lt; (std::ostream&amp; o, const Base&amp; b);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>protected:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>virtual void printOn(std::ostream&amp; o) const = 0; <text:s/>// Or plain virtual; see below</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>inline std::ostream&amp; operator&lt;&lt; (std::ostream&amp; o, const Base&amp; b)</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>b.printOn(o);</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>return o;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>class Derived : public Base {</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>protected:</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>virtual void printOn(std::ostream&amp; o) const;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>};</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>void Derived::printOn(std::ostream&amp; o) const</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="6"/>// ...</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="Feuille14" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>void f(double x)</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Base::f(double x)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>virtual ~Base(){}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Derived : public Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>void f(char c)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Derived::f(char c)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int main()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Derived* d = new Derived();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Base* b = d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>b-&gt;f(65.3); <text:s/>f defined in B&apos;s interface. And not virtual. So static binding</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>d-&gt;f(65.3); <text:s/>f defined in D&apos;s interface with a cast to char. And not virtual. So static binding</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>delete d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Virtual void f(double x)</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Base::f(double x)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>virtual ~Base(){}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>class Derived : public Base {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>void f(char c)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; &quot;Derived::f(char c)&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int main()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Derived* d = new Derived();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>Base* b = d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>b-&gt;f(65.3); <text:s/>f defined in B&apos;s interface. And hidden virtual. So no access to the drived because different. So dynamic binding but Derived does not define it. So B&apos;s version is used</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>d-&gt;f(65.3); <text:s/>// error; can&apos;t convert float to Point and It can&apos;t see B&apos;s interface. i thought both version will be accessible. with Point one staticly. double one through the vtabe; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>delete d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="6"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
   </table:table>
   <table:table table:name="oodesign" table:style-name="ta1">
    <table:shapes>
     <draw:frame draw:z-index="0" draw:name="Image 1" draw:style-name="gr1" draw:text-style-name="P1" svg:width="120.05mm" svg:height="63.45mm" svg:x="22.57mm" svg:y="631.71mm">
      <draw:image xlink:href="">
       <office:binary-data>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
        0pZ8zorqwlEQAgA7
       </office:binary-data>
       <text:p/>
      </draw:image>
     </draw:frame>
     <draw:g draw:z-index="1">
      <draw:frame draw:name="Image 5" draw:style-name="gr1" draw:text-style-name="P1" svg:width="168.72mm" svg:height="85.33mm" svg:x="8.39mm" svg:y="403.1mm">
       <draw:image xlink:href="">
        <office:binary-data>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
         B23lWPYWkppYAAAAAElFTkSuQmCC
        </office:binary-data>
        <text:p/>
       </draw:image>
      </draw:frame>
     </draw:g></table:shapes>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce95"/>
    <table:table-column table:style-name="co17" table:default-cell-style-name="ce95"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1022" table:default-cell-style-name="ce95"/>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.tutorialspoint.com/software_architecture_design/key_principles.htm</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>Architecture design : https://msdn.microsoft.com/en-us/library/ee658117.aspx</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://blog.codinghorror.com/the-ferengi-programmer/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://programmers.stackexchange.com/questions/153410/what-are-the-design-principles-that-promote-testable-code-designing-testable-c</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce220" office:value-type="string" calcext:value-type="string">
      <text:p>Liskov&apos;s Substitution Principle(LSP) violated</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>This principle is just an extension of the Open Close Principle and it means that we must make sure that new derived classes are extending the base classes without changing their behavior.</text:p><text:p>In the example below Square has changed the meaning of SetWidth and SetHeight</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro62" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Let&apos;s assume that the Rectangle object is used somewhere in the application. We extend the application and add the Square class. </text:p><text:p>The square class is returned by a factory pattern, based on some conditions and we don&apos;t know the exact what type of object will be returned. </text:p><text:p>But we know it&apos;s a Rectangle. We get the rectangle object, set the width to 5 and height to 10 and get the area. </text:p><text:p>For a rectangle with width 5 and height 10 the area should be 50. Instead the result will be 100</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro61" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Hb:we are creating a square which is based on rectangle class.</text:p><text:p><text:span text:style-name="T14">rectangle class has setWidth and setHeight functions.</text:span></text:p><text:p><text:span text:style-name="T14">But for square, these don&apos;t mean the same for its base class. VIOLATION</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>// Violation of Likov&apos;s Substitution Principle</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>class Rectangle</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>protected int m_width;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>protected int m_height;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public void setWidth(int width){</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:style-name="Default"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_width = width;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public void setHeight(int height){</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_height = height;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public int getWidth(){</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>return m_width;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public int getHeight(){</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>return m_height;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public int getArea(){</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>return m_width * m_height;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>class Square extends Rectangle </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public void setWidth(int width){</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_width = width;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_height = width;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public void setHeight(int height){</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_width = height;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>m_height = height;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>class LspTest</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>private static Rectangle getNewRectangle()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>// it can be an object returned by some factory ... </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>return new Square();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>public static void main (String args[])</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Rectangle r = LspTest.getNewRectangle();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>r.setWidth(5);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>r.setHeight(10);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>// user knows that r it&apos;s a rectangle. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>// It assumes that he&apos;s able to set the width and height as for the base class</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>System.out.println(r.getArea());</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>// now he&apos;s surprised to see that the area is 100 instead of 50.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="4">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>Open Closed principle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro63" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>“extending the AreaCalculator class to also calculate the area of triangles isn’t very hard, is it?”.</text:p><text:p>Of course in this very basic scenario it isn’t </text:p><text:p>but it does require us to modify the code. That is, AreaCalculator isn’t closed for modification as we need to change it in order to extend it. </text:p><text:p>Or in other words: it isn’t open for extension. </text:p><text:p/><text:p>In a real world scenario where the code base is ten, a hundred or a thousand times larger and modifying the class means redeploying it’s assembly/package to five different servers that can be a pretty big problem. Oh, and in the real world Aldford would have changed the requirements five more times since you read the last sentence :-)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
       <text:p>When to apply the O/C principle</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>when we have the feeling that the customer might want to extend the design to calculate areas for other shapes</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>However, often it’s not a good idea to try to anticipate changes in requirements ahead of time, this can easily lead to overly complex designs. <text:s/>Instead, I would suggest that we focus on writing code that is well written enough so that it’s easy to change if the requirements change.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Once the requirements do change though it’s quite likely that they will change in a similar way again later on. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>The core of what the class does is persisting comments. modify a behavior that isn&apos;t persisting comments, requires the actual class to be changed, so the class <text:s/>isn&apos;t closed for modification.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>it&apos;s not possible to extend the class, that is it isn&apos;t open for extension</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro61" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>the example used by joelabrahamsson.com is similar to FizzBuzz class seperating from the out putting functionality. </text:p><text:p>But I claimed this abiding by the single responsibility principle. True.</text:p><text:p>And it is also abiding to the O/C principle</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>open to extension : EntryController can use other types of IcommentValidators. IcommentValidators can represent other types of validator by deriving from it</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
       <text:p>closed for modification: no need to modify EntryController to use other kind of IcommentValidators</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>open to extension : FizzBuzz class can use other types of output classes. output can represent other types of outputs (to network, memeory, …) by deriving from it</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
       <text:p>closed for modification: no need to modify FizzBuzz class to use other kinds of outputs</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>Version 111111111111111111111111111111111111</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>public class EntryController</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public void AddComment()</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>if(ValidateNotSpam())</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="13"/>//Save the comment to the database</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>private bool ValidateNotSpam(string comment)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>//Check if the IP-address that made the request</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>//is known as a spammer by Project Honey Pot</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>Version 22222222222222222222222222222</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>public interface ICommentValidator</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>bool Validate(string authorIP, string content);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>public class ProjectHoneyPotCommentValidator : ICommentValidator</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>public bool Validate(string authorIP, string content)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>//Check if authorIP is blacklisted with </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>//Project Honey Pot</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>public class EntryController : Controller </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>private ICommentValidator[] _commentValidators;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>    public EntryController(<text:span text:style-name="T44">ICommentValidator[] commentValidators</text:span>)//the class will use the services of a zero or more validators</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>_commentValidators = commentValidators;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>private bool ValidateNotSpam(string comment)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>foreach (ICommentValidator validator in _commentValidators)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="12"/>if (!validator.Validate(Request.ServerVariables[&quot;REMOTE_ADDR&quot;], comment))</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="16"/>return false;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>return true;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro64">
     <table:table-cell/>
     <table:table-cell table:style-name="ce222" office:value-type="string" calcext:value-type="string">
      <text:p>Dependency Inversion Principle</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce223" office:value-type="string" calcext:value-type="string">
      <text:p>FizzBuzz uses OutPutStream.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce223" office:value-type="string" calcext:value-type="string">
      <text:p>OutPutStream contains the code for console outputting and file outputting </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce223" office:value-type="string" calcext:value-type="string">
      <text:p>we need to modify it to add Network outputting</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce223" office:value-type="string" calcext:value-type="string">
      <text:p>A design abiding by the DI principle is to make OutPutStream abstract.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce223" office:value-type="string" calcext:value-type="string">
      <text:p>And Each representation (Console, file) is a class of its own deriving from OutPutStream</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>We can add another representation for Network, and it means we only add a new class derived from OutPutStream, and pass it to the constructor of FizzBuzz, for the latter to use it.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro64">
     <table:table-cell/>
     <table:table-cell table:style-name="ce222" office:value-type="string" calcext:value-type="string">
      <text:p>Interface Segregation Principle (ISP</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>The Interface Segregation Principle states that clients/new derived classes should not be forced to implement interfaces they don&apos;t use. </text:p><text:p>Instead of one fat interface many small interfaces are preferred based on groups of methods, each one serving one submodule.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>SOLID in a nutshel</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>the image above shows that:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>3-Single Responsibility is clearly needed</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>the test on the kind of shape to decide which draw function to call means simply that the class containing this code is doing more than its core functionality.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Because deciding which draw function to call can not be part of the core functionality of a class. That&apos;s the duty of polymorphism</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>And so the class should get rid of this function, by just calling Draw of the object at hand</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>1-Open Closed principle can be used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>The call to drawRectangle, drawCircle means there is need for Rectangle, Circle classes</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Shape is then open for extension ← needing a new shape does not require modification of the Shape or GraphicEditor class. </text:p><text:p>A new shape means a new class used by/added to the GtaphicEditor</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>2-Dependency inversion principle can be used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>instead of GraphiEditor directly using Circle and Rectangle classes. It should rather use an abstract class Shape</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Having an abstract Shape class abides by the Dependency inversion principle. Because GraphicEditor depends no more </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>On rectangle, Circle, … But on one class Shape, only</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>4-Liskov substitution principle can be used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>through the derived classes not changing the meaning of Draw other function. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Changing the meaning of sth would be a catastrophy for GraphicEditor using Shape and accessing shapes as Shape</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>5- Interface Segregation Principle. Don&apos;t see how to use this</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>This is already done since Shape, for instance, is not overloaded with methods that are not nedded for shapes. It only has one method.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="16">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Design pattern</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>Adapter</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Below, a legacy Rectangle component&apos;s display() method expects to receive &quot;x, y, w, h&quot; parameters. But the client wants to pass &quot;upper left x and y&quot; and &quot;lower right x and y&quot;. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>This incongruity can be reconciled by adding an additional level of indirection – i.e. an Adapter object.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="6">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="104">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:style-name="ce59" office:value-type="string" calcext:value-type="string">
      <text:p>Dependency Injection</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:style-name="ce59"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Asking for your dependencies instead of constructing them withing the application logic is called &quot;Dependency Injection&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1-the following version does not create Kitchen itself. It just receives it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class House </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{ <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>private final Kitchen kitchen = new Kitchen(); <text:s/></text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>private boolean isLocked; <text:s/></text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>private boolean isLocked() { <text:s text:c="3"/>return isLocked; <text:s/>} <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>private boolean lock() { <text:s text:c="3"/>kitchen.lock(); <text:s text:c="3"/>isLocked = true; <text:s/>}</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this makes testing House unitly difficult. A Kitchen is created when House is</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2-the following version does not create Kitchen itself. It just receives it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class House </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{ <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>private final Kitchen kitchen; <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>private boolean isLocked; <text:s text:c="2"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public House(Kitchen kitchen) { <text:s text:c="3"/>this.kitchen = kitchen; <text:s/>} <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>private boolean isLocked() { <text:s text:c="3"/>return isLocked; <text:s/>} <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>private boolean lock() { <text:s text:c="3"/>kitchen.lock(); <text:s text:c="3"/>isLocked = true; <text:s/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a factory object is responsible for instantiating the whole object graph of the application. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class ApplicationBuilder </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{ <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>House build() </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{ <text:s text:c="3"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>return new House(new Kitchen(new Sink(), new Dishwasher(), new Refrigerator())); <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="5"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>class Main </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{ <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>public static void(String...args) </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{ <text:s text:c="3"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>House house = new ApplicationBuilder().build(); <text:s text:c="3"/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>house.lock(); <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell table:style-name="ce76"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell table:style-name="ce76" office:value-type="string" calcext:value-type="string">
      <text:p>how to get the effect of a virtual friend ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>the friend function should call a hidden (usually protected) <text:a xlink:href="https://isocpp.org/wiki/faq/virtual-functions" xlink:type="simple">virtual</text:a> member function. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro27" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:style-name="ce76"/>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro27">
     <table:table-cell table:style-name="ce76"/>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro27">
     <table:table-cell table:style-name="ce76" office:value-type="string" calcext:value-type="string">
      <text:p>How can I provide printing for an entire hierarchy of classes?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>private data should be kept private.  (<text:a xlink:href="https://isocpp.org/wiki/faq/friends#friends-and-encap" xlink:type="simple">https://isocpp.org/wiki/faq/friends#friends-and-encap</text:a>)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>If you feel you need to make them public, this is a sign of bad design. Instead consider the following</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>-use friend function/class. Best solution</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>-provide getter/setter. Not so good. Because the existence of the private datum is not hidden.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>which case you need a class be a friend to another ? (<text:a xlink:href="https://isocpp.org/wiki/faq/friends#friends-and-encap" xlink:type="simple">https://isocpp.org/wiki/faq/friends#friends-and-encap</text:a>)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>You often need to split a class in half when the two halves will have different numbers of instances or different lifetimes. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>In these cases, the two halves usually need direct access to each other. The safest way to implement this is to make the two halves friends of each other.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1023"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="1048177">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="multithreading" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce95"/>
    <table:table-column table:style-name="co18" table:default-cell-style-name="ce95"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1020" table:default-cell-style-name="ce95"/>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Question 4 in coding interview is about thread scheduling</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro43">
     <table:table-cell/>
     <table:table-cell table:style-name="ce224" office:value-type="string" calcext:value-type="string">
      <text:p>Boss/Worker Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>The boss creates each worker thread, assigns it tasks, and, if necessary, waits for it to finish. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>It can create its workers dynamically when requests arrive or creates all worker threads up front (thread pool)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce226" office:value-type="string" calcext:value-type="string">
      <text:p>thread pool interface</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string"><text:p>init (nbrOfThreads)</text:p><text:p>startTask(task_function)</text:p><text:p>Const List&amp; GetNotStartedTasksYet() //as we might have more tasks to run than available threads in the pool</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce227" office:value-type="string" calcext:value-type="string">
      <text:p>example of use:ATM </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>We designed our ATM server according to the boss/worker model with a thread pool</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro36">
     <table:table-cell/>
     <table:table-cell table:style-name="ce228" office:value-type="string" calcext:value-type="string"><text:p>Worker threads continually monitor the queue for new work requests;</text:p><text:p>When the boss receives a new request, it places it on a queue. Workers remove requests from the queue and process them. When a worker completes a request, it simply removes another one from the queue.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce230"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce228"/>
     <table:table-cell table:style-name="ce230"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce229" office:value-type="string" calcext:value-type="string">
      <text:p>an element on the request queue contains a function pointer (task), a field for the argument and a pointer to the next task on the queue (hb:maybe not this last field,because this would look rather like a single linked list )</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce230"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce230" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
     <table:covered-table-cell table:number-columns-repeated="2" table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>Because the queue is a shared data structure that may be accessed by all worker threads (as well as any thread that exists outside of the pool and calls tpool_add_work), we&apos;ll need to add some synchronization. We&apos;ll do so by incorporating a mutex (queue_lock) and three condition variables (queue_not_empty, queue_not_full,and queue_empty) in the tpool_t structure.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>A thread pool has some basic characteristics:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>∙ Number of worker threads. This limits the number of requests <text:s/>that can be in progress at the same time.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
     <table:table-cell table:number-columns-repeated="1017"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>∙ Request queue size. This limits the number of requests that can be waiting for service.</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1017"/>
    </table:table-row>
    <table:table-row table:style-name="ro44">
     <table:table-cell/>
     <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string">
      <text:p>∙ Behavior when all workers are occupied and the request queue is full. Some requesters may want to block until their requests can be queued and only then resume execution. Others may prefer immediate notification that the pool is full. (For instance, network-based applications typically depend on a status value to avoid &quot;dropping requests on the floor&quot; when the server is overloaded.)</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1017"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce232" office:value-type="string" calcext:value-type="string">
      <text:p>Peer Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro34">
      <table:table-cell/>
      <table:table-cell table:style-name="ce233" office:value-type="string" calcext:value-type="string">
       <text:p>The peer model is suitable for applications that have a fixed or well-defined set of inputs, such as matrix multipliers, parallel database search engines, and prime number generators.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro61">
      <table:table-cell/>
      <table:table-cell table:style-name="ce234" office:value-type="string" calcext:value-type="string"><text:p>Well-defined input allows programs to adopt what could be construed as a boss/worker model without the boss. </text:p><text:p>Because there is no boss, peers themselves must synchronize their access to any common sources of input. </text:p><text:p>However, like workers in the boss/worker model, Peers can also slow down if they must frequently synchronize to access shared resources.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce234" office:value-type="string" calcext:value-type="string">
       <text:p>all threads must synchronize afterward to exchange and compare each other&apos;s results.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro43">
     <table:table-cell/>
     <table:table-cell table:style-name="ce224" office:value-type="string" calcext:value-type="string">
      <text:p>Pipeline Model</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pipeline improves throughput because it can accomplish the many different stages of a process on different input units (be they cars or instructions) concurrently</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>a single thread receives input for the entire program, always passing it to the thread that handles the first stage of processing. </text:p><text:p>Similarly a single thread at the end of the pipeline produces all final output for the program. </text:p><text:p>Each thread in between performs its own stage of processing on the input it received from the thread that performed the</text:p><text:p> Previous stage, and passes its output to the thread performing the next. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Applications in which the pipeline might be useful are image processing and text processing or </text:p><text:p>Any application that can be broken down into a series of filter steps on a stream of input.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>We could add multiplexing or demultiplexing to this pipeline, allowing multiple threads to work in parallel on a particular stage. </text:p><text:p>We could also dynamically configure the pipeline at run time, having it create and terminate stages (and the threads to service them) as needed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>the overall throughput of a pipeline is limited by the thread that processes its slowest stage. Threads that follow it in the pipeline cannot perform their stages until it has completed. </text:p><text:p>When designing a multithreaded program according to the pipeline model, you should aim at balancing the work to be performed across all stages; </text:p><text:p>That is, all stages should take about the same amount of time to complete.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro43">
     <table:table-cell/>
     <table:table-cell table:style-name="ce235" office:value-type="string" calcext:value-type="string">
      <text:p>Buffering Data Between Threads</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>one thread produces data, another one consumes it (producer/consumer)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this relationship requires:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce236" office:value-type="string" calcext:value-type="string"><text:p>a buffer: that contains one data item to process. or many items with tracking for new unprocessed ones.</text:p><text:p>Double buffering: io thread reads io and places unprocessed data in b1. Calculating thread processes it and palces it in b2. Io thread writes it in io</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a lock: to synchronize access to buffer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro38">
     <table:table-cell/>
     <table:table-cell table:style-name="ce236" office:value-type="string" calcext:value-type="string"><text:p>a suspend/resume mecanism:  The consumer may suspend itself when the buffer contains no data for it to consume. </text:p><text:p>If so, the producer must be able to resume it when it places a new item in the buffer. </text:p><text:p>With Pthreads, you would arrange this mechanism using a condition variable.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>state information: how much data is in the buffer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce237" office:value-type="string" calcext:value-type="string">
      <text:p>Cost of Threading</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>The memory and CPU cycles required to manage each thread (each thread has its own stack), including the structures the operating system uses to manage them, plus the overhead for the Pthreads library and any special code in the operating system that supports the library.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>The CPU cycles spent for synchronization calls (mutex locks and unlocks, condition variables, ...) that enforce orderly access to shared data. These calls cost in CPU cycles to execute the calls.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string">
      <text:p>The time during which the application is inactive while one thread is waiting on another thread. This cost results from too many dependencies among threads and can be allayed by improved program design.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="8">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>mutex</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>using mutex We&apos;ve limited access to the entire database to a single thread at a time, thus slowing performance considerably.</text:p><text:p>Other threads needing access to the database need to wait for one thread to finish its whole work</text:p><text:p>Improve Lock granularity by using mutexes for individual account records</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro66">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string"><text:p>which thread is the first to be granted the lock once it&apos;s released? The choice is made according to the scheduling priorities of the individual threads.</text:p><text:p>The thread with the highest priority gets the lock.</text:p><text:p>Many threaded programs, however, don&apos;t assign different priorities to different threads. Most of these programs are designed for real-time applications and allow the choice of which thread gets a lock first to be made randomly.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string"><text:p>using pthread_mutex_trylock represents a kind of polling for a resource≈repeatedly trying and backing off until the resource is obtained. </text:p><text:p>This polling leads to some overhead and, worse, potential resource starvation. If the lock is in high demand, the thread that polls for it may never get it. a thread that is not patient enough to block and wait may never try the lock and find it available≈there is always at least one other thread blocked waiting for the lock.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1019"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce229" office:value-type="string" calcext:value-type="string">
      <text:p>If multiple threads are waiting on a condition variable or mutex, who gets awakened first when another thread issues a pthread_cond_signal call? </text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1019"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce238" office:value-type="string" calcext:value-type="string">
      <text:p>the waiting threads are released according to their scheduling priority. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce238" office:value-type="string" calcext:value-type="string">
      <text:p>If all waiting threads are of the same priority, they are released in a first-in first-out order for each pthread_cond_signal call that&apos;s issued.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="8">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro68">
     <table:table-cell/>
     <table:table-cell table:style-name="ce227" office:value-type="string" calcext:value-type="string">
      <text:p>shortcomings</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro66">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string"><text:p>1-Sometimes you have many threads that read data but only an occasional thread that writes it. There should be a type of lock that allows any number of readers but works like a mutex whenever a writer enters the scene. Mutex does not help. It just locks against everyone. </text:p><text:p>Solution:</text:p><text:p>Reader/writer locks provide this type of access control. Done using using mutexes and condition variables.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>2- no recursive lock</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce239" office:value-type="string" calcext:value-type="string">
      <text:p>recursive mutex</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string">
      <text:p>A recursive mutex is useful for a thread that makes a number of nested calls to a routine that locks and manipulates a resource. If the thread already holds the lock, the calls merely increase and decrease the recursive count and don&apos;t deadlock the thread.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">priority can lead to priority inversion problem.</text:span></text:p><text:p>Solution</text:p><text:p>1- minimize the degree to which threads of different priorities share the same locks.</text:p><text:p>2- use mutex attribute as shown in chap 4</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro43">
     <table:table-cell/>
     <table:table-cell table:style-name="ce240" office:value-type="string" calcext:value-type="string">
      <text:p>Sharing a Mutex Among Processes</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce230"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce230" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="1">
      <text:p>mutex has 3 attributes. One of them can be set to PTHREAD_PROCESS_SHARED to be shared by many processes.</text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2" table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1018"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce231"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce239" office:value-type="string" calcext:value-type="string">
      <text:p>condition variable</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
       <text:p>a common task in thread programming is event synchronization: each thread in a program reaches a certain point, a barrier in your program, and must wait for other threads to get there.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string">
       <text:p>Your best choice to impose this type of synchronization is a condition variable.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro69">
      <table:table-cell/>
      <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string"><text:p>std::condition_variable::wait* puts the thread to sleep waiting on a notification and releases the mutex it has locked previously. This allows other threads needing the mutex to run.</text:p><text:p>The notification happens from another thread using std::condition_variable::notify*</text:p><text:p>When the condition variable is notified, the sleeping thread is awaken and is put on the queue to get the mutex</text:p><text:p>But certain implementations may produce spurious wake-up calls without any std::condition_variable::notify* functions being called. Therefore, users of this function shall ensure their condition for resumption is met.</text:p><text:p><text:span text:style-name="T14">users of this function should ensure their condition for resumption is met also because another thread could have changed the condition between the time the sleeping thread was awaken and the time it owned the mutex</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce241" office:value-type="string" calcext:value-type="string">
       <text:p>Thread waiting on CV</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>std::unique_lock&lt;std::mutex&gt; lck(mtx);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>while (count &lt;= WATCH_COUNT) </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;watch_count(): Thread &quot; &lt;&lt; idp &lt;&lt; &quot; might block and Count is &quot; &lt;&lt; count &lt;&lt; endl;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cv.wait(lck);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cout &lt;&lt; &quot;watch_count(): Thread &quot; &lt;&lt; idp &lt;&lt; &quot; awoke and Count is &quot; &lt;&lt; count &lt;&lt; endl;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce241" office:value-type="string" calcext:value-type="string">
       <text:p>Thread notifying</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>for (int i =0; i &lt; TCOUNT; i++) </text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>std::unique_lock&lt;std::mutex&gt; lck(mtx);</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>count++;</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>if (count == WATCH_COUNT)</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="3"/>cv.notify_all();</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1018"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce231"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string">
      <text:p>priority inversion</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string"><text:p>In <text:a xlink:href="http://maxim.int.ru/bookshelf/PthreadsProgram/htm/viewer_r.html+bkid=232&amp;destid=676161.html#676161" xlink:type="simple">Chapter 4</text:a>, we&apos;ll show you how to eliminate the risk of priority inversion by using mutex attributes.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce227" office:value-type="string" calcext:value-type="string">
      <text:p>Refrences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>Later in this chapter, as a performance enhancement, we&apos;ll add mutexes for individual account records to our server.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>Later in this chapter, we&apos;ll discuss a more standard solution to locking hierarchy problems that involves defining an order in which any given thread must pursue locks.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string"><text:p>In <text:a xlink:href="http://maxim.int.ru/bookshelf/PthreadsProgram/htm/viewer_r.html+bkid=232&amp;destid=676161.html#676161" xlink:type="simple">Chapter 4</text:a>, we&apos;ll discuss how you can avoid priority inversion problems by using attributes to assign priorities to mutexes.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string"><text:p>Secure non-threadsafe code in <text:a xlink:href="http://maxim.int.ru/bookshelf/PthreadsProgram/htm/viewer_r.html+bkid=232&amp;destid=986815.html#986815" xlink:type="simple">Chapter 5</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>see Chapter 6, Practical Considerations, for performance issues and how to minimize locks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce242" office:value-type="string" calcext:value-type="string">
      <text:p>What is priority inversion ? How to avoid it in C++11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Interview questions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Name three thread design patterns </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>1. Thread pool (Boss/Workers)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>2. Peer (Work crew)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>3. Pipeline </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Explain how a thread pool works </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>One thread dispatches other threads to do useful work which are usually part of a worker thread pool. This thread pool is usually pre-allocated before the boss (or master) begins dispatching threads to work. Although threads are lightweight, they still incur overhead when they are created.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>If the boss thread becomes a worker thread once it&apos;s done starting other worker threads then this is a Peer Thread Design Pattern. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: critical section </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>The code between lock and unlock calls to a mutex. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>What are four mutex types? (also, try to explain each one) </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>- Recursive: allows a thread holding the lock to acquire the same lock again which may be necessary for recursive algorithms.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>- Queuing: allows for fairness in lock acquisition by providing FIFO ordering to the arrival of lock requests. Such mutexes may be slower due to increased overhead and the possibility of having to wake threads next in line that may be sleeping.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>- Reader/Writer: allows for multiple readers to acquire the lock simultaneously. If existing readers have the lock, a writer request on the lock will block until all readers have given up the lock. This can lead to writer starvation.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>- Scoped: RAII-style semantics regarding lock acquisition and unlocking. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: deadlock </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p>Two (or more) threads have stopped execution or are spinning permanently. For example, a simple deadlock situation: thread 1 locks lock A, thread 2 locks lock B, thread 1 wants lock B and thread 2 wants lock A. </text:p><text:p>Hb:a deadlock can also happen with a single thread, in recursive function contaning a mutex lock</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>How can you prevent deadlocking from occurring? </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>You can prevent deadlocks from happening by making sure threads acquire locks in an agreed order (i.e. preservation of lock ordering). Deadlock can also happen if threads do not unlock mutexes properly. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: race condition </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>A race condition is when non-deterministic behavior results from threads accessing shared data or resources without following a defined synchronization protocol for serializing such access. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>How can you prevent race conditions from occurring? </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Take steps within your program to enforce serial access to shared file descriptors and other external resources. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: priority inversion </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>A higher priority thread can wait behind a lower priority thread if the lower priority thread holds a lock for which the higher priority thread is waiting.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>As happened on the Mars Pathfinder. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: Condition Variables (what is/are the analogous Java structure(s)?) </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Condition variables allow threads to synchronize to a value of a shared resource. Typically, condition variables are used as a notification system between threads.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>In Java wait() and notify() are used. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: (thread) barriers </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Barriers are a method to synchronize a set of threads at some point in time by having all participating threads in the barrier wait until all threads have called the said barrier function. This, in essence, blocks all threads participating in the barrier until the slowest participating thread reaches the barrier call. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: Semaphores </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro24" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Semaphores are another type of synchronization primitive that come in two flavors: binary and counting. Binary semaphores act much like simple mutexes, while counting semaphores can behave as recursive mutexes. Counting semaphores can be initialized to any arbitrary value which should depend on how many resources you have available for that particular shared data. Many threads can obtain the lock simultaneously until the limit is reached. This is referred to as lock depth. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Semaphores are more common in multiprocess programming (i.e. it&apos;s usually used as a synch primitive between processes). </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: Spinlocks </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro24" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Spinlocks are locks which spin on mutexes. Spinning refers to continuously polling until a condition has been met. In the case of spinlocks, if a thread cannot obtain the mutex, it will keep polling the lock until it is free. The advantage of a spinlock is that the thread is kept active and does not enter a sleep-wait for a mutex to become available, thus can perform better in certain cases than typical blocking-sleep-wait style mutexes. Mutexes which are heavily contended are poor candidates for spinlocks. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Spinlocks should be avoided in uniprocessor contexts. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>List six synchronization primitives. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>1. Mutex</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>2. Join</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>3. Condition variables</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>4. Barriers</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>5. Spin lock</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>6. Semaphore </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: livelock </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>What does the term &apos;lock-free&apos; mean? </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Multithreaded code written such that the threads can never permanently lock up. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro2" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce83" office:value-type="string" calcext:value-type="string">
       <text:p>Define: &quot;Busy waiting&quot; and how it can be avoided </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>When one thread is waiting for another thread using an active looping structure that doesn&apos;t do anything. Example: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Thread task = new TheTask();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>task.start();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>while( task.isAlive() ){</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>; // do nothing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>This can be avoided using mutexes. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>problems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce225" office:value-type="string" calcext:value-type="string">
      <text:p>priority inversion</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>deadlock</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro34">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Thread A may not represent any thread of execution. Default constructor of thread class creates such thread.</text:p><text:p><text:span text:style-name="T14">Thread::thread();</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro34">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>a thread A can be moved to a new thread. Thread A no more represents any thread of execution.</text:p><text:p>Thread::thread (thread&amp;&amp; x) noexcept;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro67">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>a thread can be joinable, if it is :</text:p><text:p>- Represents a thread of execution (Not default constructed, Not moved from)</text:p><text:p>- And join and detach have not been called yet.</text:p><text:p/><text:p>When the thread is joinable, it has a unique id</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro70">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>To reuse an ending thread object to run a new thread of execution, the thread::detach should have been called.</text:p><text:p>Otherwise, thread::joinable returns false even if the thread object does not represent any thread of execution</text:p><text:p/><text:p>See <text:a xlink:href="https://github.com/hbdevelop1/c.git" xlink:type="simple">https://github.com/hbdevelop1/c.git</text:a>, on the branch mttcpip </text:p><text:p>commit 684cbb0caadd42b2bb93fdee6ba85d1cb9ba8773</text:p><text:p>Author: hbdevelop1 &lt;https:<text:a xlink:href="mailto://hbdevelop1@github.com" xlink:type="simple">//hbdevelop1@github.com</text:a>&gt;</text:p><text:p>Date:   Mon Mar 14 16:06:20 2016 +1300</text:p><text:p/><text:p>    create a thread of each client and reuse thread objects that no more represent any thread of execution, thanks to std::thread::detach</text:p><text:p/><text:p/>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>cancelling</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce243" office:value-type="string" calcext:value-type="string">
       <text:p>a thread can set its cancellibility at it pleases following what is currently doing.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce243" office:value-type="string" calcext:value-type="string">
       <text:p>when it holding resources, locking, … it can sets itself to disable being canceled.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce243" office:value-type="string" calcext:value-type="string">
       <text:p>when it frees resources, it switches to cancelibility enabled.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce243" office:value-type="string" calcext:value-type="string">
       <text:p>when its cancelibility enabled, it can decide whther it wants to be stopped immediately or when it gets to a cancellation point </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce228" office:value-type="string" calcext:value-type="string">
       <text:p>The pending cancellations are delivered to a thread at defined locations in its code path. These locations are known as cancellation points, and they come in two flavors: </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce243" office:value-type="string" calcext:value-type="string">
       <text:p>- Automatic cancellation points (pthread_cond_wait,pthread_cond_timedwait, and pthread_join).</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce243" office:value-type="string" calcext:value-type="string">
       <text:p>- Programmer-defined cancellation points (pthread_testcancel).</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce243"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="ce228" office:value-type="string" calcext:value-type="string">
       <text:p>Cancelability State: PTHREAD_ CANCEL_ DISABLE <text:s text:c="10"/></text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="13"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Cancelability Type : ignored</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro51" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string"><text:p>Description : The thread can never be canceled. Calls to pthread_cancel have no effect. The thread can safely acquire locks and resources. </text:p><text:p>  /* We turn off general cancelability here */ </text:p><text:p>  pthread_setcancelstate(PTHREAD_CANCEL_DISABLE, &amp;last_state); //last_state is not used</text:p><text:p/>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="7"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="5"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce244" office:value-type="string" calcext:value-type="string">
       <text:p>PTHREAD_ CANCEL_ ENABLE</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="2" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="12"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce228" office:value-type="string" calcext:value-type="string">
       <text:p>PTHREAD_ CANCEL_ ASYNCHRONOUS</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce245" office:value-type="string" calcext:value-type="string">
       <text:p>Asynchronous cancellation. Cancellation takes effect immediately.*</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="4"/>
      <table:covered-table-cell table:number-columns-repeated="2" table:style-name="Default"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="7"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="5"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce244" office:value-type="string" calcext:value-type="string">
       <text:p>PTHREAD_ CANCEL_ ENABLE</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="2" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="12"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce245" office:value-type="string" calcext:value-type="string">
       <text:p>PTHREAD_ CANCEL_ DEFERRED</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce46" table:number-columns-spanned="1" table:number-rows-spanned="2"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro51" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce245" office:value-type="string" calcext:value-type="string"><text:p>Deferred cancellation (the default). Cancellation takes effect only if and when the thread enters a cancellation point. The thread can hold and release locks but must keep data in some consistent state. If a pending cancellation exists at a cancellation point, the thread can terminate without leaving problems behind for the remaining threads.</text:p><text:p>  pthread_setcancelstate(PTHREAD_CANCEL_ENABLE, &amp;last_state);   //the thread can be stopped when it calls pthread_testcancel or pthread_cond_wait,pthread_cond_timedwait, and pthread_join, </text:p><text:p>  pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &amp;last_type); </text:p><text:p/>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="3"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="6"/>
      <table:covered-table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="8"/>
      <table:table-cell table:style-name="ce46"/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="7"/>
      <table:table-cell table:number-columns-repeated="1005"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>scheduling</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce233" office:value-type="string" calcext:value-type="string">
      <text:p>he operating system continuously selects a single thread to run from a systemwide collection of all threads that are not waiting for the completion of an I/O request or are not blocked by some other activity.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use scheduling to decide how threads use the available processing power</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T44">real time app</text:span> : Used in conjunction with POSIX real-time extensions, such as <text:span text:style-name="T44">memory locking</text:span> and <text:span text:style-name="T44">real-time clocks</text:span>, </text:p><text:p>the Pthreads scheduling feature lets you create real-time applications in which the threads with important tasks can be guaranteed </text:p><text:p>To complete their tasks in a predictable, finite amount of time</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>A sched_yield call places the calling thread at the end of its scheduling priority queue and lets another thread of the same priority take its place. <text:s/></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>Atomic &amp; memory order</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>Even if you know that your program will only ever run on an x86, you can’t remove the atomics and the ordering constraints from your code. They are still necessary to prevent the compiler from doing the reordering.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro24">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p>the x86 guarantees </text:p><text:p>Acquire semantics for loads </text:p><text:p>Release semantics for stores</text:p><text:p>so load(memory_order_acquire) and store(x, memory_order_release) produce no fences</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:24:22 PM] kokwah li: One of the very important question with multi threading, how to resolve task based concurrency with c++11, even i am not so clear about the solution</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:25:00 PM] kokwah li: The hint is to use future and promise as a hack, but its not a clean method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:26:41 PM] kokwah li: https://bwv1079.wordpress.com/2013/11/20/c11-task-based-concurrency-part-1/</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:28:12 PM] kokwah li: how many ways can a multithreading bad design can cause dead lock</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:29:24 PM] kokwah li: how many ways can you initiate a thread?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:30:22 PM] kokwah li: what is a packaged task?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:33:30 PM] kokwah li: the most important thing about multithreaded design is , we must be able to design the code in such a way that we have a minimum use of mutex</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:33:45 PM] kokwah li: we must avoid mutex as much as possible</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:35:20 PM] kokwah li: but the problem is we cannot avoid it completely because of the common resourses shared by multiple thread</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:35:56 PM] kokwah li: some thread may just read the information, but some thread changes it, this is where the problem arises</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:36:52 PM] kokwah li: one best solution for this problem is to use a presistant data structure, but I am not able to understand presistant data stucture :(</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:37:10 PM] Hassan Boulmarouf: what would be the answer for &quot;how many ways bad design can cause dead lock&quot;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:37:32 PM] Hassan Boulmarouf: i can only think of two ways</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:38:20 PM] Hassan Boulmarouf: if a thread is running a recursive function in which there is a lock. So it will lock at entry, and then at second time it calls the function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:38:22 PM] kokwah li: yes only two ways</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:38:38 PM] Hassan Boulmarouf: it will have the mutext locked</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:38:57 PM] Hassan Boulmarouf: ok :) i am glad i got the number correct</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:39:14 PM] kokwah li: so what is the bad design in it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:39:24 PM] Hassan Boulmarouf: let me think</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:39:30 PM] kokwah li: and how to resolve it</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:39:39 PM] kokwah li: with the recursive example that you gave</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:40:09 PM] Hassan Boulmarouf: maybe we shouldn&apos;t have the lock inside the function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:40:36 PM] kokwah li: the simple answer is, that was a bad design</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:40:57 PM] Hassan Boulmarouf: so what is the right design ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:41:35 PM] kokwah li: that we need to see the problem, but having mutex inside the recurssive funtion for multithread is not a good design</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:41:51 PM] kokwah li: a hack is possible for the recurrsive design</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:41:55 PM] kokwah li: but its cumbersome</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:42:51 PM] kokwah li: every time you try to lock the mutex, we must check whether if its already locked by self</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:43:06 PM] Hassan Boulmarouf: Ok</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:43:53 PM] Hassan Boulmarouf: Thank you very much for your time Li</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:06 PM] Hassan Boulmarouf: If you can remember anything, please let me know</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:08 PM] kokwah li: no problem brother any time</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:14 PM] kokwah li: sure i will</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:37 PM] kokwah li: also goggle multithread interview questions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:49 PM] kokwah li: for c++11 or boost</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>[3:44:51 PM] Hassan Boulmarouf: OK.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="11">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return a value from a child thread to the parent thread, use asyn + future</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pass a value from a parent thread to a child thread, use promise + future</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>future accesses a shared object with promise </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>when promise sets the value to the shared object, future picks it up</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>void print_int (std::future&lt;int&gt;&amp; fut) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int x = fut.get();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;value: &quot; &lt;&lt; x &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce69" office:value-type="string" calcext:value-type="string">
      <text:p>int main ()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::promise&lt;int&gt; prom; <text:s text:c="21"/>// create promise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::future&lt;int&gt; fut = prom.get_future(); <text:s text:c="3"/>// engagement with future</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::thread th1 (print_int, std::ref(fut)); <text:s/>// send future to new thread</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>prom.set_value (10); <text:s text:c="24"/>// fulfill promise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="47"/>// (synchronizes with getting the future)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>th1.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>future::get returns the value stored in the shared state (or throws its exception) when the shared state is ready.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro41">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>If the shared state is not yet ready (i.e., the provider has not yet set its value or exception), the function blocks the calling thread and waits until it is ready.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>calling future::get can only be done once. If called more than one time, the program will crash</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>the future is made set and made ready through: 1) promise.set_value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>ex:prom.set_value (10);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>And 2) through the return value of a thread function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ex:std::future&lt;int&gt; fut = std::async (thread_function_do_stuff);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>promise and future cannot be copied. They can only be moved.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::promise&lt;int&gt; p1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::promise&lt;int&gt; p2=p1; //error</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::promise&lt;int&gt; p2=std::move(p1); //OK</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">std::async</text:span> may create a thread and returns immediately</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro41">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p>The function temporarily stores in the shared state either the threading handler used or <text:a xlink:href="http://www.cplusplus.com/decay" xlink:type="simple">decay copies</text:a> of fn and args (as a deferred function) without making it ready. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Once the execution of fn is completed, the shared state contains the value returned by fn and is made ready.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>async(launch::async, is_prime,313222313); creates a new thread where is_prime is executed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>std::async deferred, will not create a seperate thread but will execute the function in the same thread as the one getting the future/return value of the function.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>std::future&lt;bool&gt; fut = std::async (launch::deferred, is_prime,313222313);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>….; bool ret = fut.get(); //this is where the is_prime is run. Note that the current thread is blocked on future::get </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string">
      <text:p>it is essential that asyn is assigned to a future. Even when the function returns void. Otherwise, the calling thread blocks on async!!!! and does not continue the following instructions </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>std::packaged_task</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro53">
     <table:table-cell/>
     <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string"><text:p>contains internally two elements:</text:p><text:p/><text:p>    A stored task, which is some callable object (such as a function pointer, pointer to member or function object) whose call signature shall take arguments of the types in Args... and return a value of type Ret.</text:p><text:p>    A shared state, which is able to store the results of calling the stored task (of type Ret) and be accessed asynchronously through a future.</text:p><text:p/>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>int countdown (int from, int to) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>for (int i=from; i!=to; --i) {</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::cout &lt;&lt; i &lt;&lt; &apos;\n&apos;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>std::this_thread::sleep_for(std::chrono::seconds(1));</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;Lift off!\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return from-to;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>int main ()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string"><text:p>  std::<text:span text:style-name="T16">packaged_task</text:span>&lt;int(int,int)&gt; tsk (countdown);   // set up packaged_task</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::future&lt;int&gt; ret = tsk.get_future(); <text:s text:c="11"/>// get future</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::thread th (std::move(tsk),10,0); <text:s text:c="2"/>// spawn thread to count down from 10 to 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>// ...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string"><text:p>  int value = <text:span text:style-name="T16">ret.get</text:span>();                  // wait for the task to finish and get result</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>std::cout &lt;&lt; &quot;The countdown lasted for &quot; &lt;&lt; value &lt;&lt; &quot; seconds.\n&quot;;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>th.join();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://stackoverflow.com/questions/187761/recursive-lock-mutex-vs-non-recursive-lock-mutex</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Const local volatile ? What is it for</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>following stackoverflow discussion, The compiler puts the variable in stack. It doesn&apos;t care about it being non-sense</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>difference between lock_guard and unique_lock</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>lock_guard only unlocks the mutex when destroyed </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unique_guard can unlock anythime and lock again</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Question ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>in writer readers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>lck.lock();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>writer_is_writing=false;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>g_cv.notify_all();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>lck.unlock();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>can the condition variable notify after unlocking the mutex ? Why ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>an answer is that: readers waiting on the condition variable will be awake. But will not obtain the mutex, until it is released by the writer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the inverse is not harmful, but it is not as secure as the above solution</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>instead of :</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>lck.lock();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>--number_of_active_readers;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>if(number_of_active_readers==0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>output(&quot;reader &quot;, std::this_thread::get_id(),&quot; is notifying writer\n&quot;);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>g_cv.notify_one();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>lck.unlock();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>we can do this</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>lck.lock();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>--number_of_active_readers;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>g_cv.notify_one();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>lck.unlock();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>not need for readers to check for the count to reach 0 to notify the writer. Just notify it after a decrement. Because the writer is already on the loop waiting for the count to reach 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>while(number_of_active_readers&gt;0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>output(&quot;writer is going to sleep\n&quot;);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>g_cv.wait(lck);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>context switch</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a thread has:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>registers values, stack frame, …</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>hb:in a context switch only registers value would be saved somewhere, to prevent them from being overritten by the next thread. The stack frame is just left in memory as is.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>4k threads will take longer (hb:than 5 or 6 threads). That&apos;s a lot of context switches. (http://stackoverflow.com/questions/1718465/optimal-number-of-threads-per-core)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>Software thread/ hardware thread</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
      <text:p>a parent thread may use std::thread::hardware_concurrency to help tune the number of threads to CPUs/cores the machine has (from c++11 test)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://stackoverflow.com/questions/5593328/software-threads-vs-hardware-threads</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>a &quot;hardware thread&quot; is a physical cpu or core. So, a 4 core cpu can support 4 hardware threads at once - the cpu really is doing 4 things at the same time.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>One hardware thread can run many software threads. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>the OS tries to map threads to cores, if there are sufficient cores.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>So, if you have a java program that starts 4 threads, and have 4 or more cores, there&apos;s a good chance your 4 threads will run truly in parallel on 4 separate cores, if the cores are idle.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p>Can not run more threads than cores at any given time (<text:a xlink:href="http://stackoverflow.com/questions/1718465/optimal-number-of-threads-per-core" xlink:type="simple">http://stackoverflow.com/questions/1718465/optimal-number-of-threads-per-core</text:a>)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>how many threads for performance</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce141" office:value-type="string" calcext:value-type="string">
      <text:p>a parent thread may use std::thread::hardware_concurrency to help tune the number of threads to CPUs/cores the machine has (from c++11 test)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce141"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>http://stackoverflow.com/questions/1718465/optimal-number-of-threads-per-core</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>If your threads don&apos;t do I/O, synchronization, etc., and there&apos;s nothing else running, 1 thread per core will get you the best performance. However that very likely not the case. Adding more threads usually helps, but after some point, they cause some performance degradation.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>… we found out that for that particular application in that particular configuration the best throughput was somewhere between 36 and 40 threads. Anything outside those boundaries performed worse. Lesson learned? If I were you, I would test with different number of threads until you find the right number for your application.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro36">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>Threads block waiting for IO resources like disk access, network, etc. And also waiting for non IO resources like other threads to finish using shared variables. What you really want to achieve is the minimum number of threads such that at least one thread per core can always be running</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell/>
     <table:table-cell table:style-name="ce246" office:value-type="string" calcext:value-type="string">
      <text:p>Concurrency Patterns</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>1-The Active Object design pattern decouples method execution from method invocation to enhance concurrency and simplify synchronized access to objects that reside in their own threads of control.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>2-The Monitor Object design pattern synchronizes concurrent method execution to ensure that only one method at a time runs within an object. It also allows an object&apos;s methods to cooperatively schedule their execution sequences.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>3-The Half-Sync/Half-Async architectural pattern decouples asynchronous and synchronous service processing in concurrent systems, to simplify programming without unduly reducing performance. The pattern introduces two intercommunicating layers, one for asynchronous and one for synchronous service processing.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>4-The Leader/Followers architectural pattern that provides an efficient concurrency model where multiple threads take turns sharing a set of event sources in order to detect, demultiplex, dispatch, and process service requests that occur on the event sources.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>5-The Thread-Specific Storage design pattern allows multiple threads to use one `logically global&apos; access point to retrieve an object that is local to a thread, without incurring locking overhead on each object access.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce46"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell/>
     <table:table-cell table:style-name="ce246" office:value-type="string" calcext:value-type="string">
      <text:p>Service Access and Configuration Patterns</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Wrapper Facade design pattern encapsulates the functions and data provided by existing non-object-oriented APIs within more concise, robust, portable, maintainable, and cohesive object-oriented class interfaces.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Component Configurator design pattern allows an application to link and unlink its component implementations at run-time without having to modify, recompile, or statically relink the application. Component Configurator further supports the reconfiguration of components into different application processes without having to shut down and re-start running processes.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Interceptor architectural pattern allows services to be added transparently to a framework and triggered automatically when certain events occur.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Extension Interface design pattern allows multiple interfaces to be exported by a component, to prevent bloating of interfaces and breaking of client code when developers extend or modify the functionality of the component.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell/>
     <table:table-cell table:style-name="ce246" office:value-type="string" calcext:value-type="string">
      <text:p>Event Handling Patterns</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Reactor architectural pattern allows event-driven applications to demultiplex and dispatch service requests that are delivered to an application from one or more clients.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Proactor architectural pattern allows event-driven applications to efficiently demultiplex and dispatch service requests triggered by the completion of asynchronous operations, to achieve the performance benefits of concurrency without incurring certain of its liabilities.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Asynchronous Completion Token design pattern allows an application to demultiplex and process efficiently the responses of asynchronous operations it invokes on services.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Acceptor-Connector design pattern decouples the connection and initialization of cooperating peer services in a networked system from the processing performed by the peer services after they are connected and initialized.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro26">
     <table:table-cell/>
     <table:table-cell table:style-name="ce246" office:value-type="string" calcext:value-type="string">
      <text:p>Synchronization Patterns</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Scoped Locking C++ idiom ensures that a lock is acquired when control enters a scope and released automatically when control leaves the scope, regardless of the return path from the scope.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Strategized Locking design pattern parameterizes synchronization mechanisms that protect a component&apos;s critical sections from concurrent access.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Thread-Safe Interface design pattern minimizes locking overhead and ensures that intra-component method calls do not incur `self-deadlock&apos; by trying to reacquire a lock that is held by the component already.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>The Double-Checked Locking Optimization design pattern reduces contention and synchronization overhead whenever critical sections of code must acquire locks in a thread-safe manner just once during program execution.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>exercise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when does a thread block ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro41">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string"><text:p>Threads block waiting for IO resources like disk access, network, etc. And also waiting for non IO resources like other threads to finish using shared variables. (<text:a xlink:href="http://stackoverflow.com/questions/1718465/optimal-number-of-threads-per-core" xlink:type="simple">http://stackoverflow.com/questions/1718465/optimal-number-of-threads-per-core</text:a>)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="1048039">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="15">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
   </table:table>
   <table:table table:name="tester job description" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce62"/>
    <table:table-column table:style-name="co19" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="3" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Experience in Test Automation in a Continuous Integration </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Exposure to various delivery methodologies (Waterfall, Iterative and Agile)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce73" office:value-type="string" calcext:value-type="string">
      <text:p>Trustwave : Senior Software Engineer C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave helps businesses fight cybercrime, protect data and reduce security risk. With cloud and managed security services, integrated technologies and a team of security experts, ethical hackers and researchers, Trustwave enables businesses to transform the way they manage their information security and compliance programs. Trustwave delivers automated, efficient and cost-effective threat, vulnerability and compliance management.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave is a privately held company, headquartered in Chicago, with customers in 96 countries. For more information about Trustwave, visit https://www.trustwave.com .</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Overview</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave ( www.trustwave.com ) helps businesses fights cybercrime by providing services and technologies that allow them to achieve information security and compliance. This includes secure email and Internet management solutions that integrate content filtering, compliance, secure messaging and archiving, to protect businesses against email and Interest-based threats.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Job Purpose</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>You will be responsible for the development and maintenance of our web content analysis product on a daily basis, as well as interaction with other teams with regards to product development. You will also be involved in the technical specifications of future versions, and be a liaison into the QA team.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Key Accountabilities</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Develop and maintain our web content analysis product to internal coding standards</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Develop and maintain our anti-virus add-ons to internal coding standards</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Develop and maintain our filetype and unpacking libraries to internal coding standards</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Liaise with members of the QA team during development and testing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Liaise with our technical support team to resolve customer issues</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Research new technologies to determine their applicability to the product</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Key Performance Criteria</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Development according to product release schedules</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Code quality and commenting</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Production of technical documentation for internal use</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Skills/Knowledge/Expereince Required</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Computer science qualification, or similar</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Solid knowledge of C++ and C++ 11</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Experience in MFC and STL</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>2+ years’ experience in C# development</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Knowledge of TCP/IP and networking, socket programming definitely an advantage</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Understanding of HTTP, SSL and common Internet protocols</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Strong Object-Oriented design skills</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Excellent communications and interpersonal skills</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
       <text:p>Skills/Knowledge/Experience Advantageous </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Strong debugging skills</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Experience in Microsoft SQL / TSQL programming</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Experience with HTTP, TCP/IP and DNS</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Experience with Active directories, LDAP, Microsoft IIS</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Previous experience working in an Agile Development environment</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Interpersonal Characteristics</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Analytical skills with attention to detail</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Excellent verbal and written communication skills with people of varying technical ability</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Ability to prioritize and self-manage tasks, responsibilities and time</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Ability to work as a Team Player, in a cross functional team in an Agile Scrum environment</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Ability to understand the target audience and how the products are used</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
       <text:p>Reporting Relationship </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Formally reporting to the Development Lead, but primarily accountable to fellow Scrum Team members in a flat team structured environment.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Environment</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Working from a spacious, comfortable and modern office building conveniently located in the Greenlane business district, with easy parking and multiple public transport options. Trustwave’s Auckland office enjoys the benefits of being part of a large multi-national company, while maintaining a collaborative ‘start-up’ type atmosphere owing to a relatively small number of people at this site, operating within an Agile Software Development Framework.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Education:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>We prefer college-educated applicants, but at minimum, high school diploma or equivalent is required for employment.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Trustwave is an Equal Opportunity Employer of Minorities, Females, Protected Veterans, and Individuals with Disabilities.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>To All Agencies:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
       <text:p>Please, no phone calls or emails to any employee of Trustwave outside of the Talent Acquisition team. Trustwave’s policy is to only accept resumes from agencies via the Trustwave Agency Portal. Agencies must have a valid fee agreement in place and they must have been assigned the specific requisition to which they submit resumes, by the Talent Acquisition team. Any resume submitted outside of this process will be deemed the sole property of Trustwave and in the event a candidate is submitted outside of this policy is hired, no fee or payment of any kind will be paid.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>https://www.linkedin.com/company/blitz-studios-entertainment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Aderant : <text:s/>Intermediate Software Developer </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Posted: </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce248" office:value-type="date" office:date-value="2015-09-08" calcext:value-type="date">
       <text:p>08/09/15</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Job Type: </text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Full Time </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Location: </text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>NZ-Auckland </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce45" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Category: </text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Development </text:p>
      </table:table-cell>
      <table:table-cell table:style-name="ce45" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Job Description </text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="ce45" table:number-columns-spanned="3" table:number-rows-spanned="1"/>
      <table:covered-table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro71" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string"><text:p>About the Company                                          </text:p><text:p> </text:p><text:p>We’re a global company and a leading provider of practice management software products for law firms worldwide. We have a large development team (over 80 in R&amp;D) in Auckland and are a strong adopter of Microsoft technologies and a Microsoft Gold Partner. Although our staff turnover is very low, the size and growth of the office means we have opportunities in many areas popping up all the time.</text:p><text:p> </text:p><text:p>We have over 3,300 clients including:</text:p><text:p>67 of the top 100 global law firms</text:p><text:p>The top 10 US law firms</text:p><text:p>21 out of the top 40 Australian law firms</text:p><text:p> </text:p><text:p>The Auckland office is almost entirely R&amp;D, away from top management. This allows an informal environment. Previous careful recruitment means you’ll be working alongside highly skilled and passionate peers building quality software and good team spirit (keen for a lunch time game of MtG? Soccer? Basketball? Badminton? Walk? Visit JB-HIFI to see the Galaxy S6?)</text:p><text:p> </text:p><text:p>About the Roles</text:p><text:p> </text:p><text:p>Our continuing growth means we are on the hunt for savvy, passionate developers to add to our teams. We’re looking for people that offer passion, quality, delivery focus, leadership and problem solving. Our teams are empowered and fast moving – our belief is that this happens with good collaboration and communication, meaning that we can act on the ideas and thought leadership that you’ll bring to the table.</text:p><text:p> </text:p><text:p>Tired of the harbour bridge? Do you like laughing at the people heading to the CBD?</text:p><text:p> </text:p><text:p>If you’ve got any interest in the following areas we’d love to hear from you.</text:p><text:p> </text:p><text:p> </text:p><text:p>Web Development</text:p><text:p>You’ll be a proven, clearly passionate, full stack web developer with a front-end focus – your core skills will be quality MVVM sites using JavaScript (possibly TypeScript), Less, HTML and MVC. Some Knockout or SQL wouldn’t hurt. You’ll be building a customisable product, not a one-off, and we’re pitching to the largest law firms in the world, meaning we’ll stretch you with some gnarly challenges that you wouldn’t find in normal web development - such as customization, internationalisation, easy deployment, varied network infrastructures, product level quality...</text:p><text:p> </text:p><text:p> </text:p><text:p>Mobile / Web App Development</text:p><text:p>We are putting apps into the Android, IOS and Blackberry app stores so that our global clients have ready access to them. You’ll help us make these complex and intelligent apps communicate with our back ends. Core skills in this area are again JavaScript / TypeScript, Less and MVC, but you’ll also have had exposure to Phonegap.</text:p><text:p> </text:p><text:p> </text:p><text:p>C# / WPF App Development</text:p><text:p>You’ll be building new applications, adding further features and services as we grow our large and technically challenging solutions that are used by the largest law firms in the world. You could choose to focus around the product modules or really test your technical skills and add value working on the framework that underpins the product. In this area you’d be solving some of the most challenging problems…. Core skills here are C#, WPF, SQL.</text:p><text:p> </text:p><text:p> </text:p><text:p>BI Development</text:p><text:p>We are about to start pushing the edge around the latest in BI and dashboard technologies. You’ll be involved in building and re-architecting from the ground up and involved in every phase of the project from conceptualisation to delivery. A key part of strategy that is starting to emerge is to leverage IBM Cognos – a new technology for us. If you’ve got skills with Framework Manager and BI Server 10.2.1 we’d love to hear from you. Oh, and you might have started looking at the newer version released in October – that’s looking very interesting and getting us excited as well….</text:p><text:p> </text:p><text:p> </text:p><text:p> </text:p><text:p>Culture and Benefits</text:p><text:p> </text:p><text:p>Even though we’re a global company the Auckland office feels like a software house – lots of technical people working in different teams and projects.</text:p><text:p> </text:p><text:p>We’ve got a funky, open plan office right across from Albany Westfield. As well as being pretty hard-core about work, we find some time for a Friday drink and some entertaining times out with the Social Club.</text:p><text:p> </text:p><text:p>We value our staff so there’s lots of perks including flexible working arrangements, additional sick leave, certification and tuition reimbursement, Income Protection, Life Insurance, an enhanced KiwiSaver Scheme, Financial Advisor and a Bonus Pool.</text:p><text:p> </text:p><text:p> </text:p><text:p>Want to know more?</text:p><text:p> </text:p><text:p>Check us out on Facebook:  http://www.facebook.com/pages/ADERANT-Asia-Pacific/119627654744243</text:p><text:p>Contact our HR manager, Reid Pittams: P: 09 414 3300, E: reid.pittams@aderant.com   </text:p>
      </table:table-cell>
      <table:table-cell/>
      <table:table-cell table:style-name="ce44"/>
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce44"/>
      <table:table-cell table:style-name="ce249"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="6"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>In software development <text:span text:style-name="T16">testbedding</text:span> is a method of testing a particular module (function, class, or library) in an isolated fashion. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>A testbed (also &quot;test bed&quot;) is a platform for conducting rigorous, transparent, and replicable testing of scientific theories, computational tools, and new technologies.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce247" office:value-type="string" calcext:value-type="string">
      <text:p>what is the difference between test bed and unit test ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro41">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>It is the combination of hardware and software environment on which the tests will be executed. It includes hardware configuration, operating system settings, software configuration, </text:p><text:p>Test terminals and other support to perform the test.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048482">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="6"/>
    </table:table-row>
   </table:table>
   <table:table table:name="books" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Pattern-Oriented-Software-Architecture</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>from mud to structure</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>layers </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pipes and filters</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>blackboard</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>distributed system</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>broker</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>interactive systems</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Model view controller</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>presentation abstraction control</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>adaptable systems</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>microkernel</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>reflection</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>design patterns</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>structural decomposition</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Whole-part</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>organization of work</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Master-slave</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="4"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="gcc" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="3" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>makefile to compile and to produce preprocessor output</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>FLAG2=-Wall -std=c++11</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>compile:</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>g++ -ggdb $(FLAG2) mt_recursive_lock.cpp -o code</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>pp:</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>g++ -ggdb $(FLAG2) -E mt_recursive_lock.cpp -o code.i</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>produce preprocessor output</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>cpp file.cpp &gt; file.i</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="3">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>change the language of g++</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>I had to set the three environment variables in .bashrc, not only LANG as stated in gcc/Environment-Variables.html</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>LANG=en_US.UTF-8</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>LANGUAGE=en_US</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>GDM_LANG=en_US</text:p>
      </table:table-cell>
      <table:table-cell/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="3"/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="TDD BDD" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>create a test for object creation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>then create the class</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the test passes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>create a test for object calling a method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the create the method</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the test passes or fails following the input to the method </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Rule : write the simplest code just for the test to pass </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hb:but we are not developping with the enitre architecture in mind !!!!!</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>bdd uses natural language in code</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>TDD</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>BDD</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>assert(count == 5);</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>accout.should_be(5);</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="time management" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="1024" table:default-cell-style-name="ce95"/>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when estimating, plan for the bad things/insterruptions/relaxation and pause/surprises</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when estimating, break down the tasks to smaller ones</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>difficult tasks broken down to smaller tasks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>avoid time wasters</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>regularly check the time and progress</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
      <text:p>Regularly update your plans according to reality.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>delegate</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Give objectives, not procedures, take responsibility and accountability. Describe a task clearly. Provide a &quot;how to test&quot; example.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>have a todo list. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>updated with every task you get</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>reorder priorities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
      <text:p>Estimate every task, set deadlines yourself. This will help you to avoid doing things in a last minute.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>prioritize them</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
      <text:p>start some tasks ahead of time. So that they are ready when you want them. Not every customer can answer immediately</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inform team leader/manager of the road blocks, suggest priorities adjustments</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>start a task when waiting on sth</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>finish in time not worry about a perfect solution that fits for all. </text:p><text:p>Get the job done and you can add more features later. </text:p><text:p>Do not save on coding conventions and code quality. </text:p><text:p>Pure code usually increases support time later. Consider unit tests, it can improve quality and speedup development. Automated tests reward with a confidence.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>priorities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>urgent</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>not urgent</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>important</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>crying baby</text:p><text:p>Kitchen fire</text:p><text:p>Some calls</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>exercice</text:p><text:p>Vocation</text:p><text:p>Planing</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>someone else is dependent on a specific task then do it first. </text:p><text:p>For equal tasks set priorities using a task difficulty: ugliest tasks first (some prefer interesting tasks first, why not?). </text:p><text:p>Domino Reaction method: This is the idea that there are actions that you invest in once and which produce over time in different channels.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1019"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>not imporatant</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>interruptions</text:p><text:p>Distractions</text:p><text:p>Other calls</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>trivia</text:p><text:p>Busy work</text:p><text:p>Time wasters</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>Important/Urgent quadrant are done immediately and personally<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. crises, deadlines, problems.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>Important/Not Urgent quadrant get an end date and are done personally<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. relationships, planning, recreation.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>Unimportant/Urgent quadrant are delegated<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. interruptions, meetings, activities.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>Unimportant/Not Urgent quadrant are dropped<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-fluent-time-management.com-12" xlink:type="simple">[12]</text:a> e.g. time wasters, pleasant activities, trivia.<text:a xlink:href="https://en.wikipedia.org/wiki/Time_management#cite_note-artofmanliness.com-11" xlink:type="simple">[11]</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="6">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce61" office:value-type="string" calcext:value-type="string">
      <text:p>1. Planning &amp; prioritizing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro20">
     <table:table-cell/>
     <table:table-cell table:style-name="ce162" office:value-type="string" calcext:value-type="string">
      <text:p>2. Protect your time and avoid needless distractions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce162" office:value-type="string" calcext:value-type="string">
      <text:p>3. Discipline yourself.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>“A time”</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Delivering Value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>“B time”</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>clarifying requirements</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>reviewing another’s code</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>otherwise helping another developer to deliver value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>improving the deployment process</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>automating chores</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>optimizing your environment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>“C time”</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>meetings not related to delivering value or planning to deliver value</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>email not related to “A” or “B” time activities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
      <text:p>…</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="1048511">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="interviews" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="ce95"/>
    <table:table-column table:style-name="co20" table:default-cell-style-name="ce95"/>
    <table:table-column table:style-name="co21" table:default-cell-style-name="ce95"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1020" table:default-cell-style-name="ce95"/>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:table-cell table:style-name="ce265" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="10"><text:p><text:span text:style-name="T12">retake tests:</text:span></text:p><text:p><text:span text:style-name="T12">GL</text:span></text:p><text:p><text:span text:style-name="T12">Ubisoft</text:span></text:p><text:p><text:span text:style-name="T12">Amazon</text:span></text:p><text:p><text:span text:style-name="T12">Rock star</text:span></text:p><text:p><text:span text:style-name="T12">Codility</text:span></text:p><text:p><text:span text:style-name="T12">Eidos</text:span></text:p>
     </table:table-cell>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="4"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>multi threading quiz</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:style-name="ce265"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>network programming</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:style-name="ce265"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++11</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>C++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:style-name="ce212"/>
     <table:covered-table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>stl</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>boost</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>python</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>oo:SOLID, GRASP, Dependency injection</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:covered-table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1016"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>qt</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>see youtube for how to use treeview</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>embedded</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>book summary + practical c++ tutorial + code sample of how is that different from general s/w app</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Javascript and HTML5</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hardware/software integrated systems and/or embedded software Development</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>testing, code coverage, regression, unit testing,</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3D, basics</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>graphic/game gems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tensor, game engine features in pirates</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>opengl,  modern opengl 4.0+, nehe tutorials are kinda old, and a lot of them use the fixed function pipeline. </text:p><text:p>Completely master the opengl pipeline (vertex/fragment stages), setting the 3d world up with matrix transformations.  </text:p><text:p>Be a MASSIVE bonus if you have computer vision background</text:p><text:p>(got info from an Animation Research Limited wallace Yuen)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>algo</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unity</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>senior</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>optimization: uses locality spatial and temporal instead of oo, profiling, design of your data over the design of your code (Data-Oriented Design)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>links</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://macton.smugmug.com/gallery/8936708_T6zQX#593426709_ZX4pZ" xlink:type="simple">http://macton.smugmug.com/gallery/8936708_T6zQX#593426709_ZX4pZ</text:a>  Cpp is bullshit</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://cellperformance.beyond3d.com/articles/2006/04/performance-and-good-data-design.html" xlink:type="simple">http://cellperformance.beyond3d.com/articles/2006/04/performance-and-good-data-design.html</text:a>  Design around data</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>http://gameprogrammingpatterns.com/data-locality.html</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
       <text:p>Its the 20% that gets executed 80% of the time that you need to worry about.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
       <text:p>http://www.asawicki.info/news_1422_data-oriented_design_-_links_and_thoughts.html</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://lwn.net/Articles/250967/#TOC" xlink:type="simple">http://lwn.net/Articles/250967/#TOC</text:a> What every programmer should know about memory</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
       <text:p>View the prefetch buffer as an infinite cache. What is the prefetch buffer ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>multi threading</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>template and generic</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>modern c++</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>https://visualstudiomagazine.com/articles/2013/02/12/future-c-plus-plus.aspx</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://www.stroustrup.com/bs_faq2.html#finally" xlink:type="simple">http://www.stroustrup.com/bs_faq2.html#finally</text:a></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>http://nwcpp.org/may-2013.html</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>While C++ and C# have borrowed bits of functional programming, they simply don&apos;t foster true high level approaches to problem solving in ways that OCaml, Haskell, F# and similar languages do.</text:p><text:p>What is functional programming ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
       <text:p>Asynchronous Programming ? http://moderncpp.com/asynchronous-programming/</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
       <text:p>What is it?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>RAII Resource Acquisition Is Initialization (RAII): is a C++ programming technique which binds the life cycle of a resource (allocated memory, thread of execution, open socket, open file, locked mutex, database connection—anything that exists in limited supply) to the lifetime of an object. Constructor holds resource Destructor releases it.</text:p><text:p>RAII wrappers : std::unique_ptr and std::shared_ptr, std::lock_guard, std::unique_lock, std::shared_lock</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>standard library containers and algorithms</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>templates</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>metaprogramming</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>exceptions</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>Boost</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell table:number-columns-repeated="2"/>
       <table:table-cell table:style-name="ce74"/>
       <table:table-cell table:number-columns-repeated="1021"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce74"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>howto pass a code review</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>design patterns + Pattern-Oriented-Software-Architecture</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>Navico</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>difference between c++ and C#</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>knowledge of QT ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>a design needs 6 months, but the boss says 3 months. What to do ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>do not say overtime. He refused this idea</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Priority requirements + implement the core functionalities. He confirmed</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>the boss comes up with a stupide design or idea. What to do ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>can&apos;t say what I did in the past</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>convice them or see what the end user wants. He confirmed</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what to do when performance is bad ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>he:we use free tools like o-profile, valgrin.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>embedded like systems. What is that ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what were you doing in gameloft</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>was it not frustrating that the design kept changing ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>overwritten mem region ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Random crashes are due to heap corruption ( ! only ? I don&apos;t agree. Or I need to learn more), how to solve it ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>I looked it up on internet they use tools. He interrupted yes there are many tools the setting up of which is tricky.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what is a deadlock ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>how to avoid a deadlock ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>Hamilton Jet</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce250" office:value-type="string" calcext:value-type="string">
      <text:p>testing strategy</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce251" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T81">Medium to high level of competency in programming in C++ is essential.  Some experience using Python and C# would be preferred.  </text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Experience with automated testing frameworks beneficial</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce252" office:value-type="string" calcext:value-type="string">
      <text:p>Experience and the ability to understand system requirements documentation</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce252" office:value-type="string" calcext:value-type="string">
      <text:p>create test methods to verify compliance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce253" office:value-type="string" calcext:value-type="string">
      <text:p>what language is used to create test methods. Unit, system,integration</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Learn unit testing using google framework/ cppunit/ IBM RRTT or other. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce254"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce252" office:value-type="string" calcext:value-type="string">
      <text:p>A track record of working successfully with design &amp; systems engineers in the development of test methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Hb would read first the system requirements documentation. And check with design and systems engineers to make sure</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce255" office:value-type="string" calcext:value-type="string">
      <text:p>Strong on mathematics, statistics and reliability for analysis of results and setting test criteria.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce252" office:value-type="string" calcext:value-type="string"><text:p>Skill at problem solving and the use of problem solving tools.!!!! <text:span text:style-name="T37">what problems ?</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce252" office:value-type="string" calcext:value-type="string">
      <text:p>Able to clearly and concisely document test outcomes and test methods.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce263" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T13">hb would create </text:span><text:span text:style-name="T82">project test plans </text:span><text:span text:style-name="T13">similar to airbus PTV</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce256" office:value-type="string" calcext:value-type="string">
      <text:p>Making customer needs the primary focus</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro72">
     <table:table-cell/>
     <table:table-cell table:style-name="ce257" office:value-type="string" calcext:value-type="string"><text:p>There is a huge body of knowledge available for free online, about interviewing techniques and tips. </text:p><text:p>Please read about interview techniques. </text:p><text:p>Find out about BEI and competency based interviewing. </text:p><text:p>Have a mock job interviews with family and friends, if you haven’t interviewed recently. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce258" office:value-type="string" calcext:value-type="string">
      <text:p>interviewer will give a problem, and ask for test cases.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce259" office:value-type="string" calcext:value-type="string">
      <text:p>understands that different situations and levels may call for different skills and approaches; works to deploy strengths; works on compensating for weakness and limits.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce258" office:value-type="string" calcext:value-type="string">
      <text:p>what is pinpointing ? Isolation ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce258" office:value-type="string" calcext:value-type="string"><text:p>RISKS during interview:</text:p><text:p>Not understading what an activity is ?</text:p><text:p>Not understanding what a key word means ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce258" office:value-type="string" calcext:value-type="string">
      <text:p>how are unit tests and system test related ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce258"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>system test (black box test) verifies that a functionality works</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce258"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>system test corresponds to many unit tests</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce258"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unit test (white test) verifies that the code for a functionality works as expected, non only it delivers the right solution but the way it does so is also right</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce260" office:value-type="string" calcext:value-type="string">
      <text:p>black box testing ,white box testing and non-functional testing</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is DO167B ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is a senario for ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>How is the partition done ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>do you like the position ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>testing experience improved my programming skills. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>this experience will allow me to work with some highly skilled gyus. </text:p><text:p>      I had the experience in GL NZ. </text:p><text:p>      Testing in another environment where the team has only a requirement doc and a process to follow. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="13">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="9">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="7">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="13">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="13">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="6">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce212" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="1">
       <text:p>Non-critical</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:style-name="ce212" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="1" table:number-rows-spanned="4">
       <text:p>priority</text:p>
      </table:table-cell>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce212" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="2">
       <text:p>company logo in the wrong color</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:covered-table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:covered-table-cell table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:covered-table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce212" office:value-type="string" calcext:value-type="string" table:number-columns-spanned="3" table:number-rows-spanned="2">
       <text:p>the caption on an image in the wrong font</text:p>
      </table:table-cell>
      <table:covered-table-cell table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:covered-table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:covered-table-cell table:number-columns-repeated="3"/>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="18">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce213" office:value-type="string" calcext:value-type="string">
       <text:p>Validation</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro67">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
       <text:p>The process of evaluating software during or at the end of the development process to determine whether it satisfies specified business requirements.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro73">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
       <text:p>To ensure that the product actually meets the user’s needs, and that the specifications were correct in the first place. In other words, to demonstrate that the product fulfills its intended use when placed in its intended environment.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
       <text:p>Are we building the right product?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
       <text:p>The actual product/software.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:style-name="ce264" office:value-type="string" calcext:value-type="string">
       <text:p>Testing</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
      <table:table-cell table:number-columns-repeated="1021"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="78">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="8">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>waterJet</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>JET anchor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce261" office:value-type="string" calcext:value-type="string">
      <text:p>which language is used for unit testing ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce261" office:value-type="string" calcext:value-type="string">
      <text:p>which tool is used for black box testing / unit testing?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce262" office:value-type="string" calcext:value-type="string">
      <text:p>What is the reason for the position, why is the company expanding? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce262" office:value-type="string" calcext:value-type="string">
      <text:p>How many people are in the team, is it a matrix of different engineering professions? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce262" office:value-type="string" calcext:value-type="string">
      <text:p>What kind of training program is in place, is there a chance to learn new technical skills?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="1048257">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="interview2" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="2" table:default-cell-style-name="ce95"/>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Courage / Persuasion</text:span>: This is your ability to increase your determination to get the job done when you are faced with resistance</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>or a difficult situation. Show the ability to move people towards a commitment to buy or act. Demonstrate that you are fair and nice, but</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>also show that you are aggressive and may even sometimes intimidate others. Don&apos;t be modest. Demonstrate confidence and the fact that</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>you are not easily intimidated. Indicate the desire to influence the thinking of others. Show that you can gain agreement from others via</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>logic, alternatives, and emotional appeals.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Beliefs / Ethics</text:span>: This is your capacity to believe strongly in what you do and emphasize service. </text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Indicate LOYALTY so that the Hiring Manager knows that you won&apos;t quit after three months – or leave your clients hanging and out of the loop. This quality is key to the</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>development of accounts and customer satisfaction. Show that you will act in terms of what is right. Demonstrate that you follow through and actually do what you say you will do.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Commitment</text:span>: This is your capacity for becoming dedicated to your work. You should demonstrate a strong belief in what you do.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Demonstrate that you are willing to make a sacrifice for people when appropriate because you are a COMMITTED person. Show a strong</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>responsibility and commitment to not only the Hiring Manager and the company, but even more importantly, to customers and clients.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Work Orientation / Stamina: This is your capacity to handle mental intensity and hard work. Indicate the high tempo and speed at which</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>you work, and your capacity for endurance. Show that you invest the TIME and ENERGY necessary to get the job done right the first time – consistently.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Interpersonal Skills / Charm</text:span>: This is your capacity to know how</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>and when to get things done with people. Show that you are outgoing</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>and charming, and that you are especially effective in this regard when</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>you have an objective in mind, or need someone to do something.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Demonstrate that you have an intrinsic need to win the approval of</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>others, fit in, and get along. Show that you have the ability to build</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>quick relationships with people.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Discipline</text:span>: Demonstrate that you have inner standards that make you both predictable and productive. Show that you enjoy the</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>responsibility of planning and carrying out your own schedule. Indicate that you can motivate yourself to work on a task until completion.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Competitiveness</text:span>: This is your drive to be better than others. Show that you like to compete and have the desire to win, and show the</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>maturity of knowing how this benefits everyone.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Focus</text:span>: This is your ability to determine what is important, set priorities for tasks, and maintain direction. Show that you understand</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how to set short and long-term objectives, and how to intelligently schedule these objectives so that you hit your goals and complete tasks on time.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Big Picture Thinking</text:span>: This is your ability to see the big picture, and not get bogged down in the minutia of small tasks.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Demonstrate a tendency toward project closure. Show your ability to see &quot;the real goal&quot; and what it takes to get there.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>The most important thing for any project is DELIVERING it</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for this:</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>we need to work as a team</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>respectful to each others</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>Open to critics. Give constructive critics</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>be humble: </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>be competitive</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>improve and push others to improve</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>ethics is needed</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>discipline.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>Commitment.</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the second thing is: beyond work we are humans and can be friends</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Questions to Use to Uncover the Interviewer&apos;s Hidden Needs</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>determination to get the job done when you are faced with resistance or a difficult situation.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I make the manager interven to clarify things, and the team have instructions</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I stay late to make sure integration will work</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>influence others</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>there will come a time when they will ask us our progress. Airbus</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>buy books for debugging</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>David will be upset.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>B. laughed at me</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>is there a better solution. No just joking. If you have one please let us know</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>In disagreement</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I get all the arguments. I see some are wrong. The guy could not listen. Ask others/manager</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>failed in estimating</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Look/be nice to others by giving quick estimates and short</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>ethics</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro74">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>hiring for 4D when going to Canada. And hiring now. </text:p><text:p>hiring for Airbus when I first joined the project</text:p><text:p>Not taking books from GL when people took devices</text:p><text:p>Confidential documents, </text:p><text:p>don&apos;t talk about it with family </text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>commitment</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>working when people stopped at GL</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I was eager to stay late at GL. And offering to stay late</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>staying late at 4D.</text:p><text:p>Coming to work on staturday/sunday at QAC</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro38">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Ubisoft, staying late </text:p><text:p>work directly with the artist and satisfy their needs and be commited to satisfying their goal</text:p><text:p>Abdelhak didn&apos;t have to bother about the technical issuees.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>free the manager of the task</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>Interpersonal Skills / Charm</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I need you help. I am struggling with this. Show humility.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro38">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Productivity document : Not speak in an authorative way. Giving commands. When can you come over ? How can you help ?</text:p><text:p>Enter in a cooperative way of work. I am not their enemy BUT I have to do the job. </text:p><text:p>I forward their concerns to management to get answers</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro38">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>I would like you to do this. </text:p><text:p>These are the benefits.</text:p><text:p>Productivity:When can I come and get you started doing it.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>humble</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce243" office:value-type="string" calcext:value-type="string">
      <text:p>while being competitive, I can still recognize:</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Ahh! You are RIGHT !</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Your solulion is better than mine</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>discipline</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>I have a list of tasks, I get them done. When one is blocked, I move on to the next, or prepare it and get data read for it, get answers about it.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>Indicate that you can motivate yourself to work on a task until completion: I am ready to work when others stop (GL closing, late, week ends)</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>Competitivenss. the drive to improve and encourage others to do so</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I am reading this book/artical it says so and so.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>suggested in Ubisoft/GL annual evaluation meeting that programmers read books/topics and present on it.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>At QAC, using the term nlog(n), time complexity, to alarm the team members to an important knowledge they are missing and need to learn</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>Focused</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>have a list of tasks by priority, when waiting on data for one task/feedback, move on to the next or prepare for it</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro65">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Big Picture Thinking</text:span>: Demonstrate a tendency toward project closure. And what it takes to get there.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>deliver not the perfect solution</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>leadership</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>qac: qdata discovery. Teaching and sharing the prize</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>seneca: group work with no lead. To help towards going to delivering</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>tell me about yourself</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I like technical challenges</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I get along with people easily</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>asking for help, and show how that was helpful</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I participate in going to the objective</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>by discipline</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>by commitment</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>help, offering help</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>suggesting a plan, or getting one and show us the way</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I am commited</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>I push toward commitment and completion of tasks</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>share knowledge and how to get it</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="6">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
      <text:p>faire and nice but can intimidate others and not easily intimidated and show confidence</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce266" office:value-type="string" calcext:value-type="string">
      <text:p>indicate the desire to influence the thinking of others</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce266"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell/>
    </table:table-row>
   </table:table>
   <table:table table:name="optim" table:style-name="ta1">
    <table:shapes>
     <draw:frame draw:z-index="0" draw:name="Image 4" draw:style-name="gr2" draw:text-style-name="P2" svg:width="123.02mm" svg:height="71.26mm" svg:x="186.41mm" svg:y="703.25mm">
      <draw:image xlink:href="">
       <office:binary-data>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
        UEExVVFSaBYIgAAIgAAIgAAIgAAIgAAICAQgpmAOIAACIAACIAACIAACIAACIOBAAGLKARpO
        AQEQAAEQAAEQAAEQAAEQAAGIKdgACIAACIAACIAACIAACIAACDgQgJhygIZTQAAEQAAEQAAE
        QAAEQAAEQABiCjYAAiAAAiAAAiAAAiAAAiAAAg4EIKYcoOEUEAABEAABEAABEAABEAABEICY
        gg2AAAiAAAiAAAiAAAiAAAiAgAMBiCkHaDgFBEAABEAABEAABEAABEAABCCmYAMgAAIgAAIg
        AAIgAAIgAAIg4EAAYsoBGk4BARAAARAAARAAARAAARAAAYgp2AAIgAAIgAAIgAAIgAAIgAAI
        OBCAmHKAhlNAAARAAARAAARAAARAAARAAGIKNgACIAACIAACIAACIAACIAACDgQgphyg4RQQ
        AAEQAAEQAAEQAAEQAAEQgJiCDYAACIAACIAACIAACIAACICAAwGIKQdoOAUEQAAEQAAEQAAE
        QAAEQAAEIKZgAyAAAiAAAiAAAiAAAiAAAiDgQABiygEaTgEBEAABEAABEAABEAABEAABiCnY
        AAiAAAiAAAiAAAiAAAiAAAg4EICYcoCGU0AABEAABEAABEAABEAABEAAYgo2AAIgAAIgAAIg
        AAIgAAIgAAIOBCCmHKDhFBAAARAAARAAARAAARAAARCAmIINgAAIgAAIgAAIgAAIgAAIgIAD
        AYgpB2g4BQRAAARAAARAAARAAARAAAQgpmADIAACIAACIAACIAACIAACIOBAAGLKARpOAQEQ
        AAEQAAEQAAEQAAEQAAGIKdgACIAACIAACIAACIAACIAACDgQgJhygIZTQAAEQAAEQAAEQAAE
        QAAEQABiCjYAAiAAAiAAAiAAAiAAAiAAAg4EIKYcoOEUEAABEAABEAABEAABEAABEICYgg2A
        AAiAAAiAAAiAAAiAAAiAgAMBiCkHaDgFBEAABEAABEAABEAABEAABCCmYAMgAAIgAAIgAAIg
        AAIgAAIg4EAAYsoBGk4BARAAARAAARAAARAAARAAAYgp2AAIgAAIgAAIgAAIgAAIgAAIOBCA
        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
        F8gw7wAAAABJRU5ErkJggg==
       </office:binary-data>
       <text:p/>
      </draw:image>
     </draw:frame></table:shapes>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1024" table:default-cell-style-name="ce1"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>What is optimization?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Changes that you accommodate to achieve the same objective with less resources. (CPU, GPU, Memory, Network bandwidth, Persistent storage (hard disk), Etc…)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Sometimes you compromise one resource to gain performance in another.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Why focus on CPU based Optimization ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>CPUs are getting better and better. memory latency has not improved as the same rate as CPU cycles</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>high level optimization: data structures, algorithms</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>mid level optimization: </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>create objects only when really needed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pass by ref to avoid copying data, const to assist the compiler to apply some optimizations, avoid return value (hb-so copying is avoided ?),</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell/>
     <table:table-cell table:style-name="ce267" office:value-type="string" calcext:value-type="string">
      <text:p>It is possible that it might be faster to pass by value, because the data might end on the stack.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>prefix operator</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>initialization list at constructon of parent object. This initializes child objects at their construction and no need for an assignment operator in the body of the constructor</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>avoid default construtor+assignment operator</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inline functions, so no call is made (jumping, push pop the stack, )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>travers contiguous memory (to use prefetching)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Return value optimization. The temp obj is not created, but the assigned obj in the caller is handled directly</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>const RKVector GetSomeVector()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>const RKVector GetSomeVector()</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1014"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1014"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int iX=0,iY=1,iZ=0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>int iX=0,iY=1,iZ=0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1014"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>. . .</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>RKVector rV(iX,iY,iZ);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1014"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return RKVector(iX,iY,iZ); //Return constructor arguments instead of named objects</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>. . .</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1014"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="2"/>return rV; <text:s/>//no RVO is possible here.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1014"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>….</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="5"/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1014"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>RKVector vA = GetSomeVector();</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>A compiler could just pass the arguments to the obj in the caller, or create vA and pass its address in a hidden way to the called function that will manipulate it, ….</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>but since this is not garanteed, we might just pass the address of vA to the function and manipulate it there, the function returns void then</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Note:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Returning an object of built-in type from a function usually carries little to no overhead, since the object typically fits in a CPU register.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Returning a larger object of class type may require more expensive copying from one memory location to another.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Use Explicit Constructors, to fully control creation of objects and prevent the compiler from convert/creating objects wihout our knowing</text:p><text:p>And also keep function arguments to basic data types when possible</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>can default/copy constructors be explicit ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1021"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell/>
     <table:table-cell table:style-name="ce40" office:value-type="string" calcext:value-type="string"><text:p>use const:<text:span text:style-name="T50">enables the compiler to do more optimizaation, making the code tighter</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>register allocation to local variables. That is it operates the variable from register, than memory.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8" office:value-type="string" calcext:value-type="string"><text:p>For the compiler to allocate registers to local variables and global ones, don&apos;t get their addresses. <text:span text:style-name="T14">If necessary to pass </text:span></text:p><text:p><text:span text:style-name="T14">    A ref or a pointer to a function, then copy them and pass the copy address.</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro41">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>* Until the inline operator becomes part of standard C, macros are the only portable way of generating inline code. Inline code is often necessary in embedded systems in </text:p><text:p>Order to achieve the required performance level.(<text:a xlink:href="http://www.rmbconsulting.us/a-c-test-the-0x10-best-questions-for-would-be-embedded-programmers" xlink:type="simple">http://www.rmbconsulting.us/a-c-test-the-0x10-best-questions-for-would-be-embedded-programmers</text:a>)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>* the ternary conditional operator ( a?b:c;).  This exists in C because it allows the compiler to potentially produce more optimal code than an </text:p><text:p>if-then-else sequence. (see conditional move)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Low Level Optim</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>LHS</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>avoid code that loads from mem over and over again the same data</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>the compiler must be informed that a pointer to a data is unique in the function, so it doesn&apos;t have to store it after each use and load it again for the next use.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce268" office:value-type="string" calcext:value-type="string">
       <text:p>void DoA(int* a_pX)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>void DoB(int* a_piX, int* a_piY)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce268" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce268" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>*a_pX = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>*a_piX = 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce268" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>*a_pX *=2;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>*a_piY *=2;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce268" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>*a_piX *=2;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>Compiler only loads a_pX once and Stores at the end.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>Every single time a_piX or a_piY is accessed he CPU will have to reload them</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>Because It cannot reliably assert that a_piX and a_piY are pointing do different area in memory.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>void DoB(int a_iIntX)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>. . .</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>float fScale = a_iIntX * fFactor;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>. . .</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>int to float vis~vis causes a LHS(mainly PPC), because Requires int value to be passed to a Floating Point register.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>Values pass from different registers sets(Floating point register, Integer registers) via memory(cache)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="4"/>
      <table:table-cell table:style-name="ce95"/>
      <table:table-cell table:number-columns-repeated="1017"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
       <text:p>Solution</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce40" office:value-type="string" calcext:value-type="string">
       <text:p>use restrict, or load to local variables, perform operations on locals then store it back.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>void DoB(int* __restrict__ a_piX, int* <text:s/>__restrict__ a_piY)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>void DoB(int* a_piX, int* <text:s/>a_piY)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>*a_piX += 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>int x = *a_piX + 10;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>*a_piY *=2;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>int y = *a_piY * 2;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>*a_piX *=2;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>X *=2;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>*a_piX = x;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95"/>
      <table:table-cell table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>*a_piY = y;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="6"/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1015"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Branching</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>CPU&apos;s have branch prediction mechanism that tries to guess the most likely branch to execute.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Branch miss-prediction in a CPU can cause a pipeline flush.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
       <text:p>Aim is to reduce branching, especially on a CPU with long pipeline.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
       <text:p>solutions</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
       <text:p>0-optimize a branch <text:s/>into a conditional move.(see below) to remove the branch prediciton penalty</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>1-using computation over branching</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
       <text:p>Eg: for comparing if a variable is within range:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce269" office:value-type="string" calcext:value-type="string">
       <text:p>if( unsigned(i – min_i) &lt;= unsigned(max_i – min_i))</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce270" office:value-type="string" calcext:value-type="string">
       <text:p>Instead of :</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce269" office:value-type="string" calcext:value-type="string">
       <text:p>If( i &gt;= min_i &amp;&amp; i&lt;= max_i )</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce271" office:value-type="string" calcext:value-type="string"><text:p>2-U<text:span text:style-name="T83">sing lookup table</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce271" office:value-type="string" calcext:value-type="string">
       <text:p>Eg:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>a = b ? c : d;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce271" office:value-type="string" calcext:value-type="string">
       <text:p>replace with:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>static const type lookup_table[] = { d, c };</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce269" office:value-type="string" calcext:value-type="string">
       <text:p>a = lookup_table[b];</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce271" office:value-type="string" calcext:value-type="string"><text:p>3-<text:span text:style-name="T83">Loop Un-rolling</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce273" office:value-type="string" calcext:value-type="string">
       <text:p>Reduce number of iterations by repeating the contents in the Inner Loop.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce274" office:value-type="string" calcext:value-type="string">
       <text:p>Can any loop be unrolled ? What is the drawback of unrolling ?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>int iCount = m_iSize;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>int iReminder = m_iSize % 4;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>for(int i=0; i&lt;iCount; i+=4)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>PERFORM_op(i);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>PERFORM_op(i+1);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>PERFORM_op(i+2);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>PERFORM_op(i+3);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>for(int i=iCount-iReminder; i&lt;iCount; ++i)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="2"/>PERFORM_op(i);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro40">
      <table:table-cell table:style-name="ce95"/>
      <table:table-cell table:style-name="ce275" office:value-type="string" calcext:value-type="string"><text:p>4-S<text:span text:style-name="T83">hort circuiting</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce273" office:value-type="string" calcext:value-type="string">
       <text:p>“SOME” processors can take advantage of short-circuting by avoiding some branches.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce273" office:value-type="string" calcext:value-type="string">
       <text:p>This is only so you are aware, ideally don&apos;t rely on this!</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>if (p_reader)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="7"/>status = p_reader-&gt;write(origin_x);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="7"/>status = status &amp;&amp; p_reader-&gt;write(origin_y);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="7"/>status = status &amp;&amp; p_reader-&gt;write(height);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="7"/>status = status &amp;&amp; p_reader-&gt;write(width);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>7-alignment (taken from game code complete)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce276"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
       <text:p>the compiler will align fields on an optimale byte boundry: N-byte data is memory aligned if the starting address is evenly divisible by N.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
       <text:p>the cpu reads and writes memory-aligned data much faster than other data</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:number-rows-repeated="4">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
      <text:p>5-prefetching</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce272"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
      <text:p>5.1-prefetching – packing data </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p>packing data in memory saves memory and optimizes CPU (due to less cache misses) (taken from game code complete)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string"><text:p>#pragma <text:span text:style-name="T16">pack</text:span>(push, 1)   //the compiler is forced to place member variables on 1 byte boundry</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p>struct ReallySlowStruct <text:s/>//this is packed, but accesses to unaligned fields kills the CPU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="7"/>c:6;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>__int64 <text:s/>d:64;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int <text:s text:c="10"/>b:32;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="7"/>a:8;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p>struct SlowStruct <text:s/>//this is packed, but accesses to unaligned fields kills the CPU. I don&apos;t see any difference between this and ReallySlowStruct</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="10"/>c;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>__int64 <text:s text:c="4"/>d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int <text:s text:c="13"/>b;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="10"/>a;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p>struct SlowStruct <text:s/>//this is packed, and accesses to fields are aligned so CPU friendly</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>__int64 <text:s text:c="4"/>d;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>int <text:s text:c="13"/>b;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="10"/>c;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="10"/>a;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char <text:s text:c="10"/>unsed[2]; <text:s/>//What is this for ? <text:s text:c="34"/>To have the next element of SlowStruct aligned in an array of SlowStruct.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
      <text:p>};</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string"><text:p>#pragma <text:span text:style-name="T16">pack</text:span>(pop)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce144"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
      <text:p>5.3-prefetching – Data Oriented Design </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>insertion deletion in array is faster than linked list. Complexity analysis is a rough estimate only (Bjarne). Thanks to prefetch (taken from Modern C++ Shurt!)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>an array of AI, physic, graphics. Pointed by heterogeneous objects</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>(taken from game code complete)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce144" office:value-type="string" calcext:value-type="string">
       <text:p>example given is array accesses and cmps column order access vs row order access</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce144"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>worst example</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>class Bot</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>… <text:s/>//cached unused data</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>vec3 m_position;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>… <text:s/>//cached unused data</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>float m_mod;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>… <text:s/>//cached unused data</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>float m_aimDirection;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>… <text:s/>//cached unused data</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>void updateAim(vec3 target)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>m_aimDirection=dot3(m_position , target) * m_mod; //data cache miss for each of the parameters for the formula</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272" office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>an optimal code is</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="4">
      <table:table-cell/>
      <table:table-cell table:style-name="ce272"/>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse" table:number-rows-repeated="12">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>6-conditional move. Which takes advantage of the pipeline and does not make the further stages wait too long for earlier ones</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>SIMD</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>https://www.kernel.org/pub/linux/kernel/people/geoff/cell/ps3-linux-docs/CellProgrammingTutorial/BasicsOfSIMDProgramming.html</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="16">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>run time optimization</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:style-name="Default" table:number-columns-repeated="2"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>&quot;Branch predictor&quot; article on Wikipedia. <text:a xlink:href="http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array?rq=1" xlink:type="simple">http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array?rq=1</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>With a sorted array, the branch predictor achieves its maximum performance with a data dependant branch</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>With a sorted array, the condition data[c] &gt;= 128 is first false for a streak of values, then becomes true for all later values. That&apos;s easy to predict. With an unsorted array, you pay the branching cost.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>modern branch predictors will typically achieve &gt;90% hit rates. But when faced with unpredictable branches with no recognizable patterns, branch predictors are virtually useless.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>branch jumps, jmp, have a significant performance penalty if the predicted result is not right.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>for (unsigned i = 0; i &lt; 100000; ++i)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>// Primary loop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>for (unsigned c = 0; c &lt; arraySize; ++c)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="12"/>if (data[c] &gt;= 128) // if data is sorted, 11 times faster</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="16"/>sum += data[c];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>conditional move ?  <text:a xlink:href="http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array?rq=1" xlink:type="simple">http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array?rq=1</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>If the compiler isn&apos;t able to optimize the branch into a conditional move, you can try some hacks if you are willing to sacrifice readability for performance.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Replace:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>if (data[c] &gt;= 128)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>sum += data[c]; </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>with:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>int t = (data[c] - 128) &gt;&gt; 31;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>sum += ~t &amp; data[c];</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string"><text:p>if... else... branch is to add something when a condition is satisfied. This type of branch can be easily transformed into a conditional move statement, </text:p><text:p>Which would be compiled into a conditional move instruction: cmovl, in an x86 system. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>The branch and thus the potential branch prediction penalty is removed.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>the statment, which would compile directly (without any optimization) into the conditional move instruction in x86</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>sum += data[c] &gt;=128 ? data[c] : 0;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>// <text:s/>Branch - Random</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>seconds = 8.885</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>// <text:s/>Branch - Sorted</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>seconds = 1.528</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>// <text:s/>Branchless - Random</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>seconds = 3.716</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>// <text:s/>Branchless - Sorted</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>seconds = 3.71</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>return value optimization</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce169"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>tail recursion optimization</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce169"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>When the caller returns what ever the callee returns. The callee is the last operation done by the caller. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the optimization that happens here is that the stack of the caller is reused by the callee. There is no frame creation for the callee, in the stack</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the following is NOT a tail recursion function, the caller needs to do the multiplication after the recursive function returns</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int factorial2(int N)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if(N&gt;1)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>return N*factorial2(N-1);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>return 1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>In the following, factorial68_helper IS a tail recursion function</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int factorial68_helper(int N, int acc)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if(N==0)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>return acc;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>return factorial68_helper(N-1, acc*N);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int factorial68(int N)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>return factorial68_helper(N, 1);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>If performance is important, it might worth rewriting a recusive function to be tail-recursive</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro47">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>to create a tail-recursive function : </text:p><text:p>1-create a helper function that uses an accumulator, where answers are combined </text:p><text:p><text:span text:style-name="T14">2-the initial/default case goes into the accumulator (1 in the case of factorial)</text:span></text:p><text:p>3-the last case, returns the accumulator <text:span text:style-name="T14">(0 is the last in the case of factorial)</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce169"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string"><text:p>pipelining <text:a xlink:href="http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array?rq=1" xlink:type="simple">http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array?rq=1</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce8"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string"><text:p>In a typical x86 processor, the execution of an instruction is divided to several stages. Roughly, we have different hardware to deal with different stages. </text:p><text:p>So we do not have to wait for one instruction to finish to start a new one. This is called <text:a xlink:href="http://en.wikipedia.org/wiki/Pipeline_%28computing%29" xlink:type="simple">pipelining</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>In a branch case, the following instruction is determined by the preceding one, so we can not do pipelining. We have to either wait or predict.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro57">
     <table:table-cell/>
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string"><text:p>In a conditional move case, the execution conditional move instruction is divided into several stages, but the earlier stages like Fetch, Decode, </text:p><text:p>does not depend on the result of previous instruction, only latter stages need the result. So we wait a fraction of one instruction&apos;s execution time. </text:p><text:p>This is why the conditional move version is slower than the branch when prediction is easy.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro40">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://web.cs.iastate.edu/~prabhu/Tutorial/title.html" xlink:type="simple">http://web.cs.iastate.edu/~prabhu/Tutorial/title.html</text:a>, pipelining + Computer Performance </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>9:58:05 PM] Evgeny Yashin: ok, recursive can be slow because</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>1: we jump, if compiler won&apos;t make tail recursion optimization, we indeed will be jumping to an address stored in memory and CPU prediction will drop the command queue</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>&gt;I thought the code of the function it will be loaded in the icache. And it will run from there.!!!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>2. recursive function has code than the loop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>3. compiler may not apply optimization, in iterative case it might throw away loop completely</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1023"/>
    </table:table-row>
    <table:table-row table:style-name="ro1" table:number-rows-repeated="1048174">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="77">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="bits" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>right bit shift a negative: char t=0xC1; r=t&gt;&gt;1; r = ??</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>right bit shift a positive: uchar t=0xC1; r=t&gt;&gt;1; r = ??</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:style-name="ce277" office:value-type="string" calcext:value-type="string">
      <text:p>sign-extending for signed variables and zeroextendingfor unsigned variables.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>replace the following by a better operation:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if(v &amp; 1) ++i;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>i+=v&amp;1;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how to clear the least significant bit of an int</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>V &amp;= (1&lt;&lt;32) -1; <text:s/>WroNG</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what about V = (V&gt;&gt;1) &lt;&lt; 1 ?</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>what about V &amp;= ~1;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>how to clear the least significant bit 1 of a non-zero int (0x10<text:span text:style-name="T37">1</text:span>0, 0x1010<text:span text:style-name="T37">1</text:span>, 0x1<text:span text:style-name="T37">1</text:span>00)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>V = V-1 &amp; V;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>check whether a number is a power product of 2 in only one C statement.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce37" office:value-type="string" calcext:value-type="string">
      <text:p>Replace:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>if (data[c] &gt;= 128)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>sum += data[c]; </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
      <text:p>with:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
       <text:p>int t = (data[c] - 128) &gt;&gt; 31;</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell table:style-name="ce169" office:value-type="string" calcext:value-type="string">
       <text:p>sum += ~t &amp; data[c];</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
     </table:table-row>
    </table:table-row-group>
   </table:table>
   <table:table table:name="embedded" table:style-name="ta1">
    <table:shapes>
     <draw:frame draw:z-index="0" draw:name="http://www.embedded.com/content/images/icons/flag-small.png" draw:style-name="gr1" draw:text-style-name="P1" svg:width="2.64mm" svg:height="2.37mm" svg:x="22.57mm" svg:y="14.54mm">
      <draw:image xlink:href="http://www.embedded.com/content/images/icons/flag-small.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad">
       <text:p/>
      </draw:image>
     </draw:frame></table:shapes>
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce144"/>
    <table:table-column table:style-name="co22" table:default-cell-style-name="ce144"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1022" table:default-cell-style-name="ce144"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro75">
     <table:table-cell/>
     <table:table-cell table:style-name="ce278" office:value-type="string" calcext:value-type="string"><text:p><text:a xlink:href="http://www.embedded.com/design/programming-languages-and-tools/4396331/A-Finite-State-Machine-Decision-Algorithm-" xlink:type="simple">A Finite State Machine Decision Algorithm</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce279" office:value-type="string" calcext:value-type="string"><text:p>24 September 1991 <text:a xlink:href="http://www.embedded.com/collections/4396972/4/Algorithms#" xlink:type="simple">Save &amp; Follow</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce279" office:value-type="string" calcext:value-type="string"><text:p>This paper will focus on the decision algorithm and its use as opposed to finite state machine design... <text:a xlink:href="http://www.embedded.com/design/programming-languages-and-tools/4396331/A-Finite-State-Machine-Decision-Algorithm-" xlink:type="simple">Read More</text:a></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="15">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce280" office:value-type="string" calcext:value-type="string">
      <text:p>Will have an understanding of the impact of hardware on the design and implementation of code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce280"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>interrupts programming in embedded</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>JIRA</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>understanding of embedded systems</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce281" office:value-type="string" calcext:value-type="string">
      <text:p>gui programming using Digia QT. Understand the messages, handling, controls children and their containers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Few insructions in gdb, make. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Find the call stack using registers.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>review registers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>object oriented principles</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ui in atsu. Find some code.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Git </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>take notes of what I learned</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>document knowledge</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string">
      <text:p>I mean don&apos;t use , use inline functions instead of macros, and use const variables instead of #defines.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Don&apos;t use</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>use</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1019"/>
    </table:table-row>
    <table:table-row table:style-name="ro74">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>new/delete, </text:p><text:p>avoid exceptions, </text:p><text:p>avoid virtual classes with inheritance, </text:p><text:p>possibly avoid inheritance all together, </text:p><text:p>Be very careful with templates</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>endianness</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>unsigned int t= 1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>char *c = (char *)&amp;t;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>if(*c)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>cout &lt;&lt; &quot;little endian&quot; &lt;&lt; endl; <text:s/>//least significat byte stored first (intel processors, …)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>else</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="8"/>cout &lt;&lt; &quot;big endian&quot; &lt;&lt; endl;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>count the number of bits in a number. See bits sheet</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="12">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce120" office:value-type="string" calcext:value-type="string">
      <text:p>Q: How does, taking the address of local variable result in unoptimized code?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro44">
     <table:table-cell/>
     <table:table-cell table:style-name="ce282" office:value-type="string" calcext:value-type="string">
      <text:p>A: The most powerful optimization for compliler is register allocation. That isit operates the variable from register, than memory. Generally local variables are allocated in registers. However if we take the address of a local variable, compiler will not allocate the variable to register.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Q: What is loop unrolling?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>A: Small loops can be unrolled for higher performance, with the disadvantage of increased code size. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>When a loop is unrolled, a loop counter needs to be updated less oftenandfewer branches are executed. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>If the loop iterates only a few times, it can be fully unrolled,so that the loop overhead completely disappears.eg:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>int countbit1(uint n)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{ </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>int bits = 0;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>while (n != 0)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{if (n &amp; 1) bits++;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>N &gt;&gt;= 1; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>return bits;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>int countbit2(uint n)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{ </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>int bits = 0;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>while (n != 0)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>if (n &amp; 1) bits++;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>if (n &amp; 2) bits++;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>if (n &amp; 4) bits++;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>if (n &amp; 8) bits++;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>n &gt;&gt;= 4;}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>return bits;}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce279" office:value-type="string" calcext:value-type="string">
      <text:p>Q: How does global variable result in unoptimized code?A: For the same reason as getting address of local variable, compiler will never put the global variable into register. So its bad.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro38">
     <table:table-cell/>
     <table:table-cell table:style-name="ce279" office:value-type="string" calcext:value-type="string">
      <text:p>Q: So how to overcome this problem?A: When it is necessary to take the address of variables, (for example if they are passed as areference parameter to a function). Make a copy of the variable, and pass the address of that copy.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro76">
     <table:table-cell/>
     <table:table-cell table:style-name="ce118" office:value-type="string" calcext:value-type="string"><text:p>Q: Which is better a char, short or int type for optimization?A: Where possible, it is best to avoid using char and short as local variables.</text:p><text:p>For the types  char and short the compiler needs to reduce the size of the local variable to 8or 16 bitsafter each assignment. This is called sign-extending for signed variables and zero extending for unsigned variables. It is implemented by shifting the register left by 24 or16bits, followed by a signed or unsigned shift right by the same amount, taking twoinstructions (zero-extension of an unsigned char takes one instruction).</text:p><text:p>These shifts can be avoided by using int and unsigned int for local variables. Thisis particularly important for calculations which first load data into local variables and thenprocess the data inside the local variables. Even if data is input and output as 8- or 16-bit quantities, it is worth considering processing them as 32-bit quantities.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.rmbconsulting.us/a-c-test-the-0x10-best-questions-for-would-be-embedded-programmers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce279" office:value-type="string" calcext:value-type="string">
      <text:p>1. Using the #define statement, how would you declare a manifest constant that returns the number of seconds in a year? Disregard leap years in your answer.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283" office:value-type="string" calcext:value-type="string">
      <text:p>#define SECONDS_PER_YEAR (60UL * 60UL * 24UL * 365UL)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283" office:value-type="string" calcext:value-type="string">
      <text:p>I’m looking for several things here:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce284" office:value-type="string" calcext:value-type="string">
      <text:p>(a)    Basic knowledge of the #define syntax (i.e. no semi-colon at the end, the need to parenthesize etc.).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283" office:value-type="string" calcext:value-type="string">
      <text:p>(b)    A good choice of name, with capitalization and underscores.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro38">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283" office:value-type="string" calcext:value-type="string">
      <text:p>(c)    An understanding that the pre-processor will evaluate constant expressions for you. Thus, it is clearer, and penalty free to spell out how you are calculating the number of seconds in a year, rather than actually doing the calculation yourself.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro33">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283" office:value-type="string" calcext:value-type="string">
      <text:p>(d)    A realization that the expression will overflow an integer argument on a 16 bit machine – hence the need for the L, telling the compiler to treat the expression as a Long.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro38">
     <table:table-cell/>
     <table:table-cell table:style-name="ce283" office:value-type="string" calcext:value-type="string">
      <text:p>(e)    As a bonus, if you modified the expression with a UL (indicating unsigned long), then you are off to a great start because you are showing that you are mindful of the perils of signed and unsigned types – and remember, first impressions count!</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Memory accesses, CPU, GPU</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>grabbing a piece of VRAM for sth, the bits have to be sent across the bus to system RAM </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>for this, an depending on the architecture, the CPU and the GPU must argue for a moment about timing, then they stream the bits. All the while, the game has come to a complete halt.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>this problem was back in the days of fixed function pipelines, when anything not supported by the video card had to be done by the CPU, such as the first attempts at motion blur.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>with programmable pipelines, you can create shaders that can run directly on the bits stored in VRAM.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>but still, communication between the CPU and the video card should be limited. If we send anything, it is best to send it in batches.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>The GPU in you video card is simply painting the screen using the components in VRAM. It it ever has to stop and ask system RAM for sth, your game won&apos;t run as fast as it could</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">optimizing memory access</text:span> (from game coding complete) aka prefetching</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Make your code/data do as much work as possible on data that is already in the cache</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>example given is array accesses: cmp column order access vs row order access</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>packing data in memory saves memory and optimizes CPU (due to less cache misses)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>Alignment</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the compiler will align fields on an optimale byte boundry: N-byte data is memory aligned if the starting address is evenly divisible by N.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the cpu reads and writes memory-aligned data much faster than other data</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>how to align an address</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce279" office:value-type="string" calcext:value-type="string">
      <text:p>uintptr_t mask = ~(uintptr_t)(align - 1);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce279" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>void *mem = malloc(1024+align-1);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce279" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>void *ptr = (void *)(((uintptr_t)mem+align-1) &amp; mask);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce285" office:value-type="string" calcext:value-type="string">
      <text:p>Fixed-point floats</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce285" office:value-type="string" calcext:value-type="string">
      <text:p>describe function call. In risc and cisc</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce140" office:value-type="string" calcext:value-type="string">
      <text:p>12. What does the following code output and why?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>void foo(void)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>{</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>unsigned int a = 6;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>int b = -20;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>(a+b &gt; 6) ? puts(“&gt; 6”) : puts(“&lt;= 6”);</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
     <table:table-row table:style-name="ro36" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>the answer is that this outputs “&gt; 6”.  The reason for this is that expressions involving signed and unsigned types have all operands promoted to unsigned types. </text:p><text:p>Thus –20 becomes a very large positive integer and the expression evaluates to greater than 6. This is a very important point in embedded systems where unsigned data </text:p><text:p>Types should be used frequently (see reference 2). </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>“lower type” will be promoted to the type of the “higher type” operand: <text:s/>long double (highest), double, float, unsigned long int, long int, unsigned int, int (lowest).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>what is the output of :</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
      <text:p>cout &lt;&lt; 25u - 50;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>the result will be of unsigned int ( because 25 is, and 50 is promoted from int to unsigned int) : -25 as uint : 4294967271</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58"/>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>ones&apos; complement of the decimal value −5 is ~00000101 : <text:s text:c="4"/>11111010 <text:s text:c="29"/>: The result is a signed binary number representing the decimal value −5 in one&apos;s-complement form.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>twos&apos; complement of the decimal value −5 is ~00000101 + 1 : 11111010 + 1 = 11111011 <text:s/>: The result is a signed binary number representing the decimal value −5 in two&apos;s-complement form.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>The positive value of -128 is not representable in 8 bits </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>the negative of 0 is again 0</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>What are the problems with dynamic memory allocation in embedded systems?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>Here, I expect the user to mention memory fragmentation, problems with garbage collection, variable execution time, etc. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>typedef</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>#define dPS  struct s *</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>typedef  struct s * tPS;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell table:style-name="ce140" office:value-type="string" calcext:value-type="string">
      <text:p>The intent in both cases is to define dPS and tPS to be pointers to structure s.  Which method (if any) is preferred and why? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>dPS p1,p2;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>tPS p3,p4;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>The first expands to</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>struct s * p1, p2;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro21">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>which defines p1 to be a pointer to the structure and p2 to be an actual structure, which is probably not what you wanted. The second example correctly defines p3 &amp; p4 to be pointers.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>union</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Obviously, it&apos;s illegal to write one member and then read another but people do that nevertheless (usually by mistake). <text:s/>C++11FAQ</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce276" office:value-type="string" calcext:value-type="string">
      <text:p>function pointer</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how to define and use a function pointer on the function void print(); ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>void(*message)(void);</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>message = print;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>(*message)();</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro19" table:visibility="collapse">
      <table:table-cell table:number-columns-repeated="1024"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="1048383">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1024"/>
    </table:table-row>
   </table:table>
   <table:table table:name="cheatSheet" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce1"/>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>create objects only when really needed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>initialization list at constructon of parent object. This initializes child objects at their construction and no need for an assignment operator in the body of the constructor</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>avoid default construtor+assignment operator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>pass by ref to avoid copying data, , </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>const to assist the compiler to apply some optimizations</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>avoid return value (hb-so copying is avoided ?),</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>inline functions, so no call is made (jumping, push pop the stack, )</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Return value optimization. The temp obj is not created, but the assigned obj in the caller is handled directly</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro50">
     <table:table-cell table:style-name="ce286" office:value-type="string" calcext:value-type="string">
      <text:p>It is possible that it might be faster to pass by value, because the data might end on the stack.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>prefix operator</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>travers contiguous memory (to use prefetching)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>template</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="Default"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>LHS</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>avoid branching</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:style-name="ce95" office:value-type="string" calcext:value-type="string">
      <text:p>1-using computation over branching</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>2-use look-up table</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="ce287" office:value-type="string" calcext:value-type="string">
      <text:p>3-Loop Un-rolling</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
      <text:p>4-Data Oriented Design</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="TCP IP" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-column table:style-name="co23" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Socket is an end point of communication between two systems on a network.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>a socket is a combination of IP address and port on one system.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>A combination of local socket and the socket at the remote system is also known a ‘Four tuple’ or ‘4-tuple’. Each connection between two processes running at different systems can be uniquely identified through their 4-tuple.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>the communication over the network in TCP/IP model takes place in form of a client server architecture. ie, the client begins the communication and server follows up and a connection is established.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce20" office:value-type="string" calcext:value-type="string">
      <text:p>Bandwidth vs latency</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro11">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string"><text:p>Bandwidth is the amount of data that passes through a network connection over time as measured in bits per second (bps).</text:p><text:p><text:span text:style-name="T84">the theoretical peak bandwidth of a network connection is fixed according to the technology used, </text:span></text:p><text:p><text:span text:style-name="T84">the actual bandwidth you will obtain varies over time and is affected by high latencies.</text:span></text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
     <table:table-row table:style-name="ro11">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T84">In Satellite Internet connections, </text:span>This high latency is due primarily to propagation delay as the request message travels at the speed </text:p><text:p>of light to the distant satellite station and back to the home network. </text:p><text:p>Once the messages arrive on Earth, however, the page loads quickly like on other high-bandwidth Internet connections (DSL or cable).</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro19">
      <table:table-cell table:number-columns-repeated="2"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>What is round-trip time ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro11" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string"><text:p>Very often, latency is measured by the time it takes a given network packet to travel from source to destination and back, </text:p><text:p>The so-called round-trip time.</text:p><text:p>So a packet comes back ? Or is the acknowledgement is what is refered to here.</text:p>
      </table:table-cell>
     </table:table-row>
     <table:table-row table:style-name="ro1" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce204"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce217" office:value-type="string" calcext:value-type="string">
      <text:p>packet delivery time or latency</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>The packet delivery time or latency is the time from the first bit leaves the transmitter until the last is received.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce217" office:value-type="string" calcext:value-type="string">
      <text:p>The transmission time vs the propagation delay</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce288" office:value-type="string" calcext:value-type="string"><text:p>(<text:span text:style-name="T85">http://en.wikipedia.org/wiki/Transmission_time</text:span>)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce289" office:value-type="string" calcext:value-type="string"><text:p>The transmission time should not be confused with the propagation delay, which is the time it takes for the first bit to travel from the sender</text:p><text:p> to the receiver (During this time the receiver is unaware that a message is being transmitted).</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce290" office:value-type="string" calcext:value-type="string">
      <text:p>For all practical purposes you should view TCP receiving as composed of two independent processes:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce290" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>the OS receives the TCP data and ACKs it to the other side, storing it in an internal kernel buffer that&apos;s not accessible to your process</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce290" office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>when you recv or any equivalent system call, the OS copies the data from its internal buffers to your userspace buffer</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>the os will manage resending data if it doesn&apos;t receive an acknowledgement for it.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when using a nonblocking socket, the application does not worry about this</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>when using a blocking socket, the socket function that sends/receives data, will not return until the data gets to/arrives from the other side.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>by default a socket is blocking. For a single threaded app, such as in a game, the socket should be non-blocking otherwise the game will freeze on recv/send.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unsigned long val=1; //1 == non-blocking, 0 == blocking</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>ioctlsocket(m_socket, FIONBIO, &amp;val);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro21">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>you can only call this function on a live socket, meaning a client socket that has been connected to a server or a server that is listening for clients.</text:p><text:p>At that moment, data transmission hasn&apos;t started yet</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>We loop, get recv data, we check the size of the data !!!! needs work</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>server&apos;s IP address is used on client&apos;s side with the function connect(m_sock, (struct sockaddr*)sa, sizeof(sa))</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>client&apos;s IP address is got on server by function getpeername(soket, (struct sockaddr*) name, namelen);</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Tcp connection establishment</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>client sends SYN (a segment with the SYN bit set but no ACK bit set)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>server sends SYN, ACK</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>client sends ACK</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>connection is established and communication starts</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>for every set of packets received, an ACK is sent with <text:span text:style-name="T84">an acknowledgement number field which identifies the number of the next packet expected</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if server does nt receive it, (it will resend them ?)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro2">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>there is <text:span text:style-name="T84">Selective ACK which is used to say &quot;Received bytes 2000-8000, but not 0-2000&quot;</text:span></text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>The exchanged sequence numbers are used to identify lost packets and enable a retry mechanism, and also to reassemble the entire stream of packets in the correct order.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro1">
     <table:table-cell/>
     <table:table-cell table:style-name="ce204" office:value-type="string" calcext:value-type="string">
      <text:p>a message might be split across several packets, and a packet might be split across several datagrams.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
      <text:p>TCP has segments, UDP has datagrams, IP has packets, Ethernet has frames, ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>TCP deals with segments instead of packets. Each TCP segment has a sequence number which is contained inside a TCP header. The actual data sent in a TCP segment is variable. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>There is a value for <text:a xlink:href="http://www.opengroup.org/onlinepubs/009695399/functions/getsockopt.html" xlink:type="simple">getsockopt</text:a> that is supported on some OS that you can use called TCP_MAXSEG which retrieves the maximum TCP segment size (MSS). It is not supported on all OS though.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">Nagle&apos;s algorithm</text:span> works by combining a number of small outgoing messages, and sending them all at once. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Specifically, as long as there is a sent packet for which the sender has received no acknowledgment, </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>the sender should keep buffering its output until it has a full packet&apos;s worth of output, so that output can be sent all at once.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://www.optimizemswindows.com/disable-nagle-algorithm-to-increase-your-internet-speed-for-quick-response/</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>While sending packets of information on a network, your system realizes the capacity of each packet (plane), and the frequency of data protocol (passengers) to be conveyed.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>To reduce the overall network load, data is accumulated until the volume of each packet is occupied. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>hb: so a packet has a max size</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int flag = 1;</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>int result = setsockopt(sock, <text:s text:c="11"/>/* socket affected */</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>IPPROTO_TCP, <text:s text:c="4"/>/* set option at TCP level */</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>TCP_NODELAY, <text:s text:c="4"/>/* name of option */</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="28"/>(char *) &amp;flag, <text:s/>/* the cast is historical cruft */</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="29"/>sizeof(int)); <text:s text:c="3"/>/* length of option value */</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>if (result &lt; 0)</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s text:c="4"/>... handle the error ...</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce163" office:value-type="string" calcext:value-type="string">
      <text:p>TCP delayed acknowledgment</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>TCP delayed acknowledgment is a technique used by some implementations of the <text:a xlink:href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol" xlink:type="simple">Transmission Control Protocol</text:a> in an effort to improve <text:a xlink:href="https://en.wikipedia.org/wiki/Network_performance" xlink:type="simple">network performance</text:a>. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>In essence, several <text:a xlink:href="https://en.wikipedia.org/wiki/ACK_%28TCP%29" xlink:type="simple">ACK</text:a> responses may be combined together into a single response, reducing protocol overhead.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>a host may delay sending an ACK response by up to 500 ms. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Additionally, with a stream of full-sized incoming segments, ACK responses must be sent for every second segment.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>Nagle&apos;s algo AND TCP delayed ack problem</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>For example, consider a situation where Bob is sending data to Carol. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Bob&apos;s socket layer has less than a complete packet&apos;s worth of data remaining to send. Per Nagle&apos;s algorithm, it will not be sent until he receives an ACK for the data that has already been sent. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>At the same time, Carol&apos;s application layer will not send a response until it gets all of the data. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>If Carol is using delayed ACKs, her socket layer will not send an ACK until the timeout is reached.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
      <text:p>out of band data</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>Consider a networking application that <text:a xlink:href="https://en.wikipedia.org/wiki/Tunneling_protocol" xlink:type="simple">tunnels</text:a> data from a remote data source to a remote destination. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>The data being tunneled may consist of any bit patterns. The sending end of the tunnel may at times have conditions that it needs to notify the receiving end about. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>However, it cannot simply insert a message to the receiving end, because that end will not be able to distinguish the message from data sent by the data source. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>But using an out-of-band mechanism, the sending end can send the message to the receiving end out of band. </text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>The receiving end will be notified in some fashion of the arrival of out-of-band data, and it can read the out of band data and know that this is a message intended for it from the sending end,</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p><text:s/>independent of the data from the data source.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>how to specify out of band data ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what happens if a connection is dropped ? what happens at the client&apos;s side? At server&apos;s side ?</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>what is wouldblock return val for send ? What does it mean for it to return 0 ?</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="algo" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="ce95"/>
    <table:table-column table:style-name="co24" table:default-cell-style-name="ce95"/>
    <table:table-column table:style-name="co4" table:number-columns-repeated="1020" table:default-cell-style-name="ce95"/>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://coliru.stacked-crooked.com/a/f031bcac76d6e430</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://stackoverflow.com/questions/337664/counting-inversions-in-an-array</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http://stackoverflow.com/questions/70402/why-is-quicksort-better-than-mergesort</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
      <text:p>consider all possible corner cases and handle large input efficiently. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
      <text:p>write is_permutation, that checks if one string/array/list is a permutation of another</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>equi</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
       <text:p>The problem description is very short: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro73" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce291" office:value-type="string" calcext:value-type="string"><text:p>The equilibrium index of a sequence is an index such that the sum of elements at lower indexes is equal to the sum of elements at higher indexes. </text:p><text:p>For example, in a sequence A: A[0]=-7 A[1]=1 A[2]=5 A[3]=2 A[4]=-4 A[5]=3 A[6]=0 </text:p><text:p>3 is an equilibrium index, because: A[0]+A[1]+A[2]=A[4]+A[5]+A[6] </text:p><text:p>6 is also an equilibrium index, because: A[0]+A[1]+A[2]+A[3]+A[4]+A[5]=0 (The sum of zero elements is zero) </text:p><text:p>7 is not an equilibrium index - because it is not a valid index of sequence A. </text:p><text:p>If you still have doubts, here is a precise definition: The integer k is an equilibrium index of a sequence A[0],A[1]..,A[n-1] if and only if 0&lt;= k and sum(A[0..(k-1)])=sum(A[(k+1)..(n-1)]).</text:p><text:p> Assume the sum of zero elements is equal to zero. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce74"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p>Write a function int equi(int A[], int n)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p>that, given a sequence, returns its equilibrium index (any) or -1 if no equilibrium index exists. Assume that the sequence may be very long. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p>The problem can be solved by using various approaches, the most common being simply to follow the equilibrium definition: int equi ( int A[], int n ) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>int k, m, lsum, rsum; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>for(k = 0; k &lt; n; ++k) { </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>lsum = 0; rsum = 0;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>for(m = 0; m &lt; k; ++m) lsum += A[m]; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>for(m = k + 1; m &lt; n; ++m) rsum += A[m]; <text:s/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>if (lsum == rsum) return k;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>} </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return -1; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p>} </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p>Unfortunately, this approach has two disadvantages: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p>it fails on large input data sets, since the time complexity is O(n2)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p>it fails on large input values (for example if the input array contains values like MIN/MAX_INT) due to the arithmetic overflows</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro74" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce293" office:value-type="string" calcext:value-type="string"><text:p>The solution analysis will detect such problems in submitted code: <text:a xlink:href="http://2.bp.blogspot.com/-WDjJJe0jmPk/TYtNqBYsPuI/AAAAAAAAEXU/I5zXmp4hB9g/s1600/equi-n2-analysis.png" xlink:type="simple"> </text:a> We can fix the first problem with a better algorithm, and the second problem with a better data-type (for example, using long long type instead of int for sum computations). </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro61" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce293" office:value-type="string" calcext:value-type="string">
       <text:p><text:s/>The key observation for better running time is to update the left/right sums in constant time instead of recomputing them from the scratch.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce293" office:value-type="string" calcext:value-type="string">
       <text:p>int equi(int arr[], int n) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>if (n==0) return -1; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>long long sum = 0;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>int i; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>for(i=0;i&lt;n;i++) sum+=(long long) arr[i]; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>long long sum_left = 0; <text:s text:c="3"/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>for(i=0;i&lt;n;i++) {</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>long long sum_right = sum - sum_left - (long long) arr[i];</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>if (sum_left == sum_right) return i;</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="8"/>sum_left += (long long) arr[i];</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>} </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p><text:s text:c="4"/>return -1; </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292" office:value-type="string" calcext:value-type="string">
       <text:p>} </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="4">
      <table:table-cell/>
      <table:table-cell table:style-name="ce292"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce221"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce294" office:value-type="string" calcext:value-type="string">
      <text:p>an arithmetic progression :</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro22" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>given a number N as Input and then N numbers followed (where 3&lt;=N&lt;=2500). These N numbers were part of an Arithmetic Progression (of size N+1) from which one number was removed. So the task was to find that Missing number. For instance</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>5 ,</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>1 3 5 9 11 <text:s/></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>The output is 7</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string">
       <text:p>the step d is constant (2 in the example below)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro53" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce221" office:value-type="string" calcext:value-type="string"><text:p>To find the Xn which is the nth element in an AP use the fomula : Xn = X1 + (n-1) d</text:p><text:p>Where </text:p><text:p>X1 : is the first element in the sequence</text:p><text:p>_d: is the constance difference</text:p><text:p>_n is index of the element wanted </text:p><text:p/><text:p>1+2(4-1) = 1 + 2*3 = 7</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro63" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>The sum is = a + (a+d) + (a+2d) + (a+3d) + …</text:p><text:p>The sum is = n/2 ( 2a + (n-1)d )</text:p><text:p>Where n is the number of elements</text:p><text:p>Ex:</text:p><text:p>The sum of the serie above is: </text:p><text:p>6/2 ( 2 + (5)2 ) = 36</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>To find the step : <text:s/>(lastnumber – firstnumber) / n-1</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro34" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>the sum of 0, 1, 2, 3, 4 … n </text:p><text:p>= n*(n-1)/2, which is a special case of the one used for arithmetic progression above</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>count the number of consecutive integer elements in an array</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce43" office:value-type="string" calcext:value-type="string">
       <text:p>Given I have an array such as follows: </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro21" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>arr = [8, 13, 14, 10, 6, 7, 8, 14, 5, 3, 5, 2, 6, 7, 4] </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro41" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce72" office:value-type="string" calcext:value-type="string"><text:p>I would like to count the number of consecutive number sequences. </text:p><text:p>Eg in the above array the consecutive number sequences (or array-slices) are:</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>[13,14]</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>[6,7,8]</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>[6,7] </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro24" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>And hence we have 3 such slices. What is an efficient Algorithm to count this? I know how I can do it O(N^2) but I&apos;m looking for something which is better than that.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
       <text:p>solution</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>arr = [8, 13, 14, 10, 6, 7, 8, 14, 5, 3, 5, 2, 6, 7, 4]</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>result = []</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>stage = []</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>for i in arr:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>if len(stage) &gt; 0 and i != stage[-1]+1:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>if len(stage) &gt; 1:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="12"/>result.append(stage)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="8"/>stage = []</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p><text:s text:c="4"/>stage.append(i)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70" office:value-type="string" calcext:value-type="string">
        <text:p>print result</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce70"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce70"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>https://www.hackerrank.com/challenges/missing-numbers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>bitwise</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>X ^ 0 = X</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>swap A and B</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>A=A^B</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>B=A^B</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>A=A^B</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>but make sure A != B</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="5">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>double const → int :</text:p><text:p>Int rrr = 1.e6;</text:p><text:p>Cout &lt;&lt; &quot;, 0x&quot; &lt;&lt; hex &lt;&lt; rrr &lt;&lt;&quot;, &quot;&lt;&lt; dec &lt;&lt; rrr &lt;&lt; endl; </text:p><text:p><text:span text:style-name="T14">0xf4240, 1000000</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce295"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>conversion</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro34">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string"><text:p>2- isn&apos;t this an issue? setting a long value into an uint32 var ? what if this code is run in a machine where long is 64 bits ?</text:p><text:p><text:span text:style-name="T86">static const Poco::UInt32 TRANSACTION_REPEATABLE_READ = 0x00000004L;</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce297"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce98"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
       <text:p>No. It&apos;s called a &quot;narrowing conversion&quot;, and it&apos;s perfectly legal. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
       <text:p>If the value (4 in this case) can be represented by the destination type, it&apos;s going to be stored.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro67">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string"><text:p>If it can&apos;t be stored (exceeds the range of the destination type), then the behavior is implementation-defined.</text:p><text:p>G++ issues warning</text:p><text:p><text:span text:style-name="T14">warning: overflow in implicit constant conversion [-Woverflow]</text:span></text:p><text:p><text:span text:style-name="T14">  char tt= 1000;</text:span></text:p><text:p><text:span text:style-name="T14">           ^</text:span></text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro62">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>&quot;narrowing conversion&quot; is illegal in an array:</text:p><text:p>error: narrowing conversion of ‘-1.0e+6’ from ‘double’ to ‘int’ inside { } [-Wnarrowing]</text:p><text:p>  int array[]={11,9,7,5,3,1,-1.e6};</text:p><text:p>                                      ^</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
       <text:p>(msdn) Narrowing conversions are conversions that cannot be proved to always succeed, conversions that are known to possibly lose information, and conversions across domains of types sufficiently different to merit narrowing notation.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce298" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any type to a more derived type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Numeric type conversions in the following direction: Double, Single, Decimal, Long, Integer, Short, Byte. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce298" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from Boolean to any numeric type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce298" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any numeric type to Boolean.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce298" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any numeric type to any enumerated type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any enumerated type to any type its underlying type has a narrowing conversion to.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any enumerated type to any other enumerated type. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any class type to any interface type, provided the class type does not implement the interface type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any interface type to any class type. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any interface type to any value type that implements the interface type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any interface type to any other interface type, provided there is no inheritance relationship between the two types.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from an array type S with an element type SE, to a covariant-array type T with an element type TE, provided that all of the following are true: </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>S and T differ only in element type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Both SE and TE are reference types.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>A narrowing reference conversion exists from SE to TE.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from String to Char.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from String to Char().</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from String to Boolean and from Boolean to String.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions between String and Byte, Short, Integer, Long, Decimal, Single, or Double.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from String to Date and from Date to String.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce296"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce300"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
       <text:p>msdn: Widening conversions never overflow but may entail a loss of precision.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce298" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any derived type to one of its base types.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Numeric type conversions in the following direction: Byte, Short, Integer, Long, Decimal, Single, Double. Conversions from Integer to Single, Long to Single or Double, or Decimal to Single or Double may cause a loss of precision, but will never cause a loss of magnitude. The other widening numeric conversions never lose any information.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce298" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from the literal Nothing to any type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro25" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce298" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from the literal 0 to any enumerated type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any enumerated type to its underlying type, or to any type that its underlying type has a widening conversion to.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from any reference or value type to an interface type that the value or reference type implements.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from an array type S with an element type SE to a covariant-array type T with an element type TE, provided all of the following are true: </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>S and T differ only in element type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Both SE and TE are reference types.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>A widening reference conversion exists from SE to TE.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from Char to String.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from Char() to String.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce299" office:value-type="string" calcext:value-type="string">
        <text:p>Conversions from a constant expression of type Long, Integer, Short, or Byte to a narrower type, provided the value of the constant expression is within the range of the destination type.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce296"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="22">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce301" office:value-type="string" calcext:value-type="string">
      <text:p>techniques</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce302" office:value-type="string" calcext:value-type="string">
       <text:p>Question 1: construct a number in the inverse order of another.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce302" office:value-type="string" calcext:value-type="string">
       <text:p>Question 6</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce302" office:value-type="string" calcext:value-type="string">
       <text:p>to find duplicate objects in an array, series, … use </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce302" office:value-type="string" calcext:value-type="string">
        <text:p>Sorting o(nlogn), </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce302" office:value-type="string" calcext:value-type="string">
        <text:p>hashtable o(n) to accommodate the hash table</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce302" office:value-type="string" calcext:value-type="string">
        <text:p>put numbers in the index they correspond to: value 1 goes to array[1], and so on</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce302"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce302"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce303" office:value-type="string" calcext:value-type="string">
       <text:p>Question 7-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce302" office:value-type="string" calcext:value-type="string">
       <text:p>going from a 2d array to an 1d array.(already know it) question 7 goes from 1d to 2d array</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce303"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce302" office:value-type="string" calcext:value-type="string">
       <text:p>Question 8-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce302" office:value-type="string" calcext:value-type="string">
       <text:p>binary search in a diagonal way. complexe way = the common way of doing binary search + in a non-linear array</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce302"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce303" office:value-type="string" calcext:value-type="string">
       <text:p>Question 17-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce302" office:value-type="string" calcext:value-type="string">
       <text:p>get the number of elements in a loop list</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce302"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
       <text:p>Question 83-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro44">
      <table:table-cell/>
      <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
       <text:p>use the binary search algo to find the first and last occurence of an element in a sorted array, then substract the first occurence&apos;s index from the last occurence&apos;s index to get the number of occurences.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
       <text:p>instead of using it just to find the element and linearly search on the left and on the right for the other occurences.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce74"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce304" office:value-type="string" calcext:value-type="string">
       <text:p>Greedy Algorithm (codility lessons)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>For a given set of denominations, you are asked to find the minimum number of coins with which a given amount of money can be paid.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>That problem can be approached by a greedy algorithm that always selects the largest denomination not exceeding the remaining amount of money to be paid.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p><text:s/>As long as the remaining amount is greater than zero, the process is repeated.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>A correct algorithm should always return the minimum number of coins. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce305" office:value-type="string" calcext:value-type="string">
        <text:p>It turns out that the greedy algorithm is correct for only some denomination selections, but not for all.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro34" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>For example, for coins of values 1, 2 and 5 the algorithm returns the optimal number of coins for each amount of money, </text:p><text:p>But for coins of values 1, 3 and 4 the algorithm may return a suboptimal result.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>An amount of 6 will be paid with three coins: 4, 1 and 1 by using the greedy algorithm. The optimal number of coins is actually only two: 3 and 3.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>The greedy algorithm for finding change:</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro12" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="ce306" office:value-type="string" calcext:value-type="string"><text:p>def greedyCoinChanging(M, k):</text:p><text:p>     n = len(M)</text:p><text:p>     result = []</text:p><text:p>     for i in xrange(n - 1, -1, -1):</text:p><text:p>         result += [(M[i], k // M[i])]</text:p><text:p>         K %= M[i]</text:p><text:p>return result</text:p><text:p/>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro21" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string"><text:p>The function returns the list of pairs: denomination, number of coins. </text:p><text:p>The time complexity of the above algorithm is O(n) as the number of coins is added once for every denomination.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce64" office:value-type="string" calcext:value-type="string">
       <text:p>dynamic programming (codility lessons)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group table:display="false">
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
        <text:p>Enumeration of the Fibonacci numbers can be done faster simply by using a basis of dynamic programming. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
        <text:p>We can calculate the values F 0 , F 1 , . . . , F n based on the previously calculated numbers (it is sufficient to remember only the last two values).</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string">
        <text:p>Faster algorithms for Fibonacci numbers</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro20" table:visibility="collapse">
       <table:table-cell/>
       <table:table-cell table:style-name="Default" office:value-type="string" calcext:value-type="string"><text:p>1  1 ^ n</text:p><text:p>1  0</text:p><text:p/><text:p>Or</text:p><text:p>Fibn = ((1+sqrt(5)/2)^n – (1-sqrt(5)/2)^n) / sqrt(5)</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="2">
       <table:table-cell/>
       <table:table-cell table:style-name="Default"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce304" office:value-type="string" calcext:value-type="string">
       <text:p>counting numbers</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row-group>
      <table:table-row table:style-name="ro73">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>A numerical sequence can be stored in an array in various ways. In the standard approach, the consecutive numbers a 0 , a 1 , . . . , a n−1 are usually put into the corresponding consecutive</text:p><text:p>indices of the array:</text:p><text:p>A[0] = a 0</text:p><text:p>A[1] = a 1</text:p><text:p>...</text:p><text:p>A[n − 1] = a n−1</text:p><text:p/>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>We can also store the data in a slightly different way, by making an array of counters. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro34">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string"><text:p>Each number may be counted in the array by using an index that corresponds to the value of the given number.</text:p><text:p>It is important that the array in which we count elements is sufficiently large.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>Counting the number of negative integers can be done in two ways. </text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>The first method is to add some big number to each value: so that, all values would be greater than or equal to zero.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
        <text:p>In the second method, we simply create a second array for counting negative numbers.</text:p>
       </table:table-cell>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
      <table:table-row table:style-name="ro32" table:number-rows-repeated="10">
       <table:table-cell/>
       <table:table-cell table:style-name="ce74"/>
       <table:table-cell table:number-columns-repeated="1020"/>
      </table:table-row>
     </table:table-row-group>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce74"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
       <text:p>Sums – prefix</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce74" office:value-type="string" calcext:value-type="string">
       <text:p>There is a simple yet powerful technique that allows for the fast calculation of sums of elements in given slice (contiguous segments of array).</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="6">
      <table:table-cell/>
      <table:table-cell table:style-name="ce74"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce98"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce307" office:value-type="string" calcext:value-type="string">
      <text:p>Questions</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce307" office:value-type="string" calcext:value-type="string">
      <text:p>numbers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
       <text:p>Question 1-Please implement a function that checks whether a positive number is a palindrome or not. For example, 1342431 is a palindrome, but 123 is not.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce300"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro62">
      <table:table-cell/>
      <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
       <text:p>Question 5 An array contains n numbers ranging from 0 to n-2. There is exactly one number duplicated in the array. How do you find the duplicated number? For example, if an array with length 5 contains numbers {0, 2, 1, 3, 2}, the duplicated number is 2.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
      <table:table-cell/>
      <table:table-cell table:style-name="ce300"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro25">
      <table:table-cell/>
      <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
       <text:p>Question 6</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="2"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>x1+d*(n-1)</text:p>
      </table:table-cell>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>N/2(2*x1 + (n-1) d)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1016"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string">
       <text:p>An array contains n numbers ranging from 0 to n-1. There are some numbers duplicated in the</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string">
       <text:p>array. It is not clear how many numbers are duplicated or how many times a number gets duplicated. How do you</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>find a duplicated number in the array? For example, if an array of length 7 contains the numbers </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{2, 3, 1, 0, 2, 5, 3}, the implemented function (or method) should return either 2 or 3.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro77">
      <table:table-cell/>
      <table:table-cell table:style-name="ce231" office:value-type="string" calcext:value-type="string"><text:p>Question 10</text:p><text:p>Given two sorted arrays, denoted as array1 and array2, please merge them into array1 and keep the merged array sorted. Suppose there is sufficient vacant memory at the end of array1 to accommodate elements of array2.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="ce231"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro33">
      <table:table-cell/>
      <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
       <text:p>Question 69-How do you find the median from a stream of numbers?</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro38">
      <table:table-cell/>
      <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
       <text:p>Question 70- the smallest k numbers (in value) out of n numbers. (solved with the partition method that is used in quicksort)</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce231"/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>{1, 4, 7, 10, 13} and {3, 5, 7, 9}</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1019"/>
     </table:table-row>
     <table:table-row table:style-name="ro78">
      <table:table-cell/>
      <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string"><text:p>Question 71 Please implement a function that finds the intersection of two sorted arrays. Assume numbers in each array are unique. </text:p><text:p>For example, if the two sorted arrays as input are {1, 4, 7, 10, 13} and {1, 3, 5, 7, 9}, the output is an intersection</text:p><text:p>array with numbers {1, 7}.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce231"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
     <table:table-row table:style-name="ro74">
      <table:table-cell/>
      <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
       <text:p>Question 81 If an element at the left side is greater than another element at the right side, they form a reversed pair in an array. How do you get a count of reversed pairs? For example, there are five reversed pairs in the array {7, 5, 6, 4}, which are (7, 5), (7, 6), (7, 4), (5, 4), and (6, 4). </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro38">
      <table:table-cell/>
      <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
       <text:p>Question 90 Given a positive value s, print all sequences with continuous numbers (with two numbers at least) whose sum is s. </text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro38">
      <table:table-cell/>
      <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
       <text:p>Take the input s=15 as an example. Because 1+2+3+4+5=4+5+6=7+8=15, three continuous sequences should be printed: 1~5, 4~6, and 7~8.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce98"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
      <table:table-cell/>
      <table:table-cell table:style-name="Default"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32">
      <table:table-cell/>
      <table:table-cell table:style-name="ce296"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>matrix</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Question 7-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell office:value-type="string" calcext:value-type="string">
       <text:p>Question 8-</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse" table:number-rows-repeated="5">
      <table:table-cell table:number-columns-repeated="1022"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce219" office:value-type="string" calcext:value-type="string">
      <text:p>string</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>Question 9</text:p><text:p>Please implement a function to replace each blank in a string with “%20”. For instance, it outputs “We%20are%20happy.” if the input is “We are happy.”.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="18">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="5">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>question 13-print a list from tail to head</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>question 14-sort a list. Takes O(n^2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>question 15-merge two sorted lists</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>question 16-check if there is a loop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>question 17-find the entry in a loop</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>question 43-delete a node, passed as parameter ( so we have the next element), from a list in average O(1)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>question 44-delete duplicated numbers and only leave unique ones.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce309" office:value-type="string" calcext:value-type="string">
      <text:p>question 47-return the nth node from the tail of a list </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce309" office:value-type="string" calcext:value-type="string">
      <text:p>Question 48 Please implement a function to reverse a list. Without stack. Just pointer usage</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce309" office:value-type="string" calcext:value-type="string">
      <text:p>Question 49 How do you design an algorithm to reverse every k nodes in a list? A list is divided into several </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>groups, and each group has knodes except the last group, where the number of nodes may be less than k. Please </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>reverse the nodes in each group and connect all groups together. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>For example, when groups with three nodes are reversed in the list of Figure 5-8(a), it becomes the list in Figure </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>5-8(b). </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce310" office:value-type="string" calcext:value-type="string">
      <text:p>Question 54 Please implement a function to clone a complex list.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce310" office:value-type="string" calcext:value-type="string">
      <text:p>Question 82 Please find the first common node of two single-linked lists if they intersect with each other.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>hbf-in-order and pre-order traversal of a search binary tree </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>hbf-unable to code post-order or breath-first traversal</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>question 19-verify that a BST is really one</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>question 18-get the next node in a BST in the in-order traversal sequence. each node contains a pointer to its parent.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>get the next node in a BST in the *-order traversal sequence. add any contraints or assumptions.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro73">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 20 Please implement a function to get the largest size of all binary search subtrees in a given binary tree. A subtree inside a tree tis a tree consisting of a node and all of its descendants in t. The size of a tree is defined as the number of nodes in the tree. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the largest binary search subtree in the binary tree of Figure 3-14 contains three nodes, which are node 9, node 8, and node 10. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce311" office:value-type="float" office:value="12" calcext:value-type="float">
      <text:p>12</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce311" office:value-type="string" calcext:value-type="string">
      <text:p>6 9</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce311" office:value-type="string" calcext:value-type="string">
      <text:p>5 8 10</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce311"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string">
      <text:p>Question 1xxx – place a tree nodes in a array. Like in heapsort.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>Question 84- How do you get the k th node in a binary search tree in an incremental order of values?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>Question 85- How do you get the depth of a binary tree? (the maximum length of all paths.)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>Question 86- How do you verify whether a binary tree is balanced? If the depth difference between a left subtree and right subtree of any node in a binary tree is not greater than 1, it is balanced.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>interview cases: Lowest Common Parent Node in a Tree</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>Question 50- Given two binary trees, please check whether one is a substructure of the other. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>Question 51- Given a binary tree, how do you get its mirrored tree?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>Question 52- Please implement a function to verify whether a binary tree is symmetrical.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>Question 57- Please print a binary tree from its top level to bottom level, and print nodes at the same level from left to right. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>Question 58- How do you print a binary tree by level, in top down order, with each level in a line? Nodes in a </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>level should be printed from left to right. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>Question 59- How do you print a binary tree by level in zigzag order, each level in a line?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>Question 60- Given a binary tree and an integer value, please print all paths where the sum of node values equals the given integer.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>Question 61 Please build a binary tree with a pre-order traversal sequence and an in-order traversal sequence. All elements in these two given sequences are unique.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce97" office:value-type="string" calcext:value-type="string">
      <text:p>Question 62 How do you serialize and deserialize binary trees?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>Question 63 Please check whether it is possible for an array to be the post-order traversal sequence of a binary search tree. All numbers in the input array are unique.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>Question 64 How do you convert a binary search tree into a sorted double-linked list without creating any new nodes? It is only allowed that you can reconnect links between existing nodes</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>question 23-fibonacci sequence. traightforward (mathmatical function)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>question 23.1-algo for a^n in O(log2(n))</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>question 24-fibonacci sequence. disguised (a frog jumps 1 or 2 stairs at a time. how many way are there for it to jump n stairts)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>question 25-fibonacci sequence. disguised </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>question 26-fibonacci sequence. disguised (how many approcahes are there to cover a 2x8 rectangle with a 2x1 rectangle)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>question 30-backtracking: find the path of a string in a matrix.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>question 31-backtracking: movement of a robot.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>question 32-dynamic programming: edit distance of a string compared to a second string</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>question 33-backtracking: minimal number of coins for change</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce309" office:value-type="string" calcext:value-type="string">
      <text:p>Question 34 Please design an efficient algorithm to lay out cells on phone keyboards in order to minimize key presses. (greedy algo)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro44">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 72 dynamic programming: Given an integer array containing positive and negative numbers, how do you get the maximum sum of its sub-arrays? Continuous numbers form a sub-array of an array. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the input array is {1, -2, 3, 10, -4, 7, 2,-5}, the sub-array with the maximum sum is {3, 10, -4, 7, 2} whose sum 18.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro73">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 97 dynamic programmingYou are required to sort ncards numbered from 1 to n. You can choose one card and move it to any place you want (insert to any place, not swap). Given a sequence, please implement a function to return the minimum move count to sort these cards. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro73">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, given a sequence {1, 2, 5, 3, 4, 7, 6}, you can move 5 and insert it between 4 and 7, and the sequence becomes {1, 2, 3, 4, 5, 7, 6}. This is one move. If 7 is moved behind 6, the whole sequence gets sorted. Therefore, it needs two steps at least to sort cards in the sequence of {1, 2, 5, 3, 4, 7, 6}.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="6">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>General</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 9- Please implement a function to replace each blank in a string with “%20”. For instance, it outputs “We%20are%20happy.” if the input is “We are happy.”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro79">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 27 When some elements at the beginning of an array are moved to the end, it becomes a rotation of the original array. Please implement a function to get the minimum number in a rotation of an increasingly sorted array. For example, the array {3, 4, 5, 1, 2} is a rotation of array {1, 2, 3, 4, 5}, of which the minimum is 1. (can be solved using Binary Search algo in Partially Sorted Arrays)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 92 Left rotation of a string is to move some leading characters to its end. Please implement a function to rotate a string to the left. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the input string is “abcdefg” and a number 2, two characters are rotated and the result is “cdefgab”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 28 A turning number is the maximum number in a unimodal array that increases and then decreases. Please write a function (or a method) that finds the index of the turning number in a unimodal array. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the turning number in the array {1, 2, 3, 4, 5, 10, 9, 8, 7, 6} is 10, so its index 5 is the expected output. (can be solved using Binary Search algo )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 29 How do you find the majority element in an array when it exists? The majority is an element that occurs for more than half of the size of the array. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the number 2 in the array {1, 2, 3, 2, 2, 2, 5, 4, 2} is the majority element because it appears five times and the size of the array is 9.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>(solved with the partition method that is used in quicksort)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 40 Please implement the function double Power(double base, int exponent)to raise a number baseto power of exponent. You are not allowed to call library functions, and it is not necessary to take care of overflow issues.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 41 Given a number n, please print all numbers from 1 to the maximum n digit number in order. For example, if the input is 3, it prints 1, 2, 3, …,999, which is the maximum number with three digits. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 42 Please design a function to add two arbitrary positive integers. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 53 Please print a matrix in spiral order, clockwise from outer rings to inner rings. For example, the </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>matrix below is printed in the sequence of 1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5, 6, 7, 11, 10. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>1 2 3 4 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>5 6 7 8 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>9 10 11 12 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>13 14 15 16 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="Default"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 75 If a number only has factors 2, 3, and 5, it is an ugly number. For example, 6 and 10 are two ugly numbers, but 14 is not because it has a factor of 7. Usually 1 is considered to be the first ugly number. What is the arbitrary kth ugly number? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 91 How do you reverse the order of words in a sentence, but keep words themselves unchanged? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>Words in a sentence are separated by blanks. For instance, the reversed output should be “student. a am I” when the input is “I am a student.”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 96 A circle is composed of nnumbers, 0, 1, …, n-1. The mth number is removed every time, counting from the number 0 for the first removal. What is the last number left? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, a circle is composed of five numbers 0, 1, 2, 3, and 4 (Figure 8-3). If the third number is removed from the circle repeatedly, four numbers are deleted inthe sequence of 2, 0, 4, and 1, and the last number remaining in the circle is 3. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 98 Stock prices are stored in an array in the order of date. How do you get the most profit from a sequence of stock prices? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the most profit to be gained from the sequence of ordered stock prices {9, 11, 5, 7, 16, 1, 4, 2} is 11, bought when the price was 5 and sold when the price was 16.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 99 How do you calculate 1+2+…+nwithout multiplication, division, key words including for, while, if, else, switch, and case, as well as a conditional operator (A?B:C)?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 105 Given an array A[0, 1, …, n-1], please construct an array B[0, 1, …, n-1] in which B[i]=A[0]×A[1]×… ×A[i-1]×A[i+1]×…×A[n-1]. No division should be involved to solve this problem.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Permutations and combinations</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 65 Please print all permutations of a given string. For example, print “abc”, “acb”, “bac”, “bca”, “cab”, and “cba” when given the input string “abc”.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 66 How many distinct ways are available to place eight queens on a chessboard, where there are no two queens that can attack each other? That is to say, there are no two queens located at the same row, same column, or same diagonal. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, a solution in Figure 6-21 places eight queens on an 8×8 chessboard where any queen cannot attack another. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 67 There are narrays. A permutation is generated when an element is selected from each array. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>How do you generate all permutations of narrays? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, permutations for the 3 arrays {1, 2}, {3, 4}, {5, 6} are: {1, 3, 5}, {1, 3, 6}, {1, 4, 5}, {1, 4, 6}, {2, 3, 5}, {2, 3, 6}, {2, 4, 5}, and {2, 4, 6}.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 68 Please generate all combinations of a given string. For example, combinations of a given string “abc” are “a”, “b”, “c”, “ab”, “ac”, “bc”, and “abc”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 73 How many times does the digit 1 occur in the integers from 1 to n ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if nis 12, there are four numbers from 1 to 12 containing the digit 1, which are 1, 10, 11, and 12, and the digit 1 occurs five times. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 74 Big numbers can be formed if numbers in an array are concatenated together. How do you print the minimum concatenated number of a given array? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the input array is {3, 32, 321}, there are six concatenated numbers and the minimum one is 321323.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>hassan:using a bit operation, how to get the positive value of a signed int/char/short/float/double ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>hassan:how to get the max value of a type using bit operation?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>max value of a positive integer is when all bits are set to 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>max value of a negative integer is when all bits are set to 1 ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>max value of a positive float is when ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>max value of a positive float is when ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>this is a wrong question as the max of positive and negative integer is the same.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>i rather meant all bits set to 1.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>if(the type is unsigned) return 0x111...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>if(the type is signed) return ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>how to express an int type, not a float one ?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>&lt;- we can define a specialization for float/double. but then all other types, not only integer type, would be used by the general function !</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>bit</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 35 Please implement a function to get the number of 1s in the binary representation of an integer. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the integer 9 is 1001 in binary, so it returns 2 since there are two bits of 1.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 36 Please check whether a number is a power product of 2 in only one C statement. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 37 Given two integers, m and n, please calculate the number of bits in binary that need to be modified to change m to n.For example, the number 10 is 1010 in binary, and 13 is 1101 in binary. We can modify 3 bits of 1010 to get 1101 in binary. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 38 Let’s assume all numbers except two occur twice in an array. How do you get those two numbers to occur only once in O(n) time and O(1) space? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, only two numbers, 4 and 6, in the array {2, 4,3, 6, 3, 2, 5, 5} occur once, and the others numbers occur twice. Therefore, the output should be 4 and 6.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 39 Two numbers out of n numbers from 1 to n are missing. The remaining n-2 numbers are restored in an array, not in any particular order. Please write a method (or a function) to find the missing two numbers. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 101 How do you implement a function for the subtraction operation without utilization of arithmetic </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>+, -, *, and / operators?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 100 How do you implement a function to add two integers without utilization of arithmetic +, -, *, and / operators? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 102 How do you implement a function for the multiplication operation without utilization of arithmetic +, -, *, and / operators?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 103 How do you implement a function to divide an integer by another without utilization of arithmetic +, -, *, and / operators? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Pattern matching</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro80">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 11- How do you implement a function to match regular expressions with ‘.’ and ‘*’ in patterns? The character ‘.’ in a pattern matches a single character, and ‘*’ matches zero or any number of characters preceding it. Matching means that a string fully matches the pattern where all characters in a string match the whole pattern. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, the string “aaa” matches the pattern “a.a” and the pattern “ab*ac*a”. However, it does not match the pattern “aa.a” nor “ab*a”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 12- How do you check whether a string stands for a number or not? Numbers include positive and negative integers and floats. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, strings “+100.”, “5e2”, “-.123”, “3.1416”, and “-1E-16” stand for numbers, but “12e”, “1a3.14”,“1.2.3”, “+-5”, and “12e+5.4” do not. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>Arrays:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro79">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 7- In a 2-D matrix, every row is increasingly sorted from left to right, and the last number in each row is not greater than the first number of the next row. A sample matrix follows. Please implement a function to check whether a number is in such a matrix or not. It returns trueif it tries to find the number 7 in the sample matrix, but it returns falseif it tries to find the number 12. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>1 3 5 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>7 9 11 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>13 15 17 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro79">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 8- In a 2-D matrix, every row is increasingly sorted from left to right, and every column is increasingly sorted from top to bottom. Please implement a function to check whether a number is in such a matrix or not. For example, all rows and columns are increasingly sorted in the following matrix. It returns trueif it tries to find number 7, but it returns falseif it tries to find number 5. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>1 2 8 9 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>2 4 9 12 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>4 7 10 13 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>6 8 11 15 </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro73">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 45 Please reorder an input array to place all odds before evens. For example, after numbers in the array {1, 2, 3, 4, 5} are reordered, it looks like {1, 5, 3, 4, 2}. The result is not unique, and there are multiple arrays meeting the reordering criteria.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro73">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 46 Given an array and a value, how do you implement a function to remove all instances of that value in place and return the new length of the array? It is not required that you keep the order of the remaining numbers. It doesn&apos;t matter what you leave beyond the new length. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the input array is {4, 3, 2, 1, 2, 3, 6}, the resulting array after removing value 2 contains the numbers {4, 3, 1, 3, 6}, and the new length of the remaining array is 5. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 78 Given two strings, how do you delete characters contained in the second string from the first string? For example, if all characters in the string “aeiou” are deleted from the string “We are students.”, the result is “W r stdnts.”.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce315" office:value-type="string" calcext:value-type="string">
      <text:p>Question 79 Please implement a function to delete all duplicated characters in a string and keep only the first occurrence of each character left. For example, if the input is string “google”, the result after deletion is “gole”. (uses hash table)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro69">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 80 If two English words have the same characters and the occurrence number of each character is also identical respectively, they are anagrams. The only difference between a pair of anagrams is the order of characters. For example, “silent” and “listen”, “evil” and “live” are two pairs of anagrams. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>Please implement a function to verify whether two words are a pair of anagrams.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce315" office:value-type="string" calcext:value-type="string">
      <text:p>Question 76 Implement a function to find the first character in a string that only appears once. For example, the output is the character ‘l’ when the input is “google”. (uses hash table)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 77 Implement a function to find the first character in a stream that only appears once at any time while reading the stream. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, when the first two characters “go” are read from a stream, the first character which appears once is the character ‘g’. When the first six characters “google” are read, the first character appearing only once is ‘l’. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce316" office:value-type="string" calcext:value-type="string">
      <text:p>Question 83 Please implement a function to find how many times a number occurs in a sorted array.(can be solved using Binary Search algo )</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 87 Given an increasingly sorted array and a number s, is there a pair of two numbers in the array whose sum is s?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 88 Given an array, please check whether it contains three numbers whose sum equals 0.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 89 Given an array, please check whether it contains a subset of numbers (with one number at least) whose sum equals 0.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce316" office:value-type="string" calcext:value-type="string">
      <text:p>Numbers</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 1-Please implement a function that checks whether a positive number is a palindrome or not. For example, 1342431 is a palindrome, but 123 is not.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>learned idea: construct a number in the inverse order of another.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 5 An array contains nnumbers ranging from 0 to n-2. There is exactly one number duplicated in the array. How do you find the duplicated number? For example, if an array with length 5 contains numbers {0, 2, 1, 3, 2}, the duplicated number is 2.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro79">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 6 An array contains nnumbers ranging from 0 to n-1. There are some numbers duplicated in the array. It is not clear how many numbers are duplicated or how many times a number gets duplicated. How do you find a duplicated number in the array? For example, if an array of length 7 contains the numbers {2, 3, 1, 0, 2, 5, 3}, the implemented function (or method) should return either 2 or 3. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 90 Given a positive value s, print all sequences with continuous numbers (with two numbers at least) whose sum is s</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 91 How do you reverse the order of words in a sentence, but keep words themselves unchanged?</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce312" office:value-type="string" calcext:value-type="string">
      <text:p>interview cases: Integer Value from a String</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 92 code that if the input string is “abcdefg” and a number 2, two characters are rotated and the result is “cdefgab”. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 95 Given a number n, which stands for ndice, please print probabilities of all possible sums of </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>dice points. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro69">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if there are two dice, there are two ways to get three points: (1) one die has one point, and the other has two points; and (2) one die has two points, and the other has one. However, there is only one way to get twelve points, with six points on each die. Therefore, the possibility to get three points is higher than to get twelve points with two dice. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>Queue/stack</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 21 Please design a queue with two stacks and implement methods to enqueue and dequeue items.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 22 Please design a stack with two queues and implement the methods to push and pop items.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 94 Define a queue in which we can get its maximum number with a function max. In this stack, the time complexity of max, push_back, and pop_frontare all O(1).</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 55 Define a stack in which we can get its minimum number with a function min. The time complexity of min, push, and popon such stacks are all O(1). </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 56 You are given two integer arrays, one of which is a sequence of numbers pushed into a stack (supposing all numbers are unique). Please check whether the other array is a corresponding sequence popped from the stack. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the pushing sequence is {1, 2, 3, 4, 5}, the sequence {4, 5, 3, 2, 1} is a corresponding popping sequence, but {4, 3, 5, 1, 2} is not. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 93 Given an array of numbers and a sliding window size, how do you get the maximum numbers in all sliding windows? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro62">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if the input array is {2, 3, 4, 2, 6, 2, 5, 1} and the size of the sliding windows is 3, the output of maximums are {4, 4, 6, 6, 6, 5}, as illustrated in Table 8-3. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>probabilities</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 95 Given a number n, which stands for ndice, please print probabilities of all possible sums of dice points. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro69">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>For example, if there are two dice, there are two ways to get three points: (1) one die has one point, and the other has two points; and (2) one die has two points, and the other has one. However, there is only one way to get twelve points, with six points on each die. Therefore, the possibility to get three points is higher than to get twelve points with two dice. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 104 Please design a class in C++ that cannot be inherited.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce308" office:value-type="string" calcext:value-type="string">
      <text:p>Question 4 There are three threads in a process. The first thread prints 1 1 1 …, the second one prints 2 2 2 …, and the third one prints 3 3 3 … endlessly. How do you schedule these three threads in order to print 1 2 3 1 2 3 …? </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>solutions indications:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 7- binary search </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce307" office:value-type="string" calcext:value-type="string">
      <text:p>technics:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 7-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>going from a 2d array to an 1d array.(already know it)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>question 7 goes from 1d to 2d array</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 8-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>binary search in a diagonal way. complexe way. the general way of doing binary search (in a non-linear array)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 17-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>get the number of elements in a loop list</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce314" office:value-type="string" calcext:value-type="string">
      <text:p>Question 83-</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>use the binary search algo to find the first and last occurence of an element in a sorted array, then substract the first occurence&apos;s index from the last occurence&apos;s index to get the number of occurences. This takes O(log n)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>instead of using it just to find the element and linearly search on the left and on the right for the other occurences. This might take up to O(n)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string"><text:p><text:span text:style-name="T16">question 13</text:span>-print a list from tail to head. This can be solve with a stack. This takes O(n) space. </text:p><text:p>But since <text:span text:style-name="T79">A recursion is equivalent to stack</text:span>. Recusive function solves the problem. The draw back is the possiblity of a stack over flow.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string">
      <text:p>Question 1xxx – place a tree nodes in a array. Like in heapsort.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string"><text:p>Solution 1: Recursive function receiving a node and an idex.</text:p><text:p>Make sure the index does n&apos;t go beyond the array size</text:p><text:p>Using formula that yields the children indeces from a given I, call the function with each child and its corresponding index</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string"><text:p>Ix2+1</text:p><text:p><text:span text:style-name="T39">Ix2+2</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string"><text:p>I x3+1</text:p><text:p><text:span text:style-name="T39">I x3+2</text:span></text:p><text:p><text:span text:style-name="T39">I x3+3</text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string">
      <text:p>Solution 2: using a stack, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro80">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string"><text:p>ProcessStack()</text:p><text:p>{</text:p><text:p>n=pop from queue();</text:p><text:p>If(n==null) return;</text:p><text:p>array[++i]=n→v;</text:p><text:p>if(n→L) push in queue(n-&gt;L);</text:p><text:p><text:span text:style-name="T39">if(n→R) push in queue(n-&gt;R);</text:span></text:p><text:p><text:span text:style-name="T39">ProcessStack();</text:span></text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string">
      <text:p>question xxx2: in a BST, print each depth first before going to the next depth</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro80">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98" office:value-type="string" calcext:value-type="string"><text:p>go()</text:p><text:p>{</text:p><text:p>n=pop from queue();</text:p><text:p>If(n==null) return;</text:p><text:p>Print n-&gt;v;</text:p><text:p>if(n→L) push in queue(n-&gt;L);</text:p><text:p><text:span text:style-name="T39">if(n→R) push in queue(n-&gt;R);</text:span></text:p><text:p><text:span text:style-name="T39">Go();</text:span></text:p><text:p>}</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce317" office:value-type="string" calcext:value-type="string">
      <text:p>6.6 technics</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>-to solve a problem, think of:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>iteration AND recursive. One might be difficult or even impossible</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>simplest solution AKA brute force</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>data structures : list, queue, stack, tree, </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>sorting algos: using technic in merge/partition/heap, binary search</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>dynamic programming, backtracking</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>brute force</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>analyse the pattern of data deleted, added, ...</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>tricks</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="4">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro61">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>-to indicate the range in/of an array, it is better to indicate A[startingelement] and A[startingelement+nbrelemts] as the end</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>instead of A[0] and A[startingelement+nbrelemts-1].</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>in the receiving function:</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>__len = __last - __first;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>lastelemtindex=(__last - __first) - 1</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>lastelemntvalue:_ValueType __value = (*(__last - 1))</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>instead of </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>__len = __last - __first+1;</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>lastelemtindex=(__last - __first)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>lastelemntvalue:_ValueType __value = (*(__last ))</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>No it does not offer that much benefits. it is just that it is more STL-coherent </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>O(n)+O(n*log n) = O(n*log n)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>the first term is dominated by the second</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>R:Given a series of for loops that are sequential, the slowest of them determines the asymptotic behavior of the program.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>R:Two nested loops followed by a single loop is asymptotically the same as the nested loops alone, because the nested loops dominate the simple loop.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>-an algo that runs n+(n-1)+...+1, is said to be O(n2)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>-to get the complexity of algos I find, compare them to known sorting algos </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>-go through sorting algos or the technics they use to find the solution that best solves the problem at hand</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>-be open to all solutions, even the weird ones, even the heavy/bad ones</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce296" office:value-type="string" calcext:value-type="string">
      <text:p>-AVL rebalancing, the node with the middle value is put as root</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>- 2 to the power of n is 1&lt;&lt;n. thus it is O(1)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>- a to the power of n is O(nlog(n)) using </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>a^(n/2).a^(n/2) when n is even</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce313" office:value-type="string" calcext:value-type="string">
      <text:p>a^(n/2).a^(n/2).a when n is odd</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro63">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string"><text:p>-The time efficiency on average for an algo is the sum of the time is takes for each member of the data divided by n. for instance:</text:p><text:p><text:span text:style-name="T12">for n-1 elements, it takes O(1) to do an operation. but for one element only (could be the last one, the first, in the middle, ...) it takes O(n) to do the operation. So The time efficiency on average is [(n-1)×O(1)+O(n)]/n, and so is O(1). </text:span></text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>-countSort is a sorting algo in O(n) see page 83 in Coding interviews</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>it reads the array once and then it writes it once.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro34">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>So for some kind of data, we can find our own sorting algo.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro74">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string"><text:p>comparing solution</text:p><text:p>Handling two arrays of sixe m and n.</text:p><text:p>One solution costs O(n+m)</text:p><text:p>The other one costs nO(log m)</text:p><text:p>Which one is better ? (question 71)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row-group table:display="false">
     <table:table-row table:style-name="ro25" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
       <text:p>for very big m, the second is better.</text:p>
      </table:table-cell>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
     <table:table-row table:style-name="ro32" table:visibility="collapse">
      <table:table-cell/>
      <table:table-cell table:style-name="ce98"/>
      <table:table-cell table:number-columns-repeated="1020"/>
     </table:table-row>
    </table:table-row-group>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce317" office:value-type="string" calcext:value-type="string">
      <text:p>6.7 strategies</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>delete a series of elements from a list.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro25">
     <table:table-cell/>
     <table:table-cell table:style-name="ce300" office:value-type="string" calcext:value-type="string">
      <text:p>Q44 in Coding interviews</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce318"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce319"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce319"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce319"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce319"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce320"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="3">
     <table:table-cell/>
     <table:table-cell table:style-name="ce319"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32">
     <table:table-cell/>
     <table:table-cell table:style-name="ce98"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="2">
     <table:table-cell/>
     <table:table-cell table:style-name="ce101"/>
     <table:table-cell table:number-columns-repeated="1020"/>
    </table:table-row>
    <table:table-row table:style-name="ro32" table:number-rows-repeated="1047902">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="1022"/>
    </table:table-row>
   </table:table>
   <table:table table:name="algo-hashtable" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro67">
     <table:table-cell table:style-name="ce140" office:value-type="string" calcext:value-type="string">
      <text:p>load factor, f = n/N where n is number of items stored in the hash table.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="4">
     <table:table-cell table:style-name="ce140"/>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>how to deal with collision (<text:a xlink:href="http://www.csl.mtu.edu/cs2321/www/newLectures/17_Hash_Tables_Collisions.html" xlink:type="simple">http://www.csl.mtu.edu/cs2321/www/newLectures/17_Hash_Tables_Collisions.html</text:a>)</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>list</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>linear probing, to fill the next position. Clustering is highly probable. A[i] is used. Then try A[(i + 1) mod N] </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>qudratic probing. Clustering is lower. A[ (i + f(j) )mod N] <text:s/>where j = 0, 1, 2, ... and f(j) = j**2</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Double Hashing: <text:s/>Use a second hash function h&apos;. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>A[ (i + f(j) )mod N]   where  f(j) = j*h&apos;(k) should not evaluate to zero. Example: h&apos;(k) = q - (k mod q).  Note that still i = h(k).</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell table:style-name="ce62"/>
     <table:table-cell table:number-columns-repeated="2"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>lookup table</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>a lookup table is an <text:a xlink:href="https://en.wikipedia.org/wiki/Array_data_structure" xlink:type="simple">array</text:a> that replaces runtime computation with a simpler array indexing operation. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>The savings in terms of processing time can be significant, since retrieving a value from memory is often faster than undergoing an &apos;expensive&apos; computation or <text:a xlink:href="https://en.wikipedia.org/wiki/Input/output" xlink:type="simple">input/output</text:a> operation.<text:a xlink:href="https://en.wikipedia.org/wiki/Lookup_table#cite_note-1" xlink:type="simple">[1]</text:a> </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell office:value-type="string" calcext:value-type="string"><text:p>The tables may be precalculated and stored in <text:a xlink:href="https://en.wikipedia.org/wiki/Static_memory_allocation" xlink:type="simple">static</text:a> program storage, calculated (or <text:a xlink:href="https://en.wikipedia.org/wiki/Prefetcher" xlink:type="simple">&quot;pre-fetched&quot;</text:a>) as part of a program&apos;s initialization phase (<text:a xlink:href="https://en.wikipedia.org/wiki/Memoization" xlink:type="simple">memoization</text:a>), or even stored in hardware in application-specific platforms. </text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Lookup tables are also used extensively to validate input values by matching against a list of valid (or invalid) items in an array and, in some programming languages, may include pointer functions (or offsets to labels) to process the matching input.</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="3"/>
    </table:table-row>
    <table:table-row table:style-name="ro19" table:number-rows-repeated="2">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>set.insert</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>If N elements are inserted, Nlog(<text:a xlink:href="http://www.cplusplus.com/set::size" xlink:type="simple">size</text:a>+N) in general, but linear in <text:a xlink:href="http://www.cplusplus.com/set::size" xlink:type="simple">size</text:a>+N if the elements are already sorted according to the same ordering criterion used by the container.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>set.find</text:p>
     </table:table-cell>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>Logarithmic in size.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>set.erase</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>For the first version (erase(position)), amortized constant.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro35">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string"><text:p>For the second version (erase(val)), logarithmic in container <text:a xlink:href="http://www.cplusplus.com/set::size" xlink:type="simple">size</text:a>.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>For the last version (erase(first,last)), linear in the distance between first and last.</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell table:style-name="ce62"/>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>map.insert</text:p>
     </table:table-cell>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>same as set</text:p>
     </table:table-cell>
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>unordered_map.insert</text:p>
     </table:table-cell>
     <table:table-cell/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Single element insertions:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Average case: constant.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Worst case: linear in container size.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Multiple elements insertion:</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Average case: linear in the number of elements inserted.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce58" office:value-type="string" calcext:value-type="string">
      <text:p>Worst case: N*(size+1): number of elements inserted times the container size plus one.</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce62"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="3"/>
     <table:table-cell table:style-name="ce62"/>
    </table:table-row>
   </table:table>
   <table:table table:name="tosave" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:number-columns-repeated="4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell table:number-columns-repeated="4"/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>/home/hassan4/data4/trainingGame</text:p>
     </table:table-cell>
     <table:table-cell table:number-columns-repeated="2"/>
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>videoa trainig+pirates code</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:table table:name="protocols" table:style-name="ta1">
    <table:table-column table:style-name="co4" table:default-cell-style-name="Default"/>
    <table:table-row table:style-name="ro19">
     <table:table-cell/>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>http</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>browser formats text, receives click events on hyperlinks, send out a data with the link to resource</text:p>
     </table:table-cell>
    </table:table-row>
    <table:table-row table:style-name="ro19">
     <table:table-cell office:value-type="string" calcext:value-type="string">
      <text:p>tcpip adds data to it and forwards it to other component</text:p>
     </table:table-cell>
    </table:table-row>
   </table:table>
   <table:named-expressions>
    <table:named-range table:name="ac" table:base-cell-address="$multithreading.$B$489" table:cell-range-address="$multithreading.$B$510"/>
    <table:named-range table:name="act" table:base-cell-address="$multithreading.$B$488" table:cell-range-address="$multithreading.$B$509"/>
    <table:named-range table:name="ao" table:base-cell-address="$multithreading.$B$468" table:cell-range-address="$multithreading.$B$489"/>
    <table:named-range table:name="cc" table:base-cell-address="$multithreading.$B$482" table:cell-range-address="$multithreading.$B$503"/>
    <table:named-range table:name="dcl" table:base-cell-address="$multithreading.$B$467" table:cell-range-address="$multithreading.$B$488"/>
    <table:named-range table:name="ei" table:base-cell-address="$multithreading.$B$484" table:cell-range-address="$multithreading.$B$505"/>
    <table:named-range table:name="hsha" table:base-cell-address="$multithreading.$B$470" table:cell-range-address="$multithreading.$B$493"/>
    <table:named-range table:name="int" table:base-cell-address="$multithreading.$B$483" table:cell-range-address="$multithreading.$B$504"/>
    <table:named-range table:name="lf" table:base-cell-address="$multithreading.$B$471" table:cell-range-address="$multithreading.$B$495"/>
    <table:named-range table:name="mo" table:base-cell-address="$multithreading.$B$469" table:cell-range-address="$multithreading.$B$491"/>
    <table:named-range table:name="p" table:base-cell-address="$multithreading.$B$487" table:cell-range-address="$multithreading.$B$508"/>
    <table:named-range table:name="r" table:base-cell-address="$multithreading.$B$486" table:cell-range-address="$multithreading.$B$507"/>
    <table:named-range table:name="sl" table:base-cell-address="$multithreading.$B$491" table:cell-range-address="$multithreading.$B$512"/>
    <table:named-range table:name="stl" table:base-cell-address="$multithreading.$B$492" table:cell-range-address="$multithreading.$B$513"/>
    <table:named-range table:name="tsi" table:base-cell-address="$multithreading.$B$493" table:cell-range-address="$multithreading.$B$514"/>
    <table:named-range table:name="tss" table:base-cell-address="$multithreading.$B$472" table:cell-range-address="$multithreading.$B$497"/>
    <table:named-range table:name="wf" table:base-cell-address="$multithreading.$B$481" table:cell-range-address="$multithreading.$B$502"/>
   </table:named-expressions>
  </office:spreadsheet>
 </office:body>
</office:document>